{"mappings":"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AAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;gBACtC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;gBACtC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;gBACtC,MAAM;YAER,KAAK,KAAK;gBACR,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;gBACtC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;gBACtC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;gBACtC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;gBACtC,MAAM;YAER,KAAK,KAAK;gBACR,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;gBACtC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;gBACtC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;gBACtC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;gBACtC,MAAM;YAER,KAAK,KAAK;gBACR,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;gBACtC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;gBACtC,IAAI,CAAC,EAAE,GAAG,EA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,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QACtD,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QACtD,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QACtD,EAAE,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QAEvD,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QACtD,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QACtD,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QACtD,EAAE,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QAEvD,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QACtD,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QACtD,EAAE,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QACvD,EAAE,CAAC,EAA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AE;AAAE,MAAE;AAAE,MAAE;AAAE,MAAE;AAAE,OAAG;AAAE,MAAE;AAAE,OAAG;AAAE,OAAG;AAAE,OAAG;AAAE,MAAE;AAAE,MAAE;AAAE,MAAE;AAAE,MAAE;AAAE,OAAG;AAAE,KAAC;AAAE,OAAG;AAAE,MAAE;AAAE,MAAE;AAC3E,OAAG;AAAE,MAAE;AAAE,OAAG;AAAE,OAAG;AAAE,OAAG;AAAE,MAAE;AAAE,MAAE;AAAE,OAAG;AAAE,OAAG;AAAE,OAAG;AAAE,OAAG;AAAE,OAAG;AAAE,OAAG;AAAE,OAAG;AAAE,OAAG;AAAE,MAAE;AAC1E,OAAG;AAAE,OAAG;AAAE,OAAG;AAAE,OAAG;AAAE,OAAG;AAAE,OAAG;AAAE,KAAC;AAAE,MAAE;AAAE,MAAE;AAAE,OAAG;AAAE,OAAG;AAAE,OAAG;AAAE,OAAG;AAAE,OAAG;AAAE,KAAC;AAAE,OAAG;AAAE,MAAE;AAC5E,OAAG;AAAE,OAAG;AAAE,OAAG;AAAE,OAAG;AAAE,MAAE;AAAE,MAAE;AAAE,OAAG;AAAE,OAAG;AAAE,OAAG;AAAE,MAAE;AAAE,OAAG;AAAE,MAAE;AAAE,MAAE;AAAE,MAAE;AAAE,MAAE;AAAE,OAAG;AAAE,OAAG;AAC5E,MAAE;AAAE,MAAE;AAAE,OAAG;AAAE,OAAG;AAAE,OAAG;AAAE,OAAG;AAAE,OAAG;AAAE,OAAG;AAAE,OAAG;AAAE,KAAC;AAAE,MAAE;AAAE,OAAG;AAAE,OAAG;AAAE,MAAE;AAAE,OAAG;AAAE,OAAG;AAAE,OAAG;AAC7E,OAAG;AAAE,OAAG;AAAE,MAAE;AAAE,OAAG;AAAE,KAAC;AAAE,OAAG;AAAE,MAAE;AAAE,MAAE;AAAE,OAAG;AAAE,MAAE;AAAE,MAAE;AAAE,OAAG;AAAE,OAAG;AAAE,MAAE;AAAE,OAAG;AAAE,OAAG;AAAE,OAAG;AAC3E,OAAG;AAAE,OAAG;AAAE,OAAG;AAAE,OAAG;AAAE,OAAG;AAAE,OAAG;AAAE,MAAE;AAAE,OAAG;AAAE,OAAG;AAAE,MAAE;AAAE,OAAG;AAAE,OAAG;AAAE,OAAG;AAAE,OAAG;AAAE,OAAG;AAAE,MAAE;AAC3E,OAAG;AAAE,OAAG;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","sources":["../../../../.nvm/versions/node/v17.2.0/lib/node_modules/parcel/node_modules/@parcel/runtime-browser-hmr/lib/runtime-11ed4ca5dae601aa.js","src/visual01/main.js","src/visual01/trail.js","../../../../.nvm/versions/node/v17.2.0/lib/node_modules/parcel/node_modules/@parcel/transformer-js/src/esmodule-helpers.js","src/visual01/third_party/three.module.js","src/visual01/modules/curl.js","src/visual01/third_party/perlin.js","src/visual01/modules/Maf.js","src/visual01/modules/MeshLine.js","src/visual01/modules/easings.js","src/visual01/modules/palettes.js","src/visual01/modules/gradient-linear.js","src/visual01/post.js","src/visual01/modules/fbo.js","src/visual01/shaders/ortho.js","src/visual01/modules/ShaderPass.js","src/visual01/shaders/vignette.js","src/visual01/shaders/noise.js","src/visual01/shaders/screen.js","src/visual01/shaders/rgb-shift.js","src/visual01/shaders/smootherstep.js","src/visual01/modules/bloomPass.js","src/visual01/modules/ShaderPingPongPass.js","src/visual01/shaders/blur.js","src/visual01/shaders/fast-separable-gaussian-blur.js","src/visual01/modules/renderer.js","src/visual01/third_party/OrbitControls.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"cb9a3f7eb4134b86\";\"use strict\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: mixed;\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function accept(fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function dispose(fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData = undefined;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, acceptedAssets\n/*: {|[string]: boolean|} */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // $FlowFixMe\n\n  ws.onmessage = function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    acceptedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      var assets = data.assets.filter(function (asset) {\n        return asset.envHash === HMR_ENV_HASH;\n      }); // Handle HMR Update\n\n      var handled = assets.every(function (asset) {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear();\n        assets.forEach(function (asset) {\n          hmrApply(module.bundle.root, asset);\n        });\n\n        for (var i = 0; i < assetsToAccept.length; i++) {\n          var id = assetsToAccept[i][1];\n\n          if (!acceptedAssets[id]) {\n            hmrAcceptRun(assetsToAccept[i][0], id);\n          }\n        }\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      var _iterator = _createForOfIteratorHelper(data.diagnostics.ansi),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var ansiDiagnostic = _step.value;\n          var stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n          console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  var errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  var _iterator2 = _createForOfIteratorHelper(diagnostics),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var diagnostic = _step2.value;\n      var stack = diagnostic.codeframe ? diagnostic.codeframe : diagnostic.stack;\n      errorHTML += \"\\n      <div>\\n        <div style=\\\"font-size: 18px; font-weight: bold; margin-top: 20px;\\\">\\n          \\uD83D\\uDEA8 \".concat(diagnostic.message, \"\\n        </div>\\n        <pre>\").concat(stack, \"</pre>\\n        <div>\\n          \").concat(diagnostic.hints.map(function (hint) {\n        return '<div>💡 ' + hint + '</div>';\n      }).join(''), \"\\n        </div>\\n        \").concat(diagnostic.documentation ? \"<div>\\uD83D\\uDCDD <a style=\\\"color: violet\\\" href=\\\"\".concat(diagnostic.documentation, \"\\\" target=\\\"_blank\\\">Learn more</a></div>\") : '', \"\\n      </div>\\n    \");\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(window.location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    var deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        var oldDeps = modules[asset.id][1];\n\n        for (var dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            var id = oldDeps[dep];\n            var parents = getParents(module.bundle.root, id);\n\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n\n      var fn = new Function('require', 'module', 'exports', asset.output);\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrDelete(bundle, id) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    var deps = modules[id][1];\n    var orphans = [];\n\n    for (var dep in deps) {\n      var parents = getParents(module.bundle.root, deps[dep]);\n\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n\n\n    delete modules[id];\n    delete bundle.cache[id]; // Now delete the orphans.\n\n    orphans.forEach(function (id) {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  } // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n\n\n  var parents = getParents(module.bundle.root, id);\n  var accepted = false;\n\n  while (parents.length > 0) {\n    var v = parents.shift();\n    var a = hmrAcceptCheckOne(v[0], v[1], null);\n\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      var p = getParents(module.bundle.root, v[1]);\n\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n\n      parents.push.apply(parents, _toConsumableArray(p));\n    }\n  }\n\n  return accepted;\n}\n\nfunction hmrAcceptCheckOne(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToAccept.push([bundle, id]);\n\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n}\n\nfunction hmrAcceptRun(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n  cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n\n  acceptedAssets[id] = true;\n}","import {\n  scene,\n  addResize,\n  renderer,\n  camera,\n  resize,\n  getControls,\n} from \"./modules/renderer.js\";\n\nimport { Trail } from \"./trail.js\";\nimport { Post } from \"./post.js\";\n// import { capture } from \"../modules/capture.js\";\n\nconst controls = getControls();\n\nconst post = new Post(renderer, { vignetteBoost: 1.1, vignetteReduction: 1.1 });\n\nrenderer.setClearColor(0x101010, 1);\n\ncamera.position.set(0, 0, 4);\ncamera.lookAt(scene.position);\n\nconst trails = [];\nfunction addTrail(width) {\n  const trail = new Trail(width);\n  trails.push(trail);\n  scene.add(trail.source);\n  scene.add(trail.trailMesh);\n}\n\naddTrail(0.2);\n\nlet running = true;\nlet spin = true;\n\nwindow.addEventListener(\"keydown\", (e) => {\n  if (e.code === \"Space\") {\n    running = !running;\n  }\n  if (e.code === \"KeyS\") {\n    spin = !spin;\n  }\n});\n\ndocument.querySelector(\"#pauseBtn\").addEventListener(\"click\", (e) => {\n  running = !running;\n});\n\ndocument.querySelector(\"#spinBtn\").addEventListener(\"click\", (e) => {\n  spin = !spin;\n});\n\nlet time = 0;\nlet prevTime = time;\nlet w = 0;\n\nfunction render() {\n  const t = performance.now();\n  const dt = 16; // t - prevTime;\n\n  if (running) {\n    time += dt;\n    for (const trail of trails) {\n      trail.update(time);\n    }\n  }\n  prevTime = t;\n  if (spin) {\n    scene.rotation.y += dt / 5000;\n  }\n  // renderer.render(scene, camera);\n  post.render(scene, camera);\n  // capture(renderer.domElement);\n\n  // if (time > 22000 && window.capturer.capturing) {\n  //   window.capturer.stop();\n  //   window.capturer.save();\n  // }\n\n  renderer.setAnimationLoop(render);\n}\n\nfunction myResize(w, h, dpr) {\n  post.setSize(w * dpr, h * dpr);\n  for (const trail of trails) {\n    trail.setSize(w, h);\n  }\n}\naddResize(myResize);\n\nresize();\nrender();\n\n// window.start = () => {\n//   time = 0;\n//   window.capturer.start();\n// };\n","import {\n  IcosahedronBufferGeometry,\n  Mesh,\n  MeshBasicMaterial,\n  Vector2,\n  Color,\n  Vector3,\n} from \"./third_party/three.module.js\";\nimport { curl, generateNoiseFunction } from \"./modules/curl.js\";\nimport { MeshLine, MeshLineMaterial } from \"./modules/MeshLine.js\";\nimport { Easings } from \"./modules/easings.js\";\nimport { parabola, randomInRange } from \"./modules/Maf.js\";\nimport {\n  warm,\n  natural,\n  natural2,\n  circus,\n  seaside,\n} from \"./modules/palettes.js\";\nimport { GradientLinear } from \"./modules/gradient-linear.js\";\n\nconst gradient = new GradientLinear(natural);\n\nconst center = new Vector3(0, 0, 0);\n\nclass Trail {\n  constructor(width = 1) {\n    this.fn = generateNoiseFunction();\n    this.radFn = generateNoiseFunction();\n\n    this.color = new Color();\n\n    this.colorOffset = Math.random() * Math.PI * 2;\n    this.colorTime = Math.random() * Math.PI * 2;\n    this.colorSpeed = randomInRange(0.9, 1.1);\n\n    this.source = new Mesh(\n      new IcosahedronBufferGeometry(0.1 * width, 10),\n      new MeshBasicMaterial({ color: this.color })\n    );\n\n    this.trail = new MeshLine();\n    this.trail.widthCallback = (t) => {\n      return Easings.OutCubic(t);\n    };\n    const lineMaterial = new MeshLineMaterial({\n      lineWidth: 0.275 * width,\n      color: this.color,\n      sizeAttenuation: true,\n      borderWidth: 0,\n      // wireframe: true,\n      resolution: new Vector2(window.innerWidth, window.innerHeight),\n    });\n    this.trailMesh = new Mesh(this.trail, lineMaterial);\n\n    this.trailLength = 2000;\n    this.points = [];\n    for (let i = 0; i < this.trailLength; i++) {\n      this.points.push(new Vector3(0, 0, 0));\n    }\n    this.trail.setPoints(this.points);\n\n    this.prevTime = 0;\n    this.w = 0;\n  }\n\n  setSize(w, h) {\n    this.trailMesh.material.uniforms.resolution.value.set(w, h);\n  }\n\n  update(t) {\n    const ct = t / 1000;\n    const dt = ct - this.prevTime;\n    this.colorTime += dt / 10;\n    const c = gradient.getAt(\n      0.5 + 0.5 * Math.cos(this.colorTime * this.colorSpeed + this.colorOffset)\n    );\n    this.color.copy(c);\n    this.source.material.color.copy(c);\n\n    const steps = 10;\n\n    this.w += 1;\n    const e = 0.0001;\n    for (let i = 0; i < steps; i++) {\n      const t = this.prevTime + (dt * i) / steps;\n      const r = 0.5 + 0.5 * Math.sin(t / 1);\n      const p = new Vector3(t, 0, 0).multiplyScalar(2);\n      const n = curl(p, this.fn);\n      n.normalize().multiplyScalar(0.1 + 0.9 * r);\n      n.x += randomInRange(-e, e);\n      n.y += randomInRange(-e, e);\n      n.z += randomInRange(-e, e);\n      const f = n.clone().copy(n);\n      this.source.position.copy(f);\n\n      this.points.shift();\n      this.points.push(f);\n    }\n\n    this.prevTime = ct;\n\n    const f = this.w / this.trailLength;\n    this.trail.setPoints(this.points, (p) => {\n      return parabola(p, 1);\n    });\n  }\n}\n\nexport { Trail };\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","/**\n * @license\n * Copyright 2010-2021 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = \"135dev\";\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst FlatShading = 1;\nconst SmoothShading = 2;\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst CubeUVRefractionMapping = 307;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedShort565Type = 1019;\nconst UnsignedInt248Type = 1020;\nconst AlphaFormat = 1021;\nconst RGBFormat = 1022;\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst RGBEFormat = RGBAFormat;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBIntegerFormat = 1032;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst SRGB8_ALPHA8_ASTC_4x4_Format = 37840;\nconst SRGB8_ALPHA8_ASTC_5x4_Format = 37841;\nconst SRGB8_ALPHA8_ASTC_5x5_Format = 37842;\nconst SRGB8_ALPHA8_ASTC_6x5_Format = 37843;\nconst SRGB8_ALPHA8_ASTC_6x6_Format = 37844;\nconst SRGB8_ALPHA8_ASTC_8x5_Format = 37845;\nconst SRGB8_ALPHA8_ASTC_8x6_Format = 37846;\nconst SRGB8_ALPHA8_ASTC_8x8_Format = 37847;\nconst SRGB8_ALPHA8_ASTC_10x5_Format = 37848;\nconst SRGB8_ALPHA8_ASTC_10x6_Format = 37849;\nconst SRGB8_ALPHA8_ASTC_10x8_Format = 37850;\nconst SRGB8_ALPHA8_ASTC_10x10_Format = 37851;\nconst SRGB8_ALPHA8_ASTC_12x10_Format = 37852;\nconst SRGB8_ALPHA8_ASTC_12x12_Format = 37853;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\nconst LinearEncoding = 3000;\nconst sRGBEncoding = 3001;\nconst GammaEncoding = 3007;\nconst RGBEEncoding = 3002;\nconst LogLuvEncoding = 3003;\nconst RGBM7Encoding = 3004;\nconst RGBM16Encoding = 3005;\nconst RGBDEncoding = 3006;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = \"100\";\nconst GLSL3 = \"300 es\";\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n  addEventListener(type, listener) {\n    if (this._listeners === undefined) this._listeners = {};\n\n    const listeners = this._listeners;\n\n    if (listeners[type] === undefined) {\n      listeners[type] = [];\n    }\n\n    if (listeners[type].indexOf(listener) === -1) {\n      listeners[type].push(listener);\n    }\n  }\n\n  hasEventListener(type, listener) {\n    if (this._listeners === undefined) return false;\n\n    const listeners = this._listeners;\n\n    return (\n      listeners[type] !== undefined && listeners[type].indexOf(listener) !== -1\n    );\n  }\n\n  removeEventListener(type, listener) {\n    if (this._listeners === undefined) return;\n\n    const listeners = this._listeners;\n    const listenerArray = listeners[type];\n\n    if (listenerArray !== undefined) {\n      const index = listenerArray.indexOf(listener);\n\n      if (index !== -1) {\n        listenerArray.splice(index, 1);\n      }\n    }\n  }\n\n  dispatchEvent(event) {\n    if (this._listeners === undefined) return;\n\n    const listeners = this._listeners;\n    const listenerArray = listeners[event.type];\n\n    if (listenerArray !== undefined) {\n      event.target = this;\n\n      // Make a copy, in case listeners are removed while iterating.\n      const array = listenerArray.slice(0);\n\n      for (let i = 0, l = array.length; i < l; i++) {\n        array[i].call(this, event);\n      }\n\n      event.target = null;\n    }\n  }\n}\n\nlet _seed = 1234567;\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n//\n\nconst _lut = [];\n\nfor (let i = 0; i < 256; i++) {\n  _lut[i] = (i < 16 ? \"0\" : \"\") + i.toString(16);\n}\n\nconst hasRandomUUID = typeof crypto !== \"undefined\" && \"randomUUID\" in crypto;\n\nfunction generateUUID() {\n  if (hasRandomUUID) {\n    return crypto.randomUUID().toUpperCase();\n  }\n\n  // TODO Remove this code when crypto.randomUUID() is available everywhere\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\n  const d0 = (Math.random() * 0xffffffff) | 0;\n  const d1 = (Math.random() * 0xffffffff) | 0;\n  const d2 = (Math.random() * 0xffffffff) | 0;\n  const d3 = (Math.random() * 0xffffffff) | 0;\n  const uuid =\n    _lut[d0 & 0xff] +\n    _lut[(d0 >> 8) & 0xff] +\n    _lut[(d0 >> 16) & 0xff] +\n    _lut[(d0 >> 24) & 0xff] +\n    \"-\" +\n    _lut[d1 & 0xff] +\n    _lut[(d1 >> 8) & 0xff] +\n    \"-\" +\n    _lut[((d1 >> 16) & 0x0f) | 0x40] +\n    _lut[(d1 >> 24) & 0xff] +\n    \"-\" +\n    _lut[(d2 & 0x3f) | 0x80] +\n    _lut[(d2 >> 8) & 0xff] +\n    \"-\" +\n    _lut[(d2 >> 16) & 0xff] +\n    _lut[(d2 >> 24) & 0xff] +\n    _lut[d3 & 0xff] +\n    _lut[(d3 >> 8) & 0xff] +\n    _lut[(d3 >> 16) & 0xff] +\n    _lut[(d3 >> 24) & 0xff];\n\n  // .toUpperCase() here flattens concatenated strings to save heap memory space.\n  return uuid.toUpperCase();\n}\n\nfunction clamp(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\n\n// compute euclidian modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo(n, m) {\n  return ((n % m) + m) % m;\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear(x, a1, a2, b1, b2) {\n  return b1 + ((x - a1) * (b2 - b1)) / (a2 - a1);\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp(x, y, value) {\n  if (x !== y) {\n    return (value - x) / (y - x);\n  } else {\n    return 0;\n  }\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp(x, y, t) {\n  return (1 - t) * x + t * y;\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp(x, y, lambda, dt) {\n  return lerp(x, y, 1 - Math.exp(-lambda * dt));\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong(x, length = 1) {\n  return length - Math.abs(euclideanModulo(x, length * 2) - length);\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep(x, min, max) {\n  if (x <= min) return 0;\n  if (x >= max) return 1;\n\n  x = (x - min) / (max - min);\n\n  return x * x * (3 - 2 * x);\n}\n\nfunction smootherstep(x, min, max) {\n  if (x <= min) return 0;\n  if (x >= max) return 1;\n\n  x = (x - min) / (max - min);\n\n  return x * x * x * (x * (x * 6 - 15) + 10);\n}\n\n// Random integer from <low, high> interval\nfunction randInt(low, high) {\n  return low + Math.floor(Math.random() * (high - low + 1));\n}\n\n// Random float from <low, high> interval\nfunction randFloat(low, high) {\n  return low + Math.random() * (high - low);\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread(range) {\n  return range * (0.5 - Math.random());\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom(s) {\n  if (s !== undefined) _seed = s % 2147483647;\n\n  // Park-Miller algorithm\n\n  _seed = (_seed * 16807) % 2147483647;\n\n  return (_seed - 1) / 2147483646;\n}\n\nfunction degToRad(degrees) {\n  return degrees * DEG2RAD;\n}\n\nfunction radToDeg(radians) {\n  return radians * RAD2DEG;\n}\n\nfunction isPowerOfTwo(value) {\n  return (value & (value - 1)) === 0 && value !== 0;\n}\n\nfunction ceilPowerOfTwo(value) {\n  return Math.pow(2, Math.ceil(Math.log(value) / Math.LN2));\n}\n\nfunction floorPowerOfTwo(value) {\n  return Math.pow(2, Math.floor(Math.log(value) / Math.LN2));\n}\n\nfunction setQuaternionFromProperEuler(q, a, b, c, order) {\n  // Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n  // rotations are applied to the axes in the order specified by 'order'\n  // rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n  // angles are in radians\n\n  const cos = Math.cos;\n  const sin = Math.sin;\n\n  const c2 = cos(b / 2);\n  const s2 = sin(b / 2);\n\n  const c13 = cos((a + c) / 2);\n  const s13 = sin((a + c) / 2);\n\n  const c1_3 = cos((a - c) / 2);\n  const s1_3 = sin((a - c) / 2);\n\n  const c3_1 = cos((c - a) / 2);\n  const s3_1 = sin((c - a) / 2);\n\n  switch (order) {\n    case \"XYX\":\n      q.set(c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13);\n      break;\n\n    case \"YZY\":\n      q.set(s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13);\n      break;\n\n    case \"ZXZ\":\n      q.set(s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13);\n      break;\n\n    case \"XZX\":\n      q.set(c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13);\n      break;\n\n    case \"YXY\":\n      q.set(s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13);\n      break;\n\n    case \"ZYZ\":\n      q.set(s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13);\n      break;\n\n    default:\n      console.warn(\n        \"THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: \" +\n          order\n      );\n  }\n}\n\nvar MathUtils = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  DEG2RAD: DEG2RAD,\n  RAD2DEG: RAD2DEG,\n  generateUUID: generateUUID,\n  clamp: clamp,\n  euclideanModulo: euclideanModulo,\n  mapLinear: mapLinear,\n  inverseLerp: inverseLerp,\n  lerp: lerp,\n  damp: damp,\n  pingpong: pingpong,\n  smoothstep: smoothstep,\n  smootherstep: smootherstep,\n  randInt: randInt,\n  randFloat: randFloat,\n  randFloatSpread: randFloatSpread,\n  seededRandom: seededRandom,\n  degToRad: degToRad,\n  radToDeg: radToDeg,\n  isPowerOfTwo: isPowerOfTwo,\n  ceilPowerOfTwo: ceilPowerOfTwo,\n  floorPowerOfTwo: floorPowerOfTwo,\n  setQuaternionFromProperEuler: setQuaternionFromProperEuler,\n});\n\nclass Vector2 {\n  constructor(x = 0, y = 0) {\n    this.x = x;\n    this.y = y;\n  }\n\n  get width() {\n    return this.x;\n  }\n\n  set width(value) {\n    this.x = value;\n  }\n\n  get height() {\n    return this.y;\n  }\n\n  set height(value) {\n    this.y = value;\n  }\n\n  set(x, y) {\n    this.x = x;\n    this.y = y;\n\n    return this;\n  }\n\n  setScalar(scalar) {\n    this.x = scalar;\n    this.y = scalar;\n\n    return this;\n  }\n\n  setX(x) {\n    this.x = x;\n\n    return this;\n  }\n\n  setY(y) {\n    this.y = y;\n\n    return this;\n  }\n\n  setComponent(index, value) {\n    switch (index) {\n      case 0:\n        this.x = value;\n        break;\n      case 1:\n        this.y = value;\n        break;\n      default:\n        throw new Error(\"index is out of range: \" + index);\n    }\n\n    return this;\n  }\n\n  getComponent(index) {\n    switch (index) {\n      case 0:\n        return this.x;\n      case 1:\n        return this.y;\n      default:\n        throw new Error(\"index is out of range: \" + index);\n    }\n  }\n\n  clone() {\n    return new this.constructor(this.x, this.y);\n  }\n\n  copy(v) {\n    this.x = v.x;\n    this.y = v.y;\n\n    return this;\n  }\n\n  add(v, w) {\n    if (w !== undefined) {\n      console.warn(\n        \"THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.\"\n      );\n      return this.addVectors(v, w);\n    }\n\n    this.x += v.x;\n    this.y += v.y;\n\n    return this;\n  }\n\n  addScalar(s) {\n    this.x += s;\n    this.y += s;\n\n    return this;\n  }\n\n  addVectors(a, b) {\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n\n    return this;\n  }\n\n  addScaledVector(v, s) {\n    this.x += v.x * s;\n    this.y += v.y * s;\n\n    return this;\n  }\n\n  sub(v, w) {\n    if (w !== undefined) {\n      console.warn(\n        \"THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\"\n      );\n      return this.subVectors(v, w);\n    }\n\n    this.x -= v.x;\n    this.y -= v.y;\n\n    return this;\n  }\n\n  subScalar(s) {\n    this.x -= s;\n    this.y -= s;\n\n    return this;\n  }\n\n  subVectors(a, b) {\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n\n    return this;\n  }\n\n  multiply(v) {\n    this.x *= v.x;\n    this.y *= v.y;\n\n    return this;\n  }\n\n  multiplyScalar(scalar) {\n    this.x *= scalar;\n    this.y *= scalar;\n\n    return this;\n  }\n\n  divide(v) {\n    this.x /= v.x;\n    this.y /= v.y;\n\n    return this;\n  }\n\n  divideScalar(scalar) {\n    return this.multiplyScalar(1 / scalar);\n  }\n\n  applyMatrix3(m) {\n    const x = this.x,\n      y = this.y;\n    const e = m.elements;\n\n    this.x = e[0] * x + e[3] * y + e[6];\n    this.y = e[1] * x + e[4] * y + e[7];\n\n    return this;\n  }\n\n  min(v) {\n    this.x = Math.min(this.x, v.x);\n    this.y = Math.min(this.y, v.y);\n\n    return this;\n  }\n\n  max(v) {\n    this.x = Math.max(this.x, v.x);\n    this.y = Math.max(this.y, v.y);\n\n    return this;\n  }\n\n  clamp(min, max) {\n    // assumes min < max, componentwise\n\n    this.x = Math.max(min.x, Math.min(max.x, this.x));\n    this.y = Math.max(min.y, Math.min(max.y, this.y));\n\n    return this;\n  }\n\n  clampScalar(minVal, maxVal) {\n    this.x = Math.max(minVal, Math.min(maxVal, this.x));\n    this.y = Math.max(minVal, Math.min(maxVal, this.y));\n\n    return this;\n  }\n\n  clampLength(min, max) {\n    const length = this.length();\n\n    return this.divideScalar(length || 1).multiplyScalar(\n      Math.max(min, Math.min(max, length))\n    );\n  }\n\n  floor() {\n    this.x = Math.floor(this.x);\n    this.y = Math.floor(this.y);\n\n    return this;\n  }\n\n  ceil() {\n    this.x = Math.ceil(this.x);\n    this.y = Math.ceil(this.y);\n\n    return this;\n  }\n\n  round() {\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n\n    return this;\n  }\n\n  roundToZero() {\n    this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n\n    return this;\n  }\n\n  negate() {\n    this.x = -this.x;\n    this.y = -this.y;\n\n    return this;\n  }\n\n  dot(v) {\n    return this.x * v.x + this.y * v.y;\n  }\n\n  cross(v) {\n    return this.x * v.y - this.y * v.x;\n  }\n\n  lengthSq() {\n    return this.x * this.x + this.y * this.y;\n  }\n\n  length() {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n\n  manhattanLength() {\n    return Math.abs(this.x) + Math.abs(this.y);\n  }\n\n  normalize() {\n    return this.divideScalar(this.length() || 1);\n  }\n\n  angle() {\n    // computes the angle in radians with respect to the positive x-axis\n\n    const angle = Math.atan2(-this.y, -this.x) + Math.PI;\n\n    return angle;\n  }\n\n  distanceTo(v) {\n    return Math.sqrt(this.distanceToSquared(v));\n  }\n\n  distanceToSquared(v) {\n    const dx = this.x - v.x,\n      dy = this.y - v.y;\n    return dx * dx + dy * dy;\n  }\n\n  manhattanDistanceTo(v) {\n    return Math.abs(this.x - v.x) + Math.abs(this.y - v.y);\n  }\n\n  setLength(length) {\n    return this.normalize().multiplyScalar(length);\n  }\n\n  lerp(v, alpha) {\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n\n    return this;\n  }\n\n  lerpVectors(v1, v2, alpha) {\n    this.x = v1.x + (v2.x - v1.x) * alpha;\n    this.y = v1.y + (v2.y - v1.y) * alpha;\n\n    return this;\n  }\n\n  equals(v) {\n    return v.x === this.x && v.y === this.y;\n  }\n\n  fromArray(array, offset = 0) {\n    this.x = array[offset];\n    this.y = array[offset + 1];\n\n    return this;\n  }\n\n  toArray(array = [], offset = 0) {\n    array[offset] = this.x;\n    array[offset + 1] = this.y;\n\n    return array;\n  }\n\n  fromBufferAttribute(attribute, index, offset) {\n    if (offset !== undefined) {\n      console.warn(\n        \"THREE.Vector2: offset has been removed from .fromBufferAttribute().\"\n      );\n    }\n\n    this.x = attribute.getX(index);\n    this.y = attribute.getY(index);\n\n    return this;\n  }\n\n  rotateAround(center, angle) {\n    const c = Math.cos(angle),\n      s = Math.sin(angle);\n\n    const x = this.x - center.x;\n    const y = this.y - center.y;\n\n    this.x = x * c - y * s + center.x;\n    this.y = x * s + y * c + center.y;\n\n    return this;\n  }\n\n  random() {\n    this.x = Math.random();\n    this.y = Math.random();\n\n    return this;\n  }\n\n  *[Symbol.iterator]() {\n    yield this.x;\n    yield this.y;\n  }\n}\n\nVector2.prototype.isVector2 = true;\n\nclass Matrix3 {\n  constructor() {\n    this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n\n    if (arguments.length > 0) {\n      console.error(\n        \"THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.\"\n      );\n    }\n  }\n\n  set(n11, n12, n13, n21, n22, n23, n31, n32, n33) {\n    const te = this.elements;\n\n    te[0] = n11;\n    te[1] = n21;\n    te[2] = n31;\n    te[3] = n12;\n    te[4] = n22;\n    te[5] = n32;\n    te[6] = n13;\n    te[7] = n23;\n    te[8] = n33;\n\n    return this;\n  }\n\n  identity() {\n    this.set(1, 0, 0, 0, 1, 0, 0, 0, 1);\n\n    return this;\n  }\n\n  copy(m) {\n    const te = this.elements;\n    const me = m.elements;\n\n    te[0] = me[0];\n    te[1] = me[1];\n    te[2] = me[2];\n    te[3] = me[3];\n    te[4] = me[4];\n    te[5] = me[5];\n    te[6] = me[6];\n    te[7] = me[7];\n    te[8] = me[8];\n\n    return this;\n  }\n\n  extractBasis(xAxis, yAxis, zAxis) {\n    xAxis.setFromMatrix3Column(this, 0);\n    yAxis.setFromMatrix3Column(this, 1);\n    zAxis.setFromMatrix3Column(this, 2);\n\n    return this;\n  }\n\n  setFromMatrix4(m) {\n    const me = m.elements;\n\n    this.set(me[0], me[4], me[8], me[1], me[5], me[9], me[2], me[6], me[10]);\n\n    return this;\n  }\n\n  multiply(m) {\n    return this.multiplyMatrices(this, m);\n  }\n\n  premultiply(m) {\n    return this.multiplyMatrices(m, this);\n  }\n\n  multiplyMatrices(a, b) {\n    const ae = a.elements;\n    const be = b.elements;\n    const te = this.elements;\n\n    const a11 = ae[0],\n      a12 = ae[3],\n      a13 = ae[6];\n    const a21 = ae[1],\n      a22 = ae[4],\n      a23 = ae[7];\n    const a31 = ae[2],\n      a32 = ae[5],\n      a33 = ae[8];\n\n    const b11 = be[0],\n      b12 = be[3],\n      b13 = be[6];\n    const b21 = be[1],\n      b22 = be[4],\n      b23 = be[7];\n    const b31 = be[2],\n      b32 = be[5],\n      b33 = be[8];\n\n    te[0] = a11 * b11 + a12 * b21 + a13 * b31;\n    te[3] = a11 * b12 + a12 * b22 + a13 * b32;\n    te[6] = a11 * b13 + a12 * b23 + a13 * b33;\n\n    te[1] = a21 * b11 + a22 * b21 + a23 * b31;\n    te[4] = a21 * b12 + a22 * b22 + a23 * b32;\n    te[7] = a21 * b13 + a22 * b23 + a23 * b33;\n\n    te[2] = a31 * b11 + a32 * b21 + a33 * b31;\n    te[5] = a31 * b12 + a32 * b22 + a33 * b32;\n    te[8] = a31 * b13 + a32 * b23 + a33 * b33;\n\n    return this;\n  }\n\n  multiplyScalar(s) {\n    const te = this.elements;\n\n    te[0] *= s;\n    te[3] *= s;\n    te[6] *= s;\n    te[1] *= s;\n    te[4] *= s;\n    te[7] *= s;\n    te[2] *= s;\n    te[5] *= s;\n    te[8] *= s;\n\n    return this;\n  }\n\n  determinant() {\n    const te = this.elements;\n\n    const a = te[0],\n      b = te[1],\n      c = te[2],\n      d = te[3],\n      e = te[4],\n      f = te[5],\n      g = te[6],\n      h = te[7],\n      i = te[8];\n\n    return (\n      a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g\n    );\n  }\n\n  invert() {\n    const te = this.elements,\n      n11 = te[0],\n      n21 = te[1],\n      n31 = te[2],\n      n12 = te[3],\n      n22 = te[4],\n      n32 = te[5],\n      n13 = te[6],\n      n23 = te[7],\n      n33 = te[8],\n      t11 = n33 * n22 - n32 * n23,\n      t12 = n32 * n13 - n33 * n12,\n      t13 = n23 * n12 - n22 * n13,\n      det = n11 * t11 + n21 * t12 + n31 * t13;\n\n    if (det === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);\n\n    const detInv = 1 / det;\n\n    te[0] = t11 * detInv;\n    te[1] = (n31 * n23 - n33 * n21) * detInv;\n    te[2] = (n32 * n21 - n31 * n22) * detInv;\n\n    te[3] = t12 * detInv;\n    te[4] = (n33 * n11 - n31 * n13) * detInv;\n    te[5] = (n31 * n12 - n32 * n11) * detInv;\n\n    te[6] = t13 * detInv;\n    te[7] = (n21 * n13 - n23 * n11) * detInv;\n    te[8] = (n22 * n11 - n21 * n12) * detInv;\n\n    return this;\n  }\n\n  transpose() {\n    let tmp;\n    const m = this.elements;\n\n    tmp = m[1];\n    m[1] = m[3];\n    m[3] = tmp;\n    tmp = m[2];\n    m[2] = m[6];\n    m[6] = tmp;\n    tmp = m[5];\n    m[5] = m[7];\n    m[7] = tmp;\n\n    return this;\n  }\n\n  getNormalMatrix(matrix4) {\n    return this.setFromMatrix4(matrix4).invert().transpose();\n  }\n\n  transposeIntoArray(r) {\n    const m = this.elements;\n\n    r[0] = m[0];\n    r[1] = m[3];\n    r[2] = m[6];\n    r[3] = m[1];\n    r[4] = m[4];\n    r[5] = m[7];\n    r[6] = m[2];\n    r[7] = m[5];\n    r[8] = m[8];\n\n    return this;\n  }\n\n  setUvTransform(tx, ty, sx, sy, rotation, cx, cy) {\n    const c = Math.cos(rotation);\n    const s = Math.sin(rotation);\n\n    this.set(\n      sx * c,\n      sx * s,\n      -sx * (c * cx + s * cy) + cx + tx,\n      -sy * s,\n      sy * c,\n      -sy * (-s * cx + c * cy) + cy + ty,\n      0,\n      0,\n      1\n    );\n\n    return this;\n  }\n\n  scale(sx, sy) {\n    const te = this.elements;\n\n    te[0] *= sx;\n    te[3] *= sx;\n    te[6] *= sx;\n    te[1] *= sy;\n    te[4] *= sy;\n    te[7] *= sy;\n\n    return this;\n  }\n\n  rotate(theta) {\n    const c = Math.cos(theta);\n    const s = Math.sin(theta);\n\n    const te = this.elements;\n\n    const a11 = te[0],\n      a12 = te[3],\n      a13 = te[6];\n    const a21 = te[1],\n      a22 = te[4],\n      a23 = te[7];\n\n    te[0] = c * a11 + s * a21;\n    te[3] = c * a12 + s * a22;\n    te[6] = c * a13 + s * a23;\n\n    te[1] = -s * a11 + c * a21;\n    te[4] = -s * a12 + c * a22;\n    te[7] = -s * a13 + c * a23;\n\n    return this;\n  }\n\n  translate(tx, ty) {\n    const te = this.elements;\n\n    te[0] += tx * te[2];\n    te[3] += tx * te[5];\n    te[6] += tx * te[8];\n    te[1] += ty * te[2];\n    te[4] += ty * te[5];\n    te[7] += ty * te[8];\n\n    return this;\n  }\n\n  equals(matrix) {\n    const te = this.elements;\n    const me = matrix.elements;\n\n    for (let i = 0; i < 9; i++) {\n      if (te[i] !== me[i]) return false;\n    }\n\n    return true;\n  }\n\n  fromArray(array, offset = 0) {\n    for (let i = 0; i < 9; i++) {\n      this.elements[i] = array[i + offset];\n    }\n\n    return this;\n  }\n\n  toArray(array = [], offset = 0) {\n    const te = this.elements;\n\n    array[offset] = te[0];\n    array[offset + 1] = te[1];\n    array[offset + 2] = te[2];\n\n    array[offset + 3] = te[3];\n    array[offset + 4] = te[4];\n    array[offset + 5] = te[5];\n\n    array[offset + 6] = te[6];\n    array[offset + 7] = te[7];\n    array[offset + 8] = te[8];\n\n    return array;\n  }\n\n  clone() {\n    return new this.constructor().fromArray(this.elements);\n  }\n}\n\nMatrix3.prototype.isMatrix3 = true;\n\nfunction arrayMax(array) {\n  if (array.length === 0) return -Infinity;\n\n  let max = array[0];\n\n  for (let i = 1, l = array.length; i < l; ++i) {\n    if (array[i] > max) max = array[i];\n  }\n\n  return max;\n}\n\nconst TYPED_ARRAYS = {\n  Int8Array: Int8Array,\n  Uint8Array: Uint8Array,\n  Uint8ClampedArray: Uint8ClampedArray,\n  Int16Array: Int16Array,\n  Uint16Array: Uint16Array,\n  Int32Array: Int32Array,\n  Uint32Array: Uint32Array,\n  Float32Array: Float32Array,\n  Float64Array: Float64Array,\n};\n\nfunction getTypedArray(type, buffer) {\n  return new TYPED_ARRAYS[type](buffer);\n}\n\nfunction createElementNS(name) {\n  return document.createElementNS(\"http://www.w3.org/1999/xhtml\", name);\n}\n\n/**\n * cyrb53 hash for string from: https://stackoverflow.com/a/52171480\n *\n * Public Domain, @bryc - https://stackoverflow.com/users/815680/bryc\n *\n * It is roughly similar to the well-known MurmurHash/xxHash algorithms. It uses a combination\n * of multiplication and Xorshift to generate the hash, but not as thorough. As a result it's\n * faster than either would be in JavaScript and significantly simpler to implement. Keep in\n * mind this is not a secure algorithm, if privacy/security is a concern, this is not for you.\n *\n * @param {string} str\n * @param {number} seed, default 0\n * @returns number\n */\nfunction hashString(str, seed = 0) {\n  let h1 = 0xdeadbeef ^ seed,\n    h2 = 0x41c6ce57 ^ seed;\n\n  for (let i = 0, ch; i < str.length; i++) {\n    ch = str.charCodeAt(i);\n\n    h1 = Math.imul(h1 ^ ch, 2654435761);\n\n    h2 = Math.imul(h2 ^ ch, 1597334677);\n  }\n\n  h1 =\n    Math.imul(h1 ^ (h1 >>> 16), 2246822507) ^\n    Math.imul(h2 ^ (h2 >>> 13), 3266489909);\n\n  h2 =\n    Math.imul(h2 ^ (h2 >>> 16), 2246822507) ^\n    Math.imul(h1 ^ (h1 >>> 13), 3266489909);\n\n  return 4294967296 * (2097151 & h2) + (h1 >>> 0);\n}\n\nlet _canvas;\n\nclass ImageUtils {\n  static getDataURL(image) {\n    if (/^data:/i.test(image.src)) {\n      return image.src;\n    }\n\n    if (typeof HTMLCanvasElement == \"undefined\") {\n      return image.src;\n    }\n\n    let canvas;\n\n    if (image instanceof HTMLCanvasElement) {\n      canvas = image;\n    } else {\n      if (_canvas === undefined) _canvas = createElementNS(\"canvas\");\n\n      _canvas.width = image.width;\n      _canvas.height = image.height;\n\n      const context = _canvas.getContext(\"2d\");\n\n      if (image instanceof ImageData) {\n        context.putImageData(image, 0, 0);\n      } else {\n        context.drawImage(image, 0, 0, image.width, image.height);\n      }\n\n      canvas = _canvas;\n    }\n\n    if (canvas.width > 2048 || canvas.height > 2048) {\n      console.warn(\n        \"THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons\",\n        image\n      );\n\n      return canvas.toDataURL(\"image/jpeg\", 0.6);\n    } else {\n      return canvas.toDataURL(\"image/png\");\n    }\n  }\n}\n\nlet textureId = 0;\n\nclass Texture extends EventDispatcher {\n  constructor(\n    image = Texture.DEFAULT_IMAGE,\n    mapping = Texture.DEFAULT_MAPPING,\n    wrapS = ClampToEdgeWrapping,\n    wrapT = ClampToEdgeWrapping,\n    magFilter = LinearFilter,\n    minFilter = LinearMipmapLinearFilter,\n    format = RGBAFormat,\n    type = UnsignedByteType,\n    anisotropy = 1,\n    encoding = LinearEncoding\n  ) {\n    super();\n\n    Object.defineProperty(this, \"id\", { value: textureId++ });\n\n    this.uuid = generateUUID();\n\n    this.name = \"\";\n\n    this.image = image;\n    this.mipmaps = [];\n\n    this.mapping = mapping;\n\n    this.wrapS = wrapS;\n    this.wrapT = wrapT;\n\n    this.magFilter = magFilter;\n    this.minFilter = minFilter;\n\n    this.anisotropy = anisotropy;\n\n    this.format = format;\n    this.internalFormat = null;\n    this.type = type;\n\n    this.offset = new Vector2(0, 0);\n    this.repeat = new Vector2(1, 1);\n    this.center = new Vector2(0, 0);\n    this.rotation = 0;\n\n    this.matrixAutoUpdate = true;\n    this.matrix = new Matrix3();\n\n    this.generateMipmaps = true;\n    this.premultiplyAlpha = false;\n    this.flipY = true;\n    this.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n    // Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n    //\n    // Also changing the encoding after already used by a Material will not automatically make the Material\n    // update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n    this.encoding = encoding;\n\n    this.userData = {};\n\n    this.version = 0;\n    this.onUpdate = null;\n\n    this.isRenderTargetTexture = false;\n  }\n\n  updateMatrix() {\n    this.matrix.setUvTransform(\n      this.offset.x,\n      this.offset.y,\n      this.repeat.x,\n      this.repeat.y,\n      this.rotation,\n      this.center.x,\n      this.center.y\n    );\n  }\n\n  clone() {\n    return new this.constructor().copy(this);\n  }\n\n  copy(source) {\n    this.name = source.name;\n\n    this.image = source.image;\n    this.mipmaps = source.mipmaps.slice(0);\n\n    this.mapping = source.mapping;\n\n    this.wrapS = source.wrapS;\n    this.wrapT = source.wrapT;\n\n    this.magFilter = source.magFilter;\n    this.minFilter = source.minFilter;\n\n    this.anisotropy = source.anisotropy;\n\n    this.format = source.format;\n    this.internalFormat = source.internalFormat;\n    this.type = source.type;\n\n    this.offset.copy(source.offset);\n    this.repeat.copy(source.repeat);\n    this.center.copy(source.center);\n    this.rotation = source.rotation;\n\n    this.matrixAutoUpdate = source.matrixAutoUpdate;\n    this.matrix.copy(source.matrix);\n\n    this.generateMipmaps = source.generateMipmaps;\n    this.premultiplyAlpha = source.premultiplyAlpha;\n    this.flipY = source.flipY;\n    this.unpackAlignment = source.unpackAlignment;\n    this.encoding = source.encoding;\n\n    this.userData = JSON.parse(JSON.stringify(source.userData));\n\n    return this;\n  }\n\n  toJSON(meta) {\n    const isRootObject = meta === undefined || typeof meta === \"string\";\n\n    if (!isRootObject && meta.textures[this.uuid] !== undefined) {\n      return meta.textures[this.uuid];\n    }\n\n    const output = {\n      metadata: {\n        version: 4.5,\n        type: \"Texture\",\n        generator: \"Texture.toJSON\",\n      },\n\n      uuid: this.uuid,\n      name: this.name,\n\n      mapping: this.mapping,\n\n      repeat: [this.repeat.x, this.repeat.y],\n      offset: [this.offset.x, this.offset.y],\n      center: [this.center.x, this.center.y],\n      rotation: this.rotation,\n\n      wrap: [this.wrapS, this.wrapT],\n\n      format: this.format,\n      type: this.type,\n      encoding: this.encoding,\n\n      minFilter: this.minFilter,\n      magFilter: this.magFilter,\n      anisotropy: this.anisotropy,\n\n      flipY: this.flipY,\n\n      premultiplyAlpha: this.premultiplyAlpha,\n      unpackAlignment: this.unpackAlignment,\n    };\n\n    if (this.image !== undefined) {\n      // TODO: Move to THREE.Image\n\n      const image = this.image;\n\n      if (image.uuid === undefined) {\n        image.uuid = generateUUID(); // UGH\n      }\n\n      if (!isRootObject && meta.images[image.uuid] === undefined) {\n        let url;\n\n        if (Array.isArray(image)) {\n          // process array of images e.g. CubeTexture\n\n          url = [];\n\n          for (let i = 0, l = image.length; i < l; i++) {\n            // check cube texture with data textures\n\n            if (image[i].isDataTexture) {\n              url.push(serializeImage(image[i].image));\n            } else {\n              url.push(serializeImage(image[i]));\n            }\n          }\n        } else {\n          // process single image\n\n          url = serializeImage(image);\n        }\n\n        meta.images[image.uuid] = {\n          uuid: image.uuid,\n          url: url,\n        };\n      }\n\n      output.image = image.uuid;\n    }\n\n    if (JSON.stringify(this.userData) !== \"{}\") output.userData = this.userData;\n\n    if (!isRootObject) {\n      meta.textures[this.uuid] = output;\n    }\n\n    return output;\n  }\n\n  dispose() {\n    this.dispatchEvent({ type: \"dispose\" });\n  }\n\n  transformUv(uv) {\n    if (this.mapping !== UVMapping) return uv;\n\n    uv.applyMatrix3(this.matrix);\n\n    if (uv.x < 0 || uv.x > 1) {\n      switch (this.wrapS) {\n        case RepeatWrapping:\n          uv.x = uv.x - Math.floor(uv.x);\n          break;\n\n        case ClampToEdgeWrapping:\n          uv.x = uv.x < 0 ? 0 : 1;\n          break;\n\n        case MirroredRepeatWrapping:\n          if (Math.abs(Math.floor(uv.x) % 2) === 1) {\n            uv.x = Math.ceil(uv.x) - uv.x;\n          } else {\n            uv.x = uv.x - Math.floor(uv.x);\n          }\n\n          break;\n      }\n    }\n\n    if (uv.y < 0 || uv.y > 1) {\n      switch (this.wrapT) {\n        case RepeatWrapping:\n          uv.y = uv.y - Math.floor(uv.y);\n          break;\n\n        case ClampToEdgeWrapping:\n          uv.y = uv.y < 0 ? 0 : 1;\n          break;\n\n        case MirroredRepeatWrapping:\n          if (Math.abs(Math.floor(uv.y) % 2) === 1) {\n            uv.y = Math.ceil(uv.y) - uv.y;\n          } else {\n            uv.y = uv.y - Math.floor(uv.y);\n          }\n\n          break;\n      }\n    }\n\n    if (this.flipY) {\n      uv.y = 1 - uv.y;\n    }\n\n    return uv;\n  }\n\n  set needsUpdate(value) {\n    if (value === true) this.version++;\n  }\n}\n\nTexture.DEFAULT_IMAGE = undefined;\nTexture.DEFAULT_MAPPING = UVMapping;\n\nTexture.prototype.isTexture = true;\n\nfunction serializeImage(image) {\n  if (\n    (typeof HTMLImageElement !== \"undefined\" &&\n      image instanceof HTMLImageElement) ||\n    (typeof HTMLCanvasElement !== \"undefined\" &&\n      image instanceof HTMLCanvasElement) ||\n    (typeof ImageBitmap !== \"undefined\" && image instanceof ImageBitmap)\n  ) {\n    // default images\n\n    return ImageUtils.getDataURL(image);\n  } else {\n    if (image.data) {\n      // images of DataTexture\n\n      return {\n        data: Array.prototype.slice.call(image.data),\n        width: image.width,\n        height: image.height,\n        type: image.data.constructor.name,\n      };\n    } else {\n      console.warn(\"THREE.Texture: Unable to serialize Texture.\");\n      return {};\n    }\n  }\n}\n\nclass Vector4 {\n  constructor(x = 0, y = 0, z = 0, w = 1) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.w = w;\n  }\n\n  get width() {\n    return this.z;\n  }\n\n  set width(value) {\n    this.z = value;\n  }\n\n  get height() {\n    return this.w;\n  }\n\n  set height(value) {\n    this.w = value;\n  }\n\n  set(x, y, z, w) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.w = w;\n\n    return this;\n  }\n\n  setScalar(scalar) {\n    this.x = scalar;\n    this.y = scalar;\n    this.z = scalar;\n    this.w = scalar;\n\n    return this;\n  }\n\n  setX(x) {\n    this.x = x;\n\n    return this;\n  }\n\n  setY(y) {\n    this.y = y;\n\n    return this;\n  }\n\n  setZ(z) {\n    this.z = z;\n\n    return this;\n  }\n\n  setW(w) {\n    this.w = w;\n\n    return this;\n  }\n\n  setComponent(index, value) {\n    switch (index) {\n      case 0:\n        this.x = value;\n        break;\n      case 1:\n        this.y = value;\n        break;\n      case 2:\n        this.z = value;\n        break;\n      case 3:\n        this.w = value;\n        break;\n      default:\n        throw new Error(\"index is out of range: \" + index);\n    }\n\n    return this;\n  }\n\n  getComponent(index) {\n    switch (index) {\n      case 0:\n        return this.x;\n      case 1:\n        return this.y;\n      case 2:\n        return this.z;\n      case 3:\n        return this.w;\n      default:\n        throw new Error(\"index is out of range: \" + index);\n    }\n  }\n\n  clone() {\n    return new this.constructor(this.x, this.y, this.z, this.w);\n  }\n\n  copy(v) {\n    this.x = v.x;\n    this.y = v.y;\n    this.z = v.z;\n    this.w = v.w !== undefined ? v.w : 1;\n\n    return this;\n  }\n\n  add(v, w) {\n    if (w !== undefined) {\n      console.warn(\n        \"THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.\"\n      );\n      return this.addVectors(v, w);\n    }\n\n    this.x += v.x;\n    this.y += v.y;\n    this.z += v.z;\n    this.w += v.w;\n\n    return this;\n  }\n\n  addScalar(s) {\n    this.x += s;\n    this.y += s;\n    this.z += s;\n    this.w += s;\n\n    return this;\n  }\n\n  addVectors(a, b) {\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n    this.z = a.z + b.z;\n    this.w = a.w + b.w;\n\n    return this;\n  }\n\n  addScaledVector(v, s) {\n    this.x += v.x * s;\n    this.y += v.y * s;\n    this.z += v.z * s;\n    this.w += v.w * s;\n\n    return this;\n  }\n\n  sub(v, w) {\n    if (w !== undefined) {\n      console.warn(\n        \"THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\"\n      );\n      return this.subVectors(v, w);\n    }\n\n    this.x -= v.x;\n    this.y -= v.y;\n    this.z -= v.z;\n    this.w -= v.w;\n\n    return this;\n  }\n\n  subScalar(s) {\n    this.x -= s;\n    this.y -= s;\n    this.z -= s;\n    this.w -= s;\n\n    return this;\n  }\n\n  subVectors(a, b) {\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n    this.z = a.z - b.z;\n    this.w = a.w - b.w;\n\n    return this;\n  }\n\n  multiply(v) {\n    this.x *= v.x;\n    this.y *= v.y;\n    this.z *= v.z;\n    this.w *= v.w;\n\n    return this;\n  }\n\n  multiplyScalar(scalar) {\n    this.x *= scalar;\n    this.y *= scalar;\n    this.z *= scalar;\n    this.w *= scalar;\n\n    return this;\n  }\n\n  applyMatrix4(m) {\n    const x = this.x,\n      y = this.y,\n      z = this.z,\n      w = this.w;\n    const e = m.elements;\n\n    this.x = e[0] * x + e[4] * y + e[8] * z + e[12] * w;\n    this.y = e[1] * x + e[5] * y + e[9] * z + e[13] * w;\n    this.z = e[2] * x + e[6] * y + e[10] * z + e[14] * w;\n    this.w = e[3] * x + e[7] * y + e[11] * z + e[15] * w;\n\n    return this;\n  }\n\n  divideScalar(scalar) {\n    return this.multiplyScalar(1 / scalar);\n  }\n\n  setAxisAngleFromQuaternion(q) {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n    // q is assumed to be normalized\n\n    this.w = 2 * Math.acos(q.w);\n\n    const s = Math.sqrt(1 - q.w * q.w);\n\n    if (s < 0.0001) {\n      this.x = 1;\n      this.y = 0;\n      this.z = 0;\n    } else {\n      this.x = q.x / s;\n      this.y = q.y / s;\n      this.z = q.z / s;\n    }\n\n    return this;\n  }\n\n  setAxisAngleFromRotationMatrix(m) {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n    let angle, x, y, z; // variables for result\n    const epsilon = 0.01, // margin to allow for rounding errors\n      epsilon2 = 0.1, // margin to distinguish between 0 and 180 degrees\n      te = m.elements,\n      m11 = te[0],\n      m12 = te[4],\n      m13 = te[8],\n      m21 = te[1],\n      m22 = te[5],\n      m23 = te[9],\n      m31 = te[2],\n      m32 = te[6],\n      m33 = te[10];\n\n    if (\n      Math.abs(m12 - m21) < epsilon &&\n      Math.abs(m13 - m31) < epsilon &&\n      Math.abs(m23 - m32) < epsilon\n    ) {\n      // singularity found\n      // first check for identity matrix which must have +1 for all terms\n      // in leading diagonal and zero in other terms\n\n      if (\n        Math.abs(m12 + m21) < epsilon2 &&\n        Math.abs(m13 + m31) < epsilon2 &&\n        Math.abs(m23 + m32) < epsilon2 &&\n        Math.abs(m11 + m22 + m33 - 3) < epsilon2\n      ) {\n        // this singularity is identity matrix so angle = 0\n\n        this.set(1, 0, 0, 0);\n\n        return this; // zero angle, arbitrary axis\n      }\n\n      // otherwise this singularity is angle = 180\n\n      angle = Math.PI;\n\n      const xx = (m11 + 1) / 2;\n      const yy = (m22 + 1) / 2;\n      const zz = (m33 + 1) / 2;\n      const xy = (m12 + m21) / 4;\n      const xz = (m13 + m31) / 4;\n      const yz = (m23 + m32) / 4;\n\n      if (xx > yy && xx > zz) {\n        // m11 is the largest diagonal term\n\n        if (xx < epsilon) {\n          x = 0;\n          y = 0.707106781;\n          z = 0.707106781;\n        } else {\n          x = Math.sqrt(xx);\n          y = xy / x;\n          z = xz / x;\n        }\n      } else if (yy > zz) {\n        // m22 is the largest diagonal term\n\n        if (yy < epsilon) {\n          x = 0.707106781;\n          y = 0;\n          z = 0.707106781;\n        } else {\n          y = Math.sqrt(yy);\n          x = xy / y;\n          z = yz / y;\n        }\n      } else {\n        // m33 is the largest diagonal term so base result on this\n\n        if (zz < epsilon) {\n          x = 0.707106781;\n          y = 0.707106781;\n          z = 0;\n        } else {\n          z = Math.sqrt(zz);\n          x = xz / z;\n          y = yz / z;\n        }\n      }\n\n      this.set(x, y, z, angle);\n\n      return this; // return 180 deg rotation\n    }\n\n    // as we have reached here there are no singularities so we can handle normally\n\n    let s = Math.sqrt(\n      (m32 - m23) * (m32 - m23) +\n        (m13 - m31) * (m13 - m31) +\n        (m21 - m12) * (m21 - m12)\n    ); // used to normalize\n\n    if (Math.abs(s) < 0.001) s = 1;\n\n    // prevent divide by zero, should not happen if matrix is orthogonal and should be\n    // caught by singularity test above, but I've left it in just in case\n\n    this.x = (m32 - m23) / s;\n    this.y = (m13 - m31) / s;\n    this.z = (m21 - m12) / s;\n    this.w = Math.acos((m11 + m22 + m33 - 1) / 2);\n\n    return this;\n  }\n\n  min(v) {\n    this.x = Math.min(this.x, v.x);\n    this.y = Math.min(this.y, v.y);\n    this.z = Math.min(this.z, v.z);\n    this.w = Math.min(this.w, v.w);\n\n    return this;\n  }\n\n  max(v) {\n    this.x = Math.max(this.x, v.x);\n    this.y = Math.max(this.y, v.y);\n    this.z = Math.max(this.z, v.z);\n    this.w = Math.max(this.w, v.w);\n\n    return this;\n  }\n\n  clamp(min, max) {\n    // assumes min < max, componentwise\n\n    this.x = Math.max(min.x, Math.min(max.x, this.x));\n    this.y = Math.max(min.y, Math.min(max.y, this.y));\n    this.z = Math.max(min.z, Math.min(max.z, this.z));\n    this.w = Math.max(min.w, Math.min(max.w, this.w));\n\n    return this;\n  }\n\n  clampScalar(minVal, maxVal) {\n    this.x = Math.max(minVal, Math.min(maxVal, this.x));\n    this.y = Math.max(minVal, Math.min(maxVal, this.y));\n    this.z = Math.max(minVal, Math.min(maxVal, this.z));\n    this.w = Math.max(minVal, Math.min(maxVal, this.w));\n\n    return this;\n  }\n\n  clampLength(min, max) {\n    const length = this.length();\n\n    return this.divideScalar(length || 1).multiplyScalar(\n      Math.max(min, Math.min(max, length))\n    );\n  }\n\n  floor() {\n    this.x = Math.floor(this.x);\n    this.y = Math.floor(this.y);\n    this.z = Math.floor(this.z);\n    this.w = Math.floor(this.w);\n\n    return this;\n  }\n\n  ceil() {\n    this.x = Math.ceil(this.x);\n    this.y = Math.ceil(this.y);\n    this.z = Math.ceil(this.z);\n    this.w = Math.ceil(this.w);\n\n    return this;\n  }\n\n  round() {\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    this.z = Math.round(this.z);\n    this.w = Math.round(this.w);\n\n    return this;\n  }\n\n  roundToZero() {\n    this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n    this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n    this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w);\n\n    return this;\n  }\n\n  negate() {\n    this.x = -this.x;\n    this.y = -this.y;\n    this.z = -this.z;\n    this.w = -this.w;\n\n    return this;\n  }\n\n  dot(v) {\n    return this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n  }\n\n  lengthSq() {\n    return (\n      this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w\n    );\n  }\n\n  length() {\n    return Math.sqrt(\n      this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w\n    );\n  }\n\n  manhattanLength() {\n    return (\n      Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w)\n    );\n  }\n\n  normalize() {\n    return this.divideScalar(this.length() || 1);\n  }\n\n  setLength(length) {\n    return this.normalize().multiplyScalar(length);\n  }\n\n  lerp(v, alpha) {\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n    this.z += (v.z - this.z) * alpha;\n    this.w += (v.w - this.w) * alpha;\n\n    return this;\n  }\n\n  lerpVectors(v1, v2, alpha) {\n    this.x = v1.x + (v2.x - v1.x) * alpha;\n    this.y = v1.y + (v2.y - v1.y) * alpha;\n    this.z = v1.z + (v2.z - v1.z) * alpha;\n    this.w = v1.w + (v2.w - v1.w) * alpha;\n\n    return this;\n  }\n\n  equals(v) {\n    return v.x === this.x && v.y === this.y && v.z === this.z && v.w === this.w;\n  }\n\n  fromArray(array, offset = 0) {\n    this.x = array[offset];\n    this.y = array[offset + 1];\n    this.z = array[offset + 2];\n    this.w = array[offset + 3];\n\n    return this;\n  }\n\n  toArray(array = [], offset = 0) {\n    array[offset] = this.x;\n    array[offset + 1] = this.y;\n    array[offset + 2] = this.z;\n    array[offset + 3] = this.w;\n\n    return array;\n  }\n\n  fromBufferAttribute(attribute, index, offset) {\n    if (offset !== undefined) {\n      console.warn(\n        \"THREE.Vector4: offset has been removed from .fromBufferAttribute().\"\n      );\n    }\n\n    this.x = attribute.getX(index);\n    this.y = attribute.getY(index);\n    this.z = attribute.getZ(index);\n    this.w = attribute.getW(index);\n\n    return this;\n  }\n\n  random() {\n    this.x = Math.random();\n    this.y = Math.random();\n    this.z = Math.random();\n    this.w = Math.random();\n\n    return this;\n  }\n\n  *[Symbol.iterator]() {\n    yield this.x;\n    yield this.y;\n    yield this.z;\n    yield this.w;\n  }\n}\n\nVector4.prototype.isVector4 = true;\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass WebGLRenderTarget extends EventDispatcher {\n  constructor(width, height, options = {}) {\n    super();\n\n    this.width = width;\n    this.height = height;\n    this.depth = 1;\n\n    this.scissor = new Vector4(0, 0, width, height);\n    this.scissorTest = false;\n\n    this.viewport = new Vector4(0, 0, width, height);\n\n    this.texture = new Texture(\n      undefined,\n      options.mapping,\n      options.wrapS,\n      options.wrapT,\n      options.magFilter,\n      options.minFilter,\n      options.format,\n      options.type,\n      options.anisotropy,\n      options.encoding\n    );\n    this.texture.isRenderTargetTexture = true;\n\n    this.texture.image = { width: width, height: height, depth: 1 };\n\n    this.texture.generateMipmaps =\n      options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n    this.texture.internalFormat =\n      options.internalFormat !== undefined ? options.internalFormat : null;\n    this.texture.minFilter =\n      options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n    this.depthBuffer =\n      options.depthBuffer !== undefined ? options.depthBuffer : true;\n    this.stencilBuffer =\n      options.stencilBuffer !== undefined ? options.stencilBuffer : false;\n    this.depthTexture =\n      options.depthTexture !== undefined ? options.depthTexture : null;\n  }\n\n  setTexture(texture) {\n    texture.image = {\n      width: this.width,\n      height: this.height,\n      depth: this.depth,\n    };\n\n    this.texture = texture;\n  }\n\n  setSize(width, height, depth = 1) {\n    if (\n      this.width !== width ||\n      this.height !== height ||\n      this.depth !== depth\n    ) {\n      this.width = width;\n      this.height = height;\n      this.depth = depth;\n\n      this.texture.image.width = width;\n      this.texture.image.height = height;\n      this.texture.image.depth = depth;\n\n      this.dispose();\n    }\n\n    this.viewport.set(0, 0, width, height);\n    this.scissor.set(0, 0, width, height);\n  }\n\n  clone() {\n    return new this.constructor().copy(this);\n  }\n\n  copy(source) {\n    this.width = source.width;\n    this.height = source.height;\n    this.depth = source.depth;\n\n    this.viewport.copy(source.viewport);\n\n    this.texture = source.texture.clone();\n    this.texture.image = { ...this.texture.image }; // See #20328.\n\n    this.depthBuffer = source.depthBuffer;\n    this.stencilBuffer = source.stencilBuffer;\n    this.depthTexture = source.depthTexture;\n\n    return this;\n  }\n\n  dispose() {\n    this.dispatchEvent({ type: \"dispose\" });\n  }\n}\n\nWebGLRenderTarget.prototype.isWebGLRenderTarget = true;\n\nclass WebGLMultipleRenderTargets extends WebGLRenderTarget {\n  constructor(width, height, count) {\n    super(width, height);\n\n    const texture = this.texture;\n\n    this.texture = [];\n\n    for (let i = 0; i < count; i++) {\n      this.texture[i] = texture.clone();\n    }\n  }\n\n  setSize(width, height, depth = 1) {\n    if (\n      this.width !== width ||\n      this.height !== height ||\n      this.depth !== depth\n    ) {\n      this.width = width;\n      this.height = height;\n      this.depth = depth;\n\n      for (let i = 0, il = this.texture.length; i < il; i++) {\n        this.texture[i].image.width = width;\n        this.texture[i].image.height = height;\n        this.texture[i].image.depth = depth;\n      }\n\n      this.dispose();\n    }\n\n    this.viewport.set(0, 0, width, height);\n    this.scissor.set(0, 0, width, height);\n\n    return this;\n  }\n\n  copy(source) {\n    this.dispose();\n\n    this.width = source.width;\n    this.height = source.height;\n    this.depth = source.depth;\n\n    this.viewport.set(0, 0, this.width, this.height);\n    this.scissor.set(0, 0, this.width, this.height);\n\n    this.depthBuffer = source.depthBuffer;\n    this.stencilBuffer = source.stencilBuffer;\n    this.depthTexture = source.depthTexture;\n\n    this.texture.length = 0;\n\n    for (let i = 0, il = source.texture.length; i < il; i++) {\n      this.texture[i] = source.texture[i].clone();\n    }\n\n    return this;\n  }\n}\n\nWebGLMultipleRenderTargets.prototype.isWebGLMultipleRenderTargets = true;\n\nclass WebGLMultisampleRenderTarget extends WebGLRenderTarget {\n  constructor(width, height, options) {\n    super(width, height, options);\n\n    this.samples = 4;\n  }\n\n  copy(source) {\n    super.copy.call(this, source);\n\n    this.samples = source.samples;\n\n    return this;\n  }\n}\n\nWebGLMultisampleRenderTarget.prototype.isWebGLMultisampleRenderTarget = true;\n\nclass Quaternion {\n  constructor(x = 0, y = 0, z = 0, w = 1) {\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this._w = w;\n  }\n\n  static slerp(qa, qb, qm, t) {\n    console.warn(\n      \"THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead.\"\n    );\n    return qm.slerpQuaternions(qa, qb, t);\n  }\n\n  static slerpFlat(dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t) {\n    // fuzz-free, array-based Quaternion SLERP operation\n\n    let x0 = src0[srcOffset0 + 0],\n      y0 = src0[srcOffset0 + 1],\n      z0 = src0[srcOffset0 + 2],\n      w0 = src0[srcOffset0 + 3];\n\n    const x1 = src1[srcOffset1 + 0],\n      y1 = src1[srcOffset1 + 1],\n      z1 = src1[srcOffset1 + 2],\n      w1 = src1[srcOffset1 + 3];\n\n    if (t === 0) {\n      dst[dstOffset + 0] = x0;\n      dst[dstOffset + 1] = y0;\n      dst[dstOffset + 2] = z0;\n      dst[dstOffset + 3] = w0;\n      return;\n    }\n\n    if (t === 1) {\n      dst[dstOffset + 0] = x1;\n      dst[dstOffset + 1] = y1;\n      dst[dstOffset + 2] = z1;\n      dst[dstOffset + 3] = w1;\n      return;\n    }\n\n    if (w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1) {\n      let s = 1 - t;\n      const cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n        dir = cos >= 0 ? 1 : -1,\n        sqrSin = 1 - cos * cos;\n\n      // Skip the Slerp for tiny steps to avoid numeric problems:\n      if (sqrSin > Number.EPSILON) {\n        const sin = Math.sqrt(sqrSin),\n          len = Math.atan2(sin, cos * dir);\n\n        s = Math.sin(s * len) / sin;\n        t = Math.sin(t * len) / sin;\n      }\n\n      const tDir = t * dir;\n\n      x0 = x0 * s + x1 * tDir;\n      y0 = y0 * s + y1 * tDir;\n      z0 = z0 * s + z1 * tDir;\n      w0 = w0 * s + w1 * tDir;\n\n      // Normalize in case we just did a lerp:\n      if (s === 1 - t) {\n        const f = 1 / Math.sqrt(x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0);\n\n        x0 *= f;\n        y0 *= f;\n        z0 *= f;\n        w0 *= f;\n      }\n    }\n\n    dst[dstOffset] = x0;\n    dst[dstOffset + 1] = y0;\n    dst[dstOffset + 2] = z0;\n    dst[dstOffset + 3] = w0;\n  }\n\n  static multiplyQuaternionsFlat(\n    dst,\n    dstOffset,\n    src0,\n    srcOffset0,\n    src1,\n    srcOffset1\n  ) {\n    const x0 = src0[srcOffset0];\n    const y0 = src0[srcOffset0 + 1];\n    const z0 = src0[srcOffset0 + 2];\n    const w0 = src0[srcOffset0 + 3];\n\n    const x1 = src1[srcOffset1];\n    const y1 = src1[srcOffset1 + 1];\n    const z1 = src1[srcOffset1 + 2];\n    const w1 = src1[srcOffset1 + 3];\n\n    dst[dstOffset] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n    dst[dstOffset + 1] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n    dst[dstOffset + 2] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n    dst[dstOffset + 3] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n    return dst;\n  }\n\n  get x() {\n    return this._x;\n  }\n\n  set x(value) {\n    this._x = value;\n    this._onChangeCallback();\n  }\n\n  get y() {\n    return this._y;\n  }\n\n  set y(value) {\n    this._y = value;\n    this._onChangeCallback();\n  }\n\n  get z() {\n    return this._z;\n  }\n\n  set z(value) {\n    this._z = value;\n    this._onChangeCallback();\n  }\n\n  get w() {\n    return this._w;\n  }\n\n  set w(value) {\n    this._w = value;\n    this._onChangeCallback();\n  }\n\n  set(x, y, z, w) {\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this._w = w;\n\n    this._onChangeCallback();\n\n    return this;\n  }\n\n  clone() {\n    return new this.constructor(this._x, this._y, this._z, this._w);\n  }\n\n  copy(quaternion) {\n    this._x = quaternion.x;\n    this._y = quaternion.y;\n    this._z = quaternion.z;\n    this._w = quaternion.w;\n\n    this._onChangeCallback();\n\n    return this;\n  }\n\n  setFromEuler(euler, update) {\n    if (!(euler && euler.isEuler)) {\n      throw new Error(\n        \"THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.\"\n      );\n    }\n\n    const x = euler._x,\n      y = euler._y,\n      z = euler._z,\n      order = euler._order;\n\n    // http://www.mathworks.com/matlabcentral/fileexchange/\n    // \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n    //\tcontent/SpinCalc.m\n\n    const cos = Math.cos;\n    const sin = Math.sin;\n\n    const c1 = cos(x / 2);\n    const c2 = cos(y / 2);\n    const c3 = cos(z / 2);\n\n    const s1 = sin(x / 2);\n    const s2 = sin(y / 2);\n    const s3 = sin(z / 2);\n\n    switch (order) {\n      case \"XYZ\":\n        this._x = s1 * c2 * c3 + c1 * s2 * s3;\n        this._y = c1 * s2 * c3 - s1 * c2 * s3;\n        this._z = c1 * c2 * s3 + s1 * s2 * c3;\n        this._w = c1 * c2 * c3 - s1 * s2 * s3;\n        break;\n\n      case \"YXZ\":\n        this._x = s1 * c2 * c3 + c1 * s2 * s3;\n        this._y = c1 * s2 * c3 - s1 * c2 * s3;\n        this._z = c1 * c2 * s3 - s1 * s2 * c3;\n        this._w = c1 * c2 * c3 + s1 * s2 * s3;\n        break;\n\n      case \"ZXY\":\n        this._x = s1 * c2 * c3 - c1 * s2 * s3;\n        this._y = c1 * s2 * c3 + s1 * c2 * s3;\n        this._z = c1 * c2 * s3 + s1 * s2 * c3;\n        this._w = c1 * c2 * c3 - s1 * s2 * s3;\n        break;\n\n      case \"ZYX\":\n        this._x = s1 * c2 * c3 - c1 * s2 * s3;\n        this._y = c1 * s2 * c3 + s1 * c2 * s3;\n        this._z = c1 * c2 * s3 - s1 * s2 * c3;\n        this._w = c1 * c2 * c3 + s1 * s2 * s3;\n        break;\n\n      case \"YZX\":\n        this._x = s1 * c2 * c3 + c1 * s2 * s3;\n        this._y = c1 * s2 * c3 + s1 * c2 * s3;\n        this._z = c1 * c2 * s3 - s1 * s2 * c3;\n        this._w = c1 * c2 * c3 - s1 * s2 * s3;\n        break;\n\n      case \"XZY\":\n        this._x = s1 * c2 * c3 - c1 * s2 * s3;\n        this._y = c1 * s2 * c3 - s1 * c2 * s3;\n        this._z = c1 * c2 * s3 + s1 * s2 * c3;\n        this._w = c1 * c2 * c3 + s1 * s2 * s3;\n        break;\n\n      default:\n        console.warn(\n          \"THREE.Quaternion: .setFromEuler() encountered an unknown order: \" +\n            order\n        );\n    }\n\n    if (update !== false) this._onChangeCallback();\n\n    return this;\n  }\n\n  setFromAxisAngle(axis, angle) {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n    // assumes axis is normalized\n\n    const halfAngle = angle / 2,\n      s = Math.sin(halfAngle);\n\n    this._x = axis.x * s;\n    this._y = axis.y * s;\n    this._z = axis.z * s;\n    this._w = Math.cos(halfAngle);\n\n    this._onChangeCallback();\n\n    return this;\n  }\n\n  setFromRotationMatrix(m) {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n    const te = m.elements,\n      m11 = te[0],\n      m12 = te[4],\n      m13 = te[8],\n      m21 = te[1],\n      m22 = te[5],\n      m23 = te[9],\n      m31 = te[2],\n      m32 = te[6],\n      m33 = te[10],\n      trace = m11 + m22 + m33;\n\n    if (trace > 0) {\n      const s = 0.5 / Math.sqrt(trace + 1.0);\n\n      this._w = 0.25 / s;\n      this._x = (m32 - m23) * s;\n      this._y = (m13 - m31) * s;\n      this._z = (m21 - m12) * s;\n    } else if (m11 > m22 && m11 > m33) {\n      const s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\n\n      this._w = (m32 - m23) / s;\n      this._x = 0.25 * s;\n      this._y = (m12 + m21) / s;\n      this._z = (m13 + m31) / s;\n    } else if (m22 > m33) {\n      const s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\n\n      this._w = (m13 - m31) / s;\n      this._x = (m12 + m21) / s;\n      this._y = 0.25 * s;\n      this._z = (m23 + m32) / s;\n    } else {\n      const s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\n\n      this._w = (m21 - m12) / s;\n      this._x = (m13 + m31) / s;\n      this._y = (m23 + m32) / s;\n      this._z = 0.25 * s;\n    }\n\n    this._onChangeCallback();\n\n    return this;\n  }\n\n  setFromUnitVectors(vFrom, vTo) {\n    // assumes direction vectors vFrom and vTo are normalized\n\n    let r = vFrom.dot(vTo) + 1;\n\n    if (r < Number.EPSILON) {\n      // vFrom and vTo point in opposite directions\n\n      r = 0;\n\n      if (Math.abs(vFrom.x) > Math.abs(vFrom.z)) {\n        this._x = -vFrom.y;\n        this._y = vFrom.x;\n        this._z = 0;\n        this._w = r;\n      } else {\n        this._x = 0;\n        this._y = -vFrom.z;\n        this._z = vFrom.y;\n        this._w = r;\n      }\n    } else {\n      // crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n      this._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n      this._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n      this._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n      this._w = r;\n    }\n\n    return this.normalize();\n  }\n\n  angleTo(q) {\n    return 2 * Math.acos(Math.abs(clamp(this.dot(q), -1, 1)));\n  }\n\n  rotateTowards(q, step) {\n    const angle = this.angleTo(q);\n\n    if (angle === 0) return this;\n\n    const t = Math.min(1, step / angle);\n\n    this.slerp(q, t);\n\n    return this;\n  }\n\n  identity() {\n    return this.set(0, 0, 0, 1);\n  }\n\n  invert() {\n    // quaternion is assumed to have unit length\n\n    return this.conjugate();\n  }\n\n  conjugate() {\n    this._x *= -1;\n    this._y *= -1;\n    this._z *= -1;\n\n    this._onChangeCallback();\n\n    return this;\n  }\n\n  dot(v) {\n    return this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n  }\n\n  lengthSq() {\n    return (\n      this._x * this._x +\n      this._y * this._y +\n      this._z * this._z +\n      this._w * this._w\n    );\n  }\n\n  length() {\n    return Math.sqrt(\n      this._x * this._x +\n        this._y * this._y +\n        this._z * this._z +\n        this._w * this._w\n    );\n  }\n\n  normalize() {\n    let l = this.length();\n\n    if (l === 0) {\n      this._x = 0;\n      this._y = 0;\n      this._z = 0;\n      this._w = 1;\n    } else {\n      l = 1 / l;\n\n      this._x = this._x * l;\n      this._y = this._y * l;\n      this._z = this._z * l;\n      this._w = this._w * l;\n    }\n\n    this._onChangeCallback();\n\n    return this;\n  }\n\n  multiply(q, p) {\n    if (p !== undefined) {\n      console.warn(\n        \"THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.\"\n      );\n      return this.multiplyQuaternions(q, p);\n    }\n\n    return this.multiplyQuaternions(this, q);\n  }\n\n  premultiply(q) {\n    return this.multiplyQuaternions(q, this);\n  }\n\n  multiplyQuaternions(a, b) {\n    // from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n    const qax = a._x,\n      qay = a._y,\n      qaz = a._z,\n      qaw = a._w;\n    const qbx = b._x,\n      qby = b._y,\n      qbz = b._z,\n      qbw = b._w;\n\n    this._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n    this._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n    this._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n    this._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n    this._onChangeCallback();\n\n    return this;\n  }\n\n  slerp(qb, t) {\n    if (t === 0) return this;\n    if (t === 1) return this.copy(qb);\n\n    const x = this._x,\n      y = this._y,\n      z = this._z,\n      w = this._w;\n\n    // http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n    let cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n    if (cosHalfTheta < 0) {\n      this._w = -qb._w;\n      this._x = -qb._x;\n      this._y = -qb._y;\n      this._z = -qb._z;\n\n      cosHalfTheta = -cosHalfTheta;\n    } else {\n      this.copy(qb);\n    }\n\n    if (cosHalfTheta >= 1.0) {\n      this._w = w;\n      this._x = x;\n      this._y = y;\n      this._z = z;\n\n      return this;\n    }\n\n    const sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n    if (sqrSinHalfTheta <= Number.EPSILON) {\n      const s = 1 - t;\n      this._w = s * w + t * this._w;\n      this._x = s * x + t * this._x;\n      this._y = s * y + t * this._y;\n      this._z = s * z + t * this._z;\n\n      this.normalize();\n      this._onChangeCallback();\n\n      return this;\n    }\n\n    const sinHalfTheta = Math.sqrt(sqrSinHalfTheta);\n    const halfTheta = Math.atan2(sinHalfTheta, cosHalfTheta);\n    const ratioA = Math.sin((1 - t) * halfTheta) / sinHalfTheta,\n      ratioB = Math.sin(t * halfTheta) / sinHalfTheta;\n\n    this._w = w * ratioA + this._w * ratioB;\n    this._x = x * ratioA + this._x * ratioB;\n    this._y = y * ratioA + this._y * ratioB;\n    this._z = z * ratioA + this._z * ratioB;\n\n    this._onChangeCallback();\n\n    return this;\n  }\n\n  slerpQuaternions(qa, qb, t) {\n    this.copy(qa).slerp(qb, t);\n  }\n\n  random() {\n    // Derived from http://planning.cs.uiuc.edu/node198.html\n    // Note, this source uses w, x, y, z ordering,\n    // so we swap the order below.\n\n    const u1 = Math.random();\n    const sqrt1u1 = Math.sqrt(1 - u1);\n    const sqrtu1 = Math.sqrt(u1);\n\n    const u2 = 2 * Math.PI * Math.random();\n\n    const u3 = 2 * Math.PI * Math.random();\n\n    return this.set(\n      sqrt1u1 * Math.cos(u2),\n      sqrtu1 * Math.sin(u3),\n      sqrtu1 * Math.cos(u3),\n      sqrt1u1 * Math.sin(u2)\n    );\n  }\n\n  equals(quaternion) {\n    return (\n      quaternion._x === this._x &&\n      quaternion._y === this._y &&\n      quaternion._z === this._z &&\n      quaternion._w === this._w\n    );\n  }\n\n  fromArray(array, offset = 0) {\n    this._x = array[offset];\n    this._y = array[offset + 1];\n    this._z = array[offset + 2];\n    this._w = array[offset + 3];\n\n    this._onChangeCallback();\n\n    return this;\n  }\n\n  toArray(array = [], offset = 0) {\n    array[offset] = this._x;\n    array[offset + 1] = this._y;\n    array[offset + 2] = this._z;\n    array[offset + 3] = this._w;\n\n    return array;\n  }\n\n  fromBufferAttribute(attribute, index) {\n    this._x = attribute.getX(index);\n    this._y = attribute.getY(index);\n    this._z = attribute.getZ(index);\n    this._w = attribute.getW(index);\n\n    return this;\n  }\n\n  _onChange(callback) {\n    this._onChangeCallback = callback;\n\n    return this;\n  }\n\n  _onChangeCallback() {}\n}\n\nQuaternion.prototype.isQuaternion = true;\n\nclass Vector3 {\n  constructor(x = 0, y = 0, z = 0) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n  }\n\n  set(x, y, z) {\n    if (z === undefined) z = this.z; // sprite.scale.set(x,y)\n\n    this.x = x;\n    this.y = y;\n    this.z = z;\n\n    return this;\n  }\n\n  setScalar(scalar) {\n    this.x = scalar;\n    this.y = scalar;\n    this.z = scalar;\n\n    return this;\n  }\n\n  setX(x) {\n    this.x = x;\n\n    return this;\n  }\n\n  setY(y) {\n    this.y = y;\n\n    return this;\n  }\n\n  setZ(z) {\n    this.z = z;\n\n    return this;\n  }\n\n  setComponent(index, value) {\n    switch (index) {\n      case 0:\n        this.x = value;\n        break;\n      case 1:\n        this.y = value;\n        break;\n      case 2:\n        this.z = value;\n        break;\n      default:\n        throw new Error(\"index is out of range: \" + index);\n    }\n\n    return this;\n  }\n\n  getComponent(index) {\n    switch (index) {\n      case 0:\n        return this.x;\n      case 1:\n        return this.y;\n      case 2:\n        return this.z;\n      default:\n        throw new Error(\"index is out of range: \" + index);\n    }\n  }\n\n  clone() {\n    return new this.constructor(this.x, this.y, this.z);\n  }\n\n  copy(v) {\n    this.x = v.x;\n    this.y = v.y;\n    this.z = v.z;\n\n    return this;\n  }\n\n  add(v, w) {\n    if (w !== undefined) {\n      console.warn(\n        \"THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.\"\n      );\n      return this.addVectors(v, w);\n    }\n\n    this.x += v.x;\n    this.y += v.y;\n    this.z += v.z;\n\n    return this;\n  }\n\n  addScalar(s) {\n    this.x += s;\n    this.y += s;\n    this.z += s;\n\n    return this;\n  }\n\n  addVectors(a, b) {\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n    this.z = a.z + b.z;\n\n    return this;\n  }\n\n  addScaledVector(v, s) {\n    this.x += v.x * s;\n    this.y += v.y * s;\n    this.z += v.z * s;\n\n    return this;\n  }\n\n  sub(v, w) {\n    if (w !== undefined) {\n      console.warn(\n        \"THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\"\n      );\n      return this.subVectors(v, w);\n    }\n\n    this.x -= v.x;\n    this.y -= v.y;\n    this.z -= v.z;\n\n    return this;\n  }\n\n  subScalar(s) {\n    this.x -= s;\n    this.y -= s;\n    this.z -= s;\n\n    return this;\n  }\n\n  subVectors(a, b) {\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n    this.z = a.z - b.z;\n\n    return this;\n  }\n\n  multiply(v, w) {\n    if (w !== undefined) {\n      console.warn(\n        \"THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.\"\n      );\n      return this.multiplyVectors(v, w);\n    }\n\n    this.x *= v.x;\n    this.y *= v.y;\n    this.z *= v.z;\n\n    return this;\n  }\n\n  multiplyScalar(scalar) {\n    this.x *= scalar;\n    this.y *= scalar;\n    this.z *= scalar;\n\n    return this;\n  }\n\n  multiplyVectors(a, b) {\n    this.x = a.x * b.x;\n    this.y = a.y * b.y;\n    this.z = a.z * b.z;\n\n    return this;\n  }\n\n  applyEuler(euler) {\n    if (!(euler && euler.isEuler)) {\n      console.error(\n        \"THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.\"\n      );\n    }\n\n    return this.applyQuaternion(_quaternion$4.setFromEuler(euler));\n  }\n\n  applyAxisAngle(axis, angle) {\n    return this.applyQuaternion(_quaternion$4.setFromAxisAngle(axis, angle));\n  }\n\n  applyMatrix3(m) {\n    const x = this.x,\n      y = this.y,\n      z = this.z;\n    const e = m.elements;\n\n    this.x = e[0] * x + e[3] * y + e[6] * z;\n    this.y = e[1] * x + e[4] * y + e[7] * z;\n    this.z = e[2] * x + e[5] * y + e[8] * z;\n\n    return this;\n  }\n\n  applyNormalMatrix(m) {\n    return this.applyMatrix3(m).normalize();\n  }\n\n  applyMatrix4(m) {\n    const x = this.x,\n      y = this.y,\n      z = this.z;\n    const e = m.elements;\n\n    const w = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]);\n\n    this.x = (e[0] * x + e[4] * y + e[8] * z + e[12]) * w;\n    this.y = (e[1] * x + e[5] * y + e[9] * z + e[13]) * w;\n    this.z = (e[2] * x + e[6] * y + e[10] * z + e[14]) * w;\n\n    return this;\n  }\n\n  applyQuaternion(q) {\n    const x = this.x,\n      y = this.y,\n      z = this.z;\n    const qx = q.x,\n      qy = q.y,\n      qz = q.z,\n      qw = q.w;\n\n    // calculate quat * vector\n\n    const ix = qw * x + qy * z - qz * y;\n    const iy = qw * y + qz * x - qx * z;\n    const iz = qw * z + qx * y - qy * x;\n    const iw = -qx * x - qy * y - qz * z;\n\n    // calculate result * inverse quat\n\n    this.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    this.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    this.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n\n    return this;\n  }\n\n  project(camera) {\n    return this.applyMatrix4(camera.matrixWorldInverse).applyMatrix4(\n      camera.projectionMatrix\n    );\n  }\n\n  unproject(camera) {\n    return this.applyMatrix4(camera.projectionMatrixInverse).applyMatrix4(\n      camera.matrixWorld\n    );\n  }\n\n  transformDirection(m) {\n    // input: THREE.Matrix4 affine matrix\n    // vector interpreted as a direction\n\n    const x = this.x,\n      y = this.y,\n      z = this.z;\n    const e = m.elements;\n\n    this.x = e[0] * x + e[4] * y + e[8] * z;\n    this.y = e[1] * x + e[5] * y + e[9] * z;\n    this.z = e[2] * x + e[6] * y + e[10] * z;\n\n    return this.normalize();\n  }\n\n  divide(v) {\n    this.x /= v.x;\n    this.y /= v.y;\n    this.z /= v.z;\n\n    return this;\n  }\n\n  divideScalar(scalar) {\n    return this.multiplyScalar(1 / scalar);\n  }\n\n  min(v) {\n    this.x = Math.min(this.x, v.x);\n    this.y = Math.min(this.y, v.y);\n    this.z = Math.min(this.z, v.z);\n\n    return this;\n  }\n\n  max(v) {\n    this.x = Math.max(this.x, v.x);\n    this.y = Math.max(this.y, v.y);\n    this.z = Math.max(this.z, v.z);\n\n    return this;\n  }\n\n  clamp(min, max) {\n    // assumes min < max, componentwise\n\n    this.x = Math.max(min.x, Math.min(max.x, this.x));\n    this.y = Math.max(min.y, Math.min(max.y, this.y));\n    this.z = Math.max(min.z, Math.min(max.z, this.z));\n\n    return this;\n  }\n\n  clampScalar(minVal, maxVal) {\n    this.x = Math.max(minVal, Math.min(maxVal, this.x));\n    this.y = Math.max(minVal, Math.min(maxVal, this.y));\n    this.z = Math.max(minVal, Math.min(maxVal, this.z));\n\n    return this;\n  }\n\n  clampLength(min, max) {\n    const length = this.length();\n\n    return this.divideScalar(length || 1).multiplyScalar(\n      Math.max(min, Math.min(max, length))\n    );\n  }\n\n  floor() {\n    this.x = Math.floor(this.x);\n    this.y = Math.floor(this.y);\n    this.z = Math.floor(this.z);\n\n    return this;\n  }\n\n  ceil() {\n    this.x = Math.ceil(this.x);\n    this.y = Math.ceil(this.y);\n    this.z = Math.ceil(this.z);\n\n    return this;\n  }\n\n  round() {\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    this.z = Math.round(this.z);\n\n    return this;\n  }\n\n  roundToZero() {\n    this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n    this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n\n    return this;\n  }\n\n  negate() {\n    this.x = -this.x;\n    this.y = -this.y;\n    this.z = -this.z;\n\n    return this;\n  }\n\n  dot(v) {\n    return this.x * v.x + this.y * v.y + this.z * v.z;\n  }\n\n  // TODO lengthSquared?\n\n  lengthSq() {\n    return this.x * this.x + this.y * this.y + this.z * this.z;\n  }\n\n  length() {\n    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n  }\n\n  manhattanLength() {\n    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\n  }\n\n  normalize() {\n    return this.divideScalar(this.length() || 1);\n  }\n\n  setLength(length) {\n    return this.normalize().multiplyScalar(length);\n  }\n\n  lerp(v, alpha) {\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n    this.z += (v.z - this.z) * alpha;\n\n    return this;\n  }\n\n  lerpVectors(v1, v2, alpha) {\n    this.x = v1.x + (v2.x - v1.x) * alpha;\n    this.y = v1.y + (v2.y - v1.y) * alpha;\n    this.z = v1.z + (v2.z - v1.z) * alpha;\n\n    return this;\n  }\n\n  cross(v, w) {\n    if (w !== undefined) {\n      console.warn(\n        \"THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.\"\n      );\n      return this.crossVectors(v, w);\n    }\n\n    return this.crossVectors(this, v);\n  }\n\n  crossVectors(a, b) {\n    const ax = a.x,\n      ay = a.y,\n      az = a.z;\n    const bx = b.x,\n      by = b.y,\n      bz = b.z;\n\n    this.x = ay * bz - az * by;\n    this.y = az * bx - ax * bz;\n    this.z = ax * by - ay * bx;\n\n    return this;\n  }\n\n  projectOnVector(v) {\n    const denominator = v.lengthSq();\n\n    if (denominator === 0) return this.set(0, 0, 0);\n\n    const scalar = v.dot(this) / denominator;\n\n    return this.copy(v).multiplyScalar(scalar);\n  }\n\n  projectOnPlane(planeNormal) {\n    _vector$c.copy(this).projectOnVector(planeNormal);\n\n    return this.sub(_vector$c);\n  }\n\n  reflect(normal) {\n    // reflect incident vector off plane orthogonal to normal\n    // normal is assumed to have unit length\n\n    return this.sub(\n      _vector$c.copy(normal).multiplyScalar(2 * this.dot(normal))\n    );\n  }\n\n  angleTo(v) {\n    const denominator = Math.sqrt(this.lengthSq() * v.lengthSq());\n\n    if (denominator === 0) return Math.PI / 2;\n\n    const theta = this.dot(v) / denominator;\n\n    // clamp, to handle numerical problems\n\n    return Math.acos(clamp(theta, -1, 1));\n  }\n\n  distanceTo(v) {\n    return Math.sqrt(this.distanceToSquared(v));\n  }\n\n  distanceToSquared(v) {\n    const dx = this.x - v.x,\n      dy = this.y - v.y,\n      dz = this.z - v.z;\n\n    return dx * dx + dy * dy + dz * dz;\n  }\n\n  manhattanDistanceTo(v) {\n    return (\n      Math.abs(this.x - v.x) + Math.abs(this.y - v.y) + Math.abs(this.z - v.z)\n    );\n  }\n\n  setFromSpherical(s) {\n    return this.setFromSphericalCoords(s.radius, s.phi, s.theta);\n  }\n\n  setFromSphericalCoords(radius, phi, theta) {\n    const sinPhiRadius = Math.sin(phi) * radius;\n\n    this.x = sinPhiRadius * Math.sin(theta);\n    this.y = Math.cos(phi) * radius;\n    this.z = sinPhiRadius * Math.cos(theta);\n\n    return this;\n  }\n\n  setFromCylindrical(c) {\n    return this.setFromCylindricalCoords(c.radius, c.theta, c.y);\n  }\n\n  setFromCylindricalCoords(radius, theta, y) {\n    this.x = radius * Math.sin(theta);\n    this.y = y;\n    this.z = radius * Math.cos(theta);\n\n    return this;\n  }\n\n  setFromMatrixPosition(m) {\n    const e = m.elements;\n\n    this.x = e[12];\n    this.y = e[13];\n    this.z = e[14];\n\n    return this;\n  }\n\n  setFromMatrixScale(m) {\n    const sx = this.setFromMatrixColumn(m, 0).length();\n    const sy = this.setFromMatrixColumn(m, 1).length();\n    const sz = this.setFromMatrixColumn(m, 2).length();\n\n    this.x = sx;\n    this.y = sy;\n    this.z = sz;\n\n    return this;\n  }\n\n  setFromMatrixColumn(m, index) {\n    return this.fromArray(m.elements, index * 4);\n  }\n\n  setFromMatrix3Column(m, index) {\n    return this.fromArray(m.elements, index * 3);\n  }\n\n  equals(v) {\n    return v.x === this.x && v.y === this.y && v.z === this.z;\n  }\n\n  fromArray(array, offset = 0) {\n    this.x = array[offset];\n    this.y = array[offset + 1];\n    this.z = array[offset + 2];\n\n    return this;\n  }\n\n  toArray(array = [], offset = 0) {\n    array[offset] = this.x;\n    array[offset + 1] = this.y;\n    array[offset + 2] = this.z;\n\n    return array;\n  }\n\n  fromBufferAttribute(attribute, index, offset) {\n    if (offset !== undefined) {\n      console.warn(\n        \"THREE.Vector3: offset has been removed from .fromBufferAttribute().\"\n      );\n    }\n\n    this.x = attribute.getX(index);\n    this.y = attribute.getY(index);\n    this.z = attribute.getZ(index);\n\n    return this;\n  }\n\n  random() {\n    this.x = Math.random();\n    this.y = Math.random();\n    this.z = Math.random();\n\n    return this;\n  }\n\n  randomDirection() {\n    // Derived from https://mathworld.wolfram.com/SpherePointPicking.html\n\n    const u = (Math.random() - 0.5) * 2;\n    const t = Math.random() * Math.PI * 2;\n    const f = Math.sqrt(1 - u ** 2);\n\n    this.x = f * Math.cos(t);\n    this.y = f * Math.sin(t);\n    this.z = u;\n\n    return this;\n  }\n\n  *[Symbol.iterator]() {\n    yield this.x;\n    yield this.y;\n    yield this.z;\n  }\n}\n\nVector3.prototype.isVector3 = true;\n\nconst _vector$c = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n  constructor(\n    min = new Vector3(+Infinity, +Infinity, +Infinity),\n    max = new Vector3(-Infinity, -Infinity, -Infinity)\n  ) {\n    this.min = min;\n    this.max = max;\n  }\n\n  set(min, max) {\n    this.min.copy(min);\n    this.max.copy(max);\n\n    return this;\n  }\n\n  setFromArray(array) {\n    let minX = +Infinity;\n    let minY = +Infinity;\n    let minZ = +Infinity;\n\n    let maxX = -Infinity;\n    let maxY = -Infinity;\n    let maxZ = -Infinity;\n\n    for (let i = 0, l = array.length; i < l; i += 3) {\n      const x = array[i];\n      const y = array[i + 1];\n      const z = array[i + 2];\n\n      if (x < minX) minX = x;\n      if (y < minY) minY = y;\n      if (z < minZ) minZ = z;\n\n      if (x > maxX) maxX = x;\n      if (y > maxY) maxY = y;\n      if (z > maxZ) maxZ = z;\n    }\n\n    this.min.set(minX, minY, minZ);\n    this.max.set(maxX, maxY, maxZ);\n\n    return this;\n  }\n\n  setFromBufferAttribute(attribute) {\n    let minX = +Infinity;\n    let minY = +Infinity;\n    let minZ = +Infinity;\n\n    let maxX = -Infinity;\n    let maxY = -Infinity;\n    let maxZ = -Infinity;\n\n    for (let i = 0, l = attribute.count; i < l; i++) {\n      const x = attribute.getX(i);\n      const y = attribute.getY(i);\n      const z = attribute.getZ(i);\n\n      if (x < minX) minX = x;\n      if (y < minY) minY = y;\n      if (z < minZ) minZ = z;\n\n      if (x > maxX) maxX = x;\n      if (y > maxY) maxY = y;\n      if (z > maxZ) maxZ = z;\n    }\n\n    this.min.set(minX, minY, minZ);\n    this.max.set(maxX, maxY, maxZ);\n\n    return this;\n  }\n\n  setFromPoints(points) {\n    this.makeEmpty();\n\n    for (let i = 0, il = points.length; i < il; i++) {\n      this.expandByPoint(points[i]);\n    }\n\n    return this;\n  }\n\n  setFromCenterAndSize(center, size) {\n    const halfSize = _vector$b.copy(size).multiplyScalar(0.5);\n\n    this.min.copy(center).sub(halfSize);\n    this.max.copy(center).add(halfSize);\n\n    return this;\n  }\n\n  setFromObject(object) {\n    this.makeEmpty();\n\n    return this.expandByObject(object);\n  }\n\n  clone() {\n    return new this.constructor().copy(this);\n  }\n\n  copy(box) {\n    this.min.copy(box.min);\n    this.max.copy(box.max);\n\n    return this;\n  }\n\n  makeEmpty() {\n    this.min.x = this.min.y = this.min.z = +Infinity;\n    this.max.x = this.max.y = this.max.z = -Infinity;\n\n    return this;\n  }\n\n  isEmpty() {\n    // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n    return (\n      this.max.x < this.min.x ||\n      this.max.y < this.min.y ||\n      this.max.z < this.min.z\n    );\n  }\n\n  getCenter(target) {\n    return this.isEmpty()\n      ? target.set(0, 0, 0)\n      : target.addVectors(this.min, this.max).multiplyScalar(0.5);\n  }\n\n  getSize(target) {\n    return this.isEmpty()\n      ? target.set(0, 0, 0)\n      : target.subVectors(this.max, this.min);\n  }\n\n  expandByPoint(point) {\n    this.min.min(point);\n    this.max.max(point);\n\n    return this;\n  }\n\n  expandByVector(vector) {\n    this.min.sub(vector);\n    this.max.add(vector);\n\n    return this;\n  }\n\n  expandByScalar(scalar) {\n    this.min.addScalar(-scalar);\n    this.max.addScalar(scalar);\n\n    return this;\n  }\n\n  expandByObject(object) {\n    // Computes the world-axis-aligned bounding box of an object (including its children),\n    // accounting for both the object's, and children's, world transforms\n\n    object.updateWorldMatrix(false, false);\n\n    const geometry = object.geometry;\n\n    if (geometry !== undefined) {\n      if (geometry.boundingBox === null) {\n        geometry.computeBoundingBox();\n      }\n\n      _box$3.copy(geometry.boundingBox);\n      _box$3.applyMatrix4(object.matrixWorld);\n\n      this.union(_box$3);\n    }\n\n    const children = object.children;\n\n    for (let i = 0, l = children.length; i < l; i++) {\n      this.expandByObject(children[i]);\n    }\n\n    return this;\n  }\n\n  containsPoint(point) {\n    return point.x < this.min.x ||\n      point.x > this.max.x ||\n      point.y < this.min.y ||\n      point.y > this.max.y ||\n      point.z < this.min.z ||\n      point.z > this.max.z\n      ? false\n      : true;\n  }\n\n  containsBox(box) {\n    return (\n      this.min.x <= box.min.x &&\n      box.max.x <= this.max.x &&\n      this.min.y <= box.min.y &&\n      box.max.y <= this.max.y &&\n      this.min.z <= box.min.z &&\n      box.max.z <= this.max.z\n    );\n  }\n\n  getParameter(point, target) {\n    // This can potentially have a divide by zero if the box\n    // has a size dimension of 0.\n\n    return target.set(\n      (point.x - this.min.x) / (this.max.x - this.min.x),\n      (point.y - this.min.y) / (this.max.y - this.min.y),\n      (point.z - this.min.z) / (this.max.z - this.min.z)\n    );\n  }\n\n  intersectsBox(box) {\n    // using 6 splitting planes to rule out intersections.\n    return box.max.x < this.min.x ||\n      box.min.x > this.max.x ||\n      box.max.y < this.min.y ||\n      box.min.y > this.max.y ||\n      box.max.z < this.min.z ||\n      box.min.z > this.max.z\n      ? false\n      : true;\n  }\n\n  intersectsSphere(sphere) {\n    // Find the point on the AABB closest to the sphere center.\n    this.clampPoint(sphere.center, _vector$b);\n\n    // If that point is inside the sphere, the AABB and sphere intersect.\n    return (\n      _vector$b.distanceToSquared(sphere.center) <=\n      sphere.radius * sphere.radius\n    );\n  }\n\n  intersectsPlane(plane) {\n    // We compute the minimum and maximum dot product values. If those values\n    // are on the same side (back or front) of the plane, then there is no intersection.\n\n    let min, max;\n\n    if (plane.normal.x > 0) {\n      min = plane.normal.x * this.min.x;\n      max = plane.normal.x * this.max.x;\n    } else {\n      min = plane.normal.x * this.max.x;\n      max = plane.normal.x * this.min.x;\n    }\n\n    if (plane.normal.y > 0) {\n      min += plane.normal.y * this.min.y;\n      max += plane.normal.y * this.max.y;\n    } else {\n      min += plane.normal.y * this.max.y;\n      max += plane.normal.y * this.min.y;\n    }\n\n    if (plane.normal.z > 0) {\n      min += plane.normal.z * this.min.z;\n      max += plane.normal.z * this.max.z;\n    } else {\n      min += plane.normal.z * this.max.z;\n      max += plane.normal.z * this.min.z;\n    }\n\n    return min <= -plane.constant && max >= -plane.constant;\n  }\n\n  intersectsTriangle(triangle) {\n    if (this.isEmpty()) {\n      return false;\n    }\n\n    // compute box center and extents\n    this.getCenter(_center);\n    _extents.subVectors(this.max, _center);\n\n    // translate triangle to aabb origin\n    _v0$2.subVectors(triangle.a, _center);\n    _v1$7.subVectors(triangle.b, _center);\n    _v2$3.subVectors(triangle.c, _center);\n\n    // compute edge vectors for triangle\n    _f0.subVectors(_v1$7, _v0$2);\n    _f1.subVectors(_v2$3, _v1$7);\n    _f2.subVectors(_v0$2, _v2$3);\n\n    // test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n    // make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n    // axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n    let axes = [\n      0,\n      -_f0.z,\n      _f0.y,\n      0,\n      -_f1.z,\n      _f1.y,\n      0,\n      -_f2.z,\n      _f2.y,\n      _f0.z,\n      0,\n      -_f0.x,\n      _f1.z,\n      0,\n      -_f1.x,\n      _f2.z,\n      0,\n      -_f2.x,\n      -_f0.y,\n      _f0.x,\n      0,\n      -_f1.y,\n      _f1.x,\n      0,\n      -_f2.y,\n      _f2.x,\n      0,\n    ];\n    if (!satForAxes(axes, _v0$2, _v1$7, _v2$3, _extents)) {\n      return false;\n    }\n\n    // test 3 face normals from the aabb\n    axes = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n    if (!satForAxes(axes, _v0$2, _v1$7, _v2$3, _extents)) {\n      return false;\n    }\n\n    // finally testing the face normal of the triangle\n    // use already existing triangle edge vectors here\n    _triangleNormal.crossVectors(_f0, _f1);\n    axes = [_triangleNormal.x, _triangleNormal.y, _triangleNormal.z];\n\n    return satForAxes(axes, _v0$2, _v1$7, _v2$3, _extents);\n  }\n\n  clampPoint(point, target) {\n    return target.copy(point).clamp(this.min, this.max);\n  }\n\n  distanceToPoint(point) {\n    const clampedPoint = _vector$b.copy(point).clamp(this.min, this.max);\n\n    return clampedPoint.sub(point).length();\n  }\n\n  getBoundingSphere(target) {\n    this.getCenter(target.center);\n\n    target.radius = this.getSize(_vector$b).length() * 0.5;\n\n    return target;\n  }\n\n  intersect(box) {\n    this.min.max(box.min);\n    this.max.min(box.max);\n\n    // ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n    if (this.isEmpty()) this.makeEmpty();\n\n    return this;\n  }\n\n  union(box) {\n    this.min.min(box.min);\n    this.max.max(box.max);\n\n    return this;\n  }\n\n  applyMatrix4(matrix) {\n    // transform of empty box is an empty box.\n    if (this.isEmpty()) return this;\n\n    // NOTE: I am using a binary pattern to specify all 2^3 combinations below\n    _points[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(matrix); // 000\n    _points[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(matrix); // 001\n    _points[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(matrix); // 010\n    _points[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(matrix); // 011\n    _points[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(matrix); // 100\n    _points[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(matrix); // 101\n    _points[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(matrix); // 110\n    _points[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(matrix); // 111\n\n    this.setFromPoints(_points);\n\n    return this;\n  }\n\n  translate(offset) {\n    this.min.add(offset);\n    this.max.add(offset);\n\n    return this;\n  }\n\n  equals(box) {\n    return box.min.equals(this.min) && box.max.equals(this.max);\n  }\n}\n\nBox3.prototype.isBox3 = true;\n\nconst _points = [\n  /*@__PURE__*/ new Vector3(),\n  /*@__PURE__*/ new Vector3(),\n  /*@__PURE__*/ new Vector3(),\n  /*@__PURE__*/ new Vector3(),\n  /*@__PURE__*/ new Vector3(),\n  /*@__PURE__*/ new Vector3(),\n  /*@__PURE__*/ new Vector3(),\n  /*@__PURE__*/ new Vector3(),\n];\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\n\nconst _box$3 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes(axes, v0, v1, v2, extents) {\n  for (let i = 0, j = axes.length - 3; i <= j; i += 3) {\n    _testAxis.fromArray(axes, i);\n    // project the aabb onto the seperating axis\n    const r =\n      extents.x * Math.abs(_testAxis.x) +\n      extents.y * Math.abs(_testAxis.y) +\n      extents.z * Math.abs(_testAxis.z);\n    // project all 3 vertices of the triangle onto the seperating axis\n    const p0 = v0.dot(_testAxis);\n    const p1 = v1.dot(_testAxis);\n    const p2 = v2.dot(_testAxis);\n    // actual test, basically see if either of the most extreme of the triangle points intersects r\n    if (Math.max(-Math.max(p0, p1, p2), Math.min(p0, p1, p2)) > r) {\n      // points of the projected triangle are outside the projected half-length of the aabb\n      // the axis is seperating and we can exit\n      return false;\n    }\n  }\n\n  return true;\n}\n\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _toFarthestPoint = /*@__PURE__*/ new Vector3();\nconst _toPoint = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n  constructor(center = new Vector3(), radius = -1) {\n    this.center = center;\n    this.radius = radius;\n  }\n\n  set(center, radius) {\n    this.center.copy(center);\n    this.radius = radius;\n\n    return this;\n  }\n\n  setFromPoints(points, optionalCenter) {\n    const center = this.center;\n\n    if (optionalCenter !== undefined) {\n      center.copy(optionalCenter);\n    } else {\n      _box$2.setFromPoints(points).getCenter(center);\n    }\n\n    let maxRadiusSq = 0;\n\n    for (let i = 0, il = points.length; i < il; i++) {\n      maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(points[i]));\n    }\n\n    this.radius = Math.sqrt(maxRadiusSq);\n\n    return this;\n  }\n\n  copy(sphere) {\n    this.center.copy(sphere.center);\n    this.radius = sphere.radius;\n\n    return this;\n  }\n\n  isEmpty() {\n    return this.radius < 0;\n  }\n\n  makeEmpty() {\n    this.center.set(0, 0, 0);\n    this.radius = -1;\n\n    return this;\n  }\n\n  containsPoint(point) {\n    return point.distanceToSquared(this.center) <= this.radius * this.radius;\n  }\n\n  distanceToPoint(point) {\n    return point.distanceTo(this.center) - this.radius;\n  }\n\n  intersectsSphere(sphere) {\n    const radiusSum = this.radius + sphere.radius;\n\n    return (\n      sphere.center.distanceToSquared(this.center) <= radiusSum * radiusSum\n    );\n  }\n\n  intersectsBox(box) {\n    return box.intersectsSphere(this);\n  }\n\n  intersectsPlane(plane) {\n    return Math.abs(plane.distanceToPoint(this.center)) <= this.radius;\n  }\n\n  clampPoint(point, target) {\n    const deltaLengthSq = this.center.distanceToSquared(point);\n\n    target.copy(point);\n\n    if (deltaLengthSq > this.radius * this.radius) {\n      target.sub(this.center).normalize();\n      target.multiplyScalar(this.radius).add(this.center);\n    }\n\n    return target;\n  }\n\n  getBoundingBox(target) {\n    if (this.isEmpty()) {\n      // Empty sphere produces empty bounding box\n      target.makeEmpty();\n      return target;\n    }\n\n    target.set(this.center, this.center);\n    target.expandByScalar(this.radius);\n\n    return target;\n  }\n\n  applyMatrix4(matrix) {\n    this.center.applyMatrix4(matrix);\n    this.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n    return this;\n  }\n\n  translate(offset) {\n    this.center.add(offset);\n\n    return this;\n  }\n\n  expandByPoint(point) {\n    // from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L649-L671\n\n    _toPoint.subVectors(point, this.center);\n\n    const lengthSq = _toPoint.lengthSq();\n\n    if (lengthSq > this.radius * this.radius) {\n      const length = Math.sqrt(lengthSq);\n      const missingRadiusHalf = (length - this.radius) * 0.5;\n\n      // Nudge this sphere towards the target point. Add half the missing distance to radius,\n      // and the other half to position. This gives a tighter enclosure, instead of if\n      // the whole missing distance were just added to radius.\n\n      this.center.add(_toPoint.multiplyScalar(missingRadiusHalf / length));\n      this.radius += missingRadiusHalf;\n    }\n\n    return this;\n  }\n\n  union(sphere) {\n    // from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L759-L769\n\n    // To enclose another sphere into this sphere, we only need to enclose two points:\n    // 1) Enclose the farthest point on the other sphere into this sphere.\n    // 2) Enclose the opposite point of the farthest point into this sphere.\n\n    _toFarthestPoint\n      .subVectors(sphere.center, this.center)\n      .normalize()\n      .multiplyScalar(sphere.radius);\n\n    this.expandByPoint(_v1$6.copy(sphere.center).add(_toFarthestPoint));\n    this.expandByPoint(_v1$6.copy(sphere.center).sub(_toFarthestPoint));\n\n    return this;\n  }\n\n  equals(sphere) {\n    return sphere.center.equals(this.center) && sphere.radius === this.radius;\n  }\n\n  clone() {\n    return new this.constructor().copy(this);\n  }\n}\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n  constructor(origin = new Vector3(), direction = new Vector3(0, 0, -1)) {\n    this.origin = origin;\n    this.direction = direction;\n  }\n\n  set(origin, direction) {\n    this.origin.copy(origin);\n    this.direction.copy(direction);\n\n    return this;\n  }\n\n  copy(ray) {\n    this.origin.copy(ray.origin);\n    this.direction.copy(ray.direction);\n\n    return this;\n  }\n\n  at(t, target) {\n    return target.copy(this.direction).multiplyScalar(t).add(this.origin);\n  }\n\n  lookAt(v) {\n    this.direction.copy(v).sub(this.origin).normalize();\n\n    return this;\n  }\n\n  recast(t) {\n    this.origin.copy(this.at(t, _vector$a));\n\n    return this;\n  }\n\n  closestPointToPoint(point, target) {\n    target.subVectors(point, this.origin);\n\n    const directionDistance = target.dot(this.direction);\n\n    if (directionDistance < 0) {\n      return target.copy(this.origin);\n    }\n\n    return target\n      .copy(this.direction)\n      .multiplyScalar(directionDistance)\n      .add(this.origin);\n  }\n\n  distanceToPoint(point) {\n    return Math.sqrt(this.distanceSqToPoint(point));\n  }\n\n  distanceSqToPoint(point) {\n    const directionDistance = _vector$a\n      .subVectors(point, this.origin)\n      .dot(this.direction);\n\n    // point behind the ray\n\n    if (directionDistance < 0) {\n      return this.origin.distanceToSquared(point);\n    }\n\n    _vector$a\n      .copy(this.direction)\n      .multiplyScalar(directionDistance)\n      .add(this.origin);\n\n    return _vector$a.distanceToSquared(point);\n  }\n\n  distanceSqToSegment(v0, v1, optionalPointOnRay, optionalPointOnSegment) {\n    // from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n    // It returns the min distance between the ray and the segment\n    // defined by v0 and v1\n    // It can also set two optional targets :\n    // - The closest point on the ray\n    // - The closest point on the segment\n\n    _segCenter.copy(v0).add(v1).multiplyScalar(0.5);\n    _segDir.copy(v1).sub(v0).normalize();\n    _diff.copy(this.origin).sub(_segCenter);\n\n    const segExtent = v0.distanceTo(v1) * 0.5;\n    const a01 = -this.direction.dot(_segDir);\n    const b0 = _diff.dot(this.direction);\n    const b1 = -_diff.dot(_segDir);\n    const c = _diff.lengthSq();\n    const det = Math.abs(1 - a01 * a01);\n    let s0, s1, sqrDist, extDet;\n\n    if (det > 0) {\n      // The ray and segment are not parallel.\n\n      s0 = a01 * b1 - b0;\n      s1 = a01 * b0 - b1;\n      extDet = segExtent * det;\n\n      if (s0 >= 0) {\n        if (s1 >= -extDet) {\n          if (s1 <= extDet) {\n            // region 0\n            // Minimum at interior points of ray and segment.\n\n            const invDet = 1 / det;\n            s0 *= invDet;\n            s1 *= invDet;\n            sqrDist =\n              s0 * (s0 + a01 * s1 + 2 * b0) + s1 * (a01 * s0 + s1 + 2 * b1) + c;\n          } else {\n            // region 1\n\n            s1 = segExtent;\n            s0 = Math.max(0, -(a01 * s1 + b0));\n            sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n          }\n        } else {\n          // region 5\n\n          s1 = -segExtent;\n          s0 = Math.max(0, -(a01 * s1 + b0));\n          sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n        }\n      } else {\n        if (s1 <= -extDet) {\n          // region 4\n\n          s0 = Math.max(0, -(-a01 * segExtent + b0));\n          s1 =\n            s0 > 0\n              ? -segExtent\n              : Math.min(Math.max(-segExtent, -b1), segExtent);\n          sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n        } else if (s1 <= extDet) {\n          // region 3\n\n          s0 = 0;\n          s1 = Math.min(Math.max(-segExtent, -b1), segExtent);\n          sqrDist = s1 * (s1 + 2 * b1) + c;\n        } else {\n          // region 2\n\n          s0 = Math.max(0, -(a01 * segExtent + b0));\n          s1 =\n            s0 > 0 ? segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\n          sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n        }\n      }\n    } else {\n      // Ray and segment are parallel.\n\n      s1 = a01 > 0 ? -segExtent : segExtent;\n      s0 = Math.max(0, -(a01 * s1 + b0));\n      sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n    }\n\n    if (optionalPointOnRay) {\n      optionalPointOnRay\n        .copy(this.direction)\n        .multiplyScalar(s0)\n        .add(this.origin);\n    }\n\n    if (optionalPointOnSegment) {\n      optionalPointOnSegment.copy(_segDir).multiplyScalar(s1).add(_segCenter);\n    }\n\n    return sqrDist;\n  }\n\n  intersectSphere(sphere, target) {\n    _vector$a.subVectors(sphere.center, this.origin);\n    const tca = _vector$a.dot(this.direction);\n    const d2 = _vector$a.dot(_vector$a) - tca * tca;\n    const radius2 = sphere.radius * sphere.radius;\n\n    if (d2 > radius2) return null;\n\n    const thc = Math.sqrt(radius2 - d2);\n\n    // t0 = first intersect point - entrance on front of sphere\n    const t0 = tca - thc;\n\n    // t1 = second intersect point - exit point on back of sphere\n    const t1 = tca + thc;\n\n    // test to see if both t0 and t1 are behind the ray - if so, return null\n    if (t0 < 0 && t1 < 0) return null;\n\n    // test to see if t0 is behind the ray:\n    // if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n    // in order to always return an intersect point that is in front of the ray.\n    if (t0 < 0) return this.at(t1, target);\n\n    // else t0 is in front of the ray, so return the first collision point scaled by t0\n    return this.at(t0, target);\n  }\n\n  intersectsSphere(sphere) {\n    return (\n      this.distanceSqToPoint(sphere.center) <= sphere.radius * sphere.radius\n    );\n  }\n\n  distanceToPlane(plane) {\n    const denominator = plane.normal.dot(this.direction);\n\n    if (denominator === 0) {\n      // line is coplanar, return origin\n      if (plane.distanceToPoint(this.origin) === 0) {\n        return 0;\n      }\n\n      // Null is preferable to undefined since undefined means.... it is undefined\n\n      return null;\n    }\n\n    const t = -(this.origin.dot(plane.normal) + plane.constant) / denominator;\n\n    // Return if the ray never intersects the plane\n\n    return t >= 0 ? t : null;\n  }\n\n  intersectPlane(plane, target) {\n    const t = this.distanceToPlane(plane);\n\n    if (t === null) {\n      return null;\n    }\n\n    return this.at(t, target);\n  }\n\n  intersectsPlane(plane) {\n    // check if the ray lies on the plane first\n\n    const distToPoint = plane.distanceToPoint(this.origin);\n\n    if (distToPoint === 0) {\n      return true;\n    }\n\n    const denominator = plane.normal.dot(this.direction);\n\n    if (denominator * distToPoint < 0) {\n      return true;\n    }\n\n    // ray origin is behind the plane (and is pointing behind it)\n\n    return false;\n  }\n\n  intersectBox(box, target) {\n    let tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n    const invdirx = 1 / this.direction.x,\n      invdiry = 1 / this.direction.y,\n      invdirz = 1 / this.direction.z;\n\n    const origin = this.origin;\n\n    if (invdirx >= 0) {\n      tmin = (box.min.x - origin.x) * invdirx;\n      tmax = (box.max.x - origin.x) * invdirx;\n    } else {\n      tmin = (box.max.x - origin.x) * invdirx;\n      tmax = (box.min.x - origin.x) * invdirx;\n    }\n\n    if (invdiry >= 0) {\n      tymin = (box.min.y - origin.y) * invdiry;\n      tymax = (box.max.y - origin.y) * invdiry;\n    } else {\n      tymin = (box.max.y - origin.y) * invdiry;\n      tymax = (box.min.y - origin.y) * invdiry;\n    }\n\n    if (tmin > tymax || tymin > tmax) return null;\n\n    // These lines also handle the case where tmin or tmax is NaN\n    // (result of 0 * Infinity). x !== x returns true if x is NaN\n\n    if (tymin > tmin || tmin !== tmin) tmin = tymin;\n\n    if (tymax < tmax || tmax !== tmax) tmax = tymax;\n\n    if (invdirz >= 0) {\n      tzmin = (box.min.z - origin.z) * invdirz;\n      tzmax = (box.max.z - origin.z) * invdirz;\n    } else {\n      tzmin = (box.max.z - origin.z) * invdirz;\n      tzmax = (box.min.z - origin.z) * invdirz;\n    }\n\n    if (tmin > tzmax || tzmin > tmax) return null;\n\n    if (tzmin > tmin || tmin !== tmin) tmin = tzmin;\n\n    if (tzmax < tmax || tmax !== tmax) tmax = tzmax;\n\n    //return point closest to the ray (positive side)\n\n    if (tmax < 0) return null;\n\n    return this.at(tmin >= 0 ? tmin : tmax, target);\n  }\n\n  intersectsBox(box) {\n    return this.intersectBox(box, _vector$a) !== null;\n  }\n\n  intersectTriangle(a, b, c, backfaceCulling, target) {\n    // Compute the offset origin, edges, and normal.\n\n    // from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n    _edge1.subVectors(b, a);\n    _edge2.subVectors(c, a);\n    _normal$1.crossVectors(_edge1, _edge2);\n\n    // Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n    // E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n    //   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n    //   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n    //   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n    let DdN = this.direction.dot(_normal$1);\n    let sign;\n\n    if (DdN > 0) {\n      if (backfaceCulling) return null;\n      sign = 1;\n    } else if (DdN < 0) {\n      sign = -1;\n      DdN = -DdN;\n    } else {\n      return null;\n    }\n\n    _diff.subVectors(this.origin, a);\n    const DdQxE2 =\n      sign * this.direction.dot(_edge2.crossVectors(_diff, _edge2));\n\n    // b1 < 0, no intersection\n    if (DdQxE2 < 0) {\n      return null;\n    }\n\n    const DdE1xQ = sign * this.direction.dot(_edge1.cross(_diff));\n\n    // b2 < 0, no intersection\n    if (DdE1xQ < 0) {\n      return null;\n    }\n\n    // b1+b2 > 1, no intersection\n    if (DdQxE2 + DdE1xQ > DdN) {\n      return null;\n    }\n\n    // Line intersects triangle, check if ray does.\n    const QdN = -sign * _diff.dot(_normal$1);\n\n    // t < 0, no intersection\n    if (QdN < 0) {\n      return null;\n    }\n\n    // Ray intersects triangle.\n    return this.at(QdN / DdN, target);\n  }\n\n  applyMatrix4(matrix4) {\n    this.origin.applyMatrix4(matrix4);\n    this.direction.transformDirection(matrix4);\n\n    return this;\n  }\n\n  equals(ray) {\n    return (\n      ray.origin.equals(this.origin) && ray.direction.equals(this.direction)\n    );\n  }\n\n  clone() {\n    return new this.constructor().copy(this);\n  }\n}\n\nclass Matrix4 {\n  constructor() {\n    this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n\n    if (arguments.length > 0) {\n      console.error(\n        \"THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.\"\n      );\n    }\n  }\n\n  set(\n    n11,\n    n12,\n    n13,\n    n14,\n    n21,\n    n22,\n    n23,\n    n24,\n    n31,\n    n32,\n    n33,\n    n34,\n    n41,\n    n42,\n    n43,\n    n44\n  ) {\n    const te = this.elements;\n\n    te[0] = n11;\n    te[4] = n12;\n    te[8] = n13;\n    te[12] = n14;\n    te[1] = n21;\n    te[5] = n22;\n    te[9] = n23;\n    te[13] = n24;\n    te[2] = n31;\n    te[6] = n32;\n    te[10] = n33;\n    te[14] = n34;\n    te[3] = n41;\n    te[7] = n42;\n    te[11] = n43;\n    te[15] = n44;\n\n    return this;\n  }\n\n  identity() {\n    this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n\n    return this;\n  }\n\n  clone() {\n    return new Matrix4().fromArray(this.elements);\n  }\n\n  copy(m) {\n    const te = this.elements;\n    const me = m.elements;\n\n    te[0] = me[0];\n    te[1] = me[1];\n    te[2] = me[2];\n    te[3] = me[3];\n    te[4] = me[4];\n    te[5] = me[5];\n    te[6] = me[6];\n    te[7] = me[7];\n    te[8] = me[8];\n    te[9] = me[9];\n    te[10] = me[10];\n    te[11] = me[11];\n    te[12] = me[12];\n    te[13] = me[13];\n    te[14] = me[14];\n    te[15] = me[15];\n\n    return this;\n  }\n\n  copyPosition(m) {\n    const te = this.elements,\n      me = m.elements;\n\n    te[12] = me[12];\n    te[13] = me[13];\n    te[14] = me[14];\n\n    return this;\n  }\n\n  setFromMatrix3(m) {\n    const me = m.elements;\n\n    this.set(\n      me[0],\n      me[3],\n      me[6],\n      0,\n      me[1],\n      me[4],\n      me[7],\n      0,\n      me[2],\n      me[5],\n      me[8],\n      0,\n      0,\n      0,\n      0,\n      1\n    );\n\n    return this;\n  }\n\n  extractBasis(xAxis, yAxis, zAxis) {\n    xAxis.setFromMatrixColumn(this, 0);\n    yAxis.setFromMatrixColumn(this, 1);\n    zAxis.setFromMatrixColumn(this, 2);\n\n    return this;\n  }\n\n  makeBasis(xAxis, yAxis, zAxis) {\n    this.set(\n      xAxis.x,\n      yAxis.x,\n      zAxis.x,\n      0,\n      xAxis.y,\n      yAxis.y,\n      zAxis.y,\n      0,\n      xAxis.z,\n      yAxis.z,\n      zAxis.z,\n      0,\n      0,\n      0,\n      0,\n      1\n    );\n\n    return this;\n  }\n\n  extractRotation(m) {\n    // this method does not support reflection matrices\n\n    const te = this.elements;\n    const me = m.elements;\n\n    const scaleX = 1 / _v1$5.setFromMatrixColumn(m, 0).length();\n    const scaleY = 1 / _v1$5.setFromMatrixColumn(m, 1).length();\n    const scaleZ = 1 / _v1$5.setFromMatrixColumn(m, 2).length();\n\n    te[0] = me[0] * scaleX;\n    te[1] = me[1] * scaleX;\n    te[2] = me[2] * scaleX;\n    te[3] = 0;\n\n    te[4] = me[4] * scaleY;\n    te[5] = me[5] * scaleY;\n    te[6] = me[6] * scaleY;\n    te[7] = 0;\n\n    te[8] = me[8] * scaleZ;\n    te[9] = me[9] * scaleZ;\n    te[10] = me[10] * scaleZ;\n    te[11] = 0;\n\n    te[12] = 0;\n    te[13] = 0;\n    te[14] = 0;\n    te[15] = 1;\n\n    return this;\n  }\n\n  makeRotationFromEuler(euler) {\n    if (!(euler && euler.isEuler)) {\n      console.error(\n        \"THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.\"\n      );\n    }\n\n    const te = this.elements;\n\n    const x = euler.x,\n      y = euler.y,\n      z = euler.z;\n    const a = Math.cos(x),\n      b = Math.sin(x);\n    const c = Math.cos(y),\n      d = Math.sin(y);\n    const e = Math.cos(z),\n      f = Math.sin(z);\n\n    if (euler.order === \"XYZ\") {\n      const ae = a * e,\n        af = a * f,\n        be = b * e,\n        bf = b * f;\n\n      te[0] = c * e;\n      te[4] = -c * f;\n      te[8] = d;\n\n      te[1] = af + be * d;\n      te[5] = ae - bf * d;\n      te[9] = -b * c;\n\n      te[2] = bf - ae * d;\n      te[6] = be + af * d;\n      te[10] = a * c;\n    } else if (euler.order === \"YXZ\") {\n      const ce = c * e,\n        cf = c * f,\n        de = d * e,\n        df = d * f;\n\n      te[0] = ce + df * b;\n      te[4] = de * b - cf;\n      te[8] = a * d;\n\n      te[1] = a * f;\n      te[5] = a * e;\n      te[9] = -b;\n\n      te[2] = cf * b - de;\n      te[6] = df + ce * b;\n      te[10] = a * c;\n    } else if (euler.order === \"ZXY\") {\n      const ce = c * e,\n        cf = c * f,\n        de = d * e,\n        df = d * f;\n\n      te[0] = ce - df * b;\n      te[4] = -a * f;\n      te[8] = de + cf * b;\n\n      te[1] = cf + de * b;\n      te[5] = a * e;\n      te[9] = df - ce * b;\n\n      te[2] = -a * d;\n      te[6] = b;\n      te[10] = a * c;\n    } else if (euler.order === \"ZYX\") {\n      const ae = a * e,\n        af = a * f,\n        be = b * e,\n        bf = b * f;\n\n      te[0] = c * e;\n      te[4] = be * d - af;\n      te[8] = ae * d + bf;\n\n      te[1] = c * f;\n      te[5] = bf * d + ae;\n      te[9] = af * d - be;\n\n      te[2] = -d;\n      te[6] = b * c;\n      te[10] = a * c;\n    } else if (euler.order === \"YZX\") {\n      const ac = a * c,\n        ad = a * d,\n        bc = b * c,\n        bd = b * d;\n\n      te[0] = c * e;\n      te[4] = bd - ac * f;\n      te[8] = bc * f + ad;\n\n      te[1] = f;\n      te[5] = a * e;\n      te[9] = -b * e;\n\n      te[2] = -d * e;\n      te[6] = ad * f + bc;\n      te[10] = ac - bd * f;\n    } else if (euler.order === \"XZY\") {\n      const ac = a * c,\n        ad = a * d,\n        bc = b * c,\n        bd = b * d;\n\n      te[0] = c * e;\n      te[4] = -f;\n      te[8] = d * e;\n\n      te[1] = ac * f + bd;\n      te[5] = a * e;\n      te[9] = ad * f - bc;\n\n      te[2] = bc * f - ad;\n      te[6] = b * e;\n      te[10] = bd * f + ac;\n    }\n\n    // bottom row\n    te[3] = 0;\n    te[7] = 0;\n    te[11] = 0;\n\n    // last column\n    te[12] = 0;\n    te[13] = 0;\n    te[14] = 0;\n    te[15] = 1;\n\n    return this;\n  }\n\n  makeRotationFromQuaternion(q) {\n    return this.compose(_zero, q, _one);\n  }\n\n  lookAt(eye, target, up) {\n    const te = this.elements;\n\n    _z.subVectors(eye, target);\n\n    if (_z.lengthSq() === 0) {\n      // eye and target are in the same position\n\n      _z.z = 1;\n    }\n\n    _z.normalize();\n    _x.crossVectors(up, _z);\n\n    if (_x.lengthSq() === 0) {\n      // up and z are parallel\n\n      if (Math.abs(up.z) === 1) {\n        _z.x += 0.0001;\n      } else {\n        _z.z += 0.0001;\n      }\n\n      _z.normalize();\n      _x.crossVectors(up, _z);\n    }\n\n    _x.normalize();\n    _y.crossVectors(_z, _x);\n\n    te[0] = _x.x;\n    te[4] = _y.x;\n    te[8] = _z.x;\n    te[1] = _x.y;\n    te[5] = _y.y;\n    te[9] = _z.y;\n    te[2] = _x.z;\n    te[6] = _y.z;\n    te[10] = _z.z;\n\n    return this;\n  }\n\n  multiply(m, n) {\n    if (n !== undefined) {\n      console.warn(\n        \"THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.\"\n      );\n      return this.multiplyMatrices(m, n);\n    }\n\n    return this.multiplyMatrices(this, m);\n  }\n\n  premultiply(m) {\n    return this.multiplyMatrices(m, this);\n  }\n\n  multiplyMatrices(a, b) {\n    const ae = a.elements;\n    const be = b.elements;\n    const te = this.elements;\n\n    const a11 = ae[0],\n      a12 = ae[4],\n      a13 = ae[8],\n      a14 = ae[12];\n    const a21 = ae[1],\n      a22 = ae[5],\n      a23 = ae[9],\n      a24 = ae[13];\n    const a31 = ae[2],\n      a32 = ae[6],\n      a33 = ae[10],\n      a34 = ae[14];\n    const a41 = ae[3],\n      a42 = ae[7],\n      a43 = ae[11],\n      a44 = ae[15];\n\n    const b11 = be[0],\n      b12 = be[4],\n      b13 = be[8],\n      b14 = be[12];\n    const b21 = be[1],\n      b22 = be[5],\n      b23 = be[9],\n      b24 = be[13];\n    const b31 = be[2],\n      b32 = be[6],\n      b33 = be[10],\n      b34 = be[14];\n    const b41 = be[3],\n      b42 = be[7],\n      b43 = be[11],\n      b44 = be[15];\n\n    te[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n    te[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n    te[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n    te[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n    te[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n    te[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n    te[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n    te[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n    te[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n    te[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n    te[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n    te[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n    te[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n    te[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n    te[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n    te[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n    return this;\n  }\n\n  multiplyScalar(s) {\n    const te = this.elements;\n\n    te[0] *= s;\n    te[4] *= s;\n    te[8] *= s;\n    te[12] *= s;\n    te[1] *= s;\n    te[5] *= s;\n    te[9] *= s;\n    te[13] *= s;\n    te[2] *= s;\n    te[6] *= s;\n    te[10] *= s;\n    te[14] *= s;\n    te[3] *= s;\n    te[7] *= s;\n    te[11] *= s;\n    te[15] *= s;\n\n    return this;\n  }\n\n  determinant() {\n    const te = this.elements;\n\n    const n11 = te[0],\n      n12 = te[4],\n      n13 = te[8],\n      n14 = te[12];\n    const n21 = te[1],\n      n22 = te[5],\n      n23 = te[9],\n      n24 = te[13];\n    const n31 = te[2],\n      n32 = te[6],\n      n33 = te[10],\n      n34 = te[14];\n    const n41 = te[3],\n      n42 = te[7],\n      n43 = te[11],\n      n44 = te[15];\n\n    //TODO: make this more efficient\n    //( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n    return (\n      n41 *\n        (+n14 * n23 * n32 -\n          n13 * n24 * n32 -\n          n14 * n22 * n33 +\n          n12 * n24 * n33 +\n          n13 * n22 * n34 -\n          n12 * n23 * n34) +\n      n42 *\n        (+n11 * n23 * n34 -\n          n11 * n24 * n33 +\n          n14 * n21 * n33 -\n          n13 * n21 * n34 +\n          n13 * n24 * n31 -\n          n14 * n23 * n31) +\n      n43 *\n        (+n11 * n24 * n32 -\n          n11 * n22 * n34 -\n          n14 * n21 * n32 +\n          n12 * n21 * n34 +\n          n14 * n22 * n31 -\n          n12 * n24 * n31) +\n      n44 *\n        (-n13 * n22 * n31 -\n          n11 * n23 * n32 +\n          n11 * n22 * n33 +\n          n13 * n21 * n32 -\n          n12 * n21 * n33 +\n          n12 * n23 * n31)\n    );\n  }\n\n  transpose() {\n    const te = this.elements;\n    let tmp;\n\n    tmp = te[1];\n    te[1] = te[4];\n    te[4] = tmp;\n    tmp = te[2];\n    te[2] = te[8];\n    te[8] = tmp;\n    tmp = te[6];\n    te[6] = te[9];\n    te[9] = tmp;\n\n    tmp = te[3];\n    te[3] = te[12];\n    te[12] = tmp;\n    tmp = te[7];\n    te[7] = te[13];\n    te[13] = tmp;\n    tmp = te[11];\n    te[11] = te[14];\n    te[14] = tmp;\n\n    return this;\n  }\n\n  setPosition(x, y, z) {\n    const te = this.elements;\n\n    if (x.isVector3) {\n      te[12] = x.x;\n      te[13] = x.y;\n      te[14] = x.z;\n    } else {\n      te[12] = x;\n      te[13] = y;\n      te[14] = z;\n    }\n\n    return this;\n  }\n\n  invert() {\n    // based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n    const te = this.elements,\n      n11 = te[0],\n      n21 = te[1],\n      n31 = te[2],\n      n41 = te[3],\n      n12 = te[4],\n      n22 = te[5],\n      n32 = te[6],\n      n42 = te[7],\n      n13 = te[8],\n      n23 = te[9],\n      n33 = te[10],\n      n43 = te[11],\n      n14 = te[12],\n      n24 = te[13],\n      n34 = te[14],\n      n44 = te[15],\n      t11 =\n        n23 * n34 * n42 -\n        n24 * n33 * n42 +\n        n24 * n32 * n43 -\n        n22 * n34 * n43 -\n        n23 * n32 * n44 +\n        n22 * n33 * n44,\n      t12 =\n        n14 * n33 * n42 -\n        n13 * n34 * n42 -\n        n14 * n32 * n43 +\n        n12 * n34 * n43 +\n        n13 * n32 * n44 -\n        n12 * n33 * n44,\n      t13 =\n        n13 * n24 * n42 -\n        n14 * n23 * n42 +\n        n14 * n22 * n43 -\n        n12 * n24 * n43 -\n        n13 * n22 * n44 +\n        n12 * n23 * n44,\n      t14 =\n        n14 * n23 * n32 -\n        n13 * n24 * n32 -\n        n14 * n22 * n33 +\n        n12 * n24 * n33 +\n        n13 * n22 * n34 -\n        n12 * n23 * n34;\n\n    const det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n    if (det === 0)\n      return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n\n    const detInv = 1 / det;\n\n    te[0] = t11 * detInv;\n    te[1] =\n      (n24 * n33 * n41 -\n        n23 * n34 * n41 -\n        n24 * n31 * n43 +\n        n21 * n34 * n43 +\n        n23 * n31 * n44 -\n        n21 * n33 * n44) *\n      detInv;\n    te[2] =\n      (n22 * n34 * n41 -\n        n24 * n32 * n41 +\n        n24 * n31 * n42 -\n        n21 * n34 * n42 -\n        n22 * n31 * n44 +\n        n21 * n32 * n44) *\n      detInv;\n    te[3] =\n      (n23 * n32 * n41 -\n        n22 * n33 * n41 -\n        n23 * n31 * n42 +\n        n21 * n33 * n42 +\n        n22 * n31 * n43 -\n        n21 * n32 * n43) *\n      detInv;\n\n    te[4] = t12 * detInv;\n    te[5] =\n      (n13 * n34 * n41 -\n        n14 * n33 * n41 +\n        n14 * n31 * n43 -\n        n11 * n34 * n43 -\n        n13 * n31 * n44 +\n        n11 * n33 * n44) *\n      detInv;\n    te[6] =\n      (n14 * n32 * n41 -\n        n12 * n34 * n41 -\n        n14 * n31 * n42 +\n        n11 * n34 * n42 +\n        n12 * n31 * n44 -\n        n11 * n32 * n44) *\n      detInv;\n    te[7] =\n      (n12 * n33 * n41 -\n        n13 * n32 * n41 +\n        n13 * n31 * n42 -\n        n11 * n33 * n42 -\n        n12 * n31 * n43 +\n        n11 * n32 * n43) *\n      detInv;\n\n    te[8] = t13 * detInv;\n    te[9] =\n      (n14 * n23 * n41 -\n        n13 * n24 * n41 -\n        n14 * n21 * n43 +\n        n11 * n24 * n43 +\n        n13 * n21 * n44 -\n        n11 * n23 * n44) *\n      detInv;\n    te[10] =\n      (n12 * n24 * n41 -\n        n14 * n22 * n41 +\n        n14 * n21 * n42 -\n        n11 * n24 * n42 -\n        n12 * n21 * n44 +\n        n11 * n22 * n44) *\n      detInv;\n    te[11] =\n      (n13 * n22 * n41 -\n        n12 * n23 * n41 -\n        n13 * n21 * n42 +\n        n11 * n23 * n42 +\n        n12 * n21 * n43 -\n        n11 * n22 * n43) *\n      detInv;\n\n    te[12] = t14 * detInv;\n    te[13] =\n      (n13 * n24 * n31 -\n        n14 * n23 * n31 +\n        n14 * n21 * n33 -\n        n11 * n24 * n33 -\n        n13 * n21 * n34 +\n        n11 * n23 * n34) *\n      detInv;\n    te[14] =\n      (n14 * n22 * n31 -\n        n12 * n24 * n31 -\n        n14 * n21 * n32 +\n        n11 * n24 * n32 +\n        n12 * n21 * n34 -\n        n11 * n22 * n34) *\n      detInv;\n    te[15] =\n      (n12 * n23 * n31 -\n        n13 * n22 * n31 +\n        n13 * n21 * n32 -\n        n11 * n23 * n32 -\n        n12 * n21 * n33 +\n        n11 * n22 * n33) *\n      detInv;\n\n    return this;\n  }\n\n  scale(v) {\n    const te = this.elements;\n    const x = v.x,\n      y = v.y,\n      z = v.z;\n\n    te[0] *= x;\n    te[4] *= y;\n    te[8] *= z;\n    te[1] *= x;\n    te[5] *= y;\n    te[9] *= z;\n    te[2] *= x;\n    te[6] *= y;\n    te[10] *= z;\n    te[3] *= x;\n    te[7] *= y;\n    te[11] *= z;\n\n    return this;\n  }\n\n  getMaxScaleOnAxis() {\n    const te = this.elements;\n\n    const scaleXSq = te[0] * te[0] + te[1] * te[1] + te[2] * te[2];\n    const scaleYSq = te[4] * te[4] + te[5] * te[5] + te[6] * te[6];\n    const scaleZSq = te[8] * te[8] + te[9] * te[9] + te[10] * te[10];\n\n    return Math.sqrt(Math.max(scaleXSq, scaleYSq, scaleZSq));\n  }\n\n  makeTranslation(x, y, z) {\n    this.set(1, 0, 0, x, 0, 1, 0, y, 0, 0, 1, z, 0, 0, 0, 1);\n\n    return this;\n  }\n\n  makeRotationX(theta) {\n    const c = Math.cos(theta),\n      s = Math.sin(theta);\n\n    this.set(1, 0, 0, 0, 0, c, -s, 0, 0, s, c, 0, 0, 0, 0, 1);\n\n    return this;\n  }\n\n  makeRotationY(theta) {\n    const c = Math.cos(theta),\n      s = Math.sin(theta);\n\n    this.set(c, 0, s, 0, 0, 1, 0, 0, -s, 0, c, 0, 0, 0, 0, 1);\n\n    return this;\n  }\n\n  makeRotationZ(theta) {\n    const c = Math.cos(theta),\n      s = Math.sin(theta);\n\n    this.set(c, -s, 0, 0, s, c, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n\n    return this;\n  }\n\n  makeRotationAxis(axis, angle) {\n    // Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n    const c = Math.cos(angle);\n    const s = Math.sin(angle);\n    const t = 1 - c;\n    const x = axis.x,\n      y = axis.y,\n      z = axis.z;\n    const tx = t * x,\n      ty = t * y;\n\n    this.set(\n      tx * x + c,\n      tx * y - s * z,\n      tx * z + s * y,\n      0,\n      tx * y + s * z,\n      ty * y + c,\n      ty * z - s * x,\n      0,\n      tx * z - s * y,\n      ty * z + s * x,\n      t * z * z + c,\n      0,\n      0,\n      0,\n      0,\n      1\n    );\n\n    return this;\n  }\n\n  makeScale(x, y, z) {\n    this.set(x, 0, 0, 0, 0, y, 0, 0, 0, 0, z, 0, 0, 0, 0, 1);\n\n    return this;\n  }\n\n  makeShear(xy, xz, yx, yz, zx, zy) {\n    this.set(1, yx, zx, 0, xy, 1, zy, 0, xz, yz, 1, 0, 0, 0, 0, 1);\n\n    return this;\n  }\n\n  compose(position, quaternion, scale) {\n    const te = this.elements;\n\n    const x = quaternion._x,\n      y = quaternion._y,\n      z = quaternion._z,\n      w = quaternion._w;\n    const x2 = x + x,\n      y2 = y + y,\n      z2 = z + z;\n    const xx = x * x2,\n      xy = x * y2,\n      xz = x * z2;\n    const yy = y * y2,\n      yz = y * z2,\n      zz = z * z2;\n    const wx = w * x2,\n      wy = w * y2,\n      wz = w * z2;\n\n    const sx = scale.x,\n      sy = scale.y,\n      sz = scale.z;\n\n    te[0] = (1 - (yy + zz)) * sx;\n    te[1] = (xy + wz) * sx;\n    te[2] = (xz - wy) * sx;\n    te[3] = 0;\n\n    te[4] = (xy - wz) * sy;\n    te[5] = (1 - (xx + zz)) * sy;\n    te[6] = (yz + wx) * sy;\n    te[7] = 0;\n\n    te[8] = (xz + wy) * sz;\n    te[9] = (yz - wx) * sz;\n    te[10] = (1 - (xx + yy)) * sz;\n    te[11] = 0;\n\n    te[12] = position.x;\n    te[13] = position.y;\n    te[14] = position.z;\n    te[15] = 1;\n\n    return this;\n  }\n\n  decompose(position, quaternion, scale) {\n    const te = this.elements;\n\n    let sx = _v1$5.set(te[0], te[1], te[2]).length();\n    const sy = _v1$5.set(te[4], te[5], te[6]).length();\n    const sz = _v1$5.set(te[8], te[9], te[10]).length();\n\n    // if determine is negative, we need to invert one scale\n    const det = this.determinant();\n    if (det < 0) sx = -sx;\n\n    position.x = te[12];\n    position.y = te[13];\n    position.z = te[14];\n\n    // scale the rotation part\n    _m1$2.copy(this);\n\n    const invSX = 1 / sx;\n    const invSY = 1 / sy;\n    const invSZ = 1 / sz;\n\n    _m1$2.elements[0] *= invSX;\n    _m1$2.elements[1] *= invSX;\n    _m1$2.elements[2] *= invSX;\n\n    _m1$2.elements[4] *= invSY;\n    _m1$2.elements[5] *= invSY;\n    _m1$2.elements[6] *= invSY;\n\n    _m1$2.elements[8] *= invSZ;\n    _m1$2.elements[9] *= invSZ;\n    _m1$2.elements[10] *= invSZ;\n\n    quaternion.setFromRotationMatrix(_m1$2);\n\n    scale.x = sx;\n    scale.y = sy;\n    scale.z = sz;\n\n    return this;\n  }\n\n  makePerspective(left, right, top, bottom, near, far) {\n    if (far === undefined) {\n      console.warn(\n        \"THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.\"\n      );\n    }\n\n    const te = this.elements;\n    const x = (2 * near) / (right - left);\n    const y = (2 * near) / (top - bottom);\n\n    const a = (right + left) / (right - left);\n    const b = (top + bottom) / (top - bottom);\n    const c = -(far + near) / (far - near);\n    const d = (-2 * far * near) / (far - near);\n\n    te[0] = x;\n    te[4] = 0;\n    te[8] = a;\n    te[12] = 0;\n    te[1] = 0;\n    te[5] = y;\n    te[9] = b;\n    te[13] = 0;\n    te[2] = 0;\n    te[6] = 0;\n    te[10] = c;\n    te[14] = d;\n    te[3] = 0;\n    te[7] = 0;\n    te[11] = -1;\n    te[15] = 0;\n\n    return this;\n  }\n\n  makeOrthographic(left, right, top, bottom, near, far) {\n    const te = this.elements;\n    const w = 1.0 / (right - left);\n    const h = 1.0 / (top - bottom);\n    const p = 1.0 / (far - near);\n\n    const x = (right + left) * w;\n    const y = (top + bottom) * h;\n    const z = (far + near) * p;\n\n    te[0] = 2 * w;\n    te[4] = 0;\n    te[8] = 0;\n    te[12] = -x;\n    te[1] = 0;\n    te[5] = 2 * h;\n    te[9] = 0;\n    te[13] = -y;\n    te[2] = 0;\n    te[6] = 0;\n    te[10] = -2 * p;\n    te[14] = -z;\n    te[3] = 0;\n    te[7] = 0;\n    te[11] = 0;\n    te[15] = 1;\n\n    return this;\n  }\n\n  equals(matrix) {\n    const te = this.elements;\n    const me = matrix.elements;\n\n    for (let i = 0; i < 16; i++) {\n      if (te[i] !== me[i]) return false;\n    }\n\n    return true;\n  }\n\n  fromArray(array, offset = 0) {\n    for (let i = 0; i < 16; i++) {\n      this.elements[i] = array[i + offset];\n    }\n\n    return this;\n  }\n\n  toArray(array = [], offset = 0) {\n    const te = this.elements;\n\n    array[offset] = te[0];\n    array[offset + 1] = te[1];\n    array[offset + 2] = te[2];\n    array[offset + 3] = te[3];\n\n    array[offset + 4] = te[4];\n    array[offset + 5] = te[5];\n    array[offset + 6] = te[6];\n    array[offset + 7] = te[7];\n\n    array[offset + 8] = te[8];\n    array[offset + 9] = te[9];\n    array[offset + 10] = te[10];\n    array[offset + 11] = te[11];\n\n    array[offset + 12] = te[12];\n    array[offset + 13] = te[13];\n    array[offset + 14] = te[14];\n    array[offset + 15] = te[15];\n\n    return array;\n  }\n}\n\nMatrix4.prototype.isMatrix4 = true;\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3(0, 0, 0);\nconst _one = /*@__PURE__*/ new Vector3(1, 1, 1);\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix$1 = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n  constructor(x = 0, y = 0, z = 0, order = Euler.DefaultOrder) {\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this._order = order;\n  }\n\n  get x() {\n    return this._x;\n  }\n\n  set x(value) {\n    this._x = value;\n    this._onChangeCallback();\n  }\n\n  get y() {\n    return this._y;\n  }\n\n  set y(value) {\n    this._y = value;\n    this._onChangeCallback();\n  }\n\n  get z() {\n    return this._z;\n  }\n\n  set z(value) {\n    this._z = value;\n    this._onChangeCallback();\n  }\n\n  get order() {\n    return this._order;\n  }\n\n  set order(value) {\n    this._order = value;\n    this._onChangeCallback();\n  }\n\n  set(x, y, z, order = this._order) {\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this._order = order;\n\n    this._onChangeCallback();\n\n    return this;\n  }\n\n  clone() {\n    return new this.constructor(this._x, this._y, this._z, this._order);\n  }\n\n  copy(euler) {\n    this._x = euler._x;\n    this._y = euler._y;\n    this._z = euler._z;\n    this._order = euler._order;\n\n    this._onChangeCallback();\n\n    return this;\n  }\n\n  setFromRotationMatrix(m, order = this._order, update = true) {\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n    const te = m.elements;\n    const m11 = te[0],\n      m12 = te[4],\n      m13 = te[8];\n    const m21 = te[1],\n      m22 = te[5],\n      m23 = te[9];\n    const m31 = te[2],\n      m32 = te[6],\n      m33 = te[10];\n\n    switch (order) {\n      case \"XYZ\":\n        this._y = Math.asin(clamp(m13, -1, 1));\n\n        if (Math.abs(m13) < 0.9999999) {\n          this._x = Math.atan2(-m23, m33);\n          this._z = Math.atan2(-m12, m11);\n        } else {\n          this._x = Math.atan2(m32, m22);\n          this._z = 0;\n        }\n\n        break;\n\n      case \"YXZ\":\n        this._x = Math.asin(-clamp(m23, -1, 1));\n\n        if (Math.abs(m23) < 0.9999999) {\n          this._y = Math.atan2(m13, m33);\n          this._z = Math.atan2(m21, m22);\n        } else {\n          this._y = Math.atan2(-m31, m11);\n          this._z = 0;\n        }\n\n        break;\n\n      case \"ZXY\":\n        this._x = Math.asin(clamp(m32, -1, 1));\n\n        if (Math.abs(m32) < 0.9999999) {\n          this._y = Math.atan2(-m31, m33);\n          this._z = Math.atan2(-m12, m22);\n        } else {\n          this._y = 0;\n          this._z = Math.atan2(m21, m11);\n        }\n\n        break;\n\n      case \"ZYX\":\n        this._y = Math.asin(-clamp(m31, -1, 1));\n\n        if (Math.abs(m31) < 0.9999999) {\n          this._x = Math.atan2(m32, m33);\n          this._z = Math.atan2(m21, m11);\n        } else {\n          this._x = 0;\n          this._z = Math.atan2(-m12, m22);\n        }\n\n        break;\n\n      case \"YZX\":\n        this._z = Math.asin(clamp(m21, -1, 1));\n\n        if (Math.abs(m21) < 0.9999999) {\n          this._x = Math.atan2(-m23, m22);\n          this._y = Math.atan2(-m31, m11);\n        } else {\n          this._x = 0;\n          this._y = Math.atan2(m13, m33);\n        }\n\n        break;\n\n      case \"XZY\":\n        this._z = Math.asin(-clamp(m12, -1, 1));\n\n        if (Math.abs(m12) < 0.9999999) {\n          this._x = Math.atan2(m32, m22);\n          this._y = Math.atan2(m13, m11);\n        } else {\n          this._x = Math.atan2(-m23, m33);\n          this._y = 0;\n        }\n\n        break;\n\n      default:\n        console.warn(\n          \"THREE.Euler: .setFromRotationMatrix() encountered an unknown order: \" +\n            order\n        );\n    }\n\n    this._order = order;\n\n    if (update === true) this._onChangeCallback();\n\n    return this;\n  }\n\n  setFromQuaternion(q, order, update) {\n    _matrix$1.makeRotationFromQuaternion(q);\n\n    return this.setFromRotationMatrix(_matrix$1, order, update);\n  }\n\n  setFromVector3(v, order = this._order) {\n    return this.set(v.x, v.y, v.z, order);\n  }\n\n  reorder(newOrder) {\n    // WARNING: this discards revolution information -bhouston\n\n    _quaternion$3.setFromEuler(this);\n\n    return this.setFromQuaternion(_quaternion$3, newOrder);\n  }\n\n  equals(euler) {\n    return (\n      euler._x === this._x &&\n      euler._y === this._y &&\n      euler._z === this._z &&\n      euler._order === this._order\n    );\n  }\n\n  fromArray(array) {\n    this._x = array[0];\n    this._y = array[1];\n    this._z = array[2];\n    if (array[3] !== undefined) this._order = array[3];\n\n    this._onChangeCallback();\n\n    return this;\n  }\n\n  toArray(array = [], offset = 0) {\n    array[offset] = this._x;\n    array[offset + 1] = this._y;\n    array[offset + 2] = this._z;\n    array[offset + 3] = this._order;\n\n    return array;\n  }\n\n  toVector3(optionalResult) {\n    if (optionalResult) {\n      return optionalResult.set(this._x, this._y, this._z);\n    } else {\n      return new Vector3(this._x, this._y, this._z);\n    }\n  }\n\n  _onChange(callback) {\n    this._onChangeCallback = callback;\n\n    return this;\n  }\n\n  _onChangeCallback() {}\n}\n\nEuler.prototype.isEuler = true;\n\nEuler.DefaultOrder = \"XYZ\";\nEuler.RotationOrders = [\"XYZ\", \"YZX\", \"ZXY\", \"XZY\", \"YXZ\", \"ZYX\"];\n\nclass Layers {\n  constructor() {\n    this.mask = 1 | 0;\n  }\n\n  set(channel) {\n    this.mask = (1 << channel) | 0;\n  }\n\n  enable(channel) {\n    this.mask |= (1 << channel) | 0;\n  }\n\n  enableAll() {\n    this.mask = 0xffffffff | 0;\n  }\n\n  toggle(channel) {\n    this.mask ^= (1 << channel) | 0;\n  }\n\n  disable(channel) {\n    this.mask &= ~((1 << channel) | 0);\n  }\n\n  disableAll() {\n    this.mask = 0;\n  }\n\n  test(layers) {\n    return (this.mask & layers.mask) !== 0;\n  }\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3(1, 0, 0);\nconst _yAxis = /*@__PURE__*/ new Vector3(0, 1, 0);\nconst _zAxis = /*@__PURE__*/ new Vector3(0, 0, 1);\n\nconst _addedEvent = { type: \"added\" };\nconst _removedEvent = { type: \"removed\" };\n\nclass Object3D extends EventDispatcher {\n  constructor() {\n    super();\n\n    Object.defineProperty(this, \"id\", { value: _object3DId++ });\n\n    this.uuid = generateUUID();\n\n    this.name = \"\";\n    this.type = \"Object3D\";\n\n    this.parent = null;\n    this.children = [];\n\n    this.up = Object3D.DefaultUp.clone();\n\n    const position = new Vector3();\n    const rotation = new Euler();\n    const quaternion = new Quaternion();\n    const scale = new Vector3(1, 1, 1);\n\n    function onRotationChange() {\n      quaternion.setFromEuler(rotation, false);\n    }\n\n    function onQuaternionChange() {\n      rotation.setFromQuaternion(quaternion, undefined, false);\n    }\n\n    rotation._onChange(onRotationChange);\n    quaternion._onChange(onQuaternionChange);\n\n    Object.defineProperties(this, {\n      position: {\n        configurable: true,\n        enumerable: true,\n        value: position,\n      },\n      rotation: {\n        configurable: true,\n        enumerable: true,\n        value: rotation,\n      },\n      quaternion: {\n        configurable: true,\n        enumerable: true,\n        value: quaternion,\n      },\n      scale: {\n        configurable: true,\n        enumerable: true,\n        value: scale,\n      },\n      modelViewMatrix: {\n        value: new Matrix4(),\n      },\n      normalMatrix: {\n        value: new Matrix3(),\n      },\n    });\n\n    this.matrix = new Matrix4();\n    this.matrixWorld = new Matrix4();\n\n    this.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n    this.matrixWorldNeedsUpdate = false;\n\n    this.layers = new Layers();\n    this.visible = true;\n\n    this.castShadow = false;\n    this.receiveShadow = false;\n\n    this.frustumCulled = true;\n    this.renderOrder = 0;\n\n    this.animations = [];\n\n    this.userData = {};\n  }\n\n  onBeforeRender(/* renderer, scene, camera, geometry, material, group */) {}\n\n  onAfterRender(/* renderer, scene, camera, geometry, material, group */) {}\n\n  applyMatrix4(matrix) {\n    if (this.matrixAutoUpdate) this.updateMatrix();\n\n    this.matrix.premultiply(matrix);\n\n    this.matrix.decompose(this.position, this.quaternion, this.scale);\n  }\n\n  applyQuaternion(q) {\n    this.quaternion.premultiply(q);\n\n    return this;\n  }\n\n  setRotationFromAxisAngle(axis, angle) {\n    // assumes axis is normalized\n\n    this.quaternion.setFromAxisAngle(axis, angle);\n  }\n\n  setRotationFromEuler(euler) {\n    this.quaternion.setFromEuler(euler, true);\n  }\n\n  setRotationFromMatrix(m) {\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n    this.quaternion.setFromRotationMatrix(m);\n  }\n\n  setRotationFromQuaternion(q) {\n    // assumes q is normalized\n\n    this.quaternion.copy(q);\n  }\n\n  rotateOnAxis(axis, angle) {\n    // rotate object on axis in object space\n    // axis is assumed to be normalized\n\n    _q1.setFromAxisAngle(axis, angle);\n\n    this.quaternion.multiply(_q1);\n\n    return this;\n  }\n\n  rotateOnWorldAxis(axis, angle) {\n    // rotate object on axis in world space\n    // axis is assumed to be normalized\n    // method assumes no rotated parent\n\n    _q1.setFromAxisAngle(axis, angle);\n\n    this.quaternion.premultiply(_q1);\n\n    return this;\n  }\n\n  rotateX(angle) {\n    return this.rotateOnAxis(_xAxis, angle);\n  }\n\n  rotateY(angle) {\n    return this.rotateOnAxis(_yAxis, angle);\n  }\n\n  rotateZ(angle) {\n    return this.rotateOnAxis(_zAxis, angle);\n  }\n\n  translateOnAxis(axis, distance) {\n    // translate object by distance along axis in object space\n    // axis is assumed to be normalized\n\n    _v1$4.copy(axis).applyQuaternion(this.quaternion);\n\n    this.position.add(_v1$4.multiplyScalar(distance));\n\n    return this;\n  }\n\n  translateX(distance) {\n    return this.translateOnAxis(_xAxis, distance);\n  }\n\n  translateY(distance) {\n    return this.translateOnAxis(_yAxis, distance);\n  }\n\n  translateZ(distance) {\n    return this.translateOnAxis(_zAxis, distance);\n  }\n\n  localToWorld(vector) {\n    return vector.applyMatrix4(this.matrixWorld);\n  }\n\n  worldToLocal(vector) {\n    return vector.applyMatrix4(_m1$1.copy(this.matrixWorld).invert());\n  }\n\n  lookAt(x, y, z) {\n    // This method does not support objects having non-uniformly-scaled parent(s)\n\n    if (x.isVector3) {\n      _target.copy(x);\n    } else {\n      _target.set(x, y, z);\n    }\n\n    const parent = this.parent;\n\n    this.updateWorldMatrix(true, false);\n\n    _position$3.setFromMatrixPosition(this.matrixWorld);\n\n    if (this.isCamera || this.isLight) {\n      _m1$1.lookAt(_position$3, _target, this.up);\n    } else {\n      _m1$1.lookAt(_target, _position$3, this.up);\n    }\n\n    this.quaternion.setFromRotationMatrix(_m1$1);\n\n    if (parent) {\n      _m1$1.extractRotation(parent.matrixWorld);\n      _q1.setFromRotationMatrix(_m1$1);\n      this.quaternion.premultiply(_q1.invert());\n    }\n  }\n\n  add(object) {\n    if (arguments.length > 1) {\n      for (let i = 0; i < arguments.length; i++) {\n        this.add(arguments[i]);\n      }\n\n      return this;\n    }\n\n    if (object === this) {\n      console.error(\n        \"THREE.Object3D.add: object can't be added as a child of itself.\",\n        object\n      );\n      return this;\n    }\n\n    if (object && object.isObject3D) {\n      if (object.parent !== null) {\n        object.parent.remove(object);\n      }\n\n      object.parent = this;\n      this.children.push(object);\n\n      object.dispatchEvent(_addedEvent);\n    } else {\n      console.error(\n        \"THREE.Object3D.add: object not an instance of THREE.Object3D.\",\n        object\n      );\n    }\n\n    return this;\n  }\n\n  remove(object) {\n    if (arguments.length > 1) {\n      for (let i = 0; i < arguments.length; i++) {\n        this.remove(arguments[i]);\n      }\n\n      return this;\n    }\n\n    const index = this.children.indexOf(object);\n\n    if (index !== -1) {\n      object.parent = null;\n      this.children.splice(index, 1);\n\n      object.dispatchEvent(_removedEvent);\n    }\n\n    return this;\n  }\n\n  removeFromParent() {\n    const parent = this.parent;\n\n    if (parent !== null) {\n      parent.remove(this);\n    }\n\n    return this;\n  }\n\n  clear() {\n    for (let i = 0; i < this.children.length; i++) {\n      const object = this.children[i];\n\n      object.parent = null;\n\n      object.dispatchEvent(_removedEvent);\n    }\n\n    this.children.length = 0;\n\n    return this;\n  }\n\n  attach(object) {\n    // adds object as a child of this, while maintaining the object's world transform\n\n    this.updateWorldMatrix(true, false);\n\n    _m1$1.copy(this.matrixWorld).invert();\n\n    if (object.parent !== null) {\n      object.parent.updateWorldMatrix(true, false);\n\n      _m1$1.multiply(object.parent.matrixWorld);\n    }\n\n    object.applyMatrix4(_m1$1);\n\n    this.add(object);\n\n    object.updateWorldMatrix(false, true);\n\n    return this;\n  }\n\n  getObjectById(id) {\n    return this.getObjectByProperty(\"id\", id);\n  }\n\n  getObjectByName(name) {\n    return this.getObjectByProperty(\"name\", name);\n  }\n\n  getObjectByProperty(name, value) {\n    if (this[name] === value) return this;\n\n    for (let i = 0, l = this.children.length; i < l; i++) {\n      const child = this.children[i];\n      const object = child.getObjectByProperty(name, value);\n\n      if (object !== undefined) {\n        return object;\n      }\n    }\n\n    return undefined;\n  }\n\n  getWorldPosition(target) {\n    this.updateWorldMatrix(true, false);\n\n    return target.setFromMatrixPosition(this.matrixWorld);\n  }\n\n  getWorldQuaternion(target) {\n    this.updateWorldMatrix(true, false);\n\n    this.matrixWorld.decompose(_position$3, target, _scale$2);\n\n    return target;\n  }\n\n  getWorldScale(target) {\n    this.updateWorldMatrix(true, false);\n\n    this.matrixWorld.decompose(_position$3, _quaternion$2, target);\n\n    return target;\n  }\n\n  getWorldDirection(target) {\n    this.updateWorldMatrix(true, false);\n\n    const e = this.matrixWorld.elements;\n\n    return target.set(e[8], e[9], e[10]).normalize();\n  }\n\n  raycast() {}\n\n  traverse(callback) {\n    callback(this);\n\n    const children = this.children;\n\n    for (let i = 0, l = children.length; i < l; i++) {\n      children[i].traverse(callback);\n    }\n  }\n\n  traverseVisible(callback) {\n    if (this.visible === false) return;\n\n    callback(this);\n\n    const children = this.children;\n\n    for (let i = 0, l = children.length; i < l; i++) {\n      children[i].traverseVisible(callback);\n    }\n  }\n\n  traverseAncestors(callback) {\n    const parent = this.parent;\n\n    if (parent !== null) {\n      callback(parent);\n\n      parent.traverseAncestors(callback);\n    }\n  }\n\n  updateMatrix() {\n    this.matrix.compose(this.position, this.quaternion, this.scale);\n\n    this.matrixWorldNeedsUpdate = true;\n  }\n\n  updateMatrixWorld(force) {\n    if (this.matrixAutoUpdate) this.updateMatrix();\n\n    if (this.matrixWorldNeedsUpdate || force) {\n      if (this.parent === null) {\n        this.matrixWorld.copy(this.matrix);\n      } else {\n        this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n      }\n\n      this.matrixWorldNeedsUpdate = false;\n\n      force = true;\n    }\n\n    // update children\n\n    const children = this.children;\n\n    for (let i = 0, l = children.length; i < l; i++) {\n      children[i].updateMatrixWorld(force);\n    }\n  }\n\n  updateWorldMatrix(updateParents, updateChildren) {\n    const parent = this.parent;\n\n    if (updateParents === true && parent !== null) {\n      parent.updateWorldMatrix(true, false);\n    }\n\n    if (this.matrixAutoUpdate) this.updateMatrix();\n\n    if (this.parent === null) {\n      this.matrixWorld.copy(this.matrix);\n    } else {\n      this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n    }\n\n    // update children\n\n    if (updateChildren === true) {\n      const children = this.children;\n\n      for (let i = 0, l = children.length; i < l; i++) {\n        children[i].updateWorldMatrix(false, true);\n      }\n    }\n  }\n\n  toJSON(meta) {\n    // meta is a string when called from JSON.stringify\n    const isRootObject = meta === undefined || typeof meta === \"string\";\n\n    const output = {};\n\n    // meta is a hash used to collect geometries, materials.\n    // not providing it implies that this is the root object\n    // being serialized.\n    if (isRootObject) {\n      // initialize meta obj\n      meta = {\n        geometries: {},\n        materials: {},\n        textures: {},\n        images: {},\n        shapes: {},\n        skeletons: {},\n        animations: {},\n      };\n\n      output.metadata = {\n        version: 4.5,\n        type: \"Object\",\n        generator: \"Object3D.toJSON\",\n      };\n    }\n\n    // standard Object3D serialization\n\n    const object = {};\n\n    object.uuid = this.uuid;\n    object.type = this.type;\n\n    if (this.name !== \"\") object.name = this.name;\n    if (this.castShadow === true) object.castShadow = true;\n    if (this.receiveShadow === true) object.receiveShadow = true;\n    if (this.visible === false) object.visible = false;\n    if (this.frustumCulled === false) object.frustumCulled = false;\n    if (this.renderOrder !== 0) object.renderOrder = this.renderOrder;\n    if (JSON.stringify(this.userData) !== \"{}\") object.userData = this.userData;\n\n    object.layers = this.layers.mask;\n    object.matrix = this.matrix.toArray();\n\n    if (this.matrixAutoUpdate === false) object.matrixAutoUpdate = false;\n\n    // object specific properties\n\n    if (this.isInstancedMesh) {\n      object.type = \"InstancedMesh\";\n      object.count = this.count;\n      object.instanceMatrix = this.instanceMatrix.toJSON();\n      if (this.instanceColor !== null)\n        object.instanceColor = this.instanceColor.toJSON();\n    }\n\n    //\n\n    function serialize(library, element) {\n      if (library[element.uuid] === undefined) {\n        library[element.uuid] = element.toJSON(meta);\n      }\n\n      return element.uuid;\n    }\n\n    if (this.isScene) {\n      if (this.background) {\n        if (this.background.isColor) {\n          object.background = this.background.toJSON();\n        } else if (this.background.isTexture) {\n          object.background = this.background.toJSON(meta).uuid;\n        }\n      }\n\n      if (this.environment && this.environment.isTexture) {\n        object.environment = this.environment.toJSON(meta).uuid;\n      }\n    } else if (this.isMesh || this.isLine || this.isPoints) {\n      object.geometry = serialize(meta.geometries, this.geometry);\n\n      const parameters = this.geometry.parameters;\n\n      if (parameters !== undefined && parameters.shapes !== undefined) {\n        const shapes = parameters.shapes;\n\n        if (Array.isArray(shapes)) {\n          for (let i = 0, l = shapes.length; i < l; i++) {\n            const shape = shapes[i];\n\n            serialize(meta.shapes, shape);\n          }\n        } else {\n          serialize(meta.shapes, shapes);\n        }\n      }\n    }\n\n    if (this.isSkinnedMesh) {\n      object.bindMode = this.bindMode;\n      object.bindMatrix = this.bindMatrix.toArray();\n\n      if (this.skeleton !== undefined) {\n        serialize(meta.skeletons, this.skeleton);\n\n        object.skeleton = this.skeleton.uuid;\n      }\n    }\n\n    if (this.material !== undefined) {\n      if (Array.isArray(this.material)) {\n        const uuids = [];\n\n        for (let i = 0, l = this.material.length; i < l; i++) {\n          uuids.push(serialize(meta.materials, this.material[i]));\n        }\n\n        object.material = uuids;\n      } else {\n        object.material = serialize(meta.materials, this.material);\n      }\n    }\n\n    //\n\n    if (this.children.length > 0) {\n      object.children = [];\n\n      for (let i = 0; i < this.children.length; i++) {\n        object.children.push(this.children[i].toJSON(meta).object);\n      }\n    }\n\n    //\n\n    if (this.animations.length > 0) {\n      object.animations = [];\n\n      for (let i = 0; i < this.animations.length; i++) {\n        const animation = this.animations[i];\n\n        object.animations.push(serialize(meta.animations, animation));\n      }\n    }\n\n    if (isRootObject) {\n      const geometries = extractFromCache(meta.geometries);\n      const materials = extractFromCache(meta.materials);\n      const textures = extractFromCache(meta.textures);\n      const images = extractFromCache(meta.images);\n      const shapes = extractFromCache(meta.shapes);\n      const skeletons = extractFromCache(meta.skeletons);\n      const animations = extractFromCache(meta.animations);\n\n      if (geometries.length > 0) output.geometries = geometries;\n      if (materials.length > 0) output.materials = materials;\n      if (textures.length > 0) output.textures = textures;\n      if (images.length > 0) output.images = images;\n      if (shapes.length > 0) output.shapes = shapes;\n      if (skeletons.length > 0) output.skeletons = skeletons;\n      if (animations.length > 0) output.animations = animations;\n    }\n\n    output.object = object;\n\n    return output;\n\n    // extract data from the cache hash\n    // remove metadata on each item\n    // and return as array\n    function extractFromCache(cache) {\n      const values = [];\n      for (const key in cache) {\n        const data = cache[key];\n        delete data.metadata;\n        values.push(data);\n      }\n\n      return values;\n    }\n  }\n\n  clone(recursive) {\n    return new this.constructor().copy(this, recursive);\n  }\n\n  copy(source, recursive = true) {\n    this.name = source.name;\n\n    this.up.copy(source.up);\n\n    this.position.copy(source.position);\n    this.rotation.order = source.rotation.order;\n    this.quaternion.copy(source.quaternion);\n    this.scale.copy(source.scale);\n\n    this.matrix.copy(source.matrix);\n    this.matrixWorld.copy(source.matrixWorld);\n\n    this.matrixAutoUpdate = source.matrixAutoUpdate;\n    this.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n    this.layers.mask = source.layers.mask;\n    this.visible = source.visible;\n\n    this.castShadow = source.castShadow;\n    this.receiveShadow = source.receiveShadow;\n\n    this.frustumCulled = source.frustumCulled;\n    this.renderOrder = source.renderOrder;\n\n    this.userData = JSON.parse(JSON.stringify(source.userData));\n\n    if (recursive === true) {\n      for (let i = 0; i < source.children.length; i++) {\n        const child = source.children[i];\n        this.add(child.clone());\n      }\n    }\n\n    return this;\n  }\n}\n\nObject3D.DefaultUp = new Vector3(0, 1, 0);\nObject3D.DefaultMatrixAutoUpdate = true;\n\nObject3D.prototype.isObject3D = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$1 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nclass Triangle {\n  constructor(a = new Vector3(), b = new Vector3(), c = new Vector3()) {\n    this.a = a;\n    this.b = b;\n    this.c = c;\n  }\n\n  static getNormal(a, b, c, target) {\n    target.subVectors(c, b);\n    _v0$1.subVectors(a, b);\n    target.cross(_v0$1);\n\n    const targetLengthSq = target.lengthSq();\n    if (targetLengthSq > 0) {\n      return target.multiplyScalar(1 / Math.sqrt(targetLengthSq));\n    }\n\n    return target.set(0, 0, 0);\n  }\n\n  // static/instance method to calculate barycentric coordinates\n  // based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n  static getBarycoord(point, a, b, c, target) {\n    _v0$1.subVectors(c, a);\n    _v1$3.subVectors(b, a);\n    _v2$2.subVectors(point, a);\n\n    const dot00 = _v0$1.dot(_v0$1);\n    const dot01 = _v0$1.dot(_v1$3);\n    const dot02 = _v0$1.dot(_v2$2);\n    const dot11 = _v1$3.dot(_v1$3);\n    const dot12 = _v1$3.dot(_v2$2);\n\n    const denom = dot00 * dot11 - dot01 * dot01;\n\n    // collinear or singular triangle\n    if (denom === 0) {\n      // arbitrary location outside of triangle?\n      // not sure if this is the best idea, maybe should be returning undefined\n      return target.set(-2, -1, -1);\n    }\n\n    const invDenom = 1 / denom;\n    const u = (dot11 * dot02 - dot01 * dot12) * invDenom;\n    const v = (dot00 * dot12 - dot01 * dot02) * invDenom;\n\n    // barycentric coordinates must always sum to 1\n    return target.set(1 - u - v, v, u);\n  }\n\n  static containsPoint(point, a, b, c) {\n    this.getBarycoord(point, a, b, c, _v3$1);\n\n    return _v3$1.x >= 0 && _v3$1.y >= 0 && _v3$1.x + _v3$1.y <= 1;\n  }\n\n  static getUV(point, p1, p2, p3, uv1, uv2, uv3, target) {\n    this.getBarycoord(point, p1, p2, p3, _v3$1);\n\n    target.set(0, 0);\n    target.addScaledVector(uv1, _v3$1.x);\n    target.addScaledVector(uv2, _v3$1.y);\n    target.addScaledVector(uv3, _v3$1.z);\n\n    return target;\n  }\n\n  static isFrontFacing(a, b, c, direction) {\n    _v0$1.subVectors(c, b);\n    _v1$3.subVectors(a, b);\n\n    // strictly front facing\n    return _v0$1.cross(_v1$3).dot(direction) < 0 ? true : false;\n  }\n\n  set(a, b, c) {\n    this.a.copy(a);\n    this.b.copy(b);\n    this.c.copy(c);\n\n    return this;\n  }\n\n  setFromPointsAndIndices(points, i0, i1, i2) {\n    this.a.copy(points[i0]);\n    this.b.copy(points[i1]);\n    this.c.copy(points[i2]);\n\n    return this;\n  }\n\n  setFromAttributeAndIndices(attribute, i0, i1, i2) {\n    this.a.fromBufferAttribute(attribute, i0);\n    this.b.fromBufferAttribute(attribute, i1);\n    this.c.fromBufferAttribute(attribute, i2);\n\n    return this;\n  }\n\n  clone() {\n    return new this.constructor().copy(this);\n  }\n\n  copy(triangle) {\n    this.a.copy(triangle.a);\n    this.b.copy(triangle.b);\n    this.c.copy(triangle.c);\n\n    return this;\n  }\n\n  getArea() {\n    _v0$1.subVectors(this.c, this.b);\n    _v1$3.subVectors(this.a, this.b);\n\n    return _v0$1.cross(_v1$3).length() * 0.5;\n  }\n\n  getMidpoint(target) {\n    return target\n      .addVectors(this.a, this.b)\n      .add(this.c)\n      .multiplyScalar(1 / 3);\n  }\n\n  getNormal(target) {\n    return Triangle.getNormal(this.a, this.b, this.c, target);\n  }\n\n  getPlane(target) {\n    return target.setFromCoplanarPoints(this.a, this.b, this.c);\n  }\n\n  getBarycoord(point, target) {\n    return Triangle.getBarycoord(point, this.a, this.b, this.c, target);\n  }\n\n  getUV(point, uv1, uv2, uv3, target) {\n    return Triangle.getUV(point, this.a, this.b, this.c, uv1, uv2, uv3, target);\n  }\n\n  containsPoint(point) {\n    return Triangle.containsPoint(point, this.a, this.b, this.c);\n  }\n\n  isFrontFacing(direction) {\n    return Triangle.isFrontFacing(this.a, this.b, this.c, direction);\n  }\n\n  intersectsBox(box) {\n    return box.intersectsTriangle(this);\n  }\n\n  closestPointToPoint(p, target) {\n    const a = this.a,\n      b = this.b,\n      c = this.c;\n    let v, w;\n\n    // algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n    // published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n    // under the accompanying license; see chapter 5.1.5 for detailed explanation.\n    // basically, we're distinguishing which of the voronoi regions of the triangle\n    // the point lies in with the minimum amount of redundant computation.\n\n    _vab.subVectors(b, a);\n    _vac.subVectors(c, a);\n    _vap.subVectors(p, a);\n    const d1 = _vab.dot(_vap);\n    const d2 = _vac.dot(_vap);\n    if (d1 <= 0 && d2 <= 0) {\n      // vertex region of A; barycentric coords (1, 0, 0)\n      return target.copy(a);\n    }\n\n    _vbp.subVectors(p, b);\n    const d3 = _vab.dot(_vbp);\n    const d4 = _vac.dot(_vbp);\n    if (d3 >= 0 && d4 <= d3) {\n      // vertex region of B; barycentric coords (0, 1, 0)\n      return target.copy(b);\n    }\n\n    const vc = d1 * d4 - d3 * d2;\n    if (vc <= 0 && d1 >= 0 && d3 <= 0) {\n      v = d1 / (d1 - d3);\n      // edge region of AB; barycentric coords (1-v, v, 0)\n      return target.copy(a).addScaledVector(_vab, v);\n    }\n\n    _vcp.subVectors(p, c);\n    const d5 = _vab.dot(_vcp);\n    const d6 = _vac.dot(_vcp);\n    if (d6 >= 0 && d5 <= d6) {\n      // vertex region of C; barycentric coords (0, 0, 1)\n      return target.copy(c);\n    }\n\n    const vb = d5 * d2 - d1 * d6;\n    if (vb <= 0 && d2 >= 0 && d6 <= 0) {\n      w = d2 / (d2 - d6);\n      // edge region of AC; barycentric coords (1-w, 0, w)\n      return target.copy(a).addScaledVector(_vac, w);\n    }\n\n    const va = d3 * d6 - d5 * d4;\n    if (va <= 0 && d4 - d3 >= 0 && d5 - d6 >= 0) {\n      _vbc.subVectors(c, b);\n      w = (d4 - d3) / (d4 - d3 + (d5 - d6));\n      // edge region of BC; barycentric coords (0, 1-w, w)\n      return target.copy(b).addScaledVector(_vbc, w); // edge region of BC\n    }\n\n    // face region\n    const denom = 1 / (va + vb + vc);\n    // u = va * denom\n    v = vb * denom;\n    w = vc * denom;\n\n    return target.copy(a).addScaledVector(_vab, v).addScaledVector(_vac, w);\n  }\n\n  equals(triangle) {\n    return (\n      triangle.a.equals(this.a) &&\n      triangle.b.equals(this.b) &&\n      triangle.c.equals(this.c)\n    );\n  }\n}\n\nlet materialId = 0;\n\nclass Material extends EventDispatcher {\n  constructor() {\n    super();\n\n    Object.defineProperty(this, \"id\", { value: materialId++ });\n\n    this.uuid = generateUUID();\n\n    this.name = \"\";\n    this.type = \"Material\";\n\n    this.fog = true;\n\n    this.blending = NormalBlending;\n    this.side = FrontSide;\n    this.vertexColors = false;\n\n    this.opacity = 1;\n    this.format = RGBAFormat;\n    this.transparent = false;\n\n    this.blendSrc = SrcAlphaFactor;\n    this.blendDst = OneMinusSrcAlphaFactor;\n    this.blendEquation = AddEquation;\n    this.blendSrcAlpha = null;\n    this.blendDstAlpha = null;\n    this.blendEquationAlpha = null;\n\n    this.depthFunc = LessEqualDepth;\n    this.depthTest = true;\n    this.depthWrite = true;\n\n    this.stencilWriteMask = 0xff;\n    this.stencilFunc = AlwaysStencilFunc;\n    this.stencilRef = 0;\n    this.stencilFuncMask = 0xff;\n    this.stencilFail = KeepStencilOp;\n    this.stencilZFail = KeepStencilOp;\n    this.stencilZPass = KeepStencilOp;\n    this.stencilWrite = false;\n\n    this.clippingPlanes = null;\n    this.clipIntersection = false;\n    this.clipShadows = false;\n\n    this.shadowSide = null;\n\n    this.colorWrite = true;\n\n    this.precision = null; // override the renderer's default precision for this material\n\n    this.polygonOffset = false;\n    this.polygonOffsetFactor = 0;\n    this.polygonOffsetUnits = 0;\n\n    this.dithering = false;\n\n    this.alphaToCoverage = false;\n    this.premultipliedAlpha = false;\n\n    this.visible = true;\n\n    this.toneMapped = true;\n\n    this.userData = {};\n\n    this.version = 0;\n\n    this._alphaTest = 0;\n  }\n\n  get alphaTest() {\n    return this._alphaTest;\n  }\n\n  set alphaTest(value) {\n    if (this._alphaTest > 0 !== value > 0) {\n      this.version++;\n    }\n\n    this._alphaTest = value;\n  }\n\n  onBuild(/* shaderobject, renderer */) {}\n\n  onBeforeRender(/* renderer, scene, camera, geometry, object, group */) {}\n\n  onBeforeCompile(/* shaderobject, renderer */) {}\n\n  customProgramCacheKey() {\n    return this.onBeforeCompile.toString();\n  }\n\n  setValues(values) {\n    if (values === undefined) return;\n\n    for (const key in values) {\n      const newValue = values[key];\n\n      if (newValue === undefined) {\n        console.warn(\"THREE.Material: '\" + key + \"' parameter is undefined.\");\n        continue;\n      }\n\n      // for backward compatability if shading is set in the constructor\n      if (key === \"shading\") {\n        console.warn(\n          \"THREE.\" +\n            this.type +\n            \": .shading has been removed. Use the boolean .flatShading instead.\"\n        );\n        this.flatShading = newValue === FlatShading ? true : false;\n        continue;\n      }\n\n      const currentValue = this[key];\n\n      if (currentValue === undefined) {\n        console.warn(\n          \"THREE.\" +\n            this.type +\n            \": '\" +\n            key +\n            \"' is not a property of this material.\"\n        );\n        continue;\n      }\n\n      if (currentValue && currentValue.isColor) {\n        currentValue.set(newValue);\n      } else if (\n        currentValue &&\n        currentValue.isVector3 &&\n        newValue &&\n        newValue.isVector3\n      ) {\n        currentValue.copy(newValue);\n      } else {\n        this[key] = newValue;\n      }\n    }\n  }\n\n  toJSON(meta) {\n    const isRoot = meta === undefined || typeof meta === \"string\";\n\n    if (isRoot) {\n      meta = {\n        textures: {},\n        images: {},\n      };\n    }\n\n    const data = {\n      metadata: {\n        version: 4.5,\n        type: \"Material\",\n        generator: \"Material.toJSON\",\n      },\n    };\n\n    // standard Material serialization\n    data.uuid = this.uuid;\n    data.type = this.type;\n\n    if (this.name !== \"\") data.name = this.name;\n\n    if (this.color && this.color.isColor) data.color = this.color.getHex();\n\n    if (this.roughness !== undefined) data.roughness = this.roughness;\n    if (this.metalness !== undefined) data.metalness = this.metalness;\n\n    if (this.sheen !== undefined) data.sheen = this.sheen;\n    if (this.sheenColor && this.sheenColor.isColor)\n      data.sheenColor = this.sheenColor.getHex();\n    if (this.sheenRoughness !== undefined)\n      data.sheenRoughness = this.sheenRoughness;\n    if (this.emissive && this.emissive.isColor)\n      data.emissive = this.emissive.getHex();\n    if (this.emissiveIntensity && this.emissiveIntensity !== 1)\n      data.emissiveIntensity = this.emissiveIntensity;\n\n    if (this.specular && this.specular.isColor)\n      data.specular = this.specular.getHex();\n    if (this.specularIntensity !== undefined)\n      data.specularIntensity = this.specularIntensity;\n    if (this.specularColor && this.specularColor.isColor)\n      data.specularColor = this.specularColor.getHex();\n    if (this.shininess !== undefined) data.shininess = this.shininess;\n    if (this.clearcoat !== undefined) data.clearcoat = this.clearcoat;\n    if (this.clearcoatRoughness !== undefined)\n      data.clearcoatRoughness = this.clearcoatRoughness;\n\n    if (this.clearcoatMap && this.clearcoatMap.isTexture) {\n      data.clearcoatMap = this.clearcoatMap.toJSON(meta).uuid;\n    }\n\n    if (this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture) {\n      data.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON(meta).uuid;\n    }\n\n    if (this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture) {\n      data.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(meta).uuid;\n      data.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n    }\n\n    if (this.map && this.map.isTexture) data.map = this.map.toJSON(meta).uuid;\n    if (this.matcap && this.matcap.isTexture)\n      data.matcap = this.matcap.toJSON(meta).uuid;\n    if (this.alphaMap && this.alphaMap.isTexture)\n      data.alphaMap = this.alphaMap.toJSON(meta).uuid;\n\n    if (this.lightMap && this.lightMap.isTexture) {\n      data.lightMap = this.lightMap.toJSON(meta).uuid;\n      data.lightMapIntensity = this.lightMapIntensity;\n    }\n\n    if (this.aoMap && this.aoMap.isTexture) {\n      data.aoMap = this.aoMap.toJSON(meta).uuid;\n      data.aoMapIntensity = this.aoMapIntensity;\n    }\n\n    if (this.bumpMap && this.bumpMap.isTexture) {\n      data.bumpMap = this.bumpMap.toJSON(meta).uuid;\n      data.bumpScale = this.bumpScale;\n    }\n\n    if (this.normalMap && this.normalMap.isTexture) {\n      data.normalMap = this.normalMap.toJSON(meta).uuid;\n      data.normalMapType = this.normalMapType;\n      data.normalScale = this.normalScale.toArray();\n    }\n\n    if (this.displacementMap && this.displacementMap.isTexture) {\n      data.displacementMap = this.displacementMap.toJSON(meta).uuid;\n      data.displacementScale = this.displacementScale;\n      data.displacementBias = this.displacementBias;\n    }\n\n    if (this.roughnessMap && this.roughnessMap.isTexture)\n      data.roughnessMap = this.roughnessMap.toJSON(meta).uuid;\n    if (this.metalnessMap && this.metalnessMap.isTexture)\n      data.metalnessMap = this.metalnessMap.toJSON(meta).uuid;\n\n    if (this.emissiveMap && this.emissiveMap.isTexture)\n      data.emissiveMap = this.emissiveMap.toJSON(meta).uuid;\n    if (this.specularMap && this.specularMap.isTexture)\n      data.specularMap = this.specularMap.toJSON(meta).uuid;\n    if (this.specularIntensityMap && this.specularIntensityMap.isTexture)\n      data.specularIntensityMap = this.specularIntensityMap.toJSON(meta).uuid;\n    if (this.specularColorMap && this.specularColorMap.isTexture)\n      data.specularColorMap = this.specularColorMap.toJSON(meta).uuid;\n\n    if (this.envMap && this.envMap.isTexture) {\n      data.envMap = this.envMap.toJSON(meta).uuid;\n\n      if (this.combine !== undefined) data.combine = this.combine;\n    }\n\n    if (this.envMapIntensity !== undefined)\n      data.envMapIntensity = this.envMapIntensity;\n    if (this.reflectivity !== undefined) data.reflectivity = this.reflectivity;\n    if (this.refractionRatio !== undefined)\n      data.refractionRatio = this.refractionRatio;\n\n    if (this.gradientMap && this.gradientMap.isTexture) {\n      data.gradientMap = this.gradientMap.toJSON(meta).uuid;\n    }\n\n    if (this.transmission !== undefined) data.transmission = this.transmission;\n    if (this.transmissionMap && this.transmissionMap.isTexture)\n      data.transmissionMap = this.transmissionMap.toJSON(meta).uuid;\n    if (this.thickness !== undefined) data.thickness = this.thickness;\n    if (this.thicknessMap && this.thicknessMap.isTexture)\n      data.thicknessMap = this.thicknessMap.toJSON(meta).uuid;\n    if (this.attenuationDistance !== undefined)\n      data.attenuationDistance = this.attenuationDistance;\n    if (this.attenuationColor !== undefined)\n      data.attenuationColor = this.attenuationColor.getHex();\n\n    if (this.size !== undefined) data.size = this.size;\n    if (this.shadowSide !== null) data.shadowSide = this.shadowSide;\n    if (this.sizeAttenuation !== undefined)\n      data.sizeAttenuation = this.sizeAttenuation;\n\n    if (this.blending !== NormalBlending) data.blending = this.blending;\n    if (this.side !== FrontSide) data.side = this.side;\n    if (this.vertexColors) data.vertexColors = true;\n\n    if (this.opacity < 1) data.opacity = this.opacity;\n    if (this.format !== RGBAFormat) data.format = this.format;\n    if (this.transparent === true) data.transparent = this.transparent;\n\n    data.depthFunc = this.depthFunc;\n    data.depthTest = this.depthTest;\n    data.depthWrite = this.depthWrite;\n    data.colorWrite = this.colorWrite;\n\n    data.stencilWrite = this.stencilWrite;\n    data.stencilWriteMask = this.stencilWriteMask;\n    data.stencilFunc = this.stencilFunc;\n    data.stencilRef = this.stencilRef;\n    data.stencilFuncMask = this.stencilFuncMask;\n    data.stencilFail = this.stencilFail;\n    data.stencilZFail = this.stencilZFail;\n    data.stencilZPass = this.stencilZPass;\n\n    // rotation (SpriteMaterial)\n    if (this.rotation && this.rotation !== 0) data.rotation = this.rotation;\n\n    if (this.polygonOffset === true) data.polygonOffset = true;\n    if (this.polygonOffsetFactor !== 0)\n      data.polygonOffsetFactor = this.polygonOffsetFactor;\n    if (this.polygonOffsetUnits !== 0)\n      data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n    if (this.linewidth && this.linewidth !== 1) data.linewidth = this.linewidth;\n    if (this.dashSize !== undefined) data.dashSize = this.dashSize;\n    if (this.gapSize !== undefined) data.gapSize = this.gapSize;\n    if (this.scale !== undefined) data.scale = this.scale;\n\n    if (this.dithering === true) data.dithering = true;\n\n    if (this.alphaTest > 0) data.alphaTest = this.alphaTest;\n    if (this.alphaToCoverage === true)\n      data.alphaToCoverage = this.alphaToCoverage;\n    if (this.premultipliedAlpha === true)\n      data.premultipliedAlpha = this.premultipliedAlpha;\n\n    if (this.wireframe === true) data.wireframe = this.wireframe;\n    if (this.wireframeLinewidth > 1)\n      data.wireframeLinewidth = this.wireframeLinewidth;\n    if (this.wireframeLinecap !== \"round\")\n      data.wireframeLinecap = this.wireframeLinecap;\n    if (this.wireframeLinejoin !== \"round\")\n      data.wireframeLinejoin = this.wireframeLinejoin;\n\n    if (this.flatShading === true) data.flatShading = this.flatShading;\n\n    if (this.visible === false) data.visible = false;\n\n    if (this.toneMapped === false) data.toneMapped = false;\n\n    if (JSON.stringify(this.userData) !== \"{}\") data.userData = this.userData;\n\n    // TODO: Copied from Object3D.toJSON\n\n    function extractFromCache(cache) {\n      const values = [];\n\n      for (const key in cache) {\n        const data = cache[key];\n        delete data.metadata;\n        values.push(data);\n      }\n\n      return values;\n    }\n\n    if (isRoot) {\n      const textures = extractFromCache(meta.textures);\n      const images = extractFromCache(meta.images);\n\n      if (textures.length > 0) data.textures = textures;\n      if (images.length > 0) data.images = images;\n    }\n\n    return data;\n  }\n\n  clone() {\n    return new this.constructor().copy(this);\n  }\n\n  copy(source) {\n    this.name = source.name;\n\n    this.fog = source.fog;\n\n    this.blending = source.blending;\n    this.side = source.side;\n    this.vertexColors = source.vertexColors;\n\n    this.opacity = source.opacity;\n    this.format = source.format;\n    this.transparent = source.transparent;\n\n    this.blendSrc = source.blendSrc;\n    this.blendDst = source.blendDst;\n    this.blendEquation = source.blendEquation;\n    this.blendSrcAlpha = source.blendSrcAlpha;\n    this.blendDstAlpha = source.blendDstAlpha;\n    this.blendEquationAlpha = source.blendEquationAlpha;\n\n    this.depthFunc = source.depthFunc;\n    this.depthTest = source.depthTest;\n    this.depthWrite = source.depthWrite;\n\n    this.stencilWriteMask = source.stencilWriteMask;\n    this.stencilFunc = source.stencilFunc;\n    this.stencilRef = source.stencilRef;\n    this.stencilFuncMask = source.stencilFuncMask;\n    this.stencilFail = source.stencilFail;\n    this.stencilZFail = source.stencilZFail;\n    this.stencilZPass = source.stencilZPass;\n    this.stencilWrite = source.stencilWrite;\n\n    const srcPlanes = source.clippingPlanes;\n    let dstPlanes = null;\n\n    if (srcPlanes !== null) {\n      const n = srcPlanes.length;\n      dstPlanes = new Array(n);\n\n      for (let i = 0; i !== n; ++i) {\n        dstPlanes[i] = srcPlanes[i].clone();\n      }\n    }\n\n    this.clippingPlanes = dstPlanes;\n    this.clipIntersection = source.clipIntersection;\n    this.clipShadows = source.clipShadows;\n\n    this.shadowSide = source.shadowSide;\n\n    this.colorWrite = source.colorWrite;\n\n    this.precision = source.precision;\n\n    this.polygonOffset = source.polygonOffset;\n    this.polygonOffsetFactor = source.polygonOffsetFactor;\n    this.polygonOffsetUnits = source.polygonOffsetUnits;\n\n    this.dithering = source.dithering;\n\n    this.alphaTest = source.alphaTest;\n    this.alphaToCoverage = source.alphaToCoverage;\n    this.premultipliedAlpha = source.premultipliedAlpha;\n\n    this.visible = source.visible;\n\n    this.toneMapped = source.toneMapped;\n\n    this.userData = JSON.parse(JSON.stringify(source.userData));\n\n    return this;\n  }\n\n  dispose() {\n    this.dispatchEvent({ type: \"dispose\" });\n  }\n\n  set needsUpdate(value) {\n    if (value === true) this.version++;\n  }\n}\n\nMaterial.prototype.isMaterial = true;\n\nconst _colorKeywords = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32,\n};\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb(p, q, t) {\n  if (t < 0) t += 1;\n  if (t > 1) t -= 1;\n  if (t < 1 / 6) return p + (q - p) * 6 * t;\n  if (t < 1 / 2) return q;\n  if (t < 2 / 3) return p + (q - p) * 6 * (2 / 3 - t);\n  return p;\n}\n\nfunction SRGBToLinear(c) {\n  return c < 0.04045\n    ? c * 0.0773993808\n    : Math.pow(c * 0.9478672986 + 0.0521327014, 2.4);\n}\n\nfunction LinearToSRGB(c) {\n  return c < 0.0031308 ? c * 12.92 : 1.055 * Math.pow(c, 0.41666) - 0.055;\n}\n\nclass Color {\n  constructor(r, g, b) {\n    if (g === undefined && b === undefined) {\n      // r is THREE.Color, hex or string\n      return this.set(r);\n    }\n\n    return this.setRGB(r, g, b);\n  }\n\n  set(value) {\n    if (value && value.isColor) {\n      this.copy(value);\n    } else if (typeof value === \"number\") {\n      this.setHex(value);\n    } else if (typeof value === \"string\") {\n      this.setStyle(value);\n    }\n\n    return this;\n  }\n\n  setScalar(scalar) {\n    this.r = scalar;\n    this.g = scalar;\n    this.b = scalar;\n\n    return this;\n  }\n\n  setHex(hex) {\n    hex = Math.floor(hex);\n\n    this.r = ((hex >> 16) & 255) / 255;\n    this.g = ((hex >> 8) & 255) / 255;\n    this.b = (hex & 255) / 255;\n\n    return this;\n  }\n\n  setRGB(r, g, b) {\n    this.r = r;\n    this.g = g;\n    this.b = b;\n\n    return this;\n  }\n\n  setHSL(h, s, l) {\n    // h,s,l ranges are in 0.0 - 1.0\n    h = euclideanModulo(h, 1);\n    s = clamp(s, 0, 1);\n    l = clamp(l, 0, 1);\n\n    if (s === 0) {\n      this.r = this.g = this.b = l;\n    } else {\n      const p = l <= 0.5 ? l * (1 + s) : l + s - l * s;\n      const q = 2 * l - p;\n\n      this.r = hue2rgb(q, p, h + 1 / 3);\n      this.g = hue2rgb(q, p, h);\n      this.b = hue2rgb(q, p, h - 1 / 3);\n    }\n\n    return this;\n  }\n\n  setStyle(style) {\n    function handleAlpha(string) {\n      if (string === undefined) return;\n\n      if (parseFloat(string) < 1) {\n        console.warn(\n          \"THREE.Color: Alpha component of \" + style + \" will be ignored.\"\n        );\n      }\n    }\n\n    let m;\n\n    if ((m = /^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec(style))) {\n      // rgb / hsl\n\n      let color;\n      const name = m[1];\n      const components = m[2];\n\n      switch (name) {\n        case \"rgb\":\n        case \"rgba\":\n          if (\n            (color =\n              /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(\n                components\n              ))\n          ) {\n            // rgb(255,0,0) rgba(255,0,0,0.5)\n            this.r = Math.min(255, parseInt(color[1], 10)) / 255;\n            this.g = Math.min(255, parseInt(color[2], 10)) / 255;\n            this.b = Math.min(255, parseInt(color[3], 10)) / 255;\n\n            handleAlpha(color[4]);\n\n            return this;\n          }\n\n          if (\n            (color =\n              /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(\n                components\n              ))\n          ) {\n            // rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n            this.r = Math.min(100, parseInt(color[1], 10)) / 100;\n            this.g = Math.min(100, parseInt(color[2], 10)) / 100;\n            this.b = Math.min(100, parseInt(color[3], 10)) / 100;\n\n            handleAlpha(color[4]);\n\n            return this;\n          }\n\n          break;\n\n        case \"hsl\":\n        case \"hsla\":\n          if (\n            (color =\n              /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(\n                components\n              ))\n          ) {\n            // hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n            const h = parseFloat(color[1]) / 360;\n            const s = parseInt(color[2], 10) / 100;\n            const l = parseInt(color[3], 10) / 100;\n\n            handleAlpha(color[4]);\n\n            return this.setHSL(h, s, l);\n          }\n\n          break;\n      }\n    } else if ((m = /^\\#([A-Fa-f\\d]+)$/.exec(style))) {\n      // hex color\n\n      const hex = m[1];\n      const size = hex.length;\n\n      if (size === 3) {\n        // #ff0\n        this.r = parseInt(hex.charAt(0) + hex.charAt(0), 16) / 255;\n        this.g = parseInt(hex.charAt(1) + hex.charAt(1), 16) / 255;\n        this.b = parseInt(hex.charAt(2) + hex.charAt(2), 16) / 255;\n\n        return this;\n      } else if (size === 6) {\n        // #ff0000\n        this.r = parseInt(hex.charAt(0) + hex.charAt(1), 16) / 255;\n        this.g = parseInt(hex.charAt(2) + hex.charAt(3), 16) / 255;\n        this.b = parseInt(hex.charAt(4) + hex.charAt(5), 16) / 255;\n\n        return this;\n      }\n    }\n\n    if (style && style.length > 0) {\n      return this.setColorName(style);\n    }\n\n    return this;\n  }\n\n  setColorName(style) {\n    // color keywords\n    const hex = _colorKeywords[style.toLowerCase()];\n\n    if (hex !== undefined) {\n      // red\n      this.setHex(hex);\n    } else {\n      // unknown color\n      console.warn(\"THREE.Color: Unknown color \" + style);\n    }\n\n    return this;\n  }\n\n  clone() {\n    return new this.constructor(this.r, this.g, this.b);\n  }\n\n  copy(color) {\n    this.r = color.r;\n    this.g = color.g;\n    this.b = color.b;\n\n    return this;\n  }\n\n  copyGammaToLinear(color, gammaFactor = 2.0) {\n    this.r = Math.pow(color.r, gammaFactor);\n    this.g = Math.pow(color.g, gammaFactor);\n    this.b = Math.pow(color.b, gammaFactor);\n\n    return this;\n  }\n\n  copyLinearToGamma(color, gammaFactor = 2.0) {\n    const safeInverse = gammaFactor > 0 ? 1.0 / gammaFactor : 1.0;\n\n    this.r = Math.pow(color.r, safeInverse);\n    this.g = Math.pow(color.g, safeInverse);\n    this.b = Math.pow(color.b, safeInverse);\n\n    return this;\n  }\n\n  convertGammaToLinear(gammaFactor) {\n    this.copyGammaToLinear(this, gammaFactor);\n\n    return this;\n  }\n\n  convertLinearToGamma(gammaFactor) {\n    this.copyLinearToGamma(this, gammaFactor);\n\n    return this;\n  }\n\n  copySRGBToLinear(color) {\n    this.r = SRGBToLinear(color.r);\n    this.g = SRGBToLinear(color.g);\n    this.b = SRGBToLinear(color.b);\n\n    return this;\n  }\n\n  copyLinearToSRGB(color) {\n    this.r = LinearToSRGB(color.r);\n    this.g = LinearToSRGB(color.g);\n    this.b = LinearToSRGB(color.b);\n\n    return this;\n  }\n\n  convertSRGBToLinear() {\n    this.copySRGBToLinear(this);\n\n    return this;\n  }\n\n  convertLinearToSRGB() {\n    this.copyLinearToSRGB(this);\n\n    return this;\n  }\n\n  getHex() {\n    return (\n      ((this.r * 255) << 16) ^ ((this.g * 255) << 8) ^ ((this.b * 255) << 0)\n    );\n  }\n\n  getHexString() {\n    return (\"000000\" + this.getHex().toString(16)).slice(-6);\n  }\n\n  getHSL(target) {\n    // h,s,l ranges are in 0.0 - 1.0\n\n    const r = this.r,\n      g = this.g,\n      b = this.b;\n\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n\n    let hue, saturation;\n    const lightness = (min + max) / 2.0;\n\n    if (min === max) {\n      hue = 0;\n      saturation = 0;\n    } else {\n      const delta = max - min;\n\n      saturation =\n        lightness <= 0.5 ? delta / (max + min) : delta / (2 - max - min);\n\n      switch (max) {\n        case r:\n          hue = (g - b) / delta + (g < b ? 6 : 0);\n          break;\n        case g:\n          hue = (b - r) / delta + 2;\n          break;\n        case b:\n          hue = (r - g) / delta + 4;\n          break;\n      }\n\n      hue /= 6;\n    }\n\n    target.h = hue;\n    target.s = saturation;\n    target.l = lightness;\n\n    return target;\n  }\n\n  getStyle() {\n    return (\n      \"rgb(\" +\n      ((this.r * 255) | 0) +\n      \",\" +\n      ((this.g * 255) | 0) +\n      \",\" +\n      ((this.b * 255) | 0) +\n      \")\"\n    );\n  }\n\n  offsetHSL(h, s, l) {\n    this.getHSL(_hslA);\n\n    _hslA.h += h;\n    _hslA.s += s;\n    _hslA.l += l;\n\n    this.setHSL(_hslA.h, _hslA.s, _hslA.l);\n\n    return this;\n  }\n\n  add(color) {\n    this.r += color.r;\n    this.g += color.g;\n    this.b += color.b;\n\n    return this;\n  }\n\n  addColors(color1, color2) {\n    this.r = color1.r + color2.r;\n    this.g = color1.g + color2.g;\n    this.b = color1.b + color2.b;\n\n    return this;\n  }\n\n  addScalar(s) {\n    this.r += s;\n    this.g += s;\n    this.b += s;\n\n    return this;\n  }\n\n  sub(color) {\n    this.r = Math.max(0, this.r - color.r);\n    this.g = Math.max(0, this.g - color.g);\n    this.b = Math.max(0, this.b - color.b);\n\n    return this;\n  }\n\n  multiply(color) {\n    this.r *= color.r;\n    this.g *= color.g;\n    this.b *= color.b;\n\n    return this;\n  }\n\n  multiplyScalar(s) {\n    this.r *= s;\n    this.g *= s;\n    this.b *= s;\n\n    return this;\n  }\n\n  lerp(color, alpha) {\n    this.r += (color.r - this.r) * alpha;\n    this.g += (color.g - this.g) * alpha;\n    this.b += (color.b - this.b) * alpha;\n\n    return this;\n  }\n\n  lerpColors(color1, color2, alpha) {\n    this.r = color1.r + (color2.r - color1.r) * alpha;\n    this.g = color1.g + (color2.g - color1.g) * alpha;\n    this.b = color1.b + (color2.b - color1.b) * alpha;\n\n    return this;\n  }\n\n  lerpHSL(color, alpha) {\n    this.getHSL(_hslA);\n    color.getHSL(_hslB);\n\n    const h = lerp(_hslA.h, _hslB.h, alpha);\n    const s = lerp(_hslA.s, _hslB.s, alpha);\n    const l = lerp(_hslA.l, _hslB.l, alpha);\n\n    this.setHSL(h, s, l);\n\n    return this;\n  }\n\n  equals(c) {\n    return c.r === this.r && c.g === this.g && c.b === this.b;\n  }\n\n  fromArray(array, offset = 0) {\n    this.r = array[offset];\n    this.g = array[offset + 1];\n    this.b = array[offset + 2];\n\n    return this;\n  }\n\n  toArray(array = [], offset = 0) {\n    array[offset] = this.r;\n    array[offset + 1] = this.g;\n    array[offset + 2] = this.b;\n\n    return array;\n  }\n\n  fromBufferAttribute(attribute, index) {\n    this.r = attribute.getX(index);\n    this.g = attribute.getY(index);\n    this.b = attribute.getZ(index);\n\n    if (attribute.normalized === true) {\n      // assuming Uint8Array\n\n      this.r /= 255;\n      this.g /= 255;\n      this.b /= 255;\n    }\n\n    return this;\n  }\n\n  toJSON() {\n    return this.getHex();\n  }\n}\n\nColor.NAMES = _colorKeywords;\n\nColor.prototype.isColor = true;\nColor.prototype.r = 1;\nColor.prototype.g = 1;\nColor.prototype.b = 1;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n * }\n */\n\nclass MeshBasicMaterial extends Material {\n  constructor(parameters) {\n    super();\n\n    this.type = \"MeshBasicMaterial\";\n\n    this.color = new Color(0xffffff); // emissive\n\n    this.map = null;\n\n    this.lightMap = null;\n    this.lightMapIntensity = 1.0;\n\n    this.aoMap = null;\n    this.aoMapIntensity = 1.0;\n\n    this.specularMap = null;\n\n    this.alphaMap = null;\n\n    this.envMap = null;\n    this.combine = MultiplyOperation;\n    this.reflectivity = 1;\n    this.refractionRatio = 0.98;\n\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.wireframeLinecap = \"round\";\n    this.wireframeLinejoin = \"round\";\n\n    this.setValues(parameters);\n  }\n\n  copy(source) {\n    super.copy(source);\n\n    this.color.copy(source.color);\n\n    this.map = source.map;\n\n    this.lightMap = source.lightMap;\n    this.lightMapIntensity = source.lightMapIntensity;\n\n    this.aoMap = source.aoMap;\n    this.aoMapIntensity = source.aoMapIntensity;\n\n    this.specularMap = source.specularMap;\n\n    this.alphaMap = source.alphaMap;\n\n    this.envMap = source.envMap;\n    this.combine = source.combine;\n    this.reflectivity = source.reflectivity;\n    this.refractionRatio = source.refractionRatio;\n\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.wireframeLinecap = source.wireframeLinecap;\n    this.wireframeLinejoin = source.wireframeLinejoin;\n\n    return this;\n  }\n}\n\nMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n  constructor(array, itemSize, normalized) {\n    if (Array.isArray(array)) {\n      throw new TypeError(\n        \"THREE.BufferAttribute: array should be a Typed Array.\"\n      );\n    }\n\n    this.name = \"\";\n\n    this.array = array;\n    this.itemSize = itemSize;\n    this.count = array !== undefined ? array.length / itemSize : 0;\n    this.normalized = normalized === true;\n\n    this.usage = StaticDrawUsage;\n    this.updateRange = { offset: 0, count: -1 };\n\n    this.version = 0;\n  }\n\n  onUploadCallback() {}\n\n  set needsUpdate(value) {\n    if (value === true) this.version++;\n  }\n\n  setUsage(value) {\n    this.usage = value;\n\n    return this;\n  }\n\n  copy(source) {\n    this.name = source.name;\n    this.array = new source.array.constructor(source.array);\n    this.itemSize = source.itemSize;\n    this.count = source.count;\n    this.normalized = source.normalized;\n\n    this.usage = source.usage;\n\n    return this;\n  }\n\n  copyAt(index1, attribute, index2) {\n    index1 *= this.itemSize;\n    index2 *= attribute.itemSize;\n\n    for (let i = 0, l = this.itemSize; i < l; i++) {\n      this.array[index1 + i] = attribute.array[index2 + i];\n    }\n\n    return this;\n  }\n\n  copyArray(array) {\n    this.array.set(array);\n\n    return this;\n  }\n\n  copyColorsArray(colors) {\n    const array = this.array;\n    let offset = 0;\n\n    for (let i = 0, l = colors.length; i < l; i++) {\n      let color = colors[i];\n\n      if (color === undefined) {\n        console.warn(\n          \"THREE.BufferAttribute.copyColorsArray(): color is undefined\",\n          i\n        );\n        color = new Color();\n      }\n\n      array[offset++] = color.r;\n      array[offset++] = color.g;\n      array[offset++] = color.b;\n    }\n\n    return this;\n  }\n\n  copyVector2sArray(vectors) {\n    const array = this.array;\n    let offset = 0;\n\n    for (let i = 0, l = vectors.length; i < l; i++) {\n      let vector = vectors[i];\n\n      if (vector === undefined) {\n        console.warn(\n          \"THREE.BufferAttribute.copyVector2sArray(): vector is undefined\",\n          i\n        );\n        vector = new Vector2();\n      }\n\n      array[offset++] = vector.x;\n      array[offset++] = vector.y;\n    }\n\n    return this;\n  }\n\n  copyVector3sArray(vectors) {\n    const array = this.array;\n    let offset = 0;\n\n    for (let i = 0, l = vectors.length; i < l; i++) {\n      let vector = vectors[i];\n\n      if (vector === undefined) {\n        console.warn(\n          \"THREE.BufferAttribute.copyVector3sArray(): vector is undefined\",\n          i\n        );\n        vector = new Vector3();\n      }\n\n      array[offset++] = vector.x;\n      array[offset++] = vector.y;\n      array[offset++] = vector.z;\n    }\n\n    return this;\n  }\n\n  copyVector4sArray(vectors) {\n    const array = this.array;\n    let offset = 0;\n\n    for (let i = 0, l = vectors.length; i < l; i++) {\n      let vector = vectors[i];\n\n      if (vector === undefined) {\n        console.warn(\n          \"THREE.BufferAttribute.copyVector4sArray(): vector is undefined\",\n          i\n        );\n        vector = new Vector4();\n      }\n\n      array[offset++] = vector.x;\n      array[offset++] = vector.y;\n      array[offset++] = vector.z;\n      array[offset++] = vector.w;\n    }\n\n    return this;\n  }\n\n  applyMatrix3(m) {\n    if (this.itemSize === 2) {\n      for (let i = 0, l = this.count; i < l; i++) {\n        _vector2$1.fromBufferAttribute(this, i);\n        _vector2$1.applyMatrix3(m);\n\n        this.setXY(i, _vector2$1.x, _vector2$1.y);\n      }\n    } else if (this.itemSize === 3) {\n      for (let i = 0, l = this.count; i < l; i++) {\n        _vector$9.fromBufferAttribute(this, i);\n        _vector$9.applyMatrix3(m);\n\n        this.setXYZ(i, _vector$9.x, _vector$9.y, _vector$9.z);\n      }\n    }\n\n    return this;\n  }\n\n  applyMatrix4(m) {\n    for (let i = 0, l = this.count; i < l; i++) {\n      _vector$9.x = this.getX(i);\n      _vector$9.y = this.getY(i);\n      _vector$9.z = this.getZ(i);\n\n      _vector$9.applyMatrix4(m);\n\n      this.setXYZ(i, _vector$9.x, _vector$9.y, _vector$9.z);\n    }\n\n    return this;\n  }\n\n  applyNormalMatrix(m) {\n    for (let i = 0, l = this.count; i < l; i++) {\n      _vector$9.x = this.getX(i);\n      _vector$9.y = this.getY(i);\n      _vector$9.z = this.getZ(i);\n\n      _vector$9.applyNormalMatrix(m);\n\n      this.setXYZ(i, _vector$9.x, _vector$9.y, _vector$9.z);\n    }\n\n    return this;\n  }\n\n  transformDirection(m) {\n    for (let i = 0, l = this.count; i < l; i++) {\n      _vector$9.x = this.getX(i);\n      _vector$9.y = this.getY(i);\n      _vector$9.z = this.getZ(i);\n\n      _vector$9.transformDirection(m);\n\n      this.setXYZ(i, _vector$9.x, _vector$9.y, _vector$9.z);\n    }\n\n    return this;\n  }\n\n  set(value, offset = 0) {\n    this.array.set(value, offset);\n\n    return this;\n  }\n\n  getX(index) {\n    return this.array[index * this.itemSize];\n  }\n\n  setX(index, x) {\n    this.array[index * this.itemSize] = x;\n\n    return this;\n  }\n\n  getY(index) {\n    return this.array[index * this.itemSize + 1];\n  }\n\n  setY(index, y) {\n    this.array[index * this.itemSize + 1] = y;\n\n    return this;\n  }\n\n  getZ(index) {\n    return this.array[index * this.itemSize + 2];\n  }\n\n  setZ(index, z) {\n    this.array[index * this.itemSize + 2] = z;\n\n    return this;\n  }\n\n  getW(index) {\n    return this.array[index * this.itemSize + 3];\n  }\n\n  setW(index, w) {\n    this.array[index * this.itemSize + 3] = w;\n\n    return this;\n  }\n\n  setXY(index, x, y) {\n    index *= this.itemSize;\n\n    this.array[index + 0] = x;\n    this.array[index + 1] = y;\n\n    return this;\n  }\n\n  setXYZ(index, x, y, z) {\n    index *= this.itemSize;\n\n    this.array[index + 0] = x;\n    this.array[index + 1] = y;\n    this.array[index + 2] = z;\n\n    return this;\n  }\n\n  setXYZW(index, x, y, z, w) {\n    index *= this.itemSize;\n\n    this.array[index + 0] = x;\n    this.array[index + 1] = y;\n    this.array[index + 2] = z;\n    this.array[index + 3] = w;\n\n    return this;\n  }\n\n  onUpload(callback) {\n    this.onUploadCallback = callback;\n\n    return this;\n  }\n\n  clone() {\n    return new this.constructor(this.array, this.itemSize).copy(this);\n  }\n\n  toJSON() {\n    const data = {\n      itemSize: this.itemSize,\n      type: this.array.constructor.name,\n      array: Array.prototype.slice.call(this.array),\n      normalized: this.normalized,\n    };\n\n    if (this.name !== \"\") data.name = this.name;\n    if (this.usage !== StaticDrawUsage) data.usage = this.usage;\n    if (this.updateRange.offset !== 0 || this.updateRange.count !== -1)\n      data.updateRange = this.updateRange;\n\n    return data;\n  }\n}\n\nBufferAttribute.prototype.isBufferAttribute = true;\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n  constructor(array, itemSize, normalized) {\n    super(new Int8Array(array), itemSize, normalized);\n  }\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n  constructor(array, itemSize, normalized) {\n    super(new Uint8Array(array), itemSize, normalized);\n  }\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n  constructor(array, itemSize, normalized) {\n    super(new Uint8ClampedArray(array), itemSize, normalized);\n  }\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n  constructor(array, itemSize, normalized) {\n    super(new Int16Array(array), itemSize, normalized);\n  }\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n  constructor(array, itemSize, normalized) {\n    super(new Uint16Array(array), itemSize, normalized);\n  }\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n  constructor(array, itemSize, normalized) {\n    super(new Int32Array(array), itemSize, normalized);\n  }\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n  constructor(array, itemSize, normalized) {\n    super(new Uint32Array(array), itemSize, normalized);\n  }\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n  constructor(array, itemSize, normalized) {\n    super(new Uint16Array(array), itemSize, normalized);\n  }\n}\n\nFloat16BufferAttribute.prototype.isFloat16BufferAttribute = true;\n\nclass Float32BufferAttribute extends BufferAttribute {\n  constructor(array, itemSize, normalized) {\n    super(new Float32Array(array), itemSize, normalized);\n  }\n}\n\nclass Float64BufferAttribute extends BufferAttribute {\n  constructor(array, itemSize, normalized) {\n    super(new Float64Array(array), itemSize, normalized);\n  }\n}\n\nlet _id = 0;\n\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box$1 = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector$8 = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n  constructor() {\n    super();\n\n    Object.defineProperty(this, \"id\", { value: _id++ });\n\n    this.uuid = generateUUID();\n\n    this.name = \"\";\n    this.type = \"BufferGeometry\";\n\n    this.index = null;\n    this.attributes = {};\n\n    this.morphAttributes = {};\n    this.morphTargetsRelative = false;\n\n    this.groups = [];\n\n    this.boundingBox = null;\n    this.boundingSphere = null;\n\n    this.drawRange = { start: 0, count: Infinity };\n\n    this.userData = {};\n  }\n\n  getIndex() {\n    return this.index;\n  }\n\n  setIndex(index) {\n    if (Array.isArray(index)) {\n      this.index = new (\n        arrayMax(index) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute\n      )(index, 1);\n    } else {\n      this.index = index;\n    }\n\n    return this;\n  }\n\n  getAttribute(name) {\n    return this.attributes[name];\n  }\n\n  setAttribute(name, attribute) {\n    this.attributes[name] = attribute;\n\n    return this;\n  }\n\n  deleteAttribute(name) {\n    delete this.attributes[name];\n\n    return this;\n  }\n\n  hasAttribute(name) {\n    return this.attributes[name] !== undefined;\n  }\n\n  addGroup(start, count, materialIndex = 0) {\n    this.groups.push({\n      start: start,\n      count: count,\n      materialIndex: materialIndex,\n    });\n  }\n\n  clearGroups() {\n    this.groups = [];\n  }\n\n  setDrawRange(start, count) {\n    this.drawRange.start = start;\n    this.drawRange.count = count;\n  }\n\n  applyMatrix4(matrix) {\n    const position = this.attributes.position;\n\n    if (position !== undefined) {\n      position.applyMatrix4(matrix);\n\n      position.needsUpdate = true;\n    }\n\n    const normal = this.attributes.normal;\n\n    if (normal !== undefined) {\n      const normalMatrix = new Matrix3().getNormalMatrix(matrix);\n\n      normal.applyNormalMatrix(normalMatrix);\n\n      normal.needsUpdate = true;\n    }\n\n    const tangent = this.attributes.tangent;\n\n    if (tangent !== undefined) {\n      tangent.transformDirection(matrix);\n\n      tangent.needsUpdate = true;\n    }\n\n    if (this.boundingBox !== null) {\n      this.computeBoundingBox();\n    }\n\n    if (this.boundingSphere !== null) {\n      this.computeBoundingSphere();\n    }\n\n    return this;\n  }\n\n  applyQuaternion(q) {\n    _m1.makeRotationFromQuaternion(q);\n\n    this.applyMatrix4(_m1);\n\n    return this;\n  }\n\n  rotateX(angle) {\n    // rotate geometry around world x-axis\n\n    _m1.makeRotationX(angle);\n\n    this.applyMatrix4(_m1);\n\n    return this;\n  }\n\n  rotateY(angle) {\n    // rotate geometry around world y-axis\n\n    _m1.makeRotationY(angle);\n\n    this.applyMatrix4(_m1);\n\n    return this;\n  }\n\n  rotateZ(angle) {\n    // rotate geometry around world z-axis\n\n    _m1.makeRotationZ(angle);\n\n    this.applyMatrix4(_m1);\n\n    return this;\n  }\n\n  translate(x, y, z) {\n    // translate geometry\n\n    _m1.makeTranslation(x, y, z);\n\n    this.applyMatrix4(_m1);\n\n    return this;\n  }\n\n  scale(x, y, z) {\n    // scale geometry\n\n    _m1.makeScale(x, y, z);\n\n    this.applyMatrix4(_m1);\n\n    return this;\n  }\n\n  lookAt(vector) {\n    _obj.lookAt(vector);\n\n    _obj.updateMatrix();\n\n    this.applyMatrix4(_obj.matrix);\n\n    return this;\n  }\n\n  center() {\n    this.computeBoundingBox();\n\n    this.boundingBox.getCenter(_offset).negate();\n\n    this.translate(_offset.x, _offset.y, _offset.z);\n\n    return this;\n  }\n\n  setFromPoints(points) {\n    const position = [];\n\n    for (let i = 0, l = points.length; i < l; i++) {\n      const point = points[i];\n      position.push(point.x, point.y, point.z || 0);\n    }\n\n    this.setAttribute(\"position\", new Float32BufferAttribute(position, 3));\n\n    return this;\n  }\n\n  computeBoundingBox() {\n    if (this.boundingBox === null) {\n      this.boundingBox = new Box3();\n    }\n\n    const position = this.attributes.position;\n    const morphAttributesPosition = this.morphAttributes.position;\n\n    if (position && position.isGLBufferAttribute) {\n      console.error(\n        'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".',\n        this\n      );\n\n      this.boundingBox.set(\n        new Vector3(-Infinity, -Infinity, -Infinity),\n        new Vector3(+Infinity, +Infinity, +Infinity)\n      );\n\n      return;\n    }\n\n    if (position !== undefined) {\n      this.boundingBox.setFromBufferAttribute(position);\n\n      // process morph attributes if present\n\n      if (morphAttributesPosition) {\n        for (let i = 0, il = morphAttributesPosition.length; i < il; i++) {\n          const morphAttribute = morphAttributesPosition[i];\n          _box$1.setFromBufferAttribute(morphAttribute);\n\n          if (this.morphTargetsRelative) {\n            _vector$8.addVectors(this.boundingBox.min, _box$1.min);\n            this.boundingBox.expandByPoint(_vector$8);\n\n            _vector$8.addVectors(this.boundingBox.max, _box$1.max);\n            this.boundingBox.expandByPoint(_vector$8);\n          } else {\n            this.boundingBox.expandByPoint(_box$1.min);\n            this.boundingBox.expandByPoint(_box$1.max);\n          }\n        }\n      }\n    } else {\n      this.boundingBox.makeEmpty();\n    }\n\n    if (\n      isNaN(this.boundingBox.min.x) ||\n      isNaN(this.boundingBox.min.y) ||\n      isNaN(this.boundingBox.min.z)\n    ) {\n      console.error(\n        'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.',\n        this\n      );\n    }\n  }\n\n  computeBoundingSphere() {\n    if (this.boundingSphere === null) {\n      this.boundingSphere = new Sphere();\n    }\n\n    const position = this.attributes.position;\n    const morphAttributesPosition = this.morphAttributes.position;\n\n    if (position && position.isGLBufferAttribute) {\n      console.error(\n        'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".',\n        this\n      );\n\n      this.boundingSphere.set(new Vector3(), Infinity);\n\n      return;\n    }\n\n    if (position) {\n      // first, find the center of the bounding sphere\n\n      const center = this.boundingSphere.center;\n\n      _box$1.setFromBufferAttribute(position);\n\n      // process morph attributes if present\n\n      if (morphAttributesPosition) {\n        for (let i = 0, il = morphAttributesPosition.length; i < il; i++) {\n          const morphAttribute = morphAttributesPosition[i];\n          _boxMorphTargets.setFromBufferAttribute(morphAttribute);\n\n          if (this.morphTargetsRelative) {\n            _vector$8.addVectors(_box$1.min, _boxMorphTargets.min);\n            _box$1.expandByPoint(_vector$8);\n\n            _vector$8.addVectors(_box$1.max, _boxMorphTargets.max);\n            _box$1.expandByPoint(_vector$8);\n          } else {\n            _box$1.expandByPoint(_boxMorphTargets.min);\n            _box$1.expandByPoint(_boxMorphTargets.max);\n          }\n        }\n      }\n\n      _box$1.getCenter(center);\n\n      // second, try to find a boundingSphere with a radius smaller than the\n      // boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n      let maxRadiusSq = 0;\n\n      for (let i = 0, il = position.count; i < il; i++) {\n        _vector$8.fromBufferAttribute(position, i);\n\n        maxRadiusSq = Math.max(\n          maxRadiusSq,\n          center.distanceToSquared(_vector$8)\n        );\n      }\n\n      // process morph attributes if present\n\n      if (morphAttributesPosition) {\n        for (let i = 0, il = morphAttributesPosition.length; i < il; i++) {\n          const morphAttribute = morphAttributesPosition[i];\n          const morphTargetsRelative = this.morphTargetsRelative;\n\n          for (let j = 0, jl = morphAttribute.count; j < jl; j++) {\n            _vector$8.fromBufferAttribute(morphAttribute, j);\n\n            if (morphTargetsRelative) {\n              _offset.fromBufferAttribute(position, j);\n              _vector$8.add(_offset);\n            }\n\n            maxRadiusSq = Math.max(\n              maxRadiusSq,\n              center.distanceToSquared(_vector$8)\n            );\n          }\n        }\n      }\n\n      this.boundingSphere.radius = Math.sqrt(maxRadiusSq);\n\n      if (isNaN(this.boundingSphere.radius)) {\n        console.error(\n          'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.',\n          this\n        );\n      }\n    }\n  }\n\n  computeTangents() {\n    const index = this.index;\n    const attributes = this.attributes;\n\n    // based on http://www.terathon.com/code/tangent.html\n    // (per vertex tangents)\n\n    if (\n      index === null ||\n      attributes.position === undefined ||\n      attributes.normal === undefined ||\n      attributes.uv === undefined\n    ) {\n      console.error(\n        \"THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)\"\n      );\n      return;\n    }\n\n    const indices = index.array;\n    const positions = attributes.position.array;\n    const normals = attributes.normal.array;\n    const uvs = attributes.uv.array;\n\n    const nVertices = positions.length / 3;\n\n    if (attributes.tangent === undefined) {\n      this.setAttribute(\n        \"tangent\",\n        new BufferAttribute(new Float32Array(4 * nVertices), 4)\n      );\n    }\n\n    const tangents = attributes.tangent.array;\n\n    const tan1 = [],\n      tan2 = [];\n\n    for (let i = 0; i < nVertices; i++) {\n      tan1[i] = new Vector3();\n      tan2[i] = new Vector3();\n    }\n\n    const vA = new Vector3(),\n      vB = new Vector3(),\n      vC = new Vector3(),\n      uvA = new Vector2(),\n      uvB = new Vector2(),\n      uvC = new Vector2(),\n      sdir = new Vector3(),\n      tdir = new Vector3();\n\n    function handleTriangle(a, b, c) {\n      vA.fromArray(positions, a * 3);\n      vB.fromArray(positions, b * 3);\n      vC.fromArray(positions, c * 3);\n\n      uvA.fromArray(uvs, a * 2);\n      uvB.fromArray(uvs, b * 2);\n      uvC.fromArray(uvs, c * 2);\n\n      vB.sub(vA);\n      vC.sub(vA);\n\n      uvB.sub(uvA);\n      uvC.sub(uvA);\n\n      const r = 1.0 / (uvB.x * uvC.y - uvC.x * uvB.y);\n\n      // silently ignore degenerate uv triangles having coincident or colinear vertices\n\n      if (!isFinite(r)) return;\n\n      sdir\n        .copy(vB)\n        .multiplyScalar(uvC.y)\n        .addScaledVector(vC, -uvB.y)\n        .multiplyScalar(r);\n      tdir\n        .copy(vC)\n        .multiplyScalar(uvB.x)\n        .addScaledVector(vB, -uvC.x)\n        .multiplyScalar(r);\n\n      tan1[a].add(sdir);\n      tan1[b].add(sdir);\n      tan1[c].add(sdir);\n\n      tan2[a].add(tdir);\n      tan2[b].add(tdir);\n      tan2[c].add(tdir);\n    }\n\n    let groups = this.groups;\n\n    if (groups.length === 0) {\n      groups = [\n        {\n          start: 0,\n          count: indices.length,\n        },\n      ];\n    }\n\n    for (let i = 0, il = groups.length; i < il; ++i) {\n      const group = groups[i];\n\n      const start = group.start;\n      const count = group.count;\n\n      for (let j = start, jl = start + count; j < jl; j += 3) {\n        handleTriangle(indices[j + 0], indices[j + 1], indices[j + 2]);\n      }\n    }\n\n    const tmp = new Vector3(),\n      tmp2 = new Vector3();\n    const n = new Vector3(),\n      n2 = new Vector3();\n\n    function handleVertex(v) {\n      n.fromArray(normals, v * 3);\n      n2.copy(n);\n\n      const t = tan1[v];\n\n      // Gram-Schmidt orthogonalize\n\n      tmp.copy(t);\n      tmp.sub(n.multiplyScalar(n.dot(t))).normalize();\n\n      // Calculate handedness\n\n      tmp2.crossVectors(n2, t);\n      const test = tmp2.dot(tan2[v]);\n      const w = test < 0.0 ? -1.0 : 1.0;\n\n      tangents[v * 4] = tmp.x;\n      tangents[v * 4 + 1] = tmp.y;\n      tangents[v * 4 + 2] = tmp.z;\n      tangents[v * 4 + 3] = w;\n    }\n\n    for (let i = 0, il = groups.length; i < il; ++i) {\n      const group = groups[i];\n\n      const start = group.start;\n      const count = group.count;\n\n      for (let j = start, jl = start + count; j < jl; j += 3) {\n        handleVertex(indices[j + 0]);\n        handleVertex(indices[j + 1]);\n        handleVertex(indices[j + 2]);\n      }\n    }\n  }\n\n  computeVertexNormals() {\n    const index = this.index;\n    const positionAttribute = this.getAttribute(\"position\");\n\n    if (positionAttribute !== undefined) {\n      let normalAttribute = this.getAttribute(\"normal\");\n\n      if (normalAttribute === undefined) {\n        normalAttribute = new BufferAttribute(\n          new Float32Array(positionAttribute.count * 3),\n          3\n        );\n        this.setAttribute(\"normal\", normalAttribute);\n      } else {\n        // reset existing normals to zero\n\n        for (let i = 0, il = normalAttribute.count; i < il; i++) {\n          normalAttribute.setXYZ(i, 0, 0, 0);\n        }\n      }\n\n      const pA = new Vector3(),\n        pB = new Vector3(),\n        pC = new Vector3();\n      const nA = new Vector3(),\n        nB = new Vector3(),\n        nC = new Vector3();\n      const cb = new Vector3(),\n        ab = new Vector3();\n\n      // indexed elements\n\n      if (index) {\n        for (let i = 0, il = index.count; i < il; i += 3) {\n          const vA = index.getX(i + 0);\n          const vB = index.getX(i + 1);\n          const vC = index.getX(i + 2);\n\n          pA.fromBufferAttribute(positionAttribute, vA);\n          pB.fromBufferAttribute(positionAttribute, vB);\n          pC.fromBufferAttribute(positionAttribute, vC);\n\n          cb.subVectors(pC, pB);\n          ab.subVectors(pA, pB);\n          cb.cross(ab);\n\n          nA.fromBufferAttribute(normalAttribute, vA);\n          nB.fromBufferAttribute(normalAttribute, vB);\n          nC.fromBufferAttribute(normalAttribute, vC);\n\n          nA.add(cb);\n          nB.add(cb);\n          nC.add(cb);\n\n          normalAttribute.setXYZ(vA, nA.x, nA.y, nA.z);\n          normalAttribute.setXYZ(vB, nB.x, nB.y, nB.z);\n          normalAttribute.setXYZ(vC, nC.x, nC.y, nC.z);\n        }\n      } else {\n        // non-indexed elements (unconnected triangle soup)\n\n        for (let i = 0, il = positionAttribute.count; i < il; i += 3) {\n          pA.fromBufferAttribute(positionAttribute, i + 0);\n          pB.fromBufferAttribute(positionAttribute, i + 1);\n          pC.fromBufferAttribute(positionAttribute, i + 2);\n\n          cb.subVectors(pC, pB);\n          ab.subVectors(pA, pB);\n          cb.cross(ab);\n\n          normalAttribute.setXYZ(i + 0, cb.x, cb.y, cb.z);\n          normalAttribute.setXYZ(i + 1, cb.x, cb.y, cb.z);\n          normalAttribute.setXYZ(i + 2, cb.x, cb.y, cb.z);\n        }\n      }\n\n      this.normalizeNormals();\n\n      normalAttribute.needsUpdate = true;\n    }\n  }\n\n  merge(geometry, offset) {\n    if (!(geometry && geometry.isBufferGeometry)) {\n      console.error(\n        \"THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.\",\n        geometry\n      );\n      return;\n    }\n\n    if (offset === undefined) {\n      offset = 0;\n\n      console.warn(\n        \"THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. \" +\n          \"Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.\"\n      );\n    }\n\n    const attributes = this.attributes;\n\n    for (const key in attributes) {\n      if (geometry.attributes[key] === undefined) continue;\n\n      const attribute1 = attributes[key];\n      const attributeArray1 = attribute1.array;\n\n      const attribute2 = geometry.attributes[key];\n      const attributeArray2 = attribute2.array;\n\n      const attributeOffset = attribute2.itemSize * offset;\n      const length = Math.min(\n        attributeArray2.length,\n        attributeArray1.length - attributeOffset\n      );\n\n      for (let i = 0, j = attributeOffset; i < length; i++, j++) {\n        attributeArray1[j] = attributeArray2[i];\n      }\n    }\n\n    return this;\n  }\n\n  normalizeNormals() {\n    const normals = this.attributes.normal;\n\n    for (let i = 0, il = normals.count; i < il; i++) {\n      _vector$8.fromBufferAttribute(normals, i);\n\n      _vector$8.normalize();\n\n      normals.setXYZ(i, _vector$8.x, _vector$8.y, _vector$8.z);\n    }\n  }\n\n  toNonIndexed() {\n    function convertBufferAttribute(attribute, indices) {\n      const array = attribute.array;\n      const itemSize = attribute.itemSize;\n      const normalized = attribute.normalized;\n\n      const array2 = new array.constructor(indices.length * itemSize);\n\n      let index = 0,\n        index2 = 0;\n\n      for (let i = 0, l = indices.length; i < l; i++) {\n        if (attribute.isInterleavedBufferAttribute) {\n          index = indices[i] * attribute.data.stride + attribute.offset;\n        } else {\n          index = indices[i] * itemSize;\n        }\n\n        for (let j = 0; j < itemSize; j++) {\n          array2[index2++] = array[index++];\n        }\n      }\n\n      return new BufferAttribute(array2, itemSize, normalized);\n    }\n\n    //\n\n    if (this.index === null) {\n      console.warn(\n        \"THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.\"\n      );\n      return this;\n    }\n\n    const geometry2 = new BufferGeometry();\n\n    const indices = this.index.array;\n    const attributes = this.attributes;\n\n    // attributes\n\n    for (const name in attributes) {\n      const attribute = attributes[name];\n\n      const newAttribute = convertBufferAttribute(attribute, indices);\n\n      geometry2.setAttribute(name, newAttribute);\n    }\n\n    // morph attributes\n\n    const morphAttributes = this.morphAttributes;\n\n    for (const name in morphAttributes) {\n      const morphArray = [];\n      const morphAttribute = morphAttributes[name]; // morphAttribute: array of Float32BufferAttributes\n\n      for (let i = 0, il = morphAttribute.length; i < il; i++) {\n        const attribute = morphAttribute[i];\n\n        const newAttribute = convertBufferAttribute(attribute, indices);\n\n        morphArray.push(newAttribute);\n      }\n\n      geometry2.morphAttributes[name] = morphArray;\n    }\n\n    geometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n    // groups\n\n    const groups = this.groups;\n\n    for (let i = 0, l = groups.length; i < l; i++) {\n      const group = groups[i];\n      geometry2.addGroup(group.start, group.count, group.materialIndex);\n    }\n\n    return geometry2;\n  }\n\n  toJSON() {\n    const data = {\n      metadata: {\n        version: 4.5,\n        type: \"BufferGeometry\",\n        generator: \"BufferGeometry.toJSON\",\n      },\n    };\n\n    // standard BufferGeometry serialization\n\n    data.uuid = this.uuid;\n    data.type = this.type;\n    if (this.name !== \"\") data.name = this.name;\n    if (Object.keys(this.userData).length > 0) data.userData = this.userData;\n\n    if (this.parameters !== undefined) {\n      const parameters = this.parameters;\n\n      for (const key in parameters) {\n        if (parameters[key] !== undefined) data[key] = parameters[key];\n      }\n\n      return data;\n    }\n\n    // for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n    data.data = { attributes: {} };\n\n    const index = this.index;\n\n    if (index !== null) {\n      data.data.index = {\n        type: index.array.constructor.name,\n        array: Array.prototype.slice.call(index.array),\n      };\n    }\n\n    const attributes = this.attributes;\n\n    for (const key in attributes) {\n      const attribute = attributes[key];\n\n      data.data.attributes[key] = attribute.toJSON(data.data);\n    }\n\n    const morphAttributes = {};\n    let hasMorphAttributes = false;\n\n    for (const key in this.morphAttributes) {\n      const attributeArray = this.morphAttributes[key];\n\n      const array = [];\n\n      for (let i = 0, il = attributeArray.length; i < il; i++) {\n        const attribute = attributeArray[i];\n\n        array.push(attribute.toJSON(data.data));\n      }\n\n      if (array.length > 0) {\n        morphAttributes[key] = array;\n\n        hasMorphAttributes = true;\n      }\n    }\n\n    if (hasMorphAttributes) {\n      data.data.morphAttributes = morphAttributes;\n      data.data.morphTargetsRelative = this.morphTargetsRelative;\n    }\n\n    const groups = this.groups;\n\n    if (groups.length > 0) {\n      data.data.groups = JSON.parse(JSON.stringify(groups));\n    }\n\n    const boundingSphere = this.boundingSphere;\n\n    if (boundingSphere !== null) {\n      data.data.boundingSphere = {\n        center: boundingSphere.center.toArray(),\n        radius: boundingSphere.radius,\n      };\n    }\n\n    return data;\n  }\n\n  clone() {\n    return new this.constructor().copy(this);\n  }\n\n  copy(source) {\n    // reset\n\n    this.index = null;\n    this.attributes = {};\n    this.morphAttributes = {};\n    this.groups = [];\n    this.boundingBox = null;\n    this.boundingSphere = null;\n\n    // used for storing cloned, shared data\n\n    const data = {};\n\n    // name\n\n    this.name = source.name;\n\n    // index\n\n    const index = source.index;\n\n    if (index !== null) {\n      this.setIndex(index.clone(data));\n    }\n\n    // attributes\n\n    const attributes = source.attributes;\n\n    for (const name in attributes) {\n      const attribute = attributes[name];\n      this.setAttribute(name, attribute.clone(data));\n    }\n\n    // morph attributes\n\n    const morphAttributes = source.morphAttributes;\n\n    for (const name in morphAttributes) {\n      const array = [];\n      const morphAttribute = morphAttributes[name]; // morphAttribute: array of Float32BufferAttributes\n\n      for (let i = 0, l = morphAttribute.length; i < l; i++) {\n        array.push(morphAttribute[i].clone(data));\n      }\n\n      this.morphAttributes[name] = array;\n    }\n\n    this.morphTargetsRelative = source.morphTargetsRelative;\n\n    // groups\n\n    const groups = source.groups;\n\n    for (let i = 0, l = groups.length; i < l; i++) {\n      const group = groups[i];\n      this.addGroup(group.start, group.count, group.materialIndex);\n    }\n\n    // bounding box\n\n    const boundingBox = source.boundingBox;\n\n    if (boundingBox !== null) {\n      this.boundingBox = boundingBox.clone();\n    }\n\n    // bounding sphere\n\n    const boundingSphere = source.boundingSphere;\n\n    if (boundingSphere !== null) {\n      this.boundingSphere = boundingSphere.clone();\n    }\n\n    // draw range\n\n    this.drawRange.start = source.drawRange.start;\n    this.drawRange.count = source.drawRange.count;\n\n    // user data\n\n    this.userData = source.userData;\n\n    // geometry generator parameters\n\n    if (source.parameters !== undefined)\n      this.parameters = Object.assign({}, source.parameters);\n\n    return this;\n  }\n\n  dispose() {\n    this.dispatchEvent({ type: \"dispose\" });\n  }\n}\n\nBufferGeometry.prototype.isBufferGeometry = true;\n\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _tempB = /*@__PURE__*/ new Vector3();\nconst _tempC = /*@__PURE__*/ new Vector3();\n\nconst _morphA = /*@__PURE__*/ new Vector3();\nconst _morphB = /*@__PURE__*/ new Vector3();\nconst _morphC = /*@__PURE__*/ new Vector3();\n\nconst _uvA$1 = /*@__PURE__*/ new Vector2();\nconst _uvB$1 = /*@__PURE__*/ new Vector2();\nconst _uvC$1 = /*@__PURE__*/ new Vector2();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n  constructor(\n    geometry = new BufferGeometry(),\n    material = new MeshBasicMaterial()\n  ) {\n    super();\n\n    this.type = \"Mesh\";\n\n    this.geometry = geometry;\n    this.material = material;\n\n    this.updateMorphTargets();\n  }\n\n  copy(source) {\n    super.copy(source);\n\n    if (source.morphTargetInfluences !== undefined) {\n      this.morphTargetInfluences = source.morphTargetInfluences.slice();\n    }\n\n    if (source.morphTargetDictionary !== undefined) {\n      this.morphTargetDictionary = Object.assign(\n        {},\n        source.morphTargetDictionary\n      );\n    }\n\n    this.material = source.material;\n    this.geometry = source.geometry;\n\n    return this;\n  }\n\n  updateMorphTargets() {\n    const geometry = this.geometry;\n\n    if (geometry.isBufferGeometry) {\n      const morphAttributes = geometry.morphAttributes;\n      const keys = Object.keys(morphAttributes);\n\n      if (keys.length > 0) {\n        const morphAttribute = morphAttributes[keys[0]];\n\n        if (morphAttribute !== undefined) {\n          this.morphTargetInfluences = [];\n          this.morphTargetDictionary = {};\n\n          for (let m = 0, ml = morphAttribute.length; m < ml; m++) {\n            const name = morphAttribute[m].name || String(m);\n\n            this.morphTargetInfluences.push(0);\n            this.morphTargetDictionary[name] = m;\n          }\n        }\n      }\n    } else {\n      const morphTargets = geometry.morphTargets;\n\n      if (morphTargets !== undefined && morphTargets.length > 0) {\n        console.error(\n          \"THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.\"\n        );\n      }\n    }\n  }\n\n  raycast(raycaster, intersects) {\n    const geometry = this.geometry;\n    const material = this.material;\n    const matrixWorld = this.matrixWorld;\n\n    if (material === undefined) return;\n\n    // Checking boundingSphere distance to ray\n\n    if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n    _sphere$3.copy(geometry.boundingSphere);\n    _sphere$3.applyMatrix4(matrixWorld);\n\n    if (raycaster.ray.intersectsSphere(_sphere$3) === false) return;\n\n    //\n\n    _inverseMatrix$2.copy(matrixWorld).invert();\n    _ray$2.copy(raycaster.ray).applyMatrix4(_inverseMatrix$2);\n\n    // Check boundingBox before continuing\n\n    if (geometry.boundingBox !== null) {\n      if (_ray$2.intersectsBox(geometry.boundingBox) === false) return;\n    }\n\n    let intersection;\n\n    if (geometry.isBufferGeometry) {\n      const index = geometry.index;\n      const position = geometry.attributes.position;\n      const morphPosition = geometry.morphAttributes.position;\n      const morphTargetsRelative = geometry.morphTargetsRelative;\n      const uv = geometry.attributes.uv;\n      const uv2 = geometry.attributes.uv2;\n      const groups = geometry.groups;\n      const drawRange = geometry.drawRange;\n\n      if (index !== null) {\n        // indexed buffer geometry\n\n        if (Array.isArray(material)) {\n          for (let i = 0, il = groups.length; i < il; i++) {\n            const group = groups[i];\n            const groupMaterial = material[group.materialIndex];\n\n            const start = Math.max(group.start, drawRange.start);\n            const end = Math.min(\n              index.count,\n              Math.min(\n                group.start + group.count,\n                drawRange.start + drawRange.count\n              )\n            );\n\n            for (let j = start, jl = end; j < jl; j += 3) {\n              const a = index.getX(j);\n              const b = index.getX(j + 1);\n              const c = index.getX(j + 2);\n\n              intersection = checkBufferGeometryIntersection(\n                this,\n                groupMaterial,\n                raycaster,\n                _ray$2,\n                position,\n                morphPosition,\n                morphTargetsRelative,\n                uv,\n                uv2,\n                a,\n                b,\n                c\n              );\n\n              if (intersection) {\n                intersection.faceIndex = Math.floor(j / 3); // triangle number in indexed buffer semantics\n                intersection.face.materialIndex = group.materialIndex;\n                intersects.push(intersection);\n              }\n            }\n          }\n        } else {\n          const start = Math.max(0, drawRange.start);\n          const end = Math.min(index.count, drawRange.start + drawRange.count);\n\n          for (let i = start, il = end; i < il; i += 3) {\n            const a = index.getX(i);\n            const b = index.getX(i + 1);\n            const c = index.getX(i + 2);\n\n            intersection = checkBufferGeometryIntersection(\n              this,\n              material,\n              raycaster,\n              _ray$2,\n              position,\n              morphPosition,\n              morphTargetsRelative,\n              uv,\n              uv2,\n              a,\n              b,\n              c\n            );\n\n            if (intersection) {\n              intersection.faceIndex = Math.floor(i / 3); // triangle number in indexed buffer semantics\n              intersects.push(intersection);\n            }\n          }\n        }\n      } else if (position !== undefined) {\n        // non-indexed buffer geometry\n\n        if (Array.isArray(material)) {\n          for (let i = 0, il = groups.length; i < il; i++) {\n            const group = groups[i];\n            const groupMaterial = material[group.materialIndex];\n\n            const start = Math.max(group.start, drawRange.start);\n            const end = Math.min(\n              position.count,\n              Math.min(\n                group.start + group.count,\n                drawRange.start + drawRange.count\n              )\n            );\n\n            for (let j = start, jl = end; j < jl; j += 3) {\n              const a = j;\n              const b = j + 1;\n              const c = j + 2;\n\n              intersection = checkBufferGeometryIntersection(\n                this,\n                groupMaterial,\n                raycaster,\n                _ray$2,\n                position,\n                morphPosition,\n                morphTargetsRelative,\n                uv,\n                uv2,\n                a,\n                b,\n                c\n              );\n\n              if (intersection) {\n                intersection.faceIndex = Math.floor(j / 3); // triangle number in non-indexed buffer semantics\n                intersection.face.materialIndex = group.materialIndex;\n                intersects.push(intersection);\n              }\n            }\n          }\n        } else {\n          const start = Math.max(0, drawRange.start);\n          const end = Math.min(\n            position.count,\n            drawRange.start + drawRange.count\n          );\n\n          for (let i = start, il = end; i < il; i += 3) {\n            const a = i;\n            const b = i + 1;\n            const c = i + 2;\n\n            intersection = checkBufferGeometryIntersection(\n              this,\n              material,\n              raycaster,\n              _ray$2,\n              position,\n              morphPosition,\n              morphTargetsRelative,\n              uv,\n              uv2,\n              a,\n              b,\n              c\n            );\n\n            if (intersection) {\n              intersection.faceIndex = Math.floor(i / 3); // triangle number in non-indexed buffer semantics\n              intersects.push(intersection);\n            }\n          }\n        }\n      }\n    } else if (geometry.isGeometry) {\n      console.error(\n        \"THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.\"\n      );\n    }\n  }\n}\n\nMesh.prototype.isMesh = true;\n\nfunction checkIntersection(\n  object,\n  material,\n  raycaster,\n  ray,\n  pA,\n  pB,\n  pC,\n  point\n) {\n  let intersect;\n\n  if (material.side === BackSide) {\n    intersect = ray.intersectTriangle(pC, pB, pA, true, point);\n  } else {\n    intersect = ray.intersectTriangle(\n      pA,\n      pB,\n      pC,\n      material.side !== DoubleSide,\n      point\n    );\n  }\n\n  if (intersect === null) return null;\n\n  _intersectionPointWorld.copy(point);\n  _intersectionPointWorld.applyMatrix4(object.matrixWorld);\n\n  const distance = raycaster.ray.origin.distanceTo(_intersectionPointWorld);\n\n  if (distance < raycaster.near || distance > raycaster.far) return null;\n\n  return {\n    distance: distance,\n    point: _intersectionPointWorld.clone(),\n    object: object,\n  };\n}\n\nfunction checkBufferGeometryIntersection(\n  object,\n  material,\n  raycaster,\n  ray,\n  position,\n  morphPosition,\n  morphTargetsRelative,\n  uv,\n  uv2,\n  a,\n  b,\n  c\n) {\n  _vA$1.fromBufferAttribute(position, a);\n  _vB$1.fromBufferAttribute(position, b);\n  _vC$1.fromBufferAttribute(position, c);\n\n  const morphInfluences = object.morphTargetInfluences;\n\n  if (morphPosition && morphInfluences) {\n    _morphA.set(0, 0, 0);\n    _morphB.set(0, 0, 0);\n    _morphC.set(0, 0, 0);\n\n    for (let i = 0, il = morphPosition.length; i < il; i++) {\n      const influence = morphInfluences[i];\n      const morphAttribute = morphPosition[i];\n\n      if (influence === 0) continue;\n\n      _tempA.fromBufferAttribute(morphAttribute, a);\n      _tempB.fromBufferAttribute(morphAttribute, b);\n      _tempC.fromBufferAttribute(morphAttribute, c);\n\n      if (morphTargetsRelative) {\n        _morphA.addScaledVector(_tempA, influence);\n        _morphB.addScaledVector(_tempB, influence);\n        _morphC.addScaledVector(_tempC, influence);\n      } else {\n        _morphA.addScaledVector(_tempA.sub(_vA$1), influence);\n        _morphB.addScaledVector(_tempB.sub(_vB$1), influence);\n        _morphC.addScaledVector(_tempC.sub(_vC$1), influence);\n      }\n    }\n\n    _vA$1.add(_morphA);\n    _vB$1.add(_morphB);\n    _vC$1.add(_morphC);\n  }\n\n  if (object.isSkinnedMesh) {\n    object.boneTransform(a, _vA$1);\n    object.boneTransform(b, _vB$1);\n    object.boneTransform(c, _vC$1);\n  }\n\n  const intersection = checkIntersection(\n    object,\n    material,\n    raycaster,\n    ray,\n    _vA$1,\n    _vB$1,\n    _vC$1,\n    _intersectionPoint\n  );\n\n  if (intersection) {\n    if (uv) {\n      _uvA$1.fromBufferAttribute(uv, a);\n      _uvB$1.fromBufferAttribute(uv, b);\n      _uvC$1.fromBufferAttribute(uv, c);\n\n      intersection.uv = Triangle.getUV(\n        _intersectionPoint,\n        _vA$1,\n        _vB$1,\n        _vC$1,\n        _uvA$1,\n        _uvB$1,\n        _uvC$1,\n        new Vector2()\n      );\n    }\n\n    if (uv2) {\n      _uvA$1.fromBufferAttribute(uv2, a);\n      _uvB$1.fromBufferAttribute(uv2, b);\n      _uvC$1.fromBufferAttribute(uv2, c);\n\n      intersection.uv2 = Triangle.getUV(\n        _intersectionPoint,\n        _vA$1,\n        _vB$1,\n        _vC$1,\n        _uvA$1,\n        _uvB$1,\n        _uvC$1,\n        new Vector2()\n      );\n    }\n\n    const face = {\n      a: a,\n      b: b,\n      c: c,\n      normal: new Vector3(),\n      materialIndex: 0,\n    };\n\n    Triangle.getNormal(_vA$1, _vB$1, _vC$1, face.normal);\n\n    intersection.face = face;\n  }\n\n  return intersection;\n}\n\nclass BoxGeometry extends BufferGeometry {\n  constructor(\n    width = 1,\n    height = 1,\n    depth = 1,\n    widthSegments = 1,\n    heightSegments = 1,\n    depthSegments = 1\n  ) {\n    super();\n\n    this.type = \"BoxGeometry\";\n\n    this.parameters = {\n      width: width,\n      height: height,\n      depth: depth,\n      widthSegments: widthSegments,\n      heightSegments: heightSegments,\n      depthSegments: depthSegments,\n    };\n\n    const scope = this;\n\n    // segments\n\n    widthSegments = Math.floor(widthSegments);\n    heightSegments = Math.floor(heightSegments);\n    depthSegments = Math.floor(depthSegments);\n\n    // buffers\n\n    const indices = [];\n    const vertices = [];\n    const normals = [];\n    const uvs = [];\n\n    // helper variables\n\n    let numberOfVertices = 0;\n    let groupStart = 0;\n\n    // build each side of the box geometry\n\n    buildPlane(\n      \"z\",\n      \"y\",\n      \"x\",\n      -1,\n      -1,\n      depth,\n      height,\n      width,\n      depthSegments,\n      heightSegments,\n      0\n    ); // px\n    buildPlane(\n      \"z\",\n      \"y\",\n      \"x\",\n      1,\n      -1,\n      depth,\n      height,\n      -width,\n      depthSegments,\n      heightSegments,\n      1\n    ); // nx\n    buildPlane(\n      \"x\",\n      \"z\",\n      \"y\",\n      1,\n      1,\n      width,\n      depth,\n      height,\n      widthSegments,\n      depthSegments,\n      2\n    ); // py\n    buildPlane(\n      \"x\",\n      \"z\",\n      \"y\",\n      1,\n      -1,\n      width,\n      depth,\n      -height,\n      widthSegments,\n      depthSegments,\n      3\n    ); // ny\n    buildPlane(\n      \"x\",\n      \"y\",\n      \"z\",\n      1,\n      -1,\n      width,\n      height,\n      depth,\n      widthSegments,\n      heightSegments,\n      4\n    ); // pz\n    buildPlane(\n      \"x\",\n      \"y\",\n      \"z\",\n      -1,\n      -1,\n      width,\n      height,\n      -depth,\n      widthSegments,\n      heightSegments,\n      5\n    ); // nz\n\n    // build geometry\n\n    this.setIndex(indices);\n    this.setAttribute(\"position\", new Float32BufferAttribute(vertices, 3));\n    this.setAttribute(\"normal\", new Float32BufferAttribute(normals, 3));\n    this.setAttribute(\"uv\", new Float32BufferAttribute(uvs, 2));\n\n    function buildPlane(\n      u,\n      v,\n      w,\n      udir,\n      vdir,\n      width,\n      height,\n      depth,\n      gridX,\n      gridY,\n      materialIndex\n    ) {\n      const segmentWidth = width / gridX;\n      const segmentHeight = height / gridY;\n\n      const widthHalf = width / 2;\n      const heightHalf = height / 2;\n      const depthHalf = depth / 2;\n\n      const gridX1 = gridX + 1;\n      const gridY1 = gridY + 1;\n\n      let vertexCounter = 0;\n      let groupCount = 0;\n\n      const vector = new Vector3();\n\n      // generate vertices, normals and uvs\n\n      for (let iy = 0; iy < gridY1; iy++) {\n        const y = iy * segmentHeight - heightHalf;\n\n        for (let ix = 0; ix < gridX1; ix++) {\n          const x = ix * segmentWidth - widthHalf;\n\n          // set values to correct vector component\n\n          vector[u] = x * udir;\n          vector[v] = y * vdir;\n          vector[w] = depthHalf;\n\n          // now apply vector to vertex buffer\n\n          vertices.push(vector.x, vector.y, vector.z);\n\n          // set values to correct vector component\n\n          vector[u] = 0;\n          vector[v] = 0;\n          vector[w] = depth > 0 ? 1 : -1;\n\n          // now apply vector to normal buffer\n\n          normals.push(vector.x, vector.y, vector.z);\n\n          // uvs\n\n          uvs.push(ix / gridX);\n          uvs.push(1 - iy / gridY);\n\n          // counters\n\n          vertexCounter += 1;\n        }\n      }\n\n      // indices\n\n      // 1. you need three indices to draw a single face\n      // 2. a single segment consists of two faces\n      // 3. so we need to generate six (2*3) indices per segment\n\n      for (let iy = 0; iy < gridY; iy++) {\n        for (let ix = 0; ix < gridX; ix++) {\n          const a = numberOfVertices + ix + gridX1 * iy;\n          const b = numberOfVertices + ix + gridX1 * (iy + 1);\n          const c = numberOfVertices + (ix + 1) + gridX1 * (iy + 1);\n          const d = numberOfVertices + (ix + 1) + gridX1 * iy;\n\n          // faces\n\n          indices.push(a, b, d);\n          indices.push(b, c, d);\n\n          // increase counter\n\n          groupCount += 6;\n        }\n      }\n\n      // add a group to the geometry. this will ensure multi material support\n\n      scope.addGroup(groupStart, groupCount, materialIndex);\n\n      // calculate new start value for groups\n\n      groupStart += groupCount;\n\n      // update total number of vertices\n\n      numberOfVertices += vertexCounter;\n    }\n  }\n\n  static fromJSON(data) {\n    return new BoxGeometry(\n      data.width,\n      data.height,\n      data.depth,\n      data.widthSegments,\n      data.heightSegments,\n      data.depthSegments\n    );\n  }\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms(src) {\n  const dst = {};\n\n  for (const u in src) {\n    dst[u] = {};\n\n    for (const p in src[u]) {\n      const property = src[u][p];\n\n      if (\n        property &&\n        (property.isColor ||\n          property.isMatrix3 ||\n          property.isMatrix4 ||\n          property.isVector2 ||\n          property.isVector3 ||\n          property.isVector4 ||\n          property.isTexture ||\n          property.isQuaternion)\n      ) {\n        dst[u][p] = property.clone();\n      } else if (Array.isArray(property)) {\n        dst[u][p] = property.slice();\n      } else {\n        dst[u][p] = property;\n      }\n    }\n  }\n\n  return dst;\n}\n\nfunction mergeUniforms(uniforms) {\n  const merged = {};\n\n  for (let u = 0; u < uniforms.length; u++) {\n    const tmp = cloneUniforms(uniforms[u]);\n\n    for (const p in tmp) {\n      merged[p] = tmp[p];\n    }\n  }\n\n  return merged;\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex =\n  \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment =\n  \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\n/**\n * parameters = {\n *  defines: { \"label\" : \"value\" },\n *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n *\n *  fragmentShader: <string>,\n *  vertexShader: <string>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  lights: <bool>\n * }\n */\n\nclass ShaderMaterial extends Material {\n  constructor(parameters) {\n    super();\n\n    this.type = \"ShaderMaterial\";\n\n    this.defines = {};\n    this.uniforms = {};\n\n    this.vertexShader = default_vertex;\n    this.fragmentShader = default_fragment;\n\n    this.linewidth = 1;\n\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n\n    this.fog = false; // set to use scene fog\n    this.lights = false; // set to use scene lights\n    this.clipping = false; // set to use user-defined clipping planes\n\n    this.extensions = {\n      derivatives: false, // set to use derivatives\n      fragDepth: false, // set to use fragment depth values\n      drawBuffers: false, // set to use draw buffers\n      shaderTextureLOD: false, // set to use shader texture LOD\n    };\n\n    // When rendered geometry doesn't include these attributes but the material does,\n    // use these default values in WebGL. This avoids errors when buffer data is missing.\n    this.defaultAttributeValues = {\n      color: [1, 1, 1],\n      uv: [0, 0],\n      uv2: [0, 0],\n    };\n\n    this.index0AttributeName = undefined;\n    this.uniformsNeedUpdate = false;\n\n    this.glslVersion = null;\n\n    if (parameters !== undefined) {\n      if (parameters.attributes !== undefined) {\n        console.error(\n          \"THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.\"\n        );\n      }\n\n      this.setValues(parameters);\n    }\n  }\n\n  copy(source) {\n    super.copy(source);\n\n    this.fragmentShader = source.fragmentShader;\n    this.vertexShader = source.vertexShader;\n\n    this.uniforms = cloneUniforms(source.uniforms);\n\n    this.defines = Object.assign({}, source.defines);\n\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n\n    this.lights = source.lights;\n    this.clipping = source.clipping;\n\n    this.extensions = Object.assign({}, source.extensions);\n\n    this.glslVersion = source.glslVersion;\n\n    return this;\n  }\n\n  toJSON(meta) {\n    const data = super.toJSON(meta);\n\n    data.glslVersion = this.glslVersion;\n    data.uniforms = {};\n\n    for (const name in this.uniforms) {\n      const uniform = this.uniforms[name];\n      const value = uniform.value;\n\n      if (value && value.isTexture) {\n        data.uniforms[name] = {\n          type: \"t\",\n          value: value.toJSON(meta).uuid,\n        };\n      } else if (value && value.isColor) {\n        data.uniforms[name] = {\n          type: \"c\",\n          value: value.getHex(),\n        };\n      } else if (value && value.isVector2) {\n        data.uniforms[name] = {\n          type: \"v2\",\n          value: value.toArray(),\n        };\n      } else if (value && value.isVector3) {\n        data.uniforms[name] = {\n          type: \"v3\",\n          value: value.toArray(),\n        };\n      } else if (value && value.isVector4) {\n        data.uniforms[name] = {\n          type: \"v4\",\n          value: value.toArray(),\n        };\n      } else if (value && value.isMatrix3) {\n        data.uniforms[name] = {\n          type: \"m3\",\n          value: value.toArray(),\n        };\n      } else if (value && value.isMatrix4) {\n        data.uniforms[name] = {\n          type: \"m4\",\n          value: value.toArray(),\n        };\n      } else {\n        data.uniforms[name] = {\n          value: value,\n        };\n\n        // note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n      }\n    }\n\n    if (Object.keys(this.defines).length > 0) data.defines = this.defines;\n\n    data.vertexShader = this.vertexShader;\n    data.fragmentShader = this.fragmentShader;\n\n    const extensions = {};\n\n    for (const key in this.extensions) {\n      if (this.extensions[key] === true) extensions[key] = true;\n    }\n\n    if (Object.keys(extensions).length > 0) data.extensions = extensions;\n\n    return data;\n  }\n}\n\nShaderMaterial.prototype.isShaderMaterial = true;\n\nclass Camera extends Object3D {\n  constructor() {\n    super();\n\n    this.type = \"Camera\";\n\n    this.matrixWorldInverse = new Matrix4();\n\n    this.projectionMatrix = new Matrix4();\n    this.projectionMatrixInverse = new Matrix4();\n  }\n\n  copy(source, recursive) {\n    super.copy(source, recursive);\n\n    this.matrixWorldInverse.copy(source.matrixWorldInverse);\n\n    this.projectionMatrix.copy(source.projectionMatrix);\n    this.projectionMatrixInverse.copy(source.projectionMatrixInverse);\n\n    return this;\n  }\n\n  getWorldDirection(target) {\n    this.updateWorldMatrix(true, false);\n\n    const e = this.matrixWorld.elements;\n\n    return target.set(-e[8], -e[9], -e[10]).normalize();\n  }\n\n  updateMatrixWorld(force) {\n    super.updateMatrixWorld(force);\n\n    this.matrixWorldInverse.copy(this.matrixWorld).invert();\n  }\n\n  updateWorldMatrix(updateParents, updateChildren) {\n    super.updateWorldMatrix(updateParents, updateChildren);\n\n    this.matrixWorldInverse.copy(this.matrixWorld).invert();\n  }\n\n  clone() {\n    return new this.constructor().copy(this);\n  }\n}\n\nCamera.prototype.isCamera = true;\n\nclass PerspectiveCamera extends Camera {\n  constructor(fov = 50, aspect = 1, near = 0.1, far = 2000) {\n    super();\n\n    this.type = \"PerspectiveCamera\";\n\n    this.fov = fov;\n    this.zoom = 1;\n\n    this.near = near;\n    this.far = far;\n    this.focus = 10;\n\n    this.aspect = aspect;\n    this.view = null;\n\n    this.filmGauge = 35; // width of the film (default in millimeters)\n    this.filmOffset = 0; // horizontal film offset (same unit as gauge)\n\n    this.updateProjectionMatrix();\n  }\n\n  copy(source, recursive) {\n    super.copy(source, recursive);\n\n    this.fov = source.fov;\n    this.zoom = source.zoom;\n\n    this.near = source.near;\n    this.far = source.far;\n    this.focus = source.focus;\n\n    this.aspect = source.aspect;\n    this.view = source.view === null ? null : Object.assign({}, source.view);\n\n    this.filmGauge = source.filmGauge;\n    this.filmOffset = source.filmOffset;\n\n    return this;\n  }\n\n  /**\n   * Sets the FOV by focal length in respect to the current .filmGauge.\n   *\n   * The default film gauge is 35, so that the focal length can be specified for\n   * a 35mm (full frame) camera.\n   *\n   * Values for focal length and film gauge must have the same unit.\n   */\n  setFocalLength(focalLength) {\n    /** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n    const vExtentSlope = (0.5 * this.getFilmHeight()) / focalLength;\n\n    this.fov = RAD2DEG * 2 * Math.atan(vExtentSlope);\n    this.updateProjectionMatrix();\n  }\n\n  /**\n   * Calculates the focal length from the current .fov and .filmGauge.\n   */\n  getFocalLength() {\n    const vExtentSlope = Math.tan(DEG2RAD * 0.5 * this.fov);\n\n    return (0.5 * this.getFilmHeight()) / vExtentSlope;\n  }\n\n  getEffectiveFOV() {\n    return (\n      RAD2DEG * 2 * Math.atan(Math.tan(DEG2RAD * 0.5 * this.fov) / this.zoom)\n    );\n  }\n\n  getFilmWidth() {\n    // film not completely covered in portrait format (aspect < 1)\n    return this.filmGauge * Math.min(this.aspect, 1);\n  }\n\n  getFilmHeight() {\n    // film not completely covered in landscape format (aspect > 1)\n    return this.filmGauge / Math.max(this.aspect, 1);\n  }\n\n  /**\n   * Sets an offset in a larger frustum. This is useful for multi-window or\n   * multi-monitor/multi-machine setups.\n   *\n   * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n   * the monitors are in grid like this\n   *\n   *   +---+---+---+\n   *   | A | B | C |\n   *   +---+---+---+\n   *   | D | E | F |\n   *   +---+---+---+\n   *\n   * then for each monitor you would call it like this\n   *\n   *   const w = 1920;\n   *   const h = 1080;\n   *   const fullWidth = w * 3;\n   *   const fullHeight = h * 2;\n   *\n   *   --A--\n   *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n   *   --B--\n   *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n   *   --C--\n   *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n   *   --D--\n   *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n   *   --E--\n   *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n   *   --F--\n   *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n   *\n   *   Note there is no reason monitors have to be the same size or in a grid.\n   */\n  setViewOffset(fullWidth, fullHeight, x, y, width, height) {\n    this.aspect = fullWidth / fullHeight;\n\n    if (this.view === null) {\n      this.view = {\n        enabled: true,\n        fullWidth: 1,\n        fullHeight: 1,\n        offsetX: 0,\n        offsetY: 0,\n        width: 1,\n        height: 1,\n      };\n    }\n\n    this.view.enabled = true;\n    this.view.fullWidth = fullWidth;\n    this.view.fullHeight = fullHeight;\n    this.view.offsetX = x;\n    this.view.offsetY = y;\n    this.view.width = width;\n    this.view.height = height;\n\n    this.updateProjectionMatrix();\n  }\n\n  clearViewOffset() {\n    if (this.view !== null) {\n      this.view.enabled = false;\n    }\n\n    this.updateProjectionMatrix();\n  }\n\n  updateProjectionMatrix() {\n    const near = this.near;\n    let top = (near * Math.tan(DEG2RAD * 0.5 * this.fov)) / this.zoom;\n    let height = 2 * top;\n    let width = this.aspect * height;\n    let left = -0.5 * width;\n    const view = this.view;\n\n    if (this.view !== null && this.view.enabled) {\n      const fullWidth = view.fullWidth,\n        fullHeight = view.fullHeight;\n\n      left += (view.offsetX * width) / fullWidth;\n      top -= (view.offsetY * height) / fullHeight;\n      width *= view.width / fullWidth;\n      height *= view.height / fullHeight;\n    }\n\n    const skew = this.filmOffset;\n    if (skew !== 0) left += (near * skew) / this.getFilmWidth();\n\n    this.projectionMatrix.makePerspective(\n      left,\n      left + width,\n      top,\n      top - height,\n      near,\n      this.far\n    );\n\n    this.projectionMatrixInverse.copy(this.projectionMatrix).invert();\n  }\n\n  toJSON(meta) {\n    const data = super.toJSON(meta);\n\n    data.object.fov = this.fov;\n    data.object.zoom = this.zoom;\n\n    data.object.near = this.near;\n    data.object.far = this.far;\n    data.object.focus = this.focus;\n\n    data.object.aspect = this.aspect;\n\n    if (this.view !== null) data.object.view = Object.assign({}, this.view);\n\n    data.object.filmGauge = this.filmGauge;\n    data.object.filmOffset = this.filmOffset;\n\n    return data;\n  }\n}\n\nPerspectiveCamera.prototype.isPerspectiveCamera = true;\n\nconst fov = 90,\n  aspect = 1;\n\nclass CubeCamera extends Object3D {\n  constructor(near, far, renderTarget) {\n    super();\n\n    this.type = \"CubeCamera\";\n\n    if (renderTarget.isWebGLCubeRenderTarget !== true) {\n      console.error(\n        \"THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.\"\n      );\n      return;\n    }\n\n    this.renderTarget = renderTarget;\n\n    const cameraPX = new PerspectiveCamera(fov, aspect, near, far);\n    cameraPX.layers = this.layers;\n    cameraPX.up.set(0, -1, 0);\n    cameraPX.lookAt(new Vector3(1, 0, 0));\n    this.add(cameraPX);\n\n    const cameraNX = new PerspectiveCamera(fov, aspect, near, far);\n    cameraNX.layers = this.layers;\n    cameraNX.up.set(0, -1, 0);\n    cameraNX.lookAt(new Vector3(-1, 0, 0));\n    this.add(cameraNX);\n\n    const cameraPY = new PerspectiveCamera(fov, aspect, near, far);\n    cameraPY.layers = this.layers;\n    cameraPY.up.set(0, 0, 1);\n    cameraPY.lookAt(new Vector3(0, 1, 0));\n    this.add(cameraPY);\n\n    const cameraNY = new PerspectiveCamera(fov, aspect, near, far);\n    cameraNY.layers = this.layers;\n    cameraNY.up.set(0, 0, -1);\n    cameraNY.lookAt(new Vector3(0, -1, 0));\n    this.add(cameraNY);\n\n    const cameraPZ = new PerspectiveCamera(fov, aspect, near, far);\n    cameraPZ.layers = this.layers;\n    cameraPZ.up.set(0, -1, 0);\n    cameraPZ.lookAt(new Vector3(0, 0, 1));\n    this.add(cameraPZ);\n\n    const cameraNZ = new PerspectiveCamera(fov, aspect, near, far);\n    cameraNZ.layers = this.layers;\n    cameraNZ.up.set(0, -1, 0);\n    cameraNZ.lookAt(new Vector3(0, 0, -1));\n    this.add(cameraNZ);\n  }\n\n  update(renderer, scene) {\n    if (this.parent === null) this.updateMatrixWorld();\n\n    const renderTarget = this.renderTarget;\n\n    const [cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ] =\n      this.children;\n\n    const currentXrEnabled = renderer.xr.enabled;\n    const currentRenderTarget = renderer.getRenderTarget();\n\n    renderer.xr.enabled = false;\n\n    const generateMipmaps = renderTarget.texture.generateMipmaps;\n\n    renderTarget.texture.generateMipmaps = false;\n\n    renderer.setRenderTarget(renderTarget, 0);\n    renderer.render(scene, cameraPX);\n\n    renderer.setRenderTarget(renderTarget, 1);\n    renderer.render(scene, cameraNX);\n\n    renderer.setRenderTarget(renderTarget, 2);\n    renderer.render(scene, cameraPY);\n\n    renderer.setRenderTarget(renderTarget, 3);\n    renderer.render(scene, cameraNY);\n\n    renderer.setRenderTarget(renderTarget, 4);\n    renderer.render(scene, cameraPZ);\n\n    renderTarget.texture.generateMipmaps = generateMipmaps;\n\n    renderer.setRenderTarget(renderTarget, 5);\n    renderer.render(scene, cameraNZ);\n\n    renderer.setRenderTarget(currentRenderTarget);\n\n    renderer.xr.enabled = currentXrEnabled;\n  }\n}\n\nclass CubeTexture extends Texture {\n  constructor(\n    images,\n    mapping,\n    wrapS,\n    wrapT,\n    magFilter,\n    minFilter,\n    format,\n    type,\n    anisotropy,\n    encoding\n  ) {\n    images = images !== undefined ? images : [];\n    mapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n    super(\n      images,\n      mapping,\n      wrapS,\n      wrapT,\n      magFilter,\n      minFilter,\n      format,\n      type,\n      anisotropy,\n      encoding\n    );\n\n    this.flipY = false;\n  }\n\n  get images() {\n    return this.image;\n  }\n\n  set images(value) {\n    this.image = value;\n  }\n}\n\nCubeTexture.prototype.isCubeTexture = true;\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n  constructor(size, options, dummy) {\n    if (Number.isInteger(options)) {\n      console.warn(\n        \"THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )\"\n      );\n\n      options = dummy;\n    }\n\n    super(size, size, options);\n\n    options = options || {};\n\n    // By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n    // in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n    // in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n    // three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n    // and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n    // as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n    this.texture = new CubeTexture(\n      undefined,\n      options.mapping,\n      options.wrapS,\n      options.wrapT,\n      options.magFilter,\n      options.minFilter,\n      options.format,\n      options.type,\n      options.anisotropy,\n      options.encoding\n    );\n    this.texture.isRenderTargetTexture = true;\n\n    this.texture.generateMipmaps =\n      options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n    this.texture.minFilter =\n      options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n    this.texture._needsFlipEnvMap = false;\n  }\n\n  fromEquirectangularTexture(renderer, texture) {\n    this.texture.type = texture.type;\n    this.texture.format = RGBAFormat; // see #18859\n    this.texture.encoding = texture.encoding;\n\n    this.texture.generateMipmaps = texture.generateMipmaps;\n    this.texture.minFilter = texture.minFilter;\n    this.texture.magFilter = texture.magFilter;\n\n    const shader = {\n      uniforms: {\n        tEquirect: { value: null },\n      },\n\n      vertexShader: /* glsl */ `\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n      fragmentShader: /* glsl */ `\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`,\n    };\n\n    const geometry = new BoxGeometry(5, 5, 5);\n\n    const material = new ShaderMaterial({\n      name: \"CubemapFromEquirect\",\n\n      uniforms: cloneUniforms(shader.uniforms),\n      vertexShader: shader.vertexShader,\n      fragmentShader: shader.fragmentShader,\n      side: BackSide,\n      blending: NoBlending,\n    });\n\n    material.uniforms.tEquirect.value = texture;\n\n    const mesh = new Mesh(geometry, material);\n\n    const currentMinFilter = texture.minFilter;\n\n    // Avoid blurred poles\n    if (texture.minFilter === LinearMipmapLinearFilter)\n      texture.minFilter = LinearFilter;\n\n    const camera = new CubeCamera(1, 10, this);\n    camera.update(renderer, mesh);\n\n    texture.minFilter = currentMinFilter;\n\n    mesh.geometry.dispose();\n    mesh.material.dispose();\n\n    return this;\n  }\n\n  clear(renderer, color, depth, stencil) {\n    const currentRenderTarget = renderer.getRenderTarget();\n\n    for (let i = 0; i < 6; i++) {\n      renderer.setRenderTarget(this, i);\n\n      renderer.clear(color, depth, stencil);\n    }\n\n    renderer.setRenderTarget(currentRenderTarget);\n  }\n}\n\nWebGLCubeRenderTarget.prototype.isWebGLCubeRenderTarget = true;\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n  constructor(normal = new Vector3(1, 0, 0), constant = 0) {\n    // normal is assumed to be normalized\n\n    this.normal = normal;\n    this.constant = constant;\n  }\n\n  set(normal, constant) {\n    this.normal.copy(normal);\n    this.constant = constant;\n\n    return this;\n  }\n\n  setComponents(x, y, z, w) {\n    this.normal.set(x, y, z);\n    this.constant = w;\n\n    return this;\n  }\n\n  setFromNormalAndCoplanarPoint(normal, point) {\n    this.normal.copy(normal);\n    this.constant = -point.dot(this.normal);\n\n    return this;\n  }\n\n  setFromCoplanarPoints(a, b, c) {\n    const normal = _vector1\n      .subVectors(c, b)\n      .cross(_vector2.subVectors(a, b))\n      .normalize();\n\n    // Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n    this.setFromNormalAndCoplanarPoint(normal, a);\n\n    return this;\n  }\n\n  copy(plane) {\n    this.normal.copy(plane.normal);\n    this.constant = plane.constant;\n\n    return this;\n  }\n\n  normalize() {\n    // Note: will lead to a divide by zero if the plane is invalid.\n\n    const inverseNormalLength = 1.0 / this.normal.length();\n    this.normal.multiplyScalar(inverseNormalLength);\n    this.constant *= inverseNormalLength;\n\n    return this;\n  }\n\n  negate() {\n    this.constant *= -1;\n    this.normal.negate();\n\n    return this;\n  }\n\n  distanceToPoint(point) {\n    return this.normal.dot(point) + this.constant;\n  }\n\n  distanceToSphere(sphere) {\n    return this.distanceToPoint(sphere.center) - sphere.radius;\n  }\n\n  projectPoint(point, target) {\n    return target\n      .copy(this.normal)\n      .multiplyScalar(-this.distanceToPoint(point))\n      .add(point);\n  }\n\n  intersectLine(line, target) {\n    const direction = line.delta(_vector1);\n\n    const denominator = this.normal.dot(direction);\n\n    if (denominator === 0) {\n      // line is coplanar, return origin\n      if (this.distanceToPoint(line.start) === 0) {\n        return target.copy(line.start);\n      }\n\n      // Unsure if this is the correct method to handle this case.\n      return null;\n    }\n\n    const t = -(line.start.dot(this.normal) + this.constant) / denominator;\n\n    if (t < 0 || t > 1) {\n      return null;\n    }\n\n    return target.copy(direction).multiplyScalar(t).add(line.start);\n  }\n\n  intersectsLine(line) {\n    // Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n    const startSign = this.distanceToPoint(line.start);\n    const endSign = this.distanceToPoint(line.end);\n\n    return (startSign < 0 && endSign > 0) || (endSign < 0 && startSign > 0);\n  }\n\n  intersectsBox(box) {\n    return box.intersectsPlane(this);\n  }\n\n  intersectsSphere(sphere) {\n    return sphere.intersectsPlane(this);\n  }\n\n  coplanarPoint(target) {\n    return target.copy(this.normal).multiplyScalar(-this.constant);\n  }\n\n  applyMatrix4(matrix, optionalNormalMatrix) {\n    const normalMatrix =\n      optionalNormalMatrix || _normalMatrix.getNormalMatrix(matrix);\n\n    const referencePoint = this.coplanarPoint(_vector1).applyMatrix4(matrix);\n\n    const normal = this.normal.applyMatrix3(normalMatrix).normalize();\n\n    this.constant = -referencePoint.dot(normal);\n\n    return this;\n  }\n\n  translate(offset) {\n    this.constant -= offset.dot(this.normal);\n\n    return this;\n  }\n\n  equals(plane) {\n    return plane.normal.equals(this.normal) && plane.constant === this.constant;\n  }\n\n  clone() {\n    return new this.constructor().copy(this);\n  }\n}\n\nPlane.prototype.isPlane = true;\n\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n  constructor(\n    p0 = new Plane(),\n    p1 = new Plane(),\n    p2 = new Plane(),\n    p3 = new Plane(),\n    p4 = new Plane(),\n    p5 = new Plane()\n  ) {\n    this.planes = [p0, p1, p2, p3, p4, p5];\n  }\n\n  set(p0, p1, p2, p3, p4, p5) {\n    const planes = this.planes;\n\n    planes[0].copy(p0);\n    planes[1].copy(p1);\n    planes[2].copy(p2);\n    planes[3].copy(p3);\n    planes[4].copy(p4);\n    planes[5].copy(p5);\n\n    return this;\n  }\n\n  copy(frustum) {\n    const planes = this.planes;\n\n    for (let i = 0; i < 6; i++) {\n      planes[i].copy(frustum.planes[i]);\n    }\n\n    return this;\n  }\n\n  setFromProjectionMatrix(m) {\n    const planes = this.planes;\n    const me = m.elements;\n    const me0 = me[0],\n      me1 = me[1],\n      me2 = me[2],\n      me3 = me[3];\n    const me4 = me[4],\n      me5 = me[5],\n      me6 = me[6],\n      me7 = me[7];\n    const me8 = me[8],\n      me9 = me[9],\n      me10 = me[10],\n      me11 = me[11];\n    const me12 = me[12],\n      me13 = me[13],\n      me14 = me[14],\n      me15 = me[15];\n\n    planes[0]\n      .setComponents(me3 - me0, me7 - me4, me11 - me8, me15 - me12)\n      .normalize();\n    planes[1]\n      .setComponents(me3 + me0, me7 + me4, me11 + me8, me15 + me12)\n      .normalize();\n    planes[2]\n      .setComponents(me3 + me1, me7 + me5, me11 + me9, me15 + me13)\n      .normalize();\n    planes[3]\n      .setComponents(me3 - me1, me7 - me5, me11 - me9, me15 - me13)\n      .normalize();\n    planes[4]\n      .setComponents(me3 - me2, me7 - me6, me11 - me10, me15 - me14)\n      .normalize();\n    planes[5]\n      .setComponents(me3 + me2, me7 + me6, me11 + me10, me15 + me14)\n      .normalize();\n\n    return this;\n  }\n\n  intersectsObject(object) {\n    const geometry = object.geometry;\n\n    if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n    _sphere$2.copy(geometry.boundingSphere).applyMatrix4(object.matrixWorld);\n\n    return this.intersectsSphere(_sphere$2);\n  }\n\n  intersectsSprite(sprite) {\n    _sphere$2.center.set(0, 0, 0);\n    _sphere$2.radius = 0.7071067811865476;\n    _sphere$2.applyMatrix4(sprite.matrixWorld);\n\n    return this.intersectsSphere(_sphere$2);\n  }\n\n  intersectsSphere(sphere) {\n    const planes = this.planes;\n    const center = sphere.center;\n    const negRadius = -sphere.radius;\n\n    for (let i = 0; i < 6; i++) {\n      const distance = planes[i].distanceToPoint(center);\n\n      if (distance < negRadius) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  intersectsBox(box) {\n    const planes = this.planes;\n\n    for (let i = 0; i < 6; i++) {\n      const plane = planes[i];\n\n      // corner at max distance\n\n      _vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n      _vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n      _vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n      if (plane.distanceToPoint(_vector$7) < 0) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  containsPoint(point) {\n    const planes = this.planes;\n\n    for (let i = 0; i < 6; i++) {\n      if (planes[i].distanceToPoint(point) < 0) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  clone() {\n    return new this.constructor().copy(this);\n  }\n}\n\nfunction WebGLAnimation() {\n  let context = null;\n  let isAnimating = false;\n  let animationLoop = null;\n  let requestId = null;\n\n  function onAnimationFrame(time, frame) {\n    animationLoop(time, frame);\n\n    requestId = context.requestAnimationFrame(onAnimationFrame);\n  }\n\n  return {\n    start: function () {\n      if (isAnimating === true) return;\n      if (animationLoop === null) return;\n\n      requestId = context.requestAnimationFrame(onAnimationFrame);\n\n      isAnimating = true;\n    },\n\n    stop: function () {\n      context.cancelAnimationFrame(requestId);\n\n      isAnimating = false;\n    },\n\n    setAnimationLoop: function (callback) {\n      animationLoop = callback;\n    },\n\n    setContext: function (value) {\n      context = value;\n    },\n  };\n}\n\nfunction WebGLAttributes(gl, capabilities) {\n  const isWebGL2 = capabilities.isWebGL2;\n\n  const buffers = new WeakMap();\n\n  function createBuffer(attribute, bufferType) {\n    const array = attribute.array;\n    const usage = attribute.usage;\n\n    const buffer = gl.createBuffer();\n\n    gl.bindBuffer(bufferType, buffer);\n    gl.bufferData(bufferType, array, usage);\n\n    attribute.onUploadCallback();\n\n    let type = 5126;\n\n    if (array instanceof Float32Array) {\n      type = 5126;\n    } else if (array instanceof Float64Array) {\n      console.warn(\n        \"THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.\"\n      );\n    } else if (array instanceof Uint16Array) {\n      if (attribute.isFloat16BufferAttribute) {\n        if (isWebGL2) {\n          type = 5131;\n        } else {\n          console.warn(\n            \"THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.\"\n          );\n        }\n      } else {\n        type = 5123;\n      }\n    } else if (array instanceof Int16Array) {\n      type = 5122;\n    } else if (array instanceof Uint32Array) {\n      type = 5125;\n    } else if (array instanceof Int32Array) {\n      type = 5124;\n    } else if (array instanceof Int8Array) {\n      type = 5120;\n    } else if (array instanceof Uint8Array) {\n      type = 5121;\n    } else if (array instanceof Uint8ClampedArray) {\n      type = 5121;\n    }\n\n    return {\n      buffer: buffer,\n      type: type,\n      bytesPerElement: array.BYTES_PER_ELEMENT,\n      version: attribute.version,\n    };\n  }\n\n  function updateBuffer(buffer, attribute, bufferType) {\n    const array = attribute.array;\n    const updateRange = attribute.updateRange;\n\n    gl.bindBuffer(bufferType, buffer);\n\n    if (updateRange.count === -1) {\n      // Not using update ranges\n\n      gl.bufferSubData(bufferType, 0, array);\n    } else {\n      if (isWebGL2) {\n        gl.bufferSubData(\n          bufferType,\n          updateRange.offset * array.BYTES_PER_ELEMENT,\n          array,\n          updateRange.offset,\n          updateRange.count\n        );\n      } else {\n        gl.bufferSubData(\n          bufferType,\n          updateRange.offset * array.BYTES_PER_ELEMENT,\n          array.subarray(\n            updateRange.offset,\n            updateRange.offset + updateRange.count\n          )\n        );\n      }\n\n      updateRange.count = -1; // reset range\n    }\n  }\n\n  //\n\n  function get(attribute) {\n    if (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\n\n    return buffers.get(attribute);\n  }\n\n  function remove(attribute) {\n    if (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\n\n    const data = buffers.get(attribute);\n\n    if (data) {\n      gl.deleteBuffer(data.buffer);\n\n      buffers.delete(attribute);\n    }\n  }\n\n  function update(attribute, bufferType) {\n    if (attribute.isGLBufferAttribute) {\n      const cached = buffers.get(attribute);\n\n      if (!cached || cached.version < attribute.version) {\n        buffers.set(attribute, {\n          buffer: attribute.buffer,\n          type: attribute.type,\n          bytesPerElement: attribute.elementSize,\n          version: attribute.version,\n        });\n      }\n\n      return;\n    }\n\n    if (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\n\n    const data = buffers.get(attribute);\n\n    if (data === undefined) {\n      buffers.set(attribute, createBuffer(attribute, bufferType));\n    } else if (data.version < attribute.version) {\n      updateBuffer(data.buffer, attribute, bufferType);\n\n      data.version = attribute.version;\n    }\n  }\n\n  return {\n    get: get,\n    remove: remove,\n    update: update,\n  };\n}\n\nclass PlaneGeometry extends BufferGeometry {\n  constructor(width = 1, height = 1, widthSegments = 1, heightSegments = 1) {\n    super();\n    this.type = \"PlaneGeometry\";\n\n    this.parameters = {\n      width: width,\n      height: height,\n      widthSegments: widthSegments,\n      heightSegments: heightSegments,\n    };\n\n    const width_half = width / 2;\n    const height_half = height / 2;\n\n    const gridX = Math.floor(widthSegments);\n    const gridY = Math.floor(heightSegments);\n\n    const gridX1 = gridX + 1;\n    const gridY1 = gridY + 1;\n\n    const segment_width = width / gridX;\n    const segment_height = height / gridY;\n\n    //\n\n    const indices = [];\n    const vertices = [];\n    const normals = [];\n    const uvs = [];\n\n    for (let iy = 0; iy < gridY1; iy++) {\n      const y = iy * segment_height - height_half;\n\n      for (let ix = 0; ix < gridX1; ix++) {\n        const x = ix * segment_width - width_half;\n\n        vertices.push(x, -y, 0);\n\n        normals.push(0, 0, 1);\n\n        uvs.push(ix / gridX);\n        uvs.push(1 - iy / gridY);\n      }\n    }\n\n    for (let iy = 0; iy < gridY; iy++) {\n      for (let ix = 0; ix < gridX; ix++) {\n        const a = ix + gridX1 * iy;\n        const b = ix + gridX1 * (iy + 1);\n        const c = ix + 1 + gridX1 * (iy + 1);\n        const d = ix + 1 + gridX1 * iy;\n\n        indices.push(a, b, d);\n        indices.push(b, c, d);\n      }\n    }\n\n    this.setIndex(indices);\n    this.setAttribute(\"position\", new Float32BufferAttribute(vertices, 3));\n    this.setAttribute(\"normal\", new Float32BufferAttribute(normals, 3));\n    this.setAttribute(\"uv\", new Float32BufferAttribute(uvs, 2));\n  }\n\n  static fromJSON(data) {\n    return new PlaneGeometry(\n      data.width,\n      data.height,\n      data.widthSegments,\n      data.heightSegments\n    );\n  }\n}\n\nvar alphamap_fragment =\n  \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment =\n  \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment =\n  \"#ifdef USE_ALPHATEST\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n#endif\";\n\nvar alphatest_pars_fragment =\n  \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n\nvar aomap_fragment =\n  \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment =\n  \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\";\n\nvar beginnormal_vertex =\n  \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs =\n  \"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( V * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\";\n\nvar bumpmap_pars_fragment =\n  \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment =\n  \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment =\n  \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex =\n  \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\nvar clipping_planes_vertex =\n  \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment =\n  \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment =\n  \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex =\n  \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex =\n  \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n\nvar common =\n  \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\";\n\nvar cube_uv_reflection_fragment =\n  \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_maxMipLevel 8.0\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_maxTileSize 256.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\\n\\t\\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\\n\\t\\tvec2 f = fract( uv );\\n\\t\\tuv += 0.5 - f;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tif ( mipInt < cubeUV_maxMipLevel ) {\\n\\t\\t\\tuv.y += 2.0 * cubeUV_maxTileSize;\\n\\t\\t}\\n\\t\\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\\n\\t\\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\\n\\t\\tuv *= texelSize;\\n\\t\\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.x += texelSize;\\n\\t\\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.y += texelSize;\\n\\t\\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.x -= texelSize;\\n\\t\\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tvec3 tm = mix( tl, tr, f.x );\\n\\t\\tvec3 bm = mix( bl, br, f.x );\\n\\t\\treturn mix( tm, bm, f.y );\\n\\t}\\n\\t#define r0 1.0\\n\\t#define v0 0.339\\n\\t#define m0 - 2.0\\n\\t#define r1 0.8\\n\\t#define v1 0.276\\n\\t#define m1 - 1.0\\n\\t#define r4 0.4\\n\\t#define v4 0.046\\n\\t#define m4 2.0\\n\\t#define r5 0.305\\n\\t#define v5 0.016\\n\\t#define m5 3.0\\n\\t#define r6 0.21\\n\\t#define v6 0.0038\\n\\t#define m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= r1 ) {\\n\\t\\t\\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\\n\\t\\t} else if ( roughness >= r4 ) {\\n\\t\\t\\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\\n\\t\\t} else if ( roughness >= r5 ) {\\n\\t\\t\\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\\n\\t\\t} else if ( roughness >= r6 ) {\\n\\t\\t\\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\nvar defaultnormal_vertex =\n  \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex =\n  \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex =\n  \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment =\n  \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment =\n  \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar encodings_pars_fragment =\n  \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat D = max( maxRange / maxRGB, 1.0 );\\n\\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value ) {\\n\\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\\n\\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract( Le );\\n\\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\\n\\treturn vec4( max( vRGB, 0.0 ), 1.0 );\\n}\";\n\nvar envmap_fragment =\n  \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment =\n  \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment =\n  \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex =\n  \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex =\n  \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n\nvar fog_fragment =\n  \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment =\n  \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment =\n  \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t#else\\n\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t#endif\\n}\";\n\nvar lightmap_fragment =\n  \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tlightMapIrradiance *= PI;\\n\\t#endif\\n\\treflectedLight.indirectDiffuse += lightMapIrradiance;\\n#endif\";\n\nvar lightmap_pars_fragment =\n  \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_vertex =\n  \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n\\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\\n#ifdef DOUBLE_SIDED\\n\\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\\n\\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointLightInfo( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotLightInfo( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\nvar lights_pars_begin =\n  \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t}\\n\\t\\treturn distanceFalloff;\\n\\t#else\\n\\t\\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\t\\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t#endif\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment =\n  \"#if defined( USE_ENVMAP )\\n\\t#ifdef ENVMAP_MODE_REFRACTION\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 reflectVec;\\n\\t\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\t\\treflectVec = reflect( - viewDir, normal );\\n\\t\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\treflectVec = refract( - viewDir, normal, refractionRatio );\\n\\t\\t\\t#endif\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar lights_toon_fragment =\n  \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\nvar lights_toon_pars_fragment =\n  \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\nvar lights_phong_fragment =\n  \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment =\n  \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\nvar lights_physical_fragment =\n  \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\t#ifdef SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULARCOLORMAP\\n\\t\\t\\tspecularColorFactor *= specularColorMapTexelToLinear( texture2D( specularColorMap, vUv ) ).rgb;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEENCOLORMAP\\n\\t\\tmaterial.sheenColor *= sheenColorMapTexelToLinear( texture2D( sheenColorMap, vUv ) ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEENROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\\n\\t#endif\\n#endif\";\n\nvar lights_physical_pars_fragment =\n  \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n};\\nvec3 clearcoatSpecular = vec3( 0.0 );\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\tvec3 FssEss = specularColor * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\treflectedLight.directSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin =\n  \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef USE_CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps =\n  \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometry.normal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end =\n  \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment =\n  \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment =\n  \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex =\n  \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\nvar logdepthbuf_vertex =\n  \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar map_fragment =\n  \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment =\n  \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment =\n  \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tuniform mat3 uvTransform;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment =\n  \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment =\n  \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphnormal_vertex =\n  \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] > 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\t\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\t\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\t\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_pars_vertex =\n  \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t\\tuniform sampler2DArray morphTargetsTexture;\\n\\t\\tuniform vec2 morphTargetsTextureSize;\\n\\t\\tvec3 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset, const in int stride ) {\\n\\t\\t\\tfloat texelIndex = float( vertexIndex * stride + offset );\\n\\t\\t\\tfloat y = floor( texelIndex / morphTargetsTextureSize.x );\\n\\t\\t\\tfloat x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\t\\tvec3 morphUV = vec3( ( x + 0.5 ) / morphTargetsTextureSize.x, y / morphTargetsTextureSize.y, morphTargetIndex );\\n\\t\\t\\treturn texture( morphTargetsTexture, morphUV ).xyz;\\n\\t\\t}\\n\\t#else\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t\\t#else\\n\\t\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex =\n  \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\t\\tif ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 1 ) * morphTargetInfluences[ i ];\\n\\t\\t\\t#else\\n\\t\\t\\t\\tif ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t#else\\n\\t\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\t\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\t\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\t\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_begin =\n  \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * faceDirection;\\n\\t\\t\\tbitangent = bitangent * faceDirection;\\n\\t\\t#endif\\n\\t\\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";\n\nvar normal_fragment_maps =\n  \"#ifdef OBJECTSPACE_NORMALMAP\\n\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tnormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\nvar normal_pars_fragment =\n  \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_pars_vertex =\n  \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_vertex =\n  \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n\nvar normalmap_pars_fragment =\n  \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\\n\\t\\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin =\n  \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps =\n  \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\\n\\t#else\\n\\t\\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\\n\\t#endif\\n#endif\";\n\nvar clearcoat_pars_fragment =\n  \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\";\n\nvar output_fragment =\n  \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= transmissionAlpha + 0.1;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n\nvar packing =\n  \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";\n\nvar premultiplied_alpha_fragment =\n  \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex =\n  \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment =\n  \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment =\n  \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment =\n  \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment =\n  \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment =\n  \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex =\n  \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex =\n  \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\tvec4 shadowWorldPosition;\\n\\t#endif\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\";\n\nvar shadowmask_pars_fragment =\n  \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex =\n  \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex =\n  \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform highp sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar skinning_vertex =\n  \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex =\n  \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment =\n  \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment =\n  \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment =\n  \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment =\n  \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\nvar transmission_fragment =\n  \"#ifdef USE_TRANSMISSION\\n\\tfloat transmissionAlpha = 1.0;\\n\\tfloat transmissionFactor = transmission;\\n\\tfloat thicknessFactor = thickness;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmission = getIBLVolumeRefraction(\\n\\t\\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\\n\\t\\tattenuationColor, attenuationDistance );\\n\\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\\n\\ttransmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\\n#endif\";\n\nvar transmission_pars_fragment =\n  \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tvec3 getVolumeTransmissionRay( vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( float roughness, float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( vec2 fragCoord, float roughness, float ior ) {\\n\\t\\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 applyVolumeAttenuation( vec3 radiance, float transmissionDistance, vec3 attenuationColor, float attenuationDistance ) {\\n\\t\\tif ( attenuationDistance == 0.0 ) {\\n\\t\\t\\treturn radiance;\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance * radiance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( vec3 n, vec3 v, float roughness, vec3 diffuseColor, vec3 specularColor, float specularF90,\\n\\t\\tvec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness,\\n\\t\\tvec3 attenuationColor, float attenuationDistance ) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\\n\\t}\\n#endif\";\n\nvar uv_pars_fragment =\n  \"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\\n\\tvarying vec2 vUv;\\n#endif\";\n\nvar uv_pars_vertex =\n  \"#ifdef USE_UV\\n\\t#ifdef UVS_VERTEX_ONLY\\n\\t\\tvec2 vUv;\\n\\t#else\\n\\t\\tvarying vec2 vUv;\\n\\t#endif\\n\\tuniform mat3 uvTransform;\\n#endif\";\n\nvar uv_vertex =\n  \"#ifdef USE_UV\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\nvar uv2_pars_fragment =\n  \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_pars_vertex =\n  \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n\\tuniform mat3 uv2Transform;\\n#endif\";\n\nvar uv2_vertex =\n  \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex =\n  \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nconst vertex$g =\n  \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nconst fragment$g =\n  \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$f =\n  \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$f =\n  \"#include <envmap_common_pars_fragment>\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\tvec3 vReflect = vWorldDirection;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = envColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$e =\n  \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\nconst fragment$e =\n  \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\nconst vertex$d =\n  \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nconst fragment$d =\n  \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nconst vertex$c =\n  \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nconst fragment$c =\n  \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tvec4 texColor = texture2D( tEquirect, sampleUV );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$b =\n  \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$b =\n  \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$a =\n  \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$a =\n  \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$9 =\n  \"#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$9 =\n  \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vIndirectFront;\\n\\t#endif\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$8 =\n  \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nconst fragment$8 =\n  \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t\\tmatcapColor = matcapTexelToLinear( matcapColor );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$7 =\n  \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$7 =\n  \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\";\n\nconst vertex$6 =\n  \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$6 =\n  \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$5 =\n  \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$5 =\n  \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULARCOLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEENCOLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEENROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - clearcoat * Fcc ) + clearcoatSpecular * clearcoat;\\n\\t#endif\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$4 =\n  \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$4 =\n  \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$3 =\n  \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$3 =\n  \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$2 =\n  \"#include <common>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$2 =\n  \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst vertex$1 =\n  \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$1 =\n  \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst ShaderChunk = {\n  alphamap_fragment: alphamap_fragment,\n  alphamap_pars_fragment: alphamap_pars_fragment,\n  alphatest_fragment: alphatest_fragment,\n  alphatest_pars_fragment: alphatest_pars_fragment,\n  aomap_fragment: aomap_fragment,\n  aomap_pars_fragment: aomap_pars_fragment,\n  begin_vertex: begin_vertex,\n  beginnormal_vertex: beginnormal_vertex,\n  bsdfs: bsdfs,\n  bumpmap_pars_fragment: bumpmap_pars_fragment,\n  clipping_planes_fragment: clipping_planes_fragment,\n  clipping_planes_pars_fragment: clipping_planes_pars_fragment,\n  clipping_planes_pars_vertex: clipping_planes_pars_vertex,\n  clipping_planes_vertex: clipping_planes_vertex,\n  color_fragment: color_fragment,\n  color_pars_fragment: color_pars_fragment,\n  color_pars_vertex: color_pars_vertex,\n  color_vertex: color_vertex,\n  common: common,\n  cube_uv_reflection_fragment: cube_uv_reflection_fragment,\n  defaultnormal_vertex: defaultnormal_vertex,\n  displacementmap_pars_vertex: displacementmap_pars_vertex,\n  displacementmap_vertex: displacementmap_vertex,\n  emissivemap_fragment: emissivemap_fragment,\n  emissivemap_pars_fragment: emissivemap_pars_fragment,\n  encodings_fragment: encodings_fragment,\n  encodings_pars_fragment: encodings_pars_fragment,\n  envmap_fragment: envmap_fragment,\n  envmap_common_pars_fragment: envmap_common_pars_fragment,\n  envmap_pars_fragment: envmap_pars_fragment,\n  envmap_pars_vertex: envmap_pars_vertex,\n  envmap_physical_pars_fragment: envmap_physical_pars_fragment,\n  envmap_vertex: envmap_vertex,\n  fog_vertex: fog_vertex,\n  fog_pars_vertex: fog_pars_vertex,\n  fog_fragment: fog_fragment,\n  fog_pars_fragment: fog_pars_fragment,\n  gradientmap_pars_fragment: gradientmap_pars_fragment,\n  lightmap_fragment: lightmap_fragment,\n  lightmap_pars_fragment: lightmap_pars_fragment,\n  lights_lambert_vertex: lights_lambert_vertex,\n  lights_pars_begin: lights_pars_begin,\n  lights_toon_fragment: lights_toon_fragment,\n  lights_toon_pars_fragment: lights_toon_pars_fragment,\n  lights_phong_fragment: lights_phong_fragment,\n  lights_phong_pars_fragment: lights_phong_pars_fragment,\n  lights_physical_fragment: lights_physical_fragment,\n  lights_physical_pars_fragment: lights_physical_pars_fragment,\n  lights_fragment_begin: lights_fragment_begin,\n  lights_fragment_maps: lights_fragment_maps,\n  lights_fragment_end: lights_fragment_end,\n  logdepthbuf_fragment: logdepthbuf_fragment,\n  logdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n  logdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n  logdepthbuf_vertex: logdepthbuf_vertex,\n  map_fragment: map_fragment,\n  map_pars_fragment: map_pars_fragment,\n  map_particle_fragment: map_particle_fragment,\n  map_particle_pars_fragment: map_particle_pars_fragment,\n  metalnessmap_fragment: metalnessmap_fragment,\n  metalnessmap_pars_fragment: metalnessmap_pars_fragment,\n  morphnormal_vertex: morphnormal_vertex,\n  morphtarget_pars_vertex: morphtarget_pars_vertex,\n  morphtarget_vertex: morphtarget_vertex,\n  normal_fragment_begin: normal_fragment_begin,\n  normal_fragment_maps: normal_fragment_maps,\n  normal_pars_fragment: normal_pars_fragment,\n  normal_pars_vertex: normal_pars_vertex,\n  normal_vertex: normal_vertex,\n  normalmap_pars_fragment: normalmap_pars_fragment,\n  clearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n  clearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n  clearcoat_pars_fragment: clearcoat_pars_fragment,\n  output_fragment: output_fragment,\n  packing: packing,\n  premultiplied_alpha_fragment: premultiplied_alpha_fragment,\n  project_vertex: project_vertex,\n  dithering_fragment: dithering_fragment,\n  dithering_pars_fragment: dithering_pars_fragment,\n  roughnessmap_fragment: roughnessmap_fragment,\n  roughnessmap_pars_fragment: roughnessmap_pars_fragment,\n  shadowmap_pars_fragment: shadowmap_pars_fragment,\n  shadowmap_pars_vertex: shadowmap_pars_vertex,\n  shadowmap_vertex: shadowmap_vertex,\n  shadowmask_pars_fragment: shadowmask_pars_fragment,\n  skinbase_vertex: skinbase_vertex,\n  skinning_pars_vertex: skinning_pars_vertex,\n  skinning_vertex: skinning_vertex,\n  skinnormal_vertex: skinnormal_vertex,\n  specularmap_fragment: specularmap_fragment,\n  specularmap_pars_fragment: specularmap_pars_fragment,\n  tonemapping_fragment: tonemapping_fragment,\n  tonemapping_pars_fragment: tonemapping_pars_fragment,\n  transmission_fragment: transmission_fragment,\n  transmission_pars_fragment: transmission_pars_fragment,\n  uv_pars_fragment: uv_pars_fragment,\n  uv_pars_vertex: uv_pars_vertex,\n  uv_vertex: uv_vertex,\n  uv2_pars_fragment: uv2_pars_fragment,\n  uv2_pars_vertex: uv2_pars_vertex,\n  uv2_vertex: uv2_vertex,\n  worldpos_vertex: worldpos_vertex,\n\n  background_vert: vertex$g,\n  background_frag: fragment$g,\n  cube_vert: vertex$f,\n  cube_frag: fragment$f,\n  depth_vert: vertex$e,\n  depth_frag: fragment$e,\n  distanceRGBA_vert: vertex$d,\n  distanceRGBA_frag: fragment$d,\n  equirect_vert: vertex$c,\n  equirect_frag: fragment$c,\n  linedashed_vert: vertex$b,\n  linedashed_frag: fragment$b,\n  meshbasic_vert: vertex$a,\n  meshbasic_frag: fragment$a,\n  meshlambert_vert: vertex$9,\n  meshlambert_frag: fragment$9,\n  meshmatcap_vert: vertex$8,\n  meshmatcap_frag: fragment$8,\n  meshnormal_vert: vertex$7,\n  meshnormal_frag: fragment$7,\n  meshphong_vert: vertex$6,\n  meshphong_frag: fragment$6,\n  meshphysical_vert: vertex$5,\n  meshphysical_frag: fragment$5,\n  meshtoon_vert: vertex$4,\n  meshtoon_frag: fragment$4,\n  points_vert: vertex$3,\n  points_frag: fragment$3,\n  shadow_vert: vertex$2,\n  shadow_frag: fragment$2,\n  sprite_vert: vertex$1,\n  sprite_frag: fragment$1,\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n  common: {\n    diffuse: { value: new Color(0xffffff) },\n    opacity: { value: 1.0 },\n\n    map: { value: null },\n    uvTransform: { value: new Matrix3() },\n    uv2Transform: { value: new Matrix3() },\n\n    alphaMap: { value: null },\n    alphaTest: { value: 0 },\n  },\n\n  specularmap: {\n    specularMap: { value: null },\n  },\n\n  envmap: {\n    envMap: { value: null },\n    flipEnvMap: { value: -1 },\n    reflectivity: { value: 1.0 }, // basic, lambert, phong\n    ior: { value: 1.5 }, // standard, physical\n    refractionRatio: { value: 0.98 },\n  },\n\n  aomap: {\n    aoMap: { value: null },\n    aoMapIntensity: { value: 1 },\n  },\n\n  lightmap: {\n    lightMap: { value: null },\n    lightMapIntensity: { value: 1 },\n  },\n\n  emissivemap: {\n    emissiveMap: { value: null },\n  },\n\n  bumpmap: {\n    bumpMap: { value: null },\n    bumpScale: { value: 1 },\n  },\n\n  normalmap: {\n    normalMap: { value: null },\n    normalScale: { value: new Vector2(1, 1) },\n  },\n\n  displacementmap: {\n    displacementMap: { value: null },\n    displacementScale: { value: 1 },\n    displacementBias: { value: 0 },\n  },\n\n  roughnessmap: {\n    roughnessMap: { value: null },\n  },\n\n  metalnessmap: {\n    metalnessMap: { value: null },\n  },\n\n  gradientmap: {\n    gradientMap: { value: null },\n  },\n\n  fog: {\n    fogDensity: { value: 0.00025 },\n    fogNear: { value: 1 },\n    fogFar: { value: 2000 },\n    fogColor: { value: new Color(0xffffff) },\n  },\n\n  lights: {\n    ambientLightColor: { value: [] },\n\n    lightProbe: { value: [] },\n\n    directionalLights: {\n      value: [],\n      properties: {\n        direction: {},\n        color: {},\n      },\n    },\n\n    directionalLightShadows: {\n      value: [],\n      properties: {\n        shadowBias: {},\n        shadowNormalBias: {},\n        shadowRadius: {},\n        shadowMapSize: {},\n      },\n    },\n\n    directionalShadowMap: { value: [] },\n    directionalShadowMatrix: { value: [] },\n\n    spotLights: {\n      value: [],\n      properties: {\n        color: {},\n        position: {},\n        direction: {},\n        distance: {},\n        coneCos: {},\n        penumbraCos: {},\n        decay: {},\n      },\n    },\n\n    spotLightShadows: {\n      value: [],\n      properties: {\n        shadowBias: {},\n        shadowNormalBias: {},\n        shadowRadius: {},\n        shadowMapSize: {},\n      },\n    },\n\n    spotShadowMap: { value: [] },\n    spotShadowMatrix: { value: [] },\n\n    pointLights: {\n      value: [],\n      properties: {\n        color: {},\n        position: {},\n        decay: {},\n        distance: {},\n      },\n    },\n\n    pointLightShadows: {\n      value: [],\n      properties: {\n        shadowBias: {},\n        shadowNormalBias: {},\n        shadowRadius: {},\n        shadowMapSize: {},\n        shadowCameraNear: {},\n        shadowCameraFar: {},\n      },\n    },\n\n    pointShadowMap: { value: [] },\n    pointShadowMatrix: { value: [] },\n\n    hemisphereLights: {\n      value: [],\n      properties: {\n        direction: {},\n        skyColor: {},\n        groundColor: {},\n      },\n    },\n\n    // TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n    rectAreaLights: {\n      value: [],\n      properties: {\n        color: {},\n        position: {},\n        width: {},\n        height: {},\n      },\n    },\n\n    ltc_1: { value: null },\n    ltc_2: { value: null },\n  },\n\n  points: {\n    diffuse: { value: new Color(0xffffff) },\n    opacity: { value: 1.0 },\n    size: { value: 1.0 },\n    scale: { value: 1.0 },\n    map: { value: null },\n    alphaMap: { value: null },\n    alphaTest: { value: 0 },\n    uvTransform: { value: new Matrix3() },\n  },\n\n  sprite: {\n    diffuse: { value: new Color(0xffffff) },\n    opacity: { value: 1.0 },\n    center: { value: new Vector2(0.5, 0.5) },\n    rotation: { value: 0.0 },\n    map: { value: null },\n    alphaMap: { value: null },\n    alphaTest: { value: 0 },\n    uvTransform: { value: new Matrix3() },\n  },\n};\n\nconst ShaderLib = {\n  basic: {\n    uniforms: mergeUniforms([\n      UniformsLib.common,\n      UniformsLib.specularmap,\n      UniformsLib.envmap,\n      UniformsLib.aomap,\n      UniformsLib.lightmap,\n      UniformsLib.fog,\n    ]),\n\n    vertexShader: ShaderChunk.meshbasic_vert,\n    fragmentShader: ShaderChunk.meshbasic_frag,\n  },\n\n  lambert: {\n    uniforms: mergeUniforms([\n      UniformsLib.common,\n      UniformsLib.specularmap,\n      UniformsLib.envmap,\n      UniformsLib.aomap,\n      UniformsLib.lightmap,\n      UniformsLib.emissivemap,\n      UniformsLib.fog,\n      UniformsLib.lights,\n      {\n        emissive: { value: new Color(0x000000) },\n      },\n    ]),\n\n    vertexShader: ShaderChunk.meshlambert_vert,\n    fragmentShader: ShaderChunk.meshlambert_frag,\n  },\n\n  phong: {\n    uniforms: mergeUniforms([\n      UniformsLib.common,\n      UniformsLib.specularmap,\n      UniformsLib.envmap,\n      UniformsLib.aomap,\n      UniformsLib.lightmap,\n      UniformsLib.emissivemap,\n      UniformsLib.bumpmap,\n      UniformsLib.normalmap,\n      UniformsLib.displacementmap,\n      UniformsLib.fog,\n      UniformsLib.lights,\n      {\n        emissive: { value: new Color(0x000000) },\n        specular: { value: new Color(0x111111) },\n        shininess: { value: 30 },\n      },\n    ]),\n\n    vertexShader: ShaderChunk.meshphong_vert,\n    fragmentShader: ShaderChunk.meshphong_frag,\n  },\n\n  standard: {\n    uniforms: mergeUniforms([\n      UniformsLib.common,\n      UniformsLib.envmap,\n      UniformsLib.aomap,\n      UniformsLib.lightmap,\n      UniformsLib.emissivemap,\n      UniformsLib.bumpmap,\n      UniformsLib.normalmap,\n      UniformsLib.displacementmap,\n      UniformsLib.roughnessmap,\n      UniformsLib.metalnessmap,\n      UniformsLib.fog,\n      UniformsLib.lights,\n      {\n        emissive: { value: new Color(0x000000) },\n        roughness: { value: 1.0 },\n        metalness: { value: 0.0 },\n        envMapIntensity: { value: 1 }, // temporary\n      },\n    ]),\n\n    vertexShader: ShaderChunk.meshphysical_vert,\n    fragmentShader: ShaderChunk.meshphysical_frag,\n  },\n\n  toon: {\n    uniforms: mergeUniforms([\n      UniformsLib.common,\n      UniformsLib.aomap,\n      UniformsLib.lightmap,\n      UniformsLib.emissivemap,\n      UniformsLib.bumpmap,\n      UniformsLib.normalmap,\n      UniformsLib.displacementmap,\n      UniformsLib.gradientmap,\n      UniformsLib.fog,\n      UniformsLib.lights,\n      {\n        emissive: { value: new Color(0x000000) },\n      },\n    ]),\n\n    vertexShader: ShaderChunk.meshtoon_vert,\n    fragmentShader: ShaderChunk.meshtoon_frag,\n  },\n\n  matcap: {\n    uniforms: mergeUniforms([\n      UniformsLib.common,\n      UniformsLib.bumpmap,\n      UniformsLib.normalmap,\n      UniformsLib.displacementmap,\n      UniformsLib.fog,\n      {\n        matcap: { value: null },\n      },\n    ]),\n\n    vertexShader: ShaderChunk.meshmatcap_vert,\n    fragmentShader: ShaderChunk.meshmatcap_frag,\n  },\n\n  points: {\n    uniforms: mergeUniforms([UniformsLib.points, UniformsLib.fog]),\n\n    vertexShader: ShaderChunk.points_vert,\n    fragmentShader: ShaderChunk.points_frag,\n  },\n\n  dashed: {\n    uniforms: mergeUniforms([\n      UniformsLib.common,\n      UniformsLib.fog,\n      {\n        scale: { value: 1 },\n        dashSize: { value: 1 },\n        totalSize: { value: 2 },\n      },\n    ]),\n\n    vertexShader: ShaderChunk.linedashed_vert,\n    fragmentShader: ShaderChunk.linedashed_frag,\n  },\n\n  depth: {\n    uniforms: mergeUniforms([UniformsLib.common, UniformsLib.displacementmap]),\n\n    vertexShader: ShaderChunk.depth_vert,\n    fragmentShader: ShaderChunk.depth_frag,\n  },\n\n  normal: {\n    uniforms: mergeUniforms([\n      UniformsLib.common,\n      UniformsLib.bumpmap,\n      UniformsLib.normalmap,\n      UniformsLib.displacementmap,\n      {\n        opacity: { value: 1.0 },\n      },\n    ]),\n\n    vertexShader: ShaderChunk.meshnormal_vert,\n    fragmentShader: ShaderChunk.meshnormal_frag,\n  },\n\n  sprite: {\n    uniforms: mergeUniforms([UniformsLib.sprite, UniformsLib.fog]),\n\n    vertexShader: ShaderChunk.sprite_vert,\n    fragmentShader: ShaderChunk.sprite_frag,\n  },\n\n  background: {\n    uniforms: {\n      uvTransform: { value: new Matrix3() },\n      t2D: { value: null },\n    },\n\n    vertexShader: ShaderChunk.background_vert,\n    fragmentShader: ShaderChunk.background_frag,\n  },\n  /* -------------------------------------------------------------------------\n\t//\tCube map shader\n\t ------------------------------------------------------------------------- */\n\n  cube: {\n    uniforms: mergeUniforms([\n      UniformsLib.envmap,\n      {\n        opacity: { value: 1.0 },\n      },\n    ]),\n\n    vertexShader: ShaderChunk.cube_vert,\n    fragmentShader: ShaderChunk.cube_frag,\n  },\n\n  equirect: {\n    uniforms: {\n      tEquirect: { value: null },\n    },\n\n    vertexShader: ShaderChunk.equirect_vert,\n    fragmentShader: ShaderChunk.equirect_frag,\n  },\n\n  distanceRGBA: {\n    uniforms: mergeUniforms([\n      UniformsLib.common,\n      UniformsLib.displacementmap,\n      {\n        referencePosition: { value: new Vector3() },\n        nearDistance: { value: 1 },\n        farDistance: { value: 1000 },\n      },\n    ]),\n\n    vertexShader: ShaderChunk.distanceRGBA_vert,\n    fragmentShader: ShaderChunk.distanceRGBA_frag,\n  },\n\n  shadow: {\n    uniforms: mergeUniforms([\n      UniformsLib.lights,\n      UniformsLib.fog,\n      {\n        color: { value: new Color(0x00000) },\n        opacity: { value: 1.0 },\n      },\n    ]),\n\n    vertexShader: ShaderChunk.shadow_vert,\n    fragmentShader: ShaderChunk.shadow_frag,\n  },\n};\n\nShaderLib.physical = {\n  uniforms: mergeUniforms([\n    ShaderLib.standard.uniforms,\n    {\n      clearcoat: { value: 0 },\n      clearcoatMap: { value: null },\n      clearcoatRoughness: { value: 0 },\n      clearcoatRoughnessMap: { value: null },\n      clearcoatNormalScale: { value: new Vector2(1, 1) },\n      clearcoatNormalMap: { value: null },\n      sheen: { value: 0 },\n      sheenColor: { value: new Color(0x000000) },\n      sheenColorMap: { value: null },\n      sheenRoughness: { value: 0 },\n      sheenRoughnessMap: { value: null },\n      transmission: { value: 0 },\n      transmissionMap: { value: null },\n      transmissionSamplerSize: { value: new Vector2() },\n      transmissionSamplerMap: { value: null },\n      thickness: { value: 0 },\n      thicknessMap: { value: null },\n      attenuationDistance: { value: 0 },\n      attenuationColor: { value: new Color(0x000000) },\n      specularIntensity: { value: 0 },\n      specularIntensityMap: { value: null },\n      specularColor: { value: new Color(1, 1, 1) },\n      specularColorMap: { value: null },\n    },\n  ]),\n\n  vertexShader: ShaderChunk.meshphysical_vert,\n  fragmentShader: ShaderChunk.meshphysical_frag,\n};\n\nfunction WebGLBackground(\n  renderer,\n  cubemaps,\n  state,\n  objects,\n  premultipliedAlpha\n) {\n  const clearColor = new Color(0x000000);\n  let clearAlpha = 0;\n\n  let planeMesh;\n  let boxMesh;\n\n  let currentBackground = null;\n  let currentBackgroundVersion = 0;\n  let currentTonemapping = null;\n\n  function render(renderList, scene) {\n    let forceClear = false;\n    let background = scene.isScene === true ? scene.background : null;\n\n    if (background && background.isTexture) {\n      background = cubemaps.get(background);\n    }\n\n    // Ignore background in AR\n    // TODO: Reconsider this.\n\n    const xr = renderer.xr;\n    const session = xr.getSession && xr.getSession();\n\n    if (session && session.environmentBlendMode === \"additive\") {\n      background = null;\n    }\n\n    if (background === null) {\n      setClear(clearColor, clearAlpha);\n    } else if (background && background.isColor) {\n      setClear(background, 1);\n      forceClear = true;\n    }\n\n    if (renderer.autoClear || forceClear) {\n      renderer.clear(\n        renderer.autoClearColor,\n        renderer.autoClearDepth,\n        renderer.autoClearStencil\n      );\n    }\n\n    if (\n      background &&\n      (background.isCubeTexture ||\n        background.mapping === CubeUVReflectionMapping)\n    ) {\n      if (boxMesh === undefined) {\n        boxMesh = new Mesh(\n          new BoxGeometry(1, 1, 1),\n          new ShaderMaterial({\n            name: \"BackgroundCubeMaterial\",\n            uniforms: cloneUniforms(ShaderLib.cube.uniforms),\n            vertexShader: ShaderLib.cube.vertexShader,\n            fragmentShader: ShaderLib.cube.fragmentShader,\n            side: BackSide,\n            depthTest: false,\n            depthWrite: false,\n            fog: false,\n          })\n        );\n\n        boxMesh.geometry.deleteAttribute(\"normal\");\n        boxMesh.geometry.deleteAttribute(\"uv\");\n\n        boxMesh.onBeforeRender = function (renderer, scene, camera) {\n          this.matrixWorld.copyPosition(camera.matrixWorld);\n        };\n\n        // enable code injection for non-built-in material\n        Object.defineProperty(boxMesh.material, \"envMap\", {\n          get: function () {\n            return this.uniforms.envMap.value;\n          },\n        });\n\n        objects.update(boxMesh);\n      }\n\n      boxMesh.material.uniforms.envMap.value = background;\n      boxMesh.material.uniforms.flipEnvMap.value =\n        background.isCubeTexture && background.isRenderTargetTexture === false\n          ? -1\n          : 1;\n\n      if (\n        currentBackground !== background ||\n        currentBackgroundVersion !== background.version ||\n        currentTonemapping !== renderer.toneMapping\n      ) {\n        boxMesh.material.needsUpdate = true;\n\n        currentBackground = background;\n        currentBackgroundVersion = background.version;\n        currentTonemapping = renderer.toneMapping;\n      }\n\n      // push to the pre-sorted opaque render list\n      renderList.unshift(\n        boxMesh,\n        boxMesh.geometry,\n        boxMesh.material,\n        0,\n        0,\n        null\n      );\n    } else if (background && background.isTexture) {\n      if (planeMesh === undefined) {\n        planeMesh = new Mesh(\n          new PlaneGeometry(2, 2),\n          new ShaderMaterial({\n            name: \"BackgroundMaterial\",\n            uniforms: cloneUniforms(ShaderLib.background.uniforms),\n            vertexShader: ShaderLib.background.vertexShader,\n            fragmentShader: ShaderLib.background.fragmentShader,\n            side: FrontSide,\n            depthTest: false,\n            depthWrite: false,\n            fog: false,\n          })\n        );\n\n        planeMesh.geometry.deleteAttribute(\"normal\");\n\n        // enable code injection for non-built-in material\n        Object.defineProperty(planeMesh.material, \"map\", {\n          get: function () {\n            return this.uniforms.t2D.value;\n          },\n        });\n\n        objects.update(planeMesh);\n      }\n\n      planeMesh.material.uniforms.t2D.value = background;\n\n      if (background.matrixAutoUpdate === true) {\n        background.updateMatrix();\n      }\n\n      planeMesh.material.uniforms.uvTransform.value.copy(background.matrix);\n\n      if (\n        currentBackground !== background ||\n        currentBackgroundVersion !== background.version ||\n        currentTonemapping !== renderer.toneMapping\n      ) {\n        planeMesh.material.needsUpdate = true;\n\n        currentBackground = background;\n        currentBackgroundVersion = background.version;\n        currentTonemapping = renderer.toneMapping;\n      }\n\n      // push to the pre-sorted opaque render list\n      renderList.unshift(\n        planeMesh,\n        planeMesh.geometry,\n        planeMesh.material,\n        0,\n        0,\n        null\n      );\n    }\n  }\n\n  function setClear(color, alpha) {\n    state.buffers.color.setClear(\n      color.r,\n      color.g,\n      color.b,\n      alpha,\n      premultipliedAlpha\n    );\n  }\n\n  return {\n    getClearColor: function () {\n      return clearColor;\n    },\n    setClearColor: function (color, alpha = 1) {\n      clearColor.set(color);\n      clearAlpha = alpha;\n      setClear(clearColor, clearAlpha);\n    },\n    getClearAlpha: function () {\n      return clearAlpha;\n    },\n    setClearAlpha: function (alpha) {\n      clearAlpha = alpha;\n      setClear(clearColor, clearAlpha);\n    },\n    render: render,\n  };\n}\n\nfunction WebGLBindingStates(gl, extensions, attributes, capabilities) {\n  const maxVertexAttributes = gl.getParameter(34921);\n\n  const extension = capabilities.isWebGL2\n    ? null\n    : extensions.get(\"OES_vertex_array_object\");\n  const vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n  const bindingStates = {};\n\n  const defaultState = createBindingState(null);\n  let currentState = defaultState;\n\n  function setup(object, material, program, geometry, index) {\n    let updateBuffers = false;\n\n    if (vaoAvailable) {\n      const state = getBindingState(geometry, program, material);\n\n      if (currentState !== state) {\n        currentState = state;\n        bindVertexArrayObject(currentState.object);\n      }\n\n      updateBuffers = needsUpdate(geometry, index);\n\n      if (updateBuffers) saveCache(geometry, index);\n    } else {\n      const wireframe = material.wireframe === true;\n\n      if (\n        currentState.geometry !== geometry.id ||\n        currentState.program !== program.id ||\n        currentState.wireframe !== wireframe\n      ) {\n        currentState.geometry = geometry.id;\n        currentState.program = program.id;\n        currentState.wireframe = wireframe;\n\n        updateBuffers = true;\n      }\n    }\n\n    if (object.isInstancedMesh === true) {\n      updateBuffers = true;\n    }\n\n    if (index !== null) {\n      attributes.update(index, 34963);\n    }\n\n    if (updateBuffers) {\n      setupVertexAttributes(object, material, program, geometry);\n\n      if (index !== null) {\n        gl.bindBuffer(34963, attributes.get(index).buffer);\n      }\n    }\n  }\n\n  function createVertexArrayObject() {\n    if (capabilities.isWebGL2) return gl.createVertexArray();\n\n    return extension.createVertexArrayOES();\n  }\n\n  function bindVertexArrayObject(vao) {\n    if (capabilities.isWebGL2) return gl.bindVertexArray(vao);\n\n    return extension.bindVertexArrayOES(vao);\n  }\n\n  function deleteVertexArrayObject(vao) {\n    if (capabilities.isWebGL2) return gl.deleteVertexArray(vao);\n\n    return extension.deleteVertexArrayOES(vao);\n  }\n\n  function getBindingState(geometry, program, material) {\n    const wireframe = material.wireframe === true;\n\n    let programMap = bindingStates[geometry.id];\n\n    if (programMap === undefined) {\n      programMap = {};\n      bindingStates[geometry.id] = programMap;\n    }\n\n    let stateMap = programMap[program.id];\n\n    if (stateMap === undefined) {\n      stateMap = {};\n      programMap[program.id] = stateMap;\n    }\n\n    let state = stateMap[wireframe];\n\n    if (state === undefined) {\n      state = createBindingState(createVertexArrayObject());\n      stateMap[wireframe] = state;\n    }\n\n    return state;\n  }\n\n  function createBindingState(vao) {\n    const newAttributes = [];\n    const enabledAttributes = [];\n    const attributeDivisors = [];\n\n    for (let i = 0; i < maxVertexAttributes; i++) {\n      newAttributes[i] = 0;\n      enabledAttributes[i] = 0;\n      attributeDivisors[i] = 0;\n    }\n\n    return {\n      // for backward compatibility on non-VAO support browser\n      geometry: null,\n      program: null,\n      wireframe: false,\n\n      newAttributes: newAttributes,\n      enabledAttributes: enabledAttributes,\n      attributeDivisors: attributeDivisors,\n      object: vao,\n      attributes: {},\n      index: null,\n    };\n  }\n\n  function needsUpdate(geometry, index) {\n    const cachedAttributes = currentState.attributes;\n    const geometryAttributes = geometry.attributes;\n\n    let attributesNum = 0;\n\n    for (const key in geometryAttributes) {\n      const cachedAttribute = cachedAttributes[key];\n      const geometryAttribute = geometryAttributes[key];\n\n      if (cachedAttribute === undefined) return true;\n\n      if (cachedAttribute.attribute !== geometryAttribute) return true;\n\n      if (cachedAttribute.data !== geometryAttribute.data) return true;\n\n      attributesNum++;\n    }\n\n    if (currentState.attributesNum !== attributesNum) return true;\n\n    if (currentState.index !== index) return true;\n\n    return false;\n  }\n\n  function saveCache(geometry, index) {\n    const cache = {};\n    const attributes = geometry.attributes;\n    let attributesNum = 0;\n\n    for (const key in attributes) {\n      const attribute = attributes[key];\n\n      const data = {};\n      data.attribute = attribute;\n\n      if (attribute.data) {\n        data.data = attribute.data;\n      }\n\n      cache[key] = data;\n\n      attributesNum++;\n    }\n\n    currentState.attributes = cache;\n    currentState.attributesNum = attributesNum;\n\n    currentState.index = index;\n  }\n\n  function initAttributes() {\n    const newAttributes = currentState.newAttributes;\n\n    for (let i = 0, il = newAttributes.length; i < il; i++) {\n      newAttributes[i] = 0;\n    }\n  }\n\n  function enableAttribute(attribute) {\n    enableAttributeAndDivisor(attribute, 0);\n  }\n\n  function enableAttributeAndDivisor(attribute, meshPerAttribute) {\n    const newAttributes = currentState.newAttributes;\n    const enabledAttributes = currentState.enabledAttributes;\n    const attributeDivisors = currentState.attributeDivisors;\n\n    newAttributes[attribute] = 1;\n\n    if (enabledAttributes[attribute] === 0) {\n      gl.enableVertexAttribArray(attribute);\n      enabledAttributes[attribute] = 1;\n    }\n\n    if (attributeDivisors[attribute] !== meshPerAttribute) {\n      const extension = capabilities.isWebGL2\n        ? gl\n        : extensions.get(\"ANGLE_instanced_arrays\");\n\n      extension[\n        capabilities.isWebGL2\n          ? \"vertexAttribDivisor\"\n          : \"vertexAttribDivisorANGLE\"\n      ](attribute, meshPerAttribute);\n      attributeDivisors[attribute] = meshPerAttribute;\n    }\n  }\n\n  function disableUnusedAttributes() {\n    const newAttributes = currentState.newAttributes;\n    const enabledAttributes = currentState.enabledAttributes;\n\n    for (let i = 0, il = enabledAttributes.length; i < il; i++) {\n      if (enabledAttributes[i] !== newAttributes[i]) {\n        gl.disableVertexAttribArray(i);\n        enabledAttributes[i] = 0;\n      }\n    }\n  }\n\n  function vertexAttribPointer(index, size, type, normalized, stride, offset) {\n    if (capabilities.isWebGL2 === true && (type === 5124 || type === 5125)) {\n      gl.vertexAttribIPointer(index, size, type, stride, offset);\n    } else {\n      gl.vertexAttribPointer(index, size, type, normalized, stride, offset);\n    }\n  }\n\n  function setupVertexAttributes(object, material, program, geometry) {\n    if (\n      capabilities.isWebGL2 === false &&\n      (object.isInstancedMesh || geometry.isInstancedBufferGeometry)\n    ) {\n      if (extensions.get(\"ANGLE_instanced_arrays\") === null) return;\n    }\n\n    initAttributes();\n\n    const geometryAttributes = geometry.attributes;\n\n    const programAttributes = program.getAttributes();\n\n    const materialDefaultAttributeValues = material.defaultAttributeValues;\n\n    for (const name in programAttributes) {\n      const programAttribute = programAttributes[name];\n\n      if (programAttribute.location >= 0) {\n        let geometryAttribute = geometryAttributes[name];\n\n        if (geometryAttribute === undefined) {\n          if (name === \"instanceMatrix\" && object.instanceMatrix)\n            geometryAttribute = object.instanceMatrix;\n          if (name === \"instanceColor\" && object.instanceColor)\n            geometryAttribute = object.instanceColor;\n        }\n\n        if (geometryAttribute !== undefined) {\n          const normalized = geometryAttribute.normalized;\n          const size = geometryAttribute.itemSize;\n\n          const attribute = attributes.get(geometryAttribute);\n\n          // TODO Attribute may not be available on context restore\n\n          if (attribute === undefined) continue;\n\n          const buffer = attribute.buffer;\n          const type = attribute.type;\n          const bytesPerElement = attribute.bytesPerElement;\n\n          if (geometryAttribute.isInterleavedBufferAttribute) {\n            const data = geometryAttribute.data;\n            const stride = data.stride;\n            const offset = geometryAttribute.offset;\n\n            if (data && data.isInstancedInterleavedBuffer) {\n              for (let i = 0; i < programAttribute.locationSize; i++) {\n                enableAttributeAndDivisor(\n                  programAttribute.location + i,\n                  data.meshPerAttribute\n                );\n              }\n\n              if (\n                object.isInstancedMesh !== true &&\n                geometry._maxInstanceCount === undefined\n              ) {\n                geometry._maxInstanceCount = data.meshPerAttribute * data.count;\n              }\n            } else {\n              for (let i = 0; i < programAttribute.locationSize; i++) {\n                enableAttribute(programAttribute.location + i);\n              }\n            }\n\n            gl.bindBuffer(34962, buffer);\n\n            for (let i = 0; i < programAttribute.locationSize; i++) {\n              vertexAttribPointer(\n                programAttribute.location + i,\n                size / programAttribute.locationSize,\n                type,\n                normalized,\n                stride * bytesPerElement,\n                (offset + (size / programAttribute.locationSize) * i) *\n                  bytesPerElement\n              );\n            }\n          } else {\n            if (geometryAttribute.isInstancedBufferAttribute) {\n              for (let i = 0; i < programAttribute.locationSize; i++) {\n                enableAttributeAndDivisor(\n                  programAttribute.location + i,\n                  geometryAttribute.meshPerAttribute\n                );\n              }\n\n              if (\n                object.isInstancedMesh !== true &&\n                geometry._maxInstanceCount === undefined\n              ) {\n                geometry._maxInstanceCount =\n                  geometryAttribute.meshPerAttribute * geometryAttribute.count;\n              }\n            } else {\n              for (let i = 0; i < programAttribute.locationSize; i++) {\n                enableAttribute(programAttribute.location + i);\n              }\n            }\n\n            gl.bindBuffer(34962, buffer);\n\n            for (let i = 0; i < programAttribute.locationSize; i++) {\n              vertexAttribPointer(\n                programAttribute.location + i,\n                size / programAttribute.locationSize,\n                type,\n                normalized,\n                size * bytesPerElement,\n                (size / programAttribute.locationSize) * i * bytesPerElement\n              );\n            }\n          }\n        } else if (materialDefaultAttributeValues !== undefined) {\n          const value = materialDefaultAttributeValues[name];\n\n          if (value !== undefined) {\n            switch (value.length) {\n              case 2:\n                gl.vertexAttrib2fv(programAttribute.location, value);\n                break;\n\n              case 3:\n                gl.vertexAttrib3fv(programAttribute.location, value);\n                break;\n\n              case 4:\n                gl.vertexAttrib4fv(programAttribute.location, value);\n                break;\n\n              default:\n                gl.vertexAttrib1fv(programAttribute.location, value);\n            }\n          }\n        }\n      }\n    }\n\n    disableUnusedAttributes();\n  }\n\n  function dispose() {\n    reset();\n\n    for (const geometryId in bindingStates) {\n      const programMap = bindingStates[geometryId];\n\n      for (const programId in programMap) {\n        const stateMap = programMap[programId];\n\n        for (const wireframe in stateMap) {\n          deleteVertexArrayObject(stateMap[wireframe].object);\n\n          delete stateMap[wireframe];\n        }\n\n        delete programMap[programId];\n      }\n\n      delete bindingStates[geometryId];\n    }\n  }\n\n  function releaseStatesOfGeometry(geometry) {\n    if (bindingStates[geometry.id] === undefined) return;\n\n    const programMap = bindingStates[geometry.id];\n\n    for (const programId in programMap) {\n      const stateMap = programMap[programId];\n\n      for (const wireframe in stateMap) {\n        deleteVertexArrayObject(stateMap[wireframe].object);\n\n        delete stateMap[wireframe];\n      }\n\n      delete programMap[programId];\n    }\n\n    delete bindingStates[geometry.id];\n  }\n\n  function releaseStatesOfProgram(program) {\n    for (const geometryId in bindingStates) {\n      const programMap = bindingStates[geometryId];\n\n      if (programMap[program.id] === undefined) continue;\n\n      const stateMap = programMap[program.id];\n\n      for (const wireframe in stateMap) {\n        deleteVertexArrayObject(stateMap[wireframe].object);\n\n        delete stateMap[wireframe];\n      }\n\n      delete programMap[program.id];\n    }\n  }\n\n  function reset() {\n    resetDefaultState();\n\n    if (currentState === defaultState) return;\n\n    currentState = defaultState;\n    bindVertexArrayObject(currentState.object);\n  }\n\n  // for backward-compatilibity\n\n  function resetDefaultState() {\n    defaultState.geometry = null;\n    defaultState.program = null;\n    defaultState.wireframe = false;\n  }\n\n  return {\n    setup: setup,\n    reset: reset,\n    resetDefaultState: resetDefaultState,\n    dispose: dispose,\n    releaseStatesOfGeometry: releaseStatesOfGeometry,\n    releaseStatesOfProgram: releaseStatesOfProgram,\n\n    initAttributes: initAttributes,\n    enableAttribute: enableAttribute,\n    disableUnusedAttributes: disableUnusedAttributes,\n  };\n}\n\nfunction WebGLBufferRenderer(gl, extensions, info, capabilities) {\n  const isWebGL2 = capabilities.isWebGL2;\n\n  let mode;\n\n  function setMode(value) {\n    mode = value;\n  }\n\n  function render(start, count) {\n    gl.drawArrays(mode, start, count);\n\n    info.update(count, mode, 1);\n  }\n\n  function renderInstances(start, count, primcount) {\n    if (primcount === 0) return;\n\n    let extension, methodName;\n\n    if (isWebGL2) {\n      extension = gl;\n      methodName = \"drawArraysInstanced\";\n    } else {\n      extension = extensions.get(\"ANGLE_instanced_arrays\");\n      methodName = \"drawArraysInstancedANGLE\";\n\n      if (extension === null) {\n        console.error(\n          \"THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.\"\n        );\n        return;\n      }\n    }\n\n    extension[methodName](mode, start, count, primcount);\n\n    info.update(count, mode, primcount);\n  }\n\n  //\n\n  this.setMode = setMode;\n  this.render = render;\n  this.renderInstances = renderInstances;\n}\n\nfunction WebGLCapabilities(gl, extensions, parameters) {\n  let maxAnisotropy;\n\n  function getMaxAnisotropy() {\n    if (maxAnisotropy !== undefined) return maxAnisotropy;\n\n    if (extensions.has(\"EXT_texture_filter_anisotropic\") === true) {\n      const extension = extensions.get(\"EXT_texture_filter_anisotropic\");\n\n      maxAnisotropy = gl.getParameter(extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\n    } else {\n      maxAnisotropy = 0;\n    }\n\n    return maxAnisotropy;\n  }\n\n  function getMaxPrecision(precision) {\n    if (precision === \"highp\") {\n      if (\n        gl.getShaderPrecisionFormat(35633, 36338).precision > 0 &&\n        gl.getShaderPrecisionFormat(35632, 36338).precision > 0\n      ) {\n        return \"highp\";\n      }\n\n      precision = \"mediump\";\n    }\n\n    if (precision === \"mediump\") {\n      if (\n        gl.getShaderPrecisionFormat(35633, 36337).precision > 0 &&\n        gl.getShaderPrecisionFormat(35632, 36337).precision > 0\n      ) {\n        return \"mediump\";\n      }\n    }\n\n    return \"lowp\";\n  }\n\n  /* eslint-disable no-undef */\n  const isWebGL2 =\n    (typeof WebGL2RenderingContext !== \"undefined\" &&\n      gl instanceof WebGL2RenderingContext) ||\n    (typeof WebGL2ComputeRenderingContext !== \"undefined\" &&\n      gl instanceof WebGL2ComputeRenderingContext);\n  /* eslint-enable no-undef */\n\n  let precision =\n    parameters.precision !== undefined ? parameters.precision : \"highp\";\n  const maxPrecision = getMaxPrecision(precision);\n\n  if (maxPrecision !== precision) {\n    console.warn(\n      \"THREE.WebGLRenderer:\",\n      precision,\n      \"not supported, using\",\n      maxPrecision,\n      \"instead.\"\n    );\n    precision = maxPrecision;\n  }\n\n  const drawBuffers = isWebGL2 || extensions.has(\"WEBGL_draw_buffers\");\n\n  const logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n  const maxTextures = gl.getParameter(34930);\n  const maxVertexTextures = gl.getParameter(35660);\n  const maxTextureSize = gl.getParameter(3379);\n  const maxCubemapSize = gl.getParameter(34076);\n\n  const maxAttributes = gl.getParameter(34921);\n  const maxVertexUniforms = gl.getParameter(36347);\n  const maxVaryings = gl.getParameter(36348);\n  const maxFragmentUniforms = gl.getParameter(36349);\n\n  const vertexTextures = maxVertexTextures > 0;\n  const floatFragmentTextures = isWebGL2 || extensions.has(\"OES_texture_float\");\n  const floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n  const maxSamples = isWebGL2 ? gl.getParameter(36183) : 0;\n\n  return {\n    isWebGL2: isWebGL2,\n\n    drawBuffers: drawBuffers,\n\n    getMaxAnisotropy: getMaxAnisotropy,\n    getMaxPrecision: getMaxPrecision,\n\n    precision: precision,\n    logarithmicDepthBuffer: logarithmicDepthBuffer,\n\n    maxTextures: maxTextures,\n    maxVertexTextures: maxVertexTextures,\n    maxTextureSize: maxTextureSize,\n    maxCubemapSize: maxCubemapSize,\n\n    maxAttributes: maxAttributes,\n    maxVertexUniforms: maxVertexUniforms,\n    maxVaryings: maxVaryings,\n    maxFragmentUniforms: maxFragmentUniforms,\n\n    vertexTextures: vertexTextures,\n    floatFragmentTextures: floatFragmentTextures,\n    floatVertexTextures: floatVertexTextures,\n\n    maxSamples: maxSamples,\n  };\n}\n\nfunction WebGLClipping(properties) {\n  const scope = this;\n\n  let globalState = null,\n    numGlobalPlanes = 0,\n    localClippingEnabled = false,\n    renderingShadows = false;\n\n  const plane = new Plane(),\n    viewNormalMatrix = new Matrix3(),\n    uniform = { value: null, needsUpdate: false };\n\n  this.uniform = uniform;\n  this.numPlanes = 0;\n  this.numIntersection = 0;\n\n  this.init = function (planes, enableLocalClipping, camera) {\n    const enabled =\n      planes.length !== 0 ||\n      enableLocalClipping ||\n      // enable state of previous frame - the clipping code has to\n      // run another frame in order to reset the state:\n      numGlobalPlanes !== 0 ||\n      localClippingEnabled;\n\n    localClippingEnabled = enableLocalClipping;\n\n    globalState = projectPlanes(planes, camera, 0);\n    numGlobalPlanes = planes.length;\n\n    return enabled;\n  };\n\n  this.beginShadows = function () {\n    renderingShadows = true;\n    projectPlanes(null);\n  };\n\n  this.endShadows = function () {\n    renderingShadows = false;\n    resetGlobalState();\n  };\n\n  this.setState = function (material, camera, useCache) {\n    const planes = material.clippingPlanes,\n      clipIntersection = material.clipIntersection,\n      clipShadows = material.clipShadows;\n\n    const materialProperties = properties.get(material);\n\n    if (\n      !localClippingEnabled ||\n      planes === null ||\n      planes.length === 0 ||\n      (renderingShadows && !clipShadows)\n    ) {\n      // there's no local clipping\n\n      if (renderingShadows) {\n        // there's no global clipping\n\n        projectPlanes(null);\n      } else {\n        resetGlobalState();\n      }\n    } else {\n      const nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n        lGlobal = nGlobal * 4;\n\n      let dstArray = materialProperties.clippingState || null;\n\n      uniform.value = dstArray; // ensure unique state\n\n      dstArray = projectPlanes(planes, camera, lGlobal, useCache);\n\n      for (let i = 0; i !== lGlobal; ++i) {\n        dstArray[i] = globalState[i];\n      }\n\n      materialProperties.clippingState = dstArray;\n      this.numIntersection = clipIntersection ? this.numPlanes : 0;\n      this.numPlanes += nGlobal;\n    }\n  };\n\n  function resetGlobalState() {\n    if (uniform.value !== globalState) {\n      uniform.value = globalState;\n      uniform.needsUpdate = numGlobalPlanes > 0;\n    }\n\n    scope.numPlanes = numGlobalPlanes;\n    scope.numIntersection = 0;\n  }\n\n  function projectPlanes(planes, camera, dstOffset, skipTransform) {\n    const nPlanes = planes !== null ? planes.length : 0;\n    let dstArray = null;\n\n    if (nPlanes !== 0) {\n      dstArray = uniform.value;\n\n      if (skipTransform !== true || dstArray === null) {\n        const flatSize = dstOffset + nPlanes * 4,\n          viewMatrix = camera.matrixWorldInverse;\n\n        viewNormalMatrix.getNormalMatrix(viewMatrix);\n\n        if (dstArray === null || dstArray.length < flatSize) {\n          dstArray = new Float32Array(flatSize);\n        }\n\n        for (let i = 0, i4 = dstOffset; i !== nPlanes; ++i, i4 += 4) {\n          plane.copy(planes[i]).applyMatrix4(viewMatrix, viewNormalMatrix);\n\n          plane.normal.toArray(dstArray, i4);\n          dstArray[i4 + 3] = plane.constant;\n        }\n      }\n\n      uniform.value = dstArray;\n      uniform.needsUpdate = true;\n    }\n\n    scope.numPlanes = nPlanes;\n    scope.numIntersection = 0;\n\n    return dstArray;\n  }\n}\n\nfunction WebGLCubeMaps(renderer) {\n  let cubemaps = new WeakMap();\n\n  function mapTextureMapping(texture, mapping) {\n    if (mapping === EquirectangularReflectionMapping) {\n      texture.mapping = CubeReflectionMapping;\n    } else if (mapping === EquirectangularRefractionMapping) {\n      texture.mapping = CubeRefractionMapping;\n    }\n\n    return texture;\n  }\n\n  function get(texture) {\n    if (\n      texture &&\n      texture.isTexture &&\n      texture.isRenderTargetTexture === false\n    ) {\n      const mapping = texture.mapping;\n\n      if (\n        mapping === EquirectangularReflectionMapping ||\n        mapping === EquirectangularRefractionMapping\n      ) {\n        if (cubemaps.has(texture)) {\n          const cubemap = cubemaps.get(texture).texture;\n          return mapTextureMapping(cubemap, texture.mapping);\n        } else {\n          const image = texture.image;\n\n          if (image && image.height > 0) {\n            const currentRenderTarget = renderer.getRenderTarget();\n\n            const renderTarget = new WebGLCubeRenderTarget(image.height / 2);\n            renderTarget.fromEquirectangularTexture(renderer, texture);\n            cubemaps.set(texture, renderTarget);\n\n            renderer.setRenderTarget(currentRenderTarget);\n\n            texture.addEventListener(\"dispose\", onTextureDispose);\n\n            return mapTextureMapping(renderTarget.texture, texture.mapping);\n          } else {\n            // image not yet ready. try the conversion next frame\n\n            return null;\n          }\n        }\n      }\n    }\n\n    return texture;\n  }\n\n  function onTextureDispose(event) {\n    const texture = event.target;\n\n    texture.removeEventListener(\"dispose\", onTextureDispose);\n\n    const cubemap = cubemaps.get(texture);\n\n    if (cubemap !== undefined) {\n      cubemaps.delete(texture);\n      cubemap.dispose();\n    }\n  }\n\n  function dispose() {\n    cubemaps = new WeakMap();\n  }\n\n  return {\n    get: get,\n    dispose: dispose,\n  };\n}\n\nclass OrthographicCamera extends Camera {\n  constructor(\n    left = -1,\n    right = 1,\n    top = 1,\n    bottom = -1,\n    near = 0.1,\n    far = 2000\n  ) {\n    super();\n\n    this.type = \"OrthographicCamera\";\n\n    this.zoom = 1;\n    this.view = null;\n\n    this.left = left;\n    this.right = right;\n    this.top = top;\n    this.bottom = bottom;\n\n    this.near = near;\n    this.far = far;\n\n    this.updateProjectionMatrix();\n  }\n\n  copy(source, recursive) {\n    super.copy(source, recursive);\n\n    this.left = source.left;\n    this.right = source.right;\n    this.top = source.top;\n    this.bottom = source.bottom;\n    this.near = source.near;\n    this.far = source.far;\n\n    this.zoom = source.zoom;\n    this.view = source.view === null ? null : Object.assign({}, source.view);\n\n    return this;\n  }\n\n  setViewOffset(fullWidth, fullHeight, x, y, width, height) {\n    if (this.view === null) {\n      this.view = {\n        enabled: true,\n        fullWidth: 1,\n        fullHeight: 1,\n        offsetX: 0,\n        offsetY: 0,\n        width: 1,\n        height: 1,\n      };\n    }\n\n    this.view.enabled = true;\n    this.view.fullWidth = fullWidth;\n    this.view.fullHeight = fullHeight;\n    this.view.offsetX = x;\n    this.view.offsetY = y;\n    this.view.width = width;\n    this.view.height = height;\n\n    this.updateProjectionMatrix();\n  }\n\n  clearViewOffset() {\n    if (this.view !== null) {\n      this.view.enabled = false;\n    }\n\n    this.updateProjectionMatrix();\n  }\n\n  updateProjectionMatrix() {\n    const dx = (this.right - this.left) / (2 * this.zoom);\n    const dy = (this.top - this.bottom) / (2 * this.zoom);\n    const cx = (this.right + this.left) / 2;\n    const cy = (this.top + this.bottom) / 2;\n\n    let left = cx - dx;\n    let right = cx + dx;\n    let top = cy + dy;\n    let bottom = cy - dy;\n\n    if (this.view !== null && this.view.enabled) {\n      const scaleW = (this.right - this.left) / this.view.fullWidth / this.zoom;\n      const scaleH =\n        (this.top - this.bottom) / this.view.fullHeight / this.zoom;\n\n      left += scaleW * this.view.offsetX;\n      right = left + scaleW * this.view.width;\n      top -= scaleH * this.view.offsetY;\n      bottom = top - scaleH * this.view.height;\n    }\n\n    this.projectionMatrix.makeOrthographic(\n      left,\n      right,\n      top,\n      bottom,\n      this.near,\n      this.far\n    );\n\n    this.projectionMatrixInverse.copy(this.projectionMatrix).invert();\n  }\n\n  toJSON(meta) {\n    const data = super.toJSON(meta);\n\n    data.object.zoom = this.zoom;\n    data.object.left = this.left;\n    data.object.right = this.right;\n    data.object.top = this.top;\n    data.object.bottom = this.bottom;\n    data.object.near = this.near;\n    data.object.far = this.far;\n\n    if (this.view !== null) data.object.view = Object.assign({}, this.view);\n\n    return data;\n  }\n}\n\nOrthographicCamera.prototype.isOrthographicCamera = true;\n\nclass RawShaderMaterial extends ShaderMaterial {\n  constructor(parameters) {\n    super(parameters);\n\n    this.type = \"RawShaderMaterial\";\n  }\n}\n\nRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\nconst LOD_MIN = 4;\nconst LOD_MAX = 8;\nconst SIZE_MAX = Math.pow(2, LOD_MAX);\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [0.125, 0.215, 0.35, 0.446, 0.526, 0.582];\n\nconst TOTAL_LODS = LOD_MAX - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst ENCODINGS = {\n  [LinearEncoding]: 0,\n  [sRGBEncoding]: 1,\n  [RGBEEncoding]: 2,\n  [RGBM7Encoding]: 3,\n  [RGBM16Encoding]: 4,\n  [RGBDEncoding]: 5,\n  [GammaEncoding]: 6,\n};\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst { _lodPlanes, _sizeLods, _sigmas } = /*@__PURE__*/ _createPlanes();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\n\n// Golden Ratio\nconst PHI = (1 + Math.sqrt(5)) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n  /*@__PURE__*/ new Vector3(1, 1, 1),\n  /*@__PURE__*/ new Vector3(-1, 1, 1),\n  /*@__PURE__*/ new Vector3(1, 1, -1),\n  /*@__PURE__*/ new Vector3(-1, 1, -1),\n  /*@__PURE__*/ new Vector3(0, PHI, INV_PHI),\n  /*@__PURE__*/ new Vector3(0, PHI, -INV_PHI),\n  /*@__PURE__*/ new Vector3(INV_PHI, 0, PHI),\n  /*@__PURE__*/ new Vector3(-INV_PHI, 0, PHI),\n  /*@__PURE__*/ new Vector3(PHI, INV_PHI, 0),\n  /*@__PURE__*/ new Vector3(-PHI, INV_PHI, 0),\n];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n */\n\nclass PMREMGenerator {\n  constructor(renderer) {\n    this._renderer = renderer;\n    this._pingPongRenderTarget = null;\n\n    this._blurMaterial = _getBlurShader(MAX_SAMPLES);\n    this._equirectShader = null;\n    this._cubemapShader = null;\n\n    this._compileMaterial(this._blurMaterial);\n  }\n\n  /**\n   * Generates a PMREM from a supplied Scene, which can be faster than using an\n   * image if networking bandwidth is low. Optional sigma specifies a blur radius\n   * in radians to be applied to the scene before PMREM generation. Optional near\n   * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n   * is placed at the origin).\n   */\n  fromScene(scene, sigma = 0, near = 0.1, far = 100) {\n    _oldTarget = this._renderer.getRenderTarget();\n    const cubeUVRenderTarget = this._allocateTargets();\n\n    this._sceneToCubeUV(scene, near, far, cubeUVRenderTarget);\n    if (sigma > 0) {\n      this._blur(cubeUVRenderTarget, 0, 0, sigma);\n    }\n\n    this._applyPMREM(cubeUVRenderTarget);\n    this._cleanup(cubeUVRenderTarget);\n\n    return cubeUVRenderTarget;\n  }\n\n  /**\n   * Generates a PMREM from an equirectangular texture, which can be either LDR\n   * (RGBFormat) or HDR (RGBEFormat). The ideal input image size is 1k (1024 x 512),\n   * as this matches best with the 256 x 256 cubemap output.\n   */\n  fromEquirectangular(equirectangular) {\n    return this._fromTexture(equirectangular);\n  }\n\n  /**\n   * Generates a PMREM from an cubemap texture, which can be either LDR\n   * (RGBFormat) or HDR (RGBEFormat). The ideal input cube size is 256 x 256,\n   * as this matches best with the 256 x 256 cubemap output.\n   */\n  fromCubemap(cubemap) {\n    return this._fromTexture(cubemap);\n  }\n\n  /**\n   * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n   * your texture's network fetch for increased concurrency.\n   */\n  compileCubemapShader() {\n    if (this._cubemapShader === null) {\n      this._cubemapShader = _getCubemapShader();\n      this._compileMaterial(this._cubemapShader);\n    }\n  }\n\n  /**\n   * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n   * your texture's network fetch for increased concurrency.\n   */\n  compileEquirectangularShader() {\n    if (this._equirectShader === null) {\n      this._equirectShader = _getEquirectShader();\n      this._compileMaterial(this._equirectShader);\n    }\n  }\n\n  /**\n   * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n   * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n   * one of them will cause any others to also become unusable.\n   */\n  dispose() {\n    this._blurMaterial.dispose();\n\n    if (this._cubemapShader !== null) this._cubemapShader.dispose();\n    if (this._equirectShader !== null) this._equirectShader.dispose();\n\n    for (let i = 0; i < _lodPlanes.length; i++) {\n      _lodPlanes[i].dispose();\n    }\n  }\n\n  // private interface\n\n  _cleanup(outputTarget) {\n    this._pingPongRenderTarget.dispose();\n    this._renderer.setRenderTarget(_oldTarget);\n    outputTarget.scissorTest = false;\n    _setViewport(outputTarget, 0, 0, outputTarget.width, outputTarget.height);\n  }\n\n  _fromTexture(texture) {\n    _oldTarget = this._renderer.getRenderTarget();\n    const cubeUVRenderTarget = this._allocateTargets(texture);\n    this._textureToCubeUV(texture, cubeUVRenderTarget);\n    this._applyPMREM(cubeUVRenderTarget);\n    this._cleanup(cubeUVRenderTarget);\n\n    return cubeUVRenderTarget;\n  }\n\n  _allocateTargets(texture) {\n    // warning: null texture is valid\n\n    const params = {\n      magFilter: NearestFilter,\n      minFilter: NearestFilter,\n      generateMipmaps: false,\n      type: UnsignedByteType,\n      format: RGBEFormat,\n      encoding: _isLDR(texture) ? texture.encoding : RGBEEncoding,\n      depthBuffer: false,\n    };\n\n    const cubeUVRenderTarget = _createRenderTarget(params);\n    cubeUVRenderTarget.depthBuffer = texture ? false : true;\n    this._pingPongRenderTarget = _createRenderTarget(params);\n    return cubeUVRenderTarget;\n  }\n\n  _compileMaterial(material) {\n    const tmpMesh = new Mesh(_lodPlanes[0], material);\n    this._renderer.compile(tmpMesh, _flatCamera);\n  }\n\n  _sceneToCubeUV(scene, near, far, cubeUVRenderTarget) {\n    const fov = 90;\n    const aspect = 1;\n    const cubeCamera = new PerspectiveCamera(fov, aspect, near, far);\n    const upSign = [1, -1, 1, 1, 1, 1];\n    const forwardSign = [1, 1, 1, -1, -1, -1];\n    const renderer = this._renderer;\n\n    const originalAutoClear = renderer.autoClear;\n    const outputEncoding = renderer.outputEncoding;\n    const toneMapping = renderer.toneMapping;\n    renderer.getClearColor(_clearColor);\n\n    renderer.toneMapping = NoToneMapping;\n    renderer.outputEncoding = LinearEncoding;\n    renderer.autoClear = false;\n\n    const backgroundMaterial = new MeshBasicMaterial({\n      name: \"PMREM.Background\",\n      side: BackSide,\n      depthWrite: false,\n      depthTest: false,\n    });\n\n    const backgroundBox = new Mesh(new BoxGeometry(), backgroundMaterial);\n\n    let useSolidColor = false;\n    const background = scene.background;\n\n    if (background) {\n      if (background.isColor) {\n        backgroundMaterial.color.copy(background);\n        scene.background = null;\n        useSolidColor = true;\n      }\n    } else {\n      backgroundMaterial.color.copy(_clearColor);\n      useSolidColor = true;\n    }\n\n    for (let i = 0; i < 6; i++) {\n      const col = i % 3;\n      if (col == 0) {\n        cubeCamera.up.set(0, upSign[i], 0);\n        cubeCamera.lookAt(forwardSign[i], 0, 0);\n      } else if (col == 1) {\n        cubeCamera.up.set(0, 0, upSign[i]);\n        cubeCamera.lookAt(0, forwardSign[i], 0);\n      } else {\n        cubeCamera.up.set(0, upSign[i], 0);\n        cubeCamera.lookAt(0, 0, forwardSign[i]);\n      }\n\n      _setViewport(\n        cubeUVRenderTarget,\n        col * SIZE_MAX,\n        i > 2 ? SIZE_MAX : 0,\n        SIZE_MAX,\n        SIZE_MAX\n      );\n      renderer.setRenderTarget(cubeUVRenderTarget);\n\n      if (useSolidColor) {\n        renderer.render(backgroundBox, cubeCamera);\n      }\n\n      renderer.render(scene, cubeCamera);\n    }\n\n    backgroundBox.geometry.dispose();\n    backgroundBox.material.dispose();\n\n    renderer.toneMapping = toneMapping;\n    renderer.outputEncoding = outputEncoding;\n    renderer.autoClear = originalAutoClear;\n    scene.background = background;\n  }\n\n  _setEncoding(uniform, texture) {\n    if (\n      this._renderer.capabilities.isWebGL2 === true &&\n      texture.format === RGBAFormat &&\n      texture.type === UnsignedByteType &&\n      texture.encoding === sRGBEncoding\n    ) {\n      uniform.value = ENCODINGS[LinearEncoding];\n    } else {\n      uniform.value = ENCODINGS[texture.encoding];\n    }\n  }\n\n  _textureToCubeUV(texture, cubeUVRenderTarget) {\n    const renderer = this._renderer;\n\n    const isCubeTexture =\n      texture.mapping === CubeReflectionMapping ||\n      texture.mapping === CubeRefractionMapping;\n\n    if (isCubeTexture) {\n      if (this._cubemapShader == null) {\n        this._cubemapShader = _getCubemapShader();\n      }\n    } else {\n      if (this._equirectShader == null) {\n        this._equirectShader = _getEquirectShader();\n      }\n    }\n\n    const material = isCubeTexture ? this._cubemapShader : this._equirectShader;\n    const mesh = new Mesh(_lodPlanes[0], material);\n\n    const uniforms = material.uniforms;\n\n    uniforms[\"envMap\"].value = texture;\n\n    if (!isCubeTexture) {\n      uniforms[\"texelSize\"].value.set(\n        1.0 / texture.image.width,\n        1.0 / texture.image.height\n      );\n    }\n\n    this._setEncoding(uniforms[\"inputEncoding\"], texture);\n    this._setEncoding(uniforms[\"outputEncoding\"], cubeUVRenderTarget.texture);\n\n    _setViewport(cubeUVRenderTarget, 0, 0, 3 * SIZE_MAX, 2 * SIZE_MAX);\n\n    renderer.setRenderTarget(cubeUVRenderTarget);\n    renderer.render(mesh, _flatCamera);\n  }\n\n  _applyPMREM(cubeUVRenderTarget) {\n    const renderer = this._renderer;\n    const autoClear = renderer.autoClear;\n    renderer.autoClear = false;\n\n    for (let i = 1; i < TOTAL_LODS; i++) {\n      const sigma = Math.sqrt(\n        _sigmas[i] * _sigmas[i] - _sigmas[i - 1] * _sigmas[i - 1]\n      );\n\n      const poleAxis = _axisDirections[(i - 1) % _axisDirections.length];\n\n      this._blur(cubeUVRenderTarget, i - 1, i, sigma, poleAxis);\n    }\n\n    renderer.autoClear = autoClear;\n  }\n\n  /**\n   * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n   * vertically and horizontally, but this breaks down on a cube. Here we apply\n   * the blur latitudinally (around the poles), and then longitudinally (towards\n   * the poles) to approximate the orthogonally-separable blur. It is least\n   * accurate at the poles, but still does a decent job.\n   */\n  _blur(cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis) {\n    const pingPongRenderTarget = this._pingPongRenderTarget;\n\n    this._halfBlur(\n      cubeUVRenderTarget,\n      pingPongRenderTarget,\n      lodIn,\n      lodOut,\n      sigma,\n      \"latitudinal\",\n      poleAxis\n    );\n\n    this._halfBlur(\n      pingPongRenderTarget,\n      cubeUVRenderTarget,\n      lodOut,\n      lodOut,\n      sigma,\n      \"longitudinal\",\n      poleAxis\n    );\n  }\n\n  _halfBlur(\n    targetIn,\n    targetOut,\n    lodIn,\n    lodOut,\n    sigmaRadians,\n    direction,\n    poleAxis\n  ) {\n    const renderer = this._renderer;\n    const blurMaterial = this._blurMaterial;\n\n    if (direction !== \"latitudinal\" && direction !== \"longitudinal\") {\n      console.error(\n        \"blur direction must be either latitudinal or longitudinal!\"\n      );\n    }\n\n    // Number of standard deviations at which to cut off the discrete approximation.\n    const STANDARD_DEVIATIONS = 3;\n\n    const blurMesh = new Mesh(_lodPlanes[lodOut], blurMaterial);\n    const blurUniforms = blurMaterial.uniforms;\n\n    const pixels = _sizeLods[lodIn] - 1;\n    const radiansPerPixel = isFinite(sigmaRadians)\n      ? Math.PI / (2 * pixels)\n      : (2 * Math.PI) / (2 * MAX_SAMPLES - 1);\n    const sigmaPixels = sigmaRadians / radiansPerPixel;\n    const samples = isFinite(sigmaRadians)\n      ? 1 + Math.floor(STANDARD_DEVIATIONS * sigmaPixels)\n      : MAX_SAMPLES;\n\n    if (samples > MAX_SAMPLES) {\n      console.warn(\n        `sigmaRadians, ${sigmaRadians}, is too large and will clip, as it requested ${samples} samples when the maximum is set to ${MAX_SAMPLES}`\n      );\n    }\n\n    const weights = [];\n    let sum = 0;\n\n    for (let i = 0; i < MAX_SAMPLES; ++i) {\n      const x = i / sigmaPixels;\n      const weight = Math.exp((-x * x) / 2);\n      weights.push(weight);\n\n      if (i == 0) {\n        sum += weight;\n      } else if (i < samples) {\n        sum += 2 * weight;\n      }\n    }\n\n    for (let i = 0; i < weights.length; i++) {\n      weights[i] = weights[i] / sum;\n    }\n\n    blurUniforms[\"envMap\"].value = targetIn.texture;\n    blurUniforms[\"samples\"].value = samples;\n    blurUniforms[\"weights\"].value = weights;\n    blurUniforms[\"latitudinal\"].value = direction === \"latitudinal\";\n\n    if (poleAxis) {\n      blurUniforms[\"poleAxis\"].value = poleAxis;\n    }\n\n    blurUniforms[\"dTheta\"].value = radiansPerPixel;\n    blurUniforms[\"mipInt\"].value = LOD_MAX - lodIn;\n\n    this._setEncoding(blurUniforms[\"inputEncoding\"], targetIn.texture);\n    this._setEncoding(blurUniforms[\"outputEncoding\"], targetIn.texture);\n\n    const outputSize = _sizeLods[lodOut];\n    const x = 3 * Math.max(0, SIZE_MAX - 2 * outputSize);\n    const y =\n      (lodOut === 0 ? 0 : 2 * SIZE_MAX) +\n      2 *\n        outputSize *\n        (lodOut > LOD_MAX - LOD_MIN ? lodOut - LOD_MAX + LOD_MIN : 0);\n\n    _setViewport(targetOut, x, y, 3 * outputSize, 2 * outputSize);\n    renderer.setRenderTarget(targetOut);\n    renderer.render(blurMesh, _flatCamera);\n  }\n}\n\nfunction _isLDR(texture) {\n  if (texture === undefined || texture.type !== UnsignedByteType) return false;\n\n  return (\n    texture.encoding === LinearEncoding ||\n    texture.encoding === sRGBEncoding ||\n    texture.encoding === GammaEncoding\n  );\n}\n\nfunction _createPlanes() {\n  const _lodPlanes = [];\n  const _sizeLods = [];\n  const _sigmas = [];\n\n  let lod = LOD_MAX;\n\n  for (let i = 0; i < TOTAL_LODS; i++) {\n    const sizeLod = Math.pow(2, lod);\n    _sizeLods.push(sizeLod);\n    let sigma = 1.0 / sizeLod;\n\n    if (i > LOD_MAX - LOD_MIN) {\n      sigma = EXTRA_LOD_SIGMA[i - LOD_MAX + LOD_MIN - 1];\n    } else if (i == 0) {\n      sigma = 0;\n    }\n\n    _sigmas.push(sigma);\n\n    const texelSize = 1.0 / (sizeLod - 1);\n    const min = -texelSize / 2;\n    const max = 1 + texelSize / 2;\n    const uv1 = [min, min, max, min, max, max, min, min, max, max, min, max];\n\n    const cubeFaces = 6;\n    const vertices = 6;\n    const positionSize = 3;\n    const uvSize = 2;\n    const faceIndexSize = 1;\n\n    const position = new Float32Array(positionSize * vertices * cubeFaces);\n    const uv = new Float32Array(uvSize * vertices * cubeFaces);\n    const faceIndex = new Float32Array(faceIndexSize * vertices * cubeFaces);\n\n    for (let face = 0; face < cubeFaces; face++) {\n      const x = ((face % 3) * 2) / 3 - 1;\n      const y = face > 2 ? 0 : -1;\n      const coordinates = [\n        x,\n        y,\n        0,\n        x + 2 / 3,\n        y,\n        0,\n        x + 2 / 3,\n        y + 1,\n        0,\n        x,\n        y,\n        0,\n        x + 2 / 3,\n        y + 1,\n        0,\n        x,\n        y + 1,\n        0,\n      ];\n      position.set(coordinates, positionSize * vertices * face);\n      uv.set(uv1, uvSize * vertices * face);\n      const fill = [face, face, face, face, face, face];\n      faceIndex.set(fill, faceIndexSize * vertices * face);\n    }\n\n    const planes = new BufferGeometry();\n    planes.setAttribute(\n      \"position\",\n      new BufferAttribute(position, positionSize)\n    );\n    planes.setAttribute(\"uv\", new BufferAttribute(uv, uvSize));\n    planes.setAttribute(\n      \"faceIndex\",\n      new BufferAttribute(faceIndex, faceIndexSize)\n    );\n    _lodPlanes.push(planes);\n\n    if (lod > LOD_MIN) {\n      lod--;\n    }\n  }\n\n  return { _lodPlanes, _sizeLods, _sigmas };\n}\n\nfunction _createRenderTarget(params) {\n  const cubeUVRenderTarget = new WebGLRenderTarget(\n    3 * SIZE_MAX,\n    3 * SIZE_MAX,\n    params\n  );\n  cubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n  cubeUVRenderTarget.texture.name = \"PMREM.cubeUv\";\n  cubeUVRenderTarget.scissorTest = true;\n  return cubeUVRenderTarget;\n}\n\nfunction _setViewport(target, x, y, width, height) {\n  target.viewport.set(x, y, width, height);\n  target.scissor.set(x, y, width, height);\n}\n\nfunction _getBlurShader(maxSamples) {\n  const weights = new Float32Array(maxSamples);\n  const poleAxis = new Vector3(0, 1, 0);\n  const shaderMaterial = new RawShaderMaterial({\n    name: \"SphericalGaussianBlur\",\n\n    defines: { n: maxSamples },\n\n    uniforms: {\n      envMap: { value: null },\n      samples: { value: 1 },\n      weights: { value: weights },\n      latitudinal: { value: false },\n      dTheta: { value: 0 },\n      mipInt: { value: 0 },\n      poleAxis: { value: poleAxis },\n      inputEncoding: { value: ENCODINGS[LinearEncoding] },\n      outputEncoding: { value: ENCODINGS[LinearEncoding] },\n    },\n\n    vertexShader: _getCommonVertexShader(),\n\n    fragmentShader: /* glsl */ `\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t${_getEncodings()}\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,\n\n    blending: NoBlending,\n    depthTest: false,\n    depthWrite: false,\n  });\n\n  return shaderMaterial;\n}\n\nfunction _getEquirectShader() {\n  const texelSize = new Vector2(1, 1);\n  const shaderMaterial = new RawShaderMaterial({\n    name: \"EquirectangularToCubeUV\",\n\n    uniforms: {\n      envMap: { value: null },\n      texelSize: { value: texelSize },\n      inputEncoding: { value: ENCODINGS[LinearEncoding] },\n      outputEncoding: { value: ENCODINGS[LinearEncoding] },\n    },\n\n    vertexShader: _getCommonVertexShader(),\n\n    fragmentShader: /* glsl */ `\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\t${_getEncodings()}\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tvec2 f = fract( uv / texelSize - 0.5 );\n\t\t\t\tuv -= f * texelSize;\n\t\t\t\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x += texelSize.x;\n\t\t\t\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.y += texelSize.y;\n\t\t\t\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x -= texelSize.x;\n\t\t\t\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\n\t\t\t\tvec3 tm = mix( tl, tr, f.x );\n\t\t\t\tvec3 bm = mix( bl, br, f.x );\n\t\t\t\tgl_FragColor.rgb = mix( tm, bm, f.y );\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,\n\n    blending: NoBlending,\n    depthTest: false,\n    depthWrite: false,\n  });\n\n  return shaderMaterial;\n}\n\nfunction _getCubemapShader() {\n  const shaderMaterial = new RawShaderMaterial({\n    name: \"CubemapToCubeUV\",\n\n    uniforms: {\n      envMap: { value: null },\n      inputEncoding: { value: ENCODINGS[LinearEncoding] },\n      outputEncoding: { value: ENCODINGS[LinearEncoding] },\n    },\n\n    vertexShader: _getCommonVertexShader(),\n\n    fragmentShader: /* glsl */ `\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\t${_getEncodings()}\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,\n\n    blending: NoBlending,\n    depthTest: false,\n    depthWrite: false,\n  });\n\n  return shaderMaterial;\n}\n\nfunction _getCommonVertexShader() {\n  return /* glsl */ `\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n}\n\nfunction _getEncodings() {\n  return /* glsl */ `\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t`;\n}\n\nfunction WebGLCubeUVMaps(renderer) {\n  let cubeUVmaps = new WeakMap();\n\n  let pmremGenerator = null;\n\n  function get(texture) {\n    if (\n      texture &&\n      texture.isTexture &&\n      texture.isRenderTargetTexture === false\n    ) {\n      const mapping = texture.mapping;\n\n      const isEquirectMap =\n        mapping === EquirectangularReflectionMapping ||\n        mapping === EquirectangularRefractionMapping;\n      const isCubeMap =\n        mapping === CubeReflectionMapping || mapping === CubeRefractionMapping;\n\n      if (isEquirectMap || isCubeMap) {\n        // equirect/cube map to cubeUV conversion\n\n        if (cubeUVmaps.has(texture)) {\n          return cubeUVmaps.get(texture).texture;\n        } else {\n          const image = texture.image;\n\n          if (\n            (isEquirectMap && image && image.height > 0) ||\n            (isCubeMap && image && isCubeTextureComplete(image))\n          ) {\n            const currentRenderTarget = renderer.getRenderTarget();\n\n            if (pmremGenerator === null)\n              pmremGenerator = new PMREMGenerator(renderer);\n\n            const renderTarget = isEquirectMap\n              ? pmremGenerator.fromEquirectangular(texture)\n              : pmremGenerator.fromCubemap(texture);\n            cubeUVmaps.set(texture, renderTarget);\n\n            renderer.setRenderTarget(currentRenderTarget);\n\n            texture.addEventListener(\"dispose\", onTextureDispose);\n\n            return renderTarget.texture;\n          } else {\n            // image not yet ready. try the conversion next frame\n\n            return null;\n          }\n        }\n      }\n    }\n\n    return texture;\n  }\n\n  function isCubeTextureComplete(image) {\n    let count = 0;\n    const length = 6;\n\n    for (let i = 0; i < length; i++) {\n      if (image[i] !== undefined) count++;\n    }\n\n    return count === length;\n  }\n\n  function onTextureDispose(event) {\n    const texture = event.target;\n\n    texture.removeEventListener(\"dispose\", onTextureDispose);\n\n    const cubemapUV = cubeUVmaps.get(texture);\n\n    if (cubemapUV !== undefined) {\n      cubeUVmaps.delete(texture);\n      cubemapUV.dispose();\n    }\n  }\n\n  function dispose() {\n    cubeUVmaps = new WeakMap();\n\n    if (pmremGenerator !== null) {\n      pmremGenerator.dispose();\n      pmremGenerator = null;\n    }\n  }\n\n  return {\n    get: get,\n    dispose: dispose,\n  };\n}\n\nfunction WebGLExtensions(gl) {\n  const extensions = {};\n\n  function getExtension(name) {\n    if (extensions[name] !== undefined) {\n      return extensions[name];\n    }\n\n    let extension;\n\n    switch (name) {\n      case \"WEBGL_depth_texture\":\n        extension =\n          gl.getExtension(\"WEBGL_depth_texture\") ||\n          gl.getExtension(\"MOZ_WEBGL_depth_texture\") ||\n          gl.getExtension(\"WEBKIT_WEBGL_depth_texture\");\n        break;\n\n      case \"EXT_texture_filter_anisotropic\":\n        extension =\n          gl.getExtension(\"EXT_texture_filter_anisotropic\") ||\n          gl.getExtension(\"MOZ_EXT_texture_filter_anisotropic\") ||\n          gl.getExtension(\"WEBKIT_EXT_texture_filter_anisotropic\");\n        break;\n\n      case \"WEBGL_compressed_texture_s3tc\":\n        extension =\n          gl.getExtension(\"WEBGL_compressed_texture_s3tc\") ||\n          gl.getExtension(\"MOZ_WEBGL_compressed_texture_s3tc\") ||\n          gl.getExtension(\"WEBKIT_WEBGL_compressed_texture_s3tc\");\n        break;\n\n      case \"WEBGL_compressed_texture_pvrtc\":\n        extension =\n          gl.getExtension(\"WEBGL_compressed_texture_pvrtc\") ||\n          gl.getExtension(\"WEBKIT_WEBGL_compressed_texture_pvrtc\");\n        break;\n\n      default:\n        extension = gl.getExtension(name);\n    }\n\n    extensions[name] = extension;\n\n    return extension;\n  }\n\n  return {\n    has: function (name) {\n      return getExtension(name) !== null;\n    },\n\n    init: function (capabilities) {\n      if (capabilities.isWebGL2) {\n        getExtension(\"EXT_color_buffer_float\");\n      } else {\n        getExtension(\"WEBGL_depth_texture\");\n        getExtension(\"OES_texture_float\");\n        getExtension(\"OES_texture_half_float\");\n        getExtension(\"OES_texture_half_float_linear\");\n        getExtension(\"OES_standard_derivatives\");\n        getExtension(\"OES_element_index_uint\");\n        getExtension(\"OES_vertex_array_object\");\n        getExtension(\"ANGLE_instanced_arrays\");\n      }\n\n      getExtension(\"OES_texture_float_linear\");\n      getExtension(\"EXT_color_buffer_half_float\");\n    },\n\n    get: function (name) {\n      const extension = getExtension(name);\n\n      if (extension === null) {\n        console.warn(\n          \"THREE.WebGLRenderer: \" + name + \" extension not supported.\"\n        );\n      }\n\n      return extension;\n    },\n  };\n}\n\nfunction WebGLGeometries(gl, attributes, info, bindingStates) {\n  const geometries = {};\n  const wireframeAttributes = new WeakMap();\n\n  function onGeometryDispose(event) {\n    const geometry = event.target;\n\n    if (geometry.index !== null) {\n      attributes.remove(geometry.index);\n    }\n\n    for (const name in geometry.attributes) {\n      attributes.remove(geometry.attributes[name]);\n    }\n\n    geometry.removeEventListener(\"dispose\", onGeometryDispose);\n\n    delete geometries[geometry.id];\n\n    const attribute = wireframeAttributes.get(geometry);\n\n    if (attribute) {\n      attributes.remove(attribute);\n      wireframeAttributes.delete(geometry);\n    }\n\n    bindingStates.releaseStatesOfGeometry(geometry);\n\n    if (geometry.isInstancedBufferGeometry === true) {\n      delete geometry._maxInstanceCount;\n    }\n\n    //\n\n    info.memory.geometries--;\n  }\n\n  function get(object, geometry) {\n    if (geometries[geometry.id] === true) return geometry;\n\n    geometry.addEventListener(\"dispose\", onGeometryDispose);\n\n    geometries[geometry.id] = true;\n\n    info.memory.geometries++;\n\n    return geometry;\n  }\n\n  function update(geometry) {\n    const geometryAttributes = geometry.attributes;\n\n    // Updating index buffer in VAO now. See WebGLBindingStates.\n\n    for (const name in geometryAttributes) {\n      attributes.update(geometryAttributes[name], 34962);\n    }\n\n    // morph targets\n\n    const morphAttributes = geometry.morphAttributes;\n\n    for (const name in morphAttributes) {\n      const array = morphAttributes[name];\n\n      for (let i = 0, l = array.length; i < l; i++) {\n        attributes.update(array[i], 34962);\n      }\n    }\n  }\n\n  function updateWireframeAttribute(geometry) {\n    const indices = [];\n\n    const geometryIndex = geometry.index;\n    const geometryPosition = geometry.attributes.position;\n    let version = 0;\n\n    if (geometryIndex !== null) {\n      const array = geometryIndex.array;\n      version = geometryIndex.version;\n\n      for (let i = 0, l = array.length; i < l; i += 3) {\n        const a = array[i + 0];\n        const b = array[i + 1];\n        const c = array[i + 2];\n\n        indices.push(a, b, b, c, c, a);\n      }\n    } else {\n      const array = geometryPosition.array;\n      version = geometryPosition.version;\n\n      for (let i = 0, l = array.length / 3 - 1; i < l; i += 3) {\n        const a = i + 0;\n        const b = i + 1;\n        const c = i + 2;\n\n        indices.push(a, b, b, c, c, a);\n      }\n    }\n\n    const attribute = new (\n      arrayMax(indices) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute\n    )(indices, 1);\n    attribute.version = version;\n\n    // Updating index buffer in VAO now. See WebGLBindingStates\n\n    //\n\n    const previousAttribute = wireframeAttributes.get(geometry);\n\n    if (previousAttribute) attributes.remove(previousAttribute);\n\n    //\n\n    wireframeAttributes.set(geometry, attribute);\n  }\n\n  function getWireframeAttribute(geometry) {\n    const currentAttribute = wireframeAttributes.get(geometry);\n\n    if (currentAttribute) {\n      const geometryIndex = geometry.index;\n\n      if (geometryIndex !== null) {\n        // if the attribute is obsolete, create a new one\n\n        if (currentAttribute.version < geometryIndex.version) {\n          updateWireframeAttribute(geometry);\n        }\n      }\n    } else {\n      updateWireframeAttribute(geometry);\n    }\n\n    return wireframeAttributes.get(geometry);\n  }\n\n  return {\n    get: get,\n    update: update,\n\n    getWireframeAttribute: getWireframeAttribute,\n  };\n}\n\nfunction WebGLIndexedBufferRenderer(gl, extensions, info, capabilities) {\n  const isWebGL2 = capabilities.isWebGL2;\n\n  let mode;\n\n  function setMode(value) {\n    mode = value;\n  }\n\n  let type, bytesPerElement;\n\n  function setIndex(value) {\n    type = value.type;\n    bytesPerElement = value.bytesPerElement;\n  }\n\n  function render(start, count) {\n    gl.drawElements(mode, count, type, start * bytesPerElement);\n\n    info.update(count, mode, 1);\n  }\n\n  function renderInstances(start, count, primcount) {\n    if (primcount === 0) return;\n\n    let extension, methodName;\n\n    if (isWebGL2) {\n      extension = gl;\n      methodName = \"drawElementsInstanced\";\n    } else {\n      extension = extensions.get(\"ANGLE_instanced_arrays\");\n      methodName = \"drawElementsInstancedANGLE\";\n\n      if (extension === null) {\n        console.error(\n          \"THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.\"\n        );\n        return;\n      }\n    }\n\n    extension[methodName](\n      mode,\n      count,\n      type,\n      start * bytesPerElement,\n      primcount\n    );\n\n    info.update(count, mode, primcount);\n  }\n\n  //\n\n  this.setMode = setMode;\n  this.setIndex = setIndex;\n  this.render = render;\n  this.renderInstances = renderInstances;\n}\n\nfunction WebGLInfo(gl) {\n  const memory = {\n    geometries: 0,\n    textures: 0,\n  };\n\n  const render = {\n    frame: 0,\n    calls: 0,\n    triangles: 0,\n    points: 0,\n    lines: 0,\n  };\n\n  function update(count, mode, instanceCount) {\n    render.calls++;\n\n    switch (mode) {\n      case 4:\n        render.triangles += instanceCount * (count / 3);\n        break;\n\n      case 1:\n        render.lines += instanceCount * (count / 2);\n        break;\n\n      case 3:\n        render.lines += instanceCount * (count - 1);\n        break;\n\n      case 2:\n        render.lines += instanceCount * count;\n        break;\n\n      case 0:\n        render.points += instanceCount * count;\n        break;\n\n      default:\n        console.error(\"THREE.WebGLInfo: Unknown draw mode:\", mode);\n        break;\n    }\n  }\n\n  function reset() {\n    render.frame++;\n    render.calls = 0;\n    render.triangles = 0;\n    render.points = 0;\n    render.lines = 0;\n  }\n\n  return {\n    memory: memory,\n    render: render,\n    programs: null,\n    autoReset: true,\n    reset: reset,\n    update: update,\n  };\n}\n\nclass DataTexture2DArray extends Texture {\n  constructor(data = null, width = 1, height = 1, depth = 1) {\n    super(null);\n\n    this.image = { data, width, height, depth };\n\n    this.magFilter = NearestFilter;\n    this.minFilter = NearestFilter;\n\n    this.wrapR = ClampToEdgeWrapping;\n\n    this.generateMipmaps = false;\n    this.flipY = false;\n    this.unpackAlignment = 1;\n\n    this.needsUpdate = true;\n  }\n}\n\nDataTexture2DArray.prototype.isDataTexture2DArray = true;\n\nfunction numericalSort(a, b) {\n  return a[0] - b[0];\n}\n\nfunction absNumericalSort(a, b) {\n  return Math.abs(b[1]) - Math.abs(a[1]);\n}\n\nfunction denormalize(morph, attribute) {\n  let denominator = 1;\n  const array = attribute.isInterleavedBufferAttribute\n    ? attribute.data.array\n    : attribute.array;\n\n  if (array instanceof Int8Array) denominator = 127;\n  else if (array instanceof Int16Array) denominator = 32767;\n  else if (array instanceof Int32Array) denominator = 2147483647;\n  else\n    console.error(\n      \"THREE.WebGLMorphtargets: Unsupported morph attribute data type: \",\n      array\n    );\n\n  morph.divideScalar(denominator);\n}\n\nfunction WebGLMorphtargets(gl, capabilities, textures) {\n  const influencesList = {};\n  const morphInfluences = new Float32Array(8);\n  const morphTextures = new WeakMap();\n  const morph = new Vector3();\n\n  const workInfluences = [];\n\n  for (let i = 0; i < 8; i++) {\n    workInfluences[i] = [i, 0];\n  }\n\n  function update(object, geometry, material, program) {\n    const objectInfluences = object.morphTargetInfluences;\n\n    if (capabilities.isWebGL2 === true) {\n      // instead of using attributes, the WebGL 2 code path encodes morph targets\n      // into an array of data textures. Each layer represents a single morph target.\n\n      const numberOfMorphTargets = geometry.morphAttributes.position.length;\n\n      let entry = morphTextures.get(geometry);\n\n      if (entry === undefined || entry.count !== numberOfMorphTargets) {\n        if (entry !== undefined) entry.texture.dispose();\n\n        const hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\n        const morphTargets = geometry.morphAttributes.position;\n        const morphNormals = geometry.morphAttributes.normal || [];\n\n        const numberOfVertices = geometry.attributes.position.count;\n        const numberOfVertexData = hasMorphNormals === true ? 2 : 1; // (v,n) vs. (v)\n\n        let width = numberOfVertices * numberOfVertexData;\n        let height = 1;\n\n        if (width > capabilities.maxTextureSize) {\n          height = Math.ceil(width / capabilities.maxTextureSize);\n          width = capabilities.maxTextureSize;\n        }\n\n        const buffer = new Float32Array(\n          width * height * 4 * numberOfMorphTargets\n        );\n\n        const texture = new DataTexture2DArray(\n          buffer,\n          width,\n          height,\n          numberOfMorphTargets\n        );\n        texture.format = RGBAFormat; // using RGBA since RGB might be emulated (and is thus slower)\n        texture.type = FloatType;\n\n        // fill buffer\n\n        const vertexDataStride = numberOfVertexData * 4;\n\n        for (let i = 0; i < numberOfMorphTargets; i++) {\n          const morphTarget = morphTargets[i];\n          const morphNormal = morphNormals[i];\n\n          const offset = width * height * 4 * i;\n\n          for (let j = 0; j < morphTarget.count; j++) {\n            morph.fromBufferAttribute(morphTarget, j);\n\n            if (morphTarget.normalized === true)\n              denormalize(morph, morphTarget);\n\n            const stride = j * vertexDataStride;\n\n            buffer[offset + stride + 0] = morph.x;\n            buffer[offset + stride + 1] = morph.y;\n            buffer[offset + stride + 2] = morph.z;\n            buffer[offset + stride + 3] = 0;\n\n            if (hasMorphNormals === true) {\n              morph.fromBufferAttribute(morphNormal, j);\n\n              if (morphNormal.normalized === true)\n                denormalize(morph, morphNormal);\n\n              buffer[offset + stride + 4] = morph.x;\n              buffer[offset + stride + 5] = morph.y;\n              buffer[offset + stride + 6] = morph.z;\n              buffer[offset + stride + 7] = 0;\n            }\n          }\n        }\n\n        entry = {\n          count: numberOfMorphTargets,\n          texture: texture,\n          size: new Vector2(width, height),\n        };\n\n        morphTextures.set(geometry, entry);\n      }\n\n      //\n\n      let morphInfluencesSum = 0;\n\n      for (let i = 0; i < objectInfluences.length; i++) {\n        morphInfluencesSum += objectInfluences[i];\n      }\n\n      const morphBaseInfluence = geometry.morphTargetsRelative\n        ? 1\n        : 1 - morphInfluencesSum;\n\n      program\n        .getUniforms()\n        .setValue(gl, \"morphTargetBaseInfluence\", morphBaseInfluence);\n      program\n        .getUniforms()\n        .setValue(gl, \"morphTargetInfluences\", objectInfluences);\n\n      program\n        .getUniforms()\n        .setValue(gl, \"morphTargetsTexture\", entry.texture, textures);\n      program.getUniforms().setValue(gl, \"morphTargetsTextureSize\", entry.size);\n    } else {\n      // When object doesn't have morph target influences defined, we treat it as a 0-length array\n      // This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n      const length =\n        objectInfluences === undefined ? 0 : objectInfluences.length;\n\n      let influences = influencesList[geometry.id];\n\n      if (influences === undefined || influences.length !== length) {\n        // initialise list\n\n        influences = [];\n\n        for (let i = 0; i < length; i++) {\n          influences[i] = [i, 0];\n        }\n\n        influencesList[geometry.id] = influences;\n      }\n\n      // Collect influences\n\n      for (let i = 0; i < length; i++) {\n        const influence = influences[i];\n\n        influence[0] = i;\n        influence[1] = objectInfluences[i];\n      }\n\n      influences.sort(absNumericalSort);\n\n      for (let i = 0; i < 8; i++) {\n        if (i < length && influences[i][1]) {\n          workInfluences[i][0] = influences[i][0];\n          workInfluences[i][1] = influences[i][1];\n        } else {\n          workInfluences[i][0] = Number.MAX_SAFE_INTEGER;\n          workInfluences[i][1] = 0;\n        }\n      }\n\n      workInfluences.sort(numericalSort);\n\n      const morphTargets = geometry.morphAttributes.position;\n      const morphNormals = geometry.morphAttributes.normal;\n\n      let morphInfluencesSum = 0;\n\n      for (let i = 0; i < 8; i++) {\n        const influence = workInfluences[i];\n        const index = influence[0];\n        const value = influence[1];\n\n        if (index !== Number.MAX_SAFE_INTEGER && value) {\n          if (\n            morphTargets &&\n            geometry.getAttribute(\"morphTarget\" + i) !== morphTargets[index]\n          ) {\n            geometry.setAttribute(\"morphTarget\" + i, morphTargets[index]);\n          }\n\n          if (\n            morphNormals &&\n            geometry.getAttribute(\"morphNormal\" + i) !== morphNormals[index]\n          ) {\n            geometry.setAttribute(\"morphNormal\" + i, morphNormals[index]);\n          }\n\n          morphInfluences[i] = value;\n          morphInfluencesSum += value;\n        } else {\n          if (\n            morphTargets &&\n            geometry.hasAttribute(\"morphTarget\" + i) === true\n          ) {\n            geometry.deleteAttribute(\"morphTarget\" + i);\n          }\n\n          if (\n            morphNormals &&\n            geometry.hasAttribute(\"morphNormal\" + i) === true\n          ) {\n            geometry.deleteAttribute(\"morphNormal\" + i);\n          }\n\n          morphInfluences[i] = 0;\n        }\n      }\n\n      // GLSL shader uses formula baseinfluence * base + sum(target * influence)\n      // This allows us to switch between absolute morphs and relative morphs without changing shader code\n      // When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n      const morphBaseInfluence = geometry.morphTargetsRelative\n        ? 1\n        : 1 - morphInfluencesSum;\n\n      program\n        .getUniforms()\n        .setValue(gl, \"morphTargetBaseInfluence\", morphBaseInfluence);\n      program\n        .getUniforms()\n        .setValue(gl, \"morphTargetInfluences\", morphInfluences);\n    }\n  }\n\n  return {\n    update: update,\n  };\n}\n\nfunction WebGLObjects(gl, geometries, attributes, info) {\n  let updateMap = new WeakMap();\n\n  function update(object) {\n    const frame = info.render.frame;\n\n    const geometry = object.geometry;\n    const buffergeometry = geometries.get(object, geometry);\n\n    // Update once per frame\n\n    if (updateMap.get(buffergeometry) !== frame) {\n      geometries.update(buffergeometry);\n\n      updateMap.set(buffergeometry, frame);\n    }\n\n    if (object.isInstancedMesh) {\n      if (\n        object.hasEventListener(\"dispose\", onInstancedMeshDispose) === false\n      ) {\n        object.addEventListener(\"dispose\", onInstancedMeshDispose);\n      }\n\n      attributes.update(object.instanceMatrix, 34962);\n\n      if (object.instanceColor !== null) {\n        attributes.update(object.instanceColor, 34962);\n      }\n    }\n\n    return buffergeometry;\n  }\n\n  function dispose() {\n    updateMap = new WeakMap();\n  }\n\n  function onInstancedMeshDispose(event) {\n    const instancedMesh = event.target;\n\n    instancedMesh.removeEventListener(\"dispose\", onInstancedMeshDispose);\n\n    attributes.remove(instancedMesh.instanceMatrix);\n\n    if (instancedMesh.instanceColor !== null)\n      attributes.remove(instancedMesh.instanceColor);\n  }\n\n  return {\n    update: update,\n    dispose: dispose,\n  };\n}\n\nclass DataTexture3D extends Texture {\n  constructor(data = null, width = 1, height = 1, depth = 1) {\n    // We're going to add .setXXX() methods for setting properties later.\n    // Users can still set in DataTexture3D directly.\n    //\n    //\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n    // \ttexture.anisotropy = 16;\n    //\n    // See #14839\n\n    super(null);\n\n    this.image = { data, width, height, depth };\n\n    this.magFilter = NearestFilter;\n    this.minFilter = NearestFilter;\n\n    this.wrapR = ClampToEdgeWrapping;\n\n    this.generateMipmaps = false;\n    this.flipY = false;\n    this.unpackAlignment = 1;\n\n    this.needsUpdate = true;\n  }\n}\n\nDataTexture3D.prototype.isDataTexture3D = true;\n\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nconst emptyTexture = new Texture();\nconst emptyTexture2dArray = new DataTexture2DArray();\nconst emptyTexture3d = new DataTexture3D();\nconst emptyCubeTexture = new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array(16);\nconst mat3array = new Float32Array(9);\nconst mat2array = new Float32Array(4);\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten(array, nBlocks, blockSize) {\n  const firstElem = array[0];\n\n  if (firstElem <= 0 || firstElem > 0) return array;\n  // unoptimized: ! isNaN( firstElem )\n  // see http://jacksondunstan.com/articles/983\n\n  const n = nBlocks * blockSize;\n  let r = arrayCacheF32[n];\n\n  if (r === undefined) {\n    r = new Float32Array(n);\n    arrayCacheF32[n] = r;\n  }\n\n  if (nBlocks !== 0) {\n    firstElem.toArray(r, 0);\n\n    for (let i = 1, offset = 0; i !== nBlocks; ++i) {\n      offset += blockSize;\n      array[i].toArray(r, offset);\n    }\n  }\n\n  return r;\n}\n\nfunction arraysEqual(a, b) {\n  if (a.length !== b.length) return false;\n\n  for (let i = 0, l = a.length; i < l; i++) {\n    if (a[i] !== b[i]) return false;\n  }\n\n  return true;\n}\n\nfunction copyArray(a, b) {\n  for (let i = 0, l = b.length; i < l; i++) {\n    a[i] = b[i];\n  }\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits(textures, n) {\n  let r = arrayCacheI32[n];\n\n  if (r === undefined) {\n    r = new Int32Array(n);\n    arrayCacheI32[n] = r;\n  }\n\n  for (let i = 0; i !== n; ++i) {\n    r[i] = textures.allocateTextureUnit();\n  }\n\n  return r;\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f(gl, v) {\n  const cache = this.cache;\n\n  if (cache[0] === v) return;\n\n  gl.uniform1f(this.addr, v);\n\n  cache[0] = v;\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f(gl, v) {\n  const cache = this.cache;\n\n  if (v.x !== undefined) {\n    if (cache[0] !== v.x || cache[1] !== v.y) {\n      gl.uniform2f(this.addr, v.x, v.y);\n\n      cache[0] = v.x;\n      cache[1] = v.y;\n    }\n  } else {\n    if (arraysEqual(cache, v)) return;\n\n    gl.uniform2fv(this.addr, v);\n\n    copyArray(cache, v);\n  }\n}\n\nfunction setValueV3f(gl, v) {\n  const cache = this.cache;\n\n  if (v.x !== undefined) {\n    if (cache[0] !== v.x || cache[1] !== v.y || cache[2] !== v.z) {\n      gl.uniform3f(this.addr, v.x, v.y, v.z);\n\n      cache[0] = v.x;\n      cache[1] = v.y;\n      cache[2] = v.z;\n    }\n  } else if (v.r !== undefined) {\n    if (cache[0] !== v.r || cache[1] !== v.g || cache[2] !== v.b) {\n      gl.uniform3f(this.addr, v.r, v.g, v.b);\n\n      cache[0] = v.r;\n      cache[1] = v.g;\n      cache[2] = v.b;\n    }\n  } else {\n    if (arraysEqual(cache, v)) return;\n\n    gl.uniform3fv(this.addr, v);\n\n    copyArray(cache, v);\n  }\n}\n\nfunction setValueV4f(gl, v) {\n  const cache = this.cache;\n\n  if (v.x !== undefined) {\n    if (\n      cache[0] !== v.x ||\n      cache[1] !== v.y ||\n      cache[2] !== v.z ||\n      cache[3] !== v.w\n    ) {\n      gl.uniform4f(this.addr, v.x, v.y, v.z, v.w);\n\n      cache[0] = v.x;\n      cache[1] = v.y;\n      cache[2] = v.z;\n      cache[3] = v.w;\n    }\n  } else {\n    if (arraysEqual(cache, v)) return;\n\n    gl.uniform4fv(this.addr, v);\n\n    copyArray(cache, v);\n  }\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2(gl, v) {\n  const cache = this.cache;\n  const elements = v.elements;\n\n  if (elements === undefined) {\n    if (arraysEqual(cache, v)) return;\n\n    gl.uniformMatrix2fv(this.addr, false, v);\n\n    copyArray(cache, v);\n  } else {\n    if (arraysEqual(cache, elements)) return;\n\n    mat2array.set(elements);\n\n    gl.uniformMatrix2fv(this.addr, false, mat2array);\n\n    copyArray(cache, elements);\n  }\n}\n\nfunction setValueM3(gl, v) {\n  const cache = this.cache;\n  const elements = v.elements;\n\n  if (elements === undefined) {\n    if (arraysEqual(cache, v)) return;\n\n    gl.uniformMatrix3fv(this.addr, false, v);\n\n    copyArray(cache, v);\n  } else {\n    if (arraysEqual(cache, elements)) return;\n\n    mat3array.set(elements);\n\n    gl.uniformMatrix3fv(this.addr, false, mat3array);\n\n    copyArray(cache, elements);\n  }\n}\n\nfunction setValueM4(gl, v) {\n  const cache = this.cache;\n  const elements = v.elements;\n\n  if (elements === undefined) {\n    if (arraysEqual(cache, v)) return;\n\n    gl.uniformMatrix4fv(this.addr, false, v);\n\n    copyArray(cache, v);\n  } else {\n    if (arraysEqual(cache, elements)) return;\n\n    mat4array.set(elements);\n\n    gl.uniformMatrix4fv(this.addr, false, mat4array);\n\n    copyArray(cache, elements);\n  }\n}\n\n// Single integer / boolean\n\nfunction setValueV1i(gl, v) {\n  const cache = this.cache;\n\n  if (cache[0] === v) return;\n\n  gl.uniform1i(this.addr, v);\n\n  cache[0] = v;\n}\n\n// Single integer / boolean vector (from flat array)\n\nfunction setValueV2i(gl, v) {\n  const cache = this.cache;\n\n  if (arraysEqual(cache, v)) return;\n\n  gl.uniform2iv(this.addr, v);\n\n  copyArray(cache, v);\n}\n\nfunction setValueV3i(gl, v) {\n  const cache = this.cache;\n\n  if (arraysEqual(cache, v)) return;\n\n  gl.uniform3iv(this.addr, v);\n\n  copyArray(cache, v);\n}\n\nfunction setValueV4i(gl, v) {\n  const cache = this.cache;\n\n  if (arraysEqual(cache, v)) return;\n\n  gl.uniform4iv(this.addr, v);\n\n  copyArray(cache, v);\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui(gl, v) {\n  const cache = this.cache;\n\n  if (cache[0] === v) return;\n\n  gl.uniform1ui(this.addr, v);\n\n  cache[0] = v;\n}\n\n// Single unsigned integer vector (from flat array)\n\nfunction setValueV2ui(gl, v) {\n  const cache = this.cache;\n\n  if (arraysEqual(cache, v)) return;\n\n  gl.uniform2uiv(this.addr, v);\n\n  copyArray(cache, v);\n}\n\nfunction setValueV3ui(gl, v) {\n  const cache = this.cache;\n\n  if (arraysEqual(cache, v)) return;\n\n  gl.uniform3uiv(this.addr, v);\n\n  copyArray(cache, v);\n}\n\nfunction setValueV4ui(gl, v) {\n  const cache = this.cache;\n\n  if (arraysEqual(cache, v)) return;\n\n  gl.uniform4uiv(this.addr, v);\n\n  copyArray(cache, v);\n}\n\n// Single texture (2D / Cube)\n\nfunction setValueT1(gl, v, textures) {\n  const cache = this.cache;\n  const unit = textures.allocateTextureUnit();\n\n  if (cache[0] !== unit) {\n    gl.uniform1i(this.addr, unit);\n    cache[0] = unit;\n  }\n\n  textures.safeSetTexture2D(v || emptyTexture, unit);\n}\n\nfunction setValueT3D1(gl, v, textures) {\n  const cache = this.cache;\n  const unit = textures.allocateTextureUnit();\n\n  if (cache[0] !== unit) {\n    gl.uniform1i(this.addr, unit);\n    cache[0] = unit;\n  }\n\n  textures.setTexture3D(v || emptyTexture3d, unit);\n}\n\nfunction setValueT6(gl, v, textures) {\n  const cache = this.cache;\n  const unit = textures.allocateTextureUnit();\n\n  if (cache[0] !== unit) {\n    gl.uniform1i(this.addr, unit);\n    cache[0] = unit;\n  }\n\n  textures.safeSetTextureCube(v || emptyCubeTexture, unit);\n}\n\nfunction setValueT2DArray1(gl, v, textures) {\n  const cache = this.cache;\n  const unit = textures.allocateTextureUnit();\n\n  if (cache[0] !== unit) {\n    gl.uniform1i(this.addr, unit);\n    cache[0] = unit;\n  }\n\n  textures.setTexture2DArray(v || emptyTexture2dArray, unit);\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter(type) {\n  switch (type) {\n    case 0x1406:\n      return setValueV1f; // FLOAT\n    case 0x8b50:\n      return setValueV2f; // _VEC2\n    case 0x8b51:\n      return setValueV3f; // _VEC3\n    case 0x8b52:\n      return setValueV4f; // _VEC4\n\n    case 0x8b5a:\n      return setValueM2; // _MAT2\n    case 0x8b5b:\n      return setValueM3; // _MAT3\n    case 0x8b5c:\n      return setValueM4; // _MAT4\n\n    case 0x1404:\n    case 0x8b56:\n      return setValueV1i; // INT, BOOL\n    case 0x8b53:\n    case 0x8b57:\n      return setValueV2i; // _VEC2\n    case 0x8b54:\n    case 0x8b58:\n      return setValueV3i; // _VEC3\n    case 0x8b55:\n    case 0x8b59:\n      return setValueV4i; // _VEC4\n\n    case 0x1405:\n      return setValueV1ui; // UINT\n    case 0x8dc6:\n      return setValueV2ui; // _VEC2\n    case 0x8dc7:\n      return setValueV3ui; // _VEC3\n    case 0x8dc8:\n      return setValueV4ui; // _VEC4\n\n    case 0x8b5e: // SAMPLER_2D\n    case 0x8d66: // SAMPLER_EXTERNAL_OES\n    case 0x8dca: // INT_SAMPLER_2D\n    case 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n    case 0x8b62: // SAMPLER_2D_SHADOW\n      return setValueT1;\n\n    case 0x8b5f: // SAMPLER_3D\n    case 0x8dcb: // INT_SAMPLER_3D\n    case 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n      return setValueT3D1;\n\n    case 0x8b60: // SAMPLER_CUBE\n    case 0x8dcc: // INT_SAMPLER_CUBE\n    case 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n    case 0x8dc5: // SAMPLER_CUBE_SHADOW\n      return setValueT6;\n\n    case 0x8dc1: // SAMPLER_2D_ARRAY\n    case 0x8dcf: // INT_SAMPLER_2D_ARRAY\n    case 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n    case 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n      return setValueT2DArray1;\n  }\n}\n\n// Array of scalars\n\nfunction setValueV1fArray(gl, v) {\n  gl.uniform1fv(this.addr, v);\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray(gl, v) {\n  const data = flatten(v, this.size, 2);\n\n  gl.uniform2fv(this.addr, data);\n}\n\nfunction setValueV3fArray(gl, v) {\n  const data = flatten(v, this.size, 3);\n\n  gl.uniform3fv(this.addr, data);\n}\n\nfunction setValueV4fArray(gl, v) {\n  const data = flatten(v, this.size, 4);\n\n  gl.uniform4fv(this.addr, data);\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array(gl, v) {\n  const data = flatten(v, this.size, 4);\n\n  gl.uniformMatrix2fv(this.addr, false, data);\n}\n\nfunction setValueM3Array(gl, v) {\n  const data = flatten(v, this.size, 9);\n\n  gl.uniformMatrix3fv(this.addr, false, data);\n}\n\nfunction setValueM4Array(gl, v) {\n  const data = flatten(v, this.size, 16);\n\n  gl.uniformMatrix4fv(this.addr, false, data);\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray(gl, v) {\n  gl.uniform1iv(this.addr, v);\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray(gl, v) {\n  gl.uniform2iv(this.addr, v);\n}\n\nfunction setValueV3iArray(gl, v) {\n  gl.uniform3iv(this.addr, v);\n}\n\nfunction setValueV4iArray(gl, v) {\n  gl.uniform4iv(this.addr, v);\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray(gl, v) {\n  gl.uniform1uiv(this.addr, v);\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray(gl, v) {\n  gl.uniform2uiv(this.addr, v);\n}\n\nfunction setValueV3uiArray(gl, v) {\n  gl.uniform3uiv(this.addr, v);\n}\n\nfunction setValueV4uiArray(gl, v) {\n  gl.uniform4uiv(this.addr, v);\n}\n\n// Array of textures (2D / Cube)\n\nfunction setValueT1Array(gl, v, textures) {\n  const n = v.length;\n\n  const units = allocTexUnits(textures, n);\n\n  gl.uniform1iv(this.addr, units);\n\n  for (let i = 0; i !== n; ++i) {\n    textures.safeSetTexture2D(v[i] || emptyTexture, units[i]);\n  }\n}\n\nfunction setValueT6Array(gl, v, textures) {\n  const n = v.length;\n\n  const units = allocTexUnits(textures, n);\n\n  gl.uniform1iv(this.addr, units);\n\n  for (let i = 0; i !== n; ++i) {\n    textures.safeSetTextureCube(v[i] || emptyCubeTexture, units[i]);\n  }\n}\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter(type) {\n  switch (type) {\n    case 0x1406:\n      return setValueV1fArray; // FLOAT\n    case 0x8b50:\n      return setValueV2fArray; // _VEC2\n    case 0x8b51:\n      return setValueV3fArray; // _VEC3\n    case 0x8b52:\n      return setValueV4fArray; // _VEC4\n\n    case 0x8b5a:\n      return setValueM2Array; // _MAT2\n    case 0x8b5b:\n      return setValueM3Array; // _MAT3\n    case 0x8b5c:\n      return setValueM4Array; // _MAT4\n\n    case 0x1404:\n    case 0x8b56:\n      return setValueV1iArray; // INT, BOOL\n    case 0x8b53:\n    case 0x8b57:\n      return setValueV2iArray; // _VEC2\n    case 0x8b54:\n    case 0x8b58:\n      return setValueV3iArray; // _VEC3\n    case 0x8b55:\n    case 0x8b59:\n      return setValueV4iArray; // _VEC4\n\n    case 0x1405:\n      return setValueV1uiArray; // UINT\n    case 0x8dc6:\n      return setValueV2uiArray; // _VEC2\n    case 0x8dc7:\n      return setValueV3uiArray; // _VEC3\n    case 0x8dc8:\n      return setValueV4uiArray; // _VEC4\n\n    case 0x8b5e: // SAMPLER_2D\n    case 0x8d66: // SAMPLER_EXTERNAL_OES\n    case 0x8dca: // INT_SAMPLER_2D\n    case 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n    case 0x8b62: // SAMPLER_2D_SHADOW\n      return setValueT1Array;\n\n    case 0x8b60: // SAMPLER_CUBE\n    case 0x8dcc: // INT_SAMPLER_CUBE\n    case 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n    case 0x8dc5: // SAMPLER_CUBE_SHADOW\n      return setValueT6Array;\n  }\n}\n\n// --- Uniform Classes ---\n\nfunction SingleUniform(id, activeInfo, addr) {\n  this.id = id;\n  this.addr = addr;\n  this.cache = [];\n  this.setValue = getSingularSetter(activeInfo.type);\n\n  // this.path = activeInfo.name; // DEBUG\n}\n\nfunction PureArrayUniform(id, activeInfo, addr) {\n  this.id = id;\n  this.addr = addr;\n  this.cache = [];\n  this.size = activeInfo.size;\n  this.setValue = getPureArraySetter(activeInfo.type);\n\n  // this.path = activeInfo.name; // DEBUG\n}\n\nPureArrayUniform.prototype.updateCache = function (data) {\n  const cache = this.cache;\n\n  if (data instanceof Float32Array && cache.length !== data.length) {\n    this.cache = new Float32Array(data.length);\n  }\n\n  copyArray(cache, data);\n};\n\nfunction StructuredUniform(id) {\n  this.id = id;\n\n  this.seq = [];\n  this.map = {};\n}\n\nStructuredUniform.prototype.setValue = function (gl, value, textures) {\n  const seq = this.seq;\n\n  for (let i = 0, n = seq.length; i !== n; ++i) {\n    const u = seq[i];\n    u.setValue(gl, value[u.id], textures);\n  }\n};\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform(container, uniformObject) {\n  container.seq.push(uniformObject);\n  container.map[uniformObject.id] = uniformObject;\n}\n\nfunction parseUniform(activeInfo, addr, container) {\n  const path = activeInfo.name,\n    pathLength = path.length;\n\n  // reset RegExp object, because of the early exit of a previous run\n  RePathPart.lastIndex = 0;\n\n  while (true) {\n    const match = RePathPart.exec(path),\n      matchEnd = RePathPart.lastIndex;\n\n    let id = match[1];\n    const idIsIndex = match[2] === \"]\",\n      subscript = match[3];\n\n    if (idIsIndex) id = id | 0; // convert to integer\n\n    if (\n      subscript === undefined ||\n      (subscript === \"[\" && matchEnd + 2 === pathLength)\n    ) {\n      // bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n      addUniform(\n        container,\n        subscript === undefined\n          ? new SingleUniform(id, activeInfo, addr)\n          : new PureArrayUniform(id, activeInfo, addr)\n      );\n\n      break;\n    } else {\n      // step into inner node / create it in case it doesn't exist\n\n      const map = container.map;\n      let next = map[id];\n\n      if (next === undefined) {\n        next = new StructuredUniform(id);\n        addUniform(container, next);\n      }\n\n      container = next;\n    }\n  }\n}\n\n// Root Container\n\nfunction WebGLUniforms(gl, program) {\n  this.seq = [];\n  this.map = {};\n\n  const n = gl.getProgramParameter(program, 35718);\n\n  for (let i = 0; i < n; ++i) {\n    const info = gl.getActiveUniform(program, i),\n      addr = gl.getUniformLocation(program, info.name);\n\n    parseUniform(info, addr, this);\n  }\n}\n\nWebGLUniforms.prototype.setValue = function (gl, name, value, textures) {\n  const u = this.map[name];\n\n  if (u !== undefined) u.setValue(gl, value, textures);\n};\n\nWebGLUniforms.prototype.setOptional = function (gl, object, name) {\n  const v = object[name];\n\n  if (v !== undefined) this.setValue(gl, name, v);\n};\n\n// Static interface\n\nWebGLUniforms.upload = function (gl, seq, values, textures) {\n  for (let i = 0, n = seq.length; i !== n; ++i) {\n    const u = seq[i],\n      v = values[u.id];\n\n    if (v.needsUpdate !== false) {\n      // note: always updating when .needsUpdate is undefined\n      u.setValue(gl, v.value, textures);\n    }\n  }\n};\n\nWebGLUniforms.seqWithValue = function (seq, values) {\n  const r = [];\n\n  for (let i = 0, n = seq.length; i !== n; ++i) {\n    const u = seq[i];\n    if (u.id in values) r.push(u);\n  }\n\n  return r;\n};\n\nfunction WebGLShader(gl, type, string) {\n  const shader = gl.createShader(type);\n\n  gl.shaderSource(shader, string);\n  gl.compileShader(shader);\n\n  return shader;\n}\n\nlet programIdCount = 0;\n\nfunction addLineNumbers(string) {\n  const lines = string.split(\"\\n\");\n\n  for (let i = 0; i < lines.length; i++) {\n    lines[i] = i + 1 + \": \" + lines[i];\n  }\n\n  return lines.join(\"\\n\");\n}\n\nfunction getEncodingComponents(encoding) {\n  switch (encoding) {\n    case LinearEncoding:\n      return [\"Linear\", \"( value )\"];\n    case sRGBEncoding:\n      return [\"sRGB\", \"( value )\"];\n    case RGBEEncoding:\n      return [\"RGBE\", \"( value )\"];\n    case RGBM7Encoding:\n      return [\"RGBM\", \"( value, 7.0 )\"];\n    case RGBM16Encoding:\n      return [\"RGBM\", \"( value, 16.0 )\"];\n    case RGBDEncoding:\n      return [\"RGBD\", \"( value, 256.0 )\"];\n    case GammaEncoding:\n      return [\"Gamma\", \"( value, float( GAMMA_FACTOR ) )\"];\n    case LogLuvEncoding:\n      return [\"LogLuv\", \"( value )\"];\n    default:\n      console.warn(\"THREE.WebGLProgram: Unsupported encoding:\", encoding);\n      return [\"Linear\", \"( value )\"];\n  }\n}\n\nfunction getShaderErrors(gl, shader, type) {\n  const status = gl.getShaderParameter(shader, 35713);\n  const errors = gl.getShaderInfoLog(shader).trim();\n\n  if (status && errors === \"\") return \"\";\n\n  // --enable-privileged-webgl-extension\n  // console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n  return (\n    type.toUpperCase() +\n    \"\\n\\n\" +\n    errors +\n    \"\\n\\n\" +\n    addLineNumbers(gl.getShaderSource(shader))\n  );\n}\n\nfunction getTexelDecodingFunction(functionName, encoding) {\n  const components = getEncodingComponents(encoding);\n  return (\n    \"vec4 \" +\n    functionName +\n    \"( vec4 value ) { return \" +\n    components[0] +\n    \"ToLinear\" +\n    components[1] +\n    \"; }\"\n  );\n}\n\nfunction getTexelEncodingFunction(functionName, encoding) {\n  const components = getEncodingComponents(encoding);\n  return (\n    \"vec4 \" +\n    functionName +\n    \"( vec4 value ) { return LinearTo\" +\n    components[0] +\n    components[1] +\n    \"; }\"\n  );\n}\n\nfunction getToneMappingFunction(functionName, toneMapping) {\n  let toneMappingName;\n\n  switch (toneMapping) {\n    case LinearToneMapping:\n      toneMappingName = \"Linear\";\n      break;\n\n    case ReinhardToneMapping:\n      toneMappingName = \"Reinhard\";\n      break;\n\n    case CineonToneMapping:\n      toneMappingName = \"OptimizedCineon\";\n      break;\n\n    case ACESFilmicToneMapping:\n      toneMappingName = \"ACESFilmic\";\n      break;\n\n    case CustomToneMapping:\n      toneMappingName = \"Custom\";\n      break;\n\n    default:\n      console.warn(\"THREE.WebGLProgram: Unsupported toneMapping:\", toneMapping);\n      toneMappingName = \"Linear\";\n  }\n\n  return (\n    \"vec3 \" +\n    functionName +\n    \"( vec3 color ) { return \" +\n    toneMappingName +\n    \"ToneMapping( color ); }\"\n  );\n}\n\nfunction generateExtensions(parameters) {\n  const chunks = [\n    parameters.extensionDerivatives ||\n    parameters.envMapCubeUV ||\n    parameters.bumpMap ||\n    parameters.tangentSpaceNormalMap ||\n    parameters.clearcoatNormalMap ||\n    parameters.flatShading ||\n    parameters.shaderID === \"physical\"\n      ? \"#extension GL_OES_standard_derivatives : enable\"\n      : \"\",\n    (parameters.extensionFragDepth || parameters.logarithmicDepthBuffer) &&\n    parameters.rendererExtensionFragDepth\n      ? \"#extension GL_EXT_frag_depth : enable\"\n      : \"\",\n    parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers\n      ? \"#extension GL_EXT_draw_buffers : require\"\n      : \"\",\n    (parameters.extensionShaderTextureLOD ||\n      parameters.envMap ||\n      parameters.transmission) &&\n    parameters.rendererExtensionShaderTextureLod\n      ? \"#extension GL_EXT_shader_texture_lod : enable\"\n      : \"\",\n  ];\n\n  return chunks.filter(filterEmptyLine).join(\"\\n\");\n}\n\nfunction generateDefines(defines) {\n  const chunks = [];\n\n  for (const name in defines) {\n    const value = defines[name];\n\n    if (value === false) continue;\n\n    chunks.push(\"#define \" + name + \" \" + value);\n  }\n\n  return chunks.join(\"\\n\");\n}\n\nfunction fetchAttributeLocations(gl, program) {\n  const attributes = {};\n\n  const n = gl.getProgramParameter(program, 35721);\n\n  for (let i = 0; i < n; i++) {\n    const info = gl.getActiveAttrib(program, i);\n    const name = info.name;\n\n    let locationSize = 1;\n    if (info.type === 35674) locationSize = 2;\n    if (info.type === 35675) locationSize = 3;\n    if (info.type === 35676) locationSize = 4;\n\n    // console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n    attributes[name] = {\n      type: info.type,\n      location: gl.getAttribLocation(program, name),\n      locationSize: locationSize,\n    };\n  }\n\n  return attributes;\n}\n\nfunction filterEmptyLine(string) {\n  return string !== \"\";\n}\n\nfunction replaceLightNums(string, parameters) {\n  return string\n    .replace(/NUM_DIR_LIGHTS/g, parameters.numDirLights)\n    .replace(/NUM_SPOT_LIGHTS/g, parameters.numSpotLights)\n    .replace(/NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights)\n    .replace(/NUM_POINT_LIGHTS/g, parameters.numPointLights)\n    .replace(/NUM_HEMI_LIGHTS/g, parameters.numHemiLights)\n    .replace(/NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows)\n    .replace(/NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows)\n    .replace(/NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows);\n}\n\nfunction replaceClippingPlaneNums(string, parameters) {\n  return string\n    .replace(/NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes)\n    .replace(\n      /UNION_CLIPPING_PLANES/g,\n      parameters.numClippingPlanes - parameters.numClipIntersection\n    );\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes(string) {\n  return string.replace(includePattern, includeReplacer);\n}\n\nfunction includeReplacer(match, include) {\n  const string = ShaderChunk[include];\n\n  if (string === undefined) {\n    throw new Error(\"Can not resolve #include <\" + include + \">\");\n  }\n\n  return resolveIncludes(string);\n}\n\n// Unroll Loops\n\nconst deprecatedUnrollLoopPattern =\n  /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\nconst unrollLoopPattern =\n  /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops(string) {\n  return string\n    .replace(unrollLoopPattern, loopReplacer)\n    .replace(deprecatedUnrollLoopPattern, deprecatedLoopReplacer);\n}\n\nfunction deprecatedLoopReplacer(match, start, end, snippet) {\n  console.warn(\n    \"WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.\"\n  );\n  return loopReplacer(match, start, end, snippet);\n}\n\nfunction loopReplacer(match, start, end, snippet) {\n  let string = \"\";\n\n  for (let i = parseInt(start); i < parseInt(end); i++) {\n    string += snippet\n      .replace(/\\[\\s*i\\s*\\]/g, \"[ \" + i + \" ]\")\n      .replace(/UNROLLED_LOOP_INDEX/g, i);\n  }\n\n  return string;\n}\n\n//\n\nfunction generatePrecision(parameters) {\n  let precisionstring =\n    \"precision \" +\n    parameters.precision +\n    \" float;\\nprecision \" +\n    parameters.precision +\n    \" int;\";\n\n  if (parameters.precision === \"highp\") {\n    precisionstring += \"\\n#define HIGH_PRECISION\";\n  } else if (parameters.precision === \"mediump\") {\n    precisionstring += \"\\n#define MEDIUM_PRECISION\";\n  } else if (parameters.precision === \"lowp\") {\n    precisionstring += \"\\n#define LOW_PRECISION\";\n  }\n\n  return precisionstring;\n}\n\nfunction generateShadowMapTypeDefine(parameters) {\n  let shadowMapTypeDefine = \"SHADOWMAP_TYPE_BASIC\";\n\n  if (parameters.shadowMapType === PCFShadowMap) {\n    shadowMapTypeDefine = \"SHADOWMAP_TYPE_PCF\";\n  } else if (parameters.shadowMapType === PCFSoftShadowMap) {\n    shadowMapTypeDefine = \"SHADOWMAP_TYPE_PCF_SOFT\";\n  } else if (parameters.shadowMapType === VSMShadowMap) {\n    shadowMapTypeDefine = \"SHADOWMAP_TYPE_VSM\";\n  }\n\n  return shadowMapTypeDefine;\n}\n\nfunction generateEnvMapTypeDefine(parameters) {\n  let envMapTypeDefine = \"ENVMAP_TYPE_CUBE\";\n\n  if (parameters.envMap) {\n    switch (parameters.envMapMode) {\n      case CubeReflectionMapping:\n      case CubeRefractionMapping:\n        envMapTypeDefine = \"ENVMAP_TYPE_CUBE\";\n        break;\n\n      case CubeUVReflectionMapping:\n      case CubeUVRefractionMapping:\n        envMapTypeDefine = \"ENVMAP_TYPE_CUBE_UV\";\n        break;\n    }\n  }\n\n  return envMapTypeDefine;\n}\n\nfunction generateEnvMapModeDefine(parameters) {\n  let envMapModeDefine = \"ENVMAP_MODE_REFLECTION\";\n\n  if (parameters.envMap) {\n    switch (parameters.envMapMode) {\n      case CubeRefractionMapping:\n      case CubeUVRefractionMapping:\n        envMapModeDefine = \"ENVMAP_MODE_REFRACTION\";\n        break;\n    }\n  }\n\n  return envMapModeDefine;\n}\n\nfunction generateEnvMapBlendingDefine(parameters) {\n  let envMapBlendingDefine = \"ENVMAP_BLENDING_NONE\";\n\n  if (parameters.envMap) {\n    switch (parameters.combine) {\n      case MultiplyOperation:\n        envMapBlendingDefine = \"ENVMAP_BLENDING_MULTIPLY\";\n        break;\n\n      case MixOperation:\n        envMapBlendingDefine = \"ENVMAP_BLENDING_MIX\";\n        break;\n\n      case AddOperation:\n        envMapBlendingDefine = \"ENVMAP_BLENDING_ADD\";\n        break;\n    }\n  }\n\n  return envMapBlendingDefine;\n}\n\nfunction WebGLProgram(renderer, cacheKey, parameters, bindingStates) {\n  // TODO Send this event to Three.js DevTools\n  // console.log( 'WebGLProgram', cacheKey );\n\n  const gl = renderer.getContext();\n\n  const defines = parameters.defines;\n\n  let vertexShader = parameters.vertexShader;\n  let fragmentShader = parameters.fragmentShader;\n\n  const shadowMapTypeDefine = generateShadowMapTypeDefine(parameters);\n  const envMapTypeDefine = generateEnvMapTypeDefine(parameters);\n  const envMapModeDefine = generateEnvMapModeDefine(parameters);\n  const envMapBlendingDefine = generateEnvMapBlendingDefine(parameters);\n\n  const gammaFactorDefine =\n    renderer.gammaFactor > 0 ? renderer.gammaFactor : 1.0;\n\n  const customExtensions = parameters.isWebGL2\n    ? \"\"\n    : generateExtensions(parameters);\n\n  const customDefines = generateDefines(defines);\n\n  const program = gl.createProgram();\n\n  let prefixVertex, prefixFragment;\n  let versionString = parameters.glslVersion\n    ? \"#version \" + parameters.glslVersion + \"\\n\"\n    : \"\";\n\n  if (parameters.isRawShaderMaterial) {\n    prefixVertex = [customDefines].filter(filterEmptyLine).join(\"\\n\");\n\n    if (prefixVertex.length > 0) {\n      prefixVertex += \"\\n\";\n    }\n\n    prefixFragment = [customExtensions, customDefines]\n      .filter(filterEmptyLine)\n      .join(\"\\n\");\n\n    if (prefixFragment.length > 0) {\n      prefixFragment += \"\\n\";\n    }\n  } else {\n    prefixVertex = [\n      generatePrecision(parameters),\n\n      \"#define SHADER_NAME \" + parameters.shaderName,\n\n      customDefines,\n\n      parameters.instancing ? \"#define USE_INSTANCING\" : \"\",\n      parameters.instancingColor ? \"#define USE_INSTANCING_COLOR\" : \"\",\n\n      parameters.supportsVertexTextures ? \"#define VERTEX_TEXTURES\" : \"\",\n\n      \"#define GAMMA_FACTOR \" + gammaFactorDefine,\n\n      \"#define MAX_BONES \" + parameters.maxBones,\n      parameters.useFog && parameters.fog ? \"#define USE_FOG\" : \"\",\n      parameters.useFog && parameters.fogExp2 ? \"#define FOG_EXP2\" : \"\",\n\n      parameters.map ? \"#define USE_MAP\" : \"\",\n      parameters.envMap ? \"#define USE_ENVMAP\" : \"\",\n      parameters.envMap ? \"#define \" + envMapModeDefine : \"\",\n      parameters.lightMap ? \"#define USE_LIGHTMAP\" : \"\",\n      parameters.aoMap ? \"#define USE_AOMAP\" : \"\",\n      parameters.emissiveMap ? \"#define USE_EMISSIVEMAP\" : \"\",\n      parameters.bumpMap ? \"#define USE_BUMPMAP\" : \"\",\n      parameters.normalMap ? \"#define USE_NORMALMAP\" : \"\",\n      parameters.normalMap && parameters.objectSpaceNormalMap\n        ? \"#define OBJECTSPACE_NORMALMAP\"\n        : \"\",\n      parameters.normalMap && parameters.tangentSpaceNormalMap\n        ? \"#define TANGENTSPACE_NORMALMAP\"\n        : \"\",\n\n      parameters.clearcoatMap ? \"#define USE_CLEARCOATMAP\" : \"\",\n      parameters.clearcoatRoughnessMap\n        ? \"#define USE_CLEARCOAT_ROUGHNESSMAP\"\n        : \"\",\n      parameters.clearcoatNormalMap ? \"#define USE_CLEARCOAT_NORMALMAP\" : \"\",\n\n      parameters.displacementMap && parameters.supportsVertexTextures\n        ? \"#define USE_DISPLACEMENTMAP\"\n        : \"\",\n\n      parameters.specularMap ? \"#define USE_SPECULARMAP\" : \"\",\n      parameters.specularIntensityMap ? \"#define USE_SPECULARINTENSITYMAP\" : \"\",\n      parameters.specularColorMap ? \"#define USE_SPECULARCOLORMAP\" : \"\",\n\n      parameters.roughnessMap ? \"#define USE_ROUGHNESSMAP\" : \"\",\n      parameters.metalnessMap ? \"#define USE_METALNESSMAP\" : \"\",\n      parameters.alphaMap ? \"#define USE_ALPHAMAP\" : \"\",\n\n      parameters.transmission ? \"#define USE_TRANSMISSION\" : \"\",\n      parameters.transmissionMap ? \"#define USE_TRANSMISSIONMAP\" : \"\",\n      parameters.thicknessMap ? \"#define USE_THICKNESSMAP\" : \"\",\n\n      parameters.sheenColorMap ? \"#define USE_SHEENCOLORMAP\" : \"\",\n      parameters.sheenRoughnessMap ? \"#define USE_SHEENROUGHNESSMAP\" : \"\",\n\n      parameters.vertexTangents ? \"#define USE_TANGENT\" : \"\",\n      parameters.vertexColors ? \"#define USE_COLOR\" : \"\",\n      parameters.vertexAlphas ? \"#define USE_COLOR_ALPHA\" : \"\",\n      parameters.vertexUvs ? \"#define USE_UV\" : \"\",\n      parameters.uvsVertexOnly ? \"#define UVS_VERTEX_ONLY\" : \"\",\n\n      parameters.flatShading ? \"#define FLAT_SHADED\" : \"\",\n\n      parameters.skinning ? \"#define USE_SKINNING\" : \"\",\n      parameters.useVertexTexture ? \"#define BONE_TEXTURE\" : \"\",\n\n      parameters.morphTargets ? \"#define USE_MORPHTARGETS\" : \"\",\n      parameters.morphNormals && parameters.flatShading === false\n        ? \"#define USE_MORPHNORMALS\"\n        : \"\",\n      parameters.morphTargets && parameters.isWebGL2\n        ? \"#define MORPHTARGETS_TEXTURE\"\n        : \"\",\n      parameters.morphTargets && parameters.isWebGL2\n        ? \"#define MORPHTARGETS_COUNT \" + parameters.morphTargetsCount\n        : \"\",\n      parameters.doubleSided ? \"#define DOUBLE_SIDED\" : \"\",\n      parameters.flipSided ? \"#define FLIP_SIDED\" : \"\",\n\n      parameters.shadowMapEnabled ? \"#define USE_SHADOWMAP\" : \"\",\n      parameters.shadowMapEnabled ? \"#define \" + shadowMapTypeDefine : \"\",\n\n      parameters.sizeAttenuation ? \"#define USE_SIZEATTENUATION\" : \"\",\n\n      parameters.logarithmicDepthBuffer ? \"#define USE_LOGDEPTHBUF\" : \"\",\n      parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth\n        ? \"#define USE_LOGDEPTHBUF_EXT\"\n        : \"\",\n\n      \"uniform mat4 modelMatrix;\",\n      \"uniform mat4 modelViewMatrix;\",\n      \"uniform mat4 projectionMatrix;\",\n      \"uniform mat4 viewMatrix;\",\n      \"uniform mat3 normalMatrix;\",\n      \"uniform vec3 cameraPosition;\",\n      \"uniform bool isOrthographic;\",\n\n      \"#ifdef USE_INSTANCING\",\n\n      \"\tattribute mat4 instanceMatrix;\",\n\n      \"#endif\",\n\n      \"#ifdef USE_INSTANCING_COLOR\",\n\n      \"\tattribute vec3 instanceColor;\",\n\n      \"#endif\",\n\n      \"attribute vec3 position;\",\n      \"attribute vec3 normal;\",\n      \"attribute vec2 uv;\",\n\n      \"#ifdef USE_TANGENT\",\n\n      \"\tattribute vec4 tangent;\",\n\n      \"#endif\",\n\n      \"#if defined( USE_COLOR_ALPHA )\",\n\n      \"\tattribute vec4 color;\",\n\n      \"#elif defined( USE_COLOR )\",\n\n      \"\tattribute vec3 color;\",\n\n      \"#endif\",\n\n      \"#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )\",\n\n      \"\tattribute vec3 morphTarget0;\",\n      \"\tattribute vec3 morphTarget1;\",\n      \"\tattribute vec3 morphTarget2;\",\n      \"\tattribute vec3 morphTarget3;\",\n\n      \"\t#ifdef USE_MORPHNORMALS\",\n\n      \"\t\tattribute vec3 morphNormal0;\",\n      \"\t\tattribute vec3 morphNormal1;\",\n      \"\t\tattribute vec3 morphNormal2;\",\n      \"\t\tattribute vec3 morphNormal3;\",\n\n      \"\t#else\",\n\n      \"\t\tattribute vec3 morphTarget4;\",\n      \"\t\tattribute vec3 morphTarget5;\",\n      \"\t\tattribute vec3 morphTarget6;\",\n      \"\t\tattribute vec3 morphTarget7;\",\n\n      \"\t#endif\",\n\n      \"#endif\",\n\n      \"#ifdef USE_SKINNING\",\n\n      \"\tattribute vec4 skinIndex;\",\n      \"\tattribute vec4 skinWeight;\",\n\n      \"#endif\",\n\n      \"\\n\",\n    ]\n      .filter(filterEmptyLine)\n      .join(\"\\n\");\n\n    prefixFragment = [\n      customExtensions,\n\n      generatePrecision(parameters),\n\n      \"#define SHADER_NAME \" + parameters.shaderName,\n\n      customDefines,\n\n      \"#define GAMMA_FACTOR \" + gammaFactorDefine,\n\n      parameters.useFog && parameters.fog ? \"#define USE_FOG\" : \"\",\n      parameters.useFog && parameters.fogExp2 ? \"#define FOG_EXP2\" : \"\",\n\n      parameters.map ? \"#define USE_MAP\" : \"\",\n      parameters.matcap ? \"#define USE_MATCAP\" : \"\",\n      parameters.envMap ? \"#define USE_ENVMAP\" : \"\",\n      parameters.envMap ? \"#define \" + envMapTypeDefine : \"\",\n      parameters.envMap ? \"#define \" + envMapModeDefine : \"\",\n      parameters.envMap ? \"#define \" + envMapBlendingDefine : \"\",\n      parameters.lightMap ? \"#define USE_LIGHTMAP\" : \"\",\n      parameters.aoMap ? \"#define USE_AOMAP\" : \"\",\n      parameters.emissiveMap ? \"#define USE_EMISSIVEMAP\" : \"\",\n      parameters.bumpMap ? \"#define USE_BUMPMAP\" : \"\",\n      parameters.normalMap ? \"#define USE_NORMALMAP\" : \"\",\n      parameters.normalMap && parameters.objectSpaceNormalMap\n        ? \"#define OBJECTSPACE_NORMALMAP\"\n        : \"\",\n      parameters.normalMap && parameters.tangentSpaceNormalMap\n        ? \"#define TANGENTSPACE_NORMALMAP\"\n        : \"\",\n\n      parameters.clearcoat ? \"#define USE_CLEARCOAT\" : \"\",\n      parameters.clearcoatMap ? \"#define USE_CLEARCOATMAP\" : \"\",\n      parameters.clearcoatRoughnessMap\n        ? \"#define USE_CLEARCOAT_ROUGHNESSMAP\"\n        : \"\",\n      parameters.clearcoatNormalMap ? \"#define USE_CLEARCOAT_NORMALMAP\" : \"\",\n\n      parameters.specularMap ? \"#define USE_SPECULARMAP\" : \"\",\n      parameters.specularIntensityMap ? \"#define USE_SPECULARINTENSITYMAP\" : \"\",\n      parameters.specularColorMap ? \"#define USE_SPECULARCOLORMAP\" : \"\",\n      parameters.roughnessMap ? \"#define USE_ROUGHNESSMAP\" : \"\",\n      parameters.metalnessMap ? \"#define USE_METALNESSMAP\" : \"\",\n\n      parameters.alphaMap ? \"#define USE_ALPHAMAP\" : \"\",\n      parameters.alphaTest ? \"#define USE_ALPHATEST\" : \"\",\n\n      parameters.sheen ? \"#define USE_SHEEN\" : \"\",\n      parameters.sheenColorMap ? \"#define USE_SHEENCOLORMAP\" : \"\",\n      parameters.sheenRoughnessMap ? \"#define USE_SHEENROUGHNESSMAP\" : \"\",\n\n      parameters.transmission ? \"#define USE_TRANSMISSION\" : \"\",\n      parameters.transmissionMap ? \"#define USE_TRANSMISSIONMAP\" : \"\",\n      parameters.thicknessMap ? \"#define USE_THICKNESSMAP\" : \"\",\n\n      parameters.vertexTangents ? \"#define USE_TANGENT\" : \"\",\n      parameters.vertexColors || parameters.instancingColor\n        ? \"#define USE_COLOR\"\n        : \"\",\n      parameters.vertexAlphas ? \"#define USE_COLOR_ALPHA\" : \"\",\n      parameters.vertexUvs ? \"#define USE_UV\" : \"\",\n      parameters.uvsVertexOnly ? \"#define UVS_VERTEX_ONLY\" : \"\",\n\n      parameters.gradientMap ? \"#define USE_GRADIENTMAP\" : \"\",\n\n      parameters.flatShading ? \"#define FLAT_SHADED\" : \"\",\n\n      parameters.doubleSided ? \"#define DOUBLE_SIDED\" : \"\",\n      parameters.flipSided ? \"#define FLIP_SIDED\" : \"\",\n\n      parameters.shadowMapEnabled ? \"#define USE_SHADOWMAP\" : \"\",\n      parameters.shadowMapEnabled ? \"#define \" + shadowMapTypeDefine : \"\",\n\n      parameters.premultipliedAlpha ? \"#define PREMULTIPLIED_ALPHA\" : \"\",\n\n      parameters.physicallyCorrectLights\n        ? \"#define PHYSICALLY_CORRECT_LIGHTS\"\n        : \"\",\n\n      parameters.logarithmicDepthBuffer ? \"#define USE_LOGDEPTHBUF\" : \"\",\n      parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth\n        ? \"#define USE_LOGDEPTHBUF_EXT\"\n        : \"\",\n\n      (parameters.extensionShaderTextureLOD || parameters.envMap) &&\n      parameters.rendererExtensionShaderTextureLod\n        ? \"#define TEXTURE_LOD_EXT\"\n        : \"\",\n\n      \"uniform mat4 viewMatrix;\",\n      \"uniform vec3 cameraPosition;\",\n      \"uniform bool isOrthographic;\",\n\n      parameters.toneMapping !== NoToneMapping ? \"#define TONE_MAPPING\" : \"\",\n      parameters.toneMapping !== NoToneMapping\n        ? ShaderChunk[\"tonemapping_pars_fragment\"]\n        : \"\", // this code is required here because it is used by the toneMapping() function defined below\n      parameters.toneMapping !== NoToneMapping\n        ? getToneMappingFunction(\"toneMapping\", parameters.toneMapping)\n        : \"\",\n\n      parameters.dithering ? \"#define DITHERING\" : \"\",\n      parameters.format === RGBFormat ? \"#define OPAQUE\" : \"\",\n\n      ShaderChunk[\"encodings_pars_fragment\"], // this code is required here because it is used by the various encoding/decoding function defined below\n      parameters.map\n        ? getTexelDecodingFunction(\"mapTexelToLinear\", parameters.mapEncoding)\n        : \"\",\n      parameters.matcap\n        ? getTexelDecodingFunction(\n            \"matcapTexelToLinear\",\n            parameters.matcapEncoding\n          )\n        : \"\",\n      parameters.envMap\n        ? getTexelDecodingFunction(\n            \"envMapTexelToLinear\",\n            parameters.envMapEncoding\n          )\n        : \"\",\n      parameters.emissiveMap\n        ? getTexelDecodingFunction(\n            \"emissiveMapTexelToLinear\",\n            parameters.emissiveMapEncoding\n          )\n        : \"\",\n      parameters.specularColorMap\n        ? getTexelDecodingFunction(\n            \"specularColorMapTexelToLinear\",\n            parameters.specularColorMapEncoding\n          )\n        : \"\",\n      parameters.sheenColorMap\n        ? getTexelDecodingFunction(\n            \"sheenColorMapTexelToLinear\",\n            parameters.sheenColorMapEncoding\n          )\n        : \"\",\n      parameters.lightMap\n        ? getTexelDecodingFunction(\n            \"lightMapTexelToLinear\",\n            parameters.lightMapEncoding\n          )\n        : \"\",\n      getTexelEncodingFunction(\n        \"linearToOutputTexel\",\n        parameters.outputEncoding\n      ),\n\n      parameters.depthPacking\n        ? \"#define DEPTH_PACKING \" + parameters.depthPacking\n        : \"\",\n\n      \"\\n\",\n    ]\n      .filter(filterEmptyLine)\n      .join(\"\\n\");\n  }\n\n  vertexShader = resolveIncludes(vertexShader);\n  vertexShader = replaceLightNums(vertexShader, parameters);\n  vertexShader = replaceClippingPlaneNums(vertexShader, parameters);\n\n  fragmentShader = resolveIncludes(fragmentShader);\n  fragmentShader = replaceLightNums(fragmentShader, parameters);\n  fragmentShader = replaceClippingPlaneNums(fragmentShader, parameters);\n\n  vertexShader = unrollLoops(vertexShader);\n  fragmentShader = unrollLoops(fragmentShader);\n\n  if (parameters.isWebGL2 && parameters.isRawShaderMaterial !== true) {\n    // GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n    versionString = \"#version 300 es\\n\";\n\n    prefixVertex =\n      [\n        \"precision mediump sampler2DArray;\",\n        \"#define attribute in\",\n        \"#define varying out\",\n        \"#define texture2D texture\",\n      ].join(\"\\n\") +\n      \"\\n\" +\n      prefixVertex;\n\n    prefixFragment =\n      [\n        \"#define varying in\",\n        parameters.glslVersion === GLSL3 ? \"\" : \"out highp vec4 pc_fragColor;\",\n        parameters.glslVersion === GLSL3\n          ? \"\"\n          : \"#define gl_FragColor pc_fragColor\",\n        \"#define gl_FragDepthEXT gl_FragDepth\",\n        \"#define texture2D texture\",\n        \"#define textureCube texture\",\n        \"#define texture2DProj textureProj\",\n        \"#define texture2DLodEXT textureLod\",\n        \"#define texture2DProjLodEXT textureProjLod\",\n        \"#define textureCubeLodEXT textureLod\",\n        \"#define texture2DGradEXT textureGrad\",\n        \"#define texture2DProjGradEXT textureProjGrad\",\n        \"#define textureCubeGradEXT textureGrad\",\n      ].join(\"\\n\") +\n      \"\\n\" +\n      prefixFragment;\n  }\n\n  const vertexGlsl = versionString + prefixVertex + vertexShader;\n  const fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n  // console.log( '*VERTEX*', vertexGlsl );\n  // console.log( '*FRAGMENT*', fragmentGlsl );\n\n  const glVertexShader = WebGLShader(gl, 35633, vertexGlsl);\n  const glFragmentShader = WebGLShader(gl, 35632, fragmentGlsl);\n\n  gl.attachShader(program, glVertexShader);\n  gl.attachShader(program, glFragmentShader);\n\n  // Force a particular attribute to index 0.\n\n  if (parameters.index0AttributeName !== undefined) {\n    gl.bindAttribLocation(program, 0, parameters.index0AttributeName);\n  } else if (parameters.morphTargets === true) {\n    // programs with morphTargets displace position out of attribute 0\n    gl.bindAttribLocation(program, 0, \"position\");\n  }\n\n  gl.linkProgram(program);\n\n  // check for link errors\n  if (renderer.debug.checkShaderErrors) {\n    const programLog = gl.getProgramInfoLog(program).trim();\n    const vertexLog = gl.getShaderInfoLog(glVertexShader).trim();\n    const fragmentLog = gl.getShaderInfoLog(glFragmentShader).trim();\n\n    let runnable = true;\n    let haveDiagnostics = true;\n\n    if (gl.getProgramParameter(program, 35714) === false) {\n      runnable = false;\n\n      const vertexErrors = getShaderErrors(gl, glVertexShader, \"vertex\");\n      const fragmentErrors = getShaderErrors(gl, glFragmentShader, \"fragment\");\n\n      console.error(\n        \"THREE.WebGLProgram: Shader Error \" +\n          gl.getError() +\n          \" - \" +\n          \"VALIDATE_STATUS \" +\n          gl.getProgramParameter(program, 35715) +\n          \"\\n\\n\" +\n          \"Program Info Log: \" +\n          programLog +\n          \"\\n\" +\n          vertexErrors +\n          \"\\n\" +\n          fragmentErrors\n      );\n    } else if (programLog !== \"\") {\n      console.warn(\"THREE.WebGLProgram: Program Info Log:\", programLog);\n    } else if (vertexLog === \"\" || fragmentLog === \"\") {\n      haveDiagnostics = false;\n    }\n\n    if (haveDiagnostics) {\n      this.diagnostics = {\n        runnable: runnable,\n\n        programLog: programLog,\n\n        vertexShader: {\n          log: vertexLog,\n          prefix: prefixVertex,\n        },\n\n        fragmentShader: {\n          log: fragmentLog,\n          prefix: prefixFragment,\n        },\n      };\n    }\n  }\n\n  // Clean up\n\n  // Crashes in iOS9 and iOS10. #18402\n  // gl.detachShader( program, glVertexShader );\n  // gl.detachShader( program, glFragmentShader );\n\n  gl.deleteShader(glVertexShader);\n  gl.deleteShader(glFragmentShader);\n\n  // set up caching for uniform locations\n\n  let cachedUniforms;\n\n  this.getUniforms = function () {\n    if (cachedUniforms === undefined) {\n      cachedUniforms = new WebGLUniforms(gl, program);\n    }\n\n    return cachedUniforms;\n  };\n\n  // set up caching for attribute locations\n\n  let cachedAttributes;\n\n  this.getAttributes = function () {\n    if (cachedAttributes === undefined) {\n      cachedAttributes = fetchAttributeLocations(gl, program);\n    }\n\n    return cachedAttributes;\n  };\n\n  // free resource\n\n  this.destroy = function () {\n    bindingStates.releaseStatesOfProgram(this);\n\n    gl.deleteProgram(program);\n    this.program = undefined;\n  };\n\n  //\n\n  this.name = parameters.shaderName;\n  this.id = programIdCount++;\n  this.cacheKey = cacheKey;\n  this.usedTimes = 1;\n  this.program = program;\n  this.vertexShader = glVertexShader;\n  this.fragmentShader = glFragmentShader;\n\n  return this;\n}\n\nfunction WebGLPrograms(\n  renderer,\n  cubemaps,\n  cubeuvmaps,\n  extensions,\n  capabilities,\n  bindingStates,\n  clipping\n) {\n  const programs = [];\n\n  const isWebGL2 = capabilities.isWebGL2;\n  const logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n  const floatVertexTextures = capabilities.floatVertexTextures;\n  const maxVertexUniforms = capabilities.maxVertexUniforms;\n  const vertexTextures = capabilities.vertexTextures;\n\n  let precision = capabilities.precision;\n\n  const shaderIDs = {\n    MeshDepthMaterial: \"depth\",\n    MeshDistanceMaterial: \"distanceRGBA\",\n    MeshNormalMaterial: \"normal\",\n    MeshBasicMaterial: \"basic\",\n    MeshLambertMaterial: \"lambert\",\n    MeshPhongMaterial: \"phong\",\n    MeshToonMaterial: \"toon\",\n    MeshStandardMaterial: \"physical\",\n    MeshPhysicalMaterial: \"physical\",\n    MeshMatcapMaterial: \"matcap\",\n    LineBasicMaterial: \"basic\",\n    LineDashedMaterial: \"dashed\",\n    PointsMaterial: \"points\",\n    ShadowMaterial: \"shadow\",\n    SpriteMaterial: \"sprite\",\n  };\n\n  const parameterNames = [\n    \"precision\",\n    \"isWebGL2\",\n    \"supportsVertexTextures\",\n    \"outputEncoding\",\n    \"instancing\",\n    \"instancingColor\",\n    \"map\",\n    \"mapEncoding\",\n    \"matcap\",\n    \"matcapEncoding\",\n    \"envMap\",\n    \"envMapMode\",\n    \"envMapEncoding\",\n    \"envMapCubeUV\",\n    \"lightMap\",\n    \"lightMapEncoding\",\n    \"aoMap\",\n    \"emissiveMap\",\n    \"emissiveMapEncoding\",\n    \"bumpMap\",\n    \"normalMap\",\n    \"objectSpaceNormalMap\",\n    \"tangentSpaceNormalMap\",\n    \"clearcoat\",\n    \"clearcoatMap\",\n    \"clearcoatRoughnessMap\",\n    \"clearcoatNormalMap\",\n    \"displacementMap\",\n    \"specularMap\",\n    ,\n    \"roughnessMap\",\n    \"metalnessMap\",\n    \"gradientMap\",\n    \"alphaMap\",\n    \"alphaTest\",\n    \"combine\",\n    \"vertexColors\",\n    \"vertexAlphas\",\n    \"vertexTangents\",\n    \"vertexUvs\",\n    \"uvsVertexOnly\",\n    \"fog\",\n    \"useFog\",\n    \"fogExp2\",\n    \"flatShading\",\n    \"sizeAttenuation\",\n    \"logarithmicDepthBuffer\",\n    \"skinning\",\n    \"maxBones\",\n    \"useVertexTexture\",\n    \"morphTargets\",\n    \"morphNormals\",\n    \"morphTargetsCount\",\n    \"premultipliedAlpha\",\n    \"numDirLights\",\n    \"numPointLights\",\n    \"numSpotLights\",\n    \"numHemiLights\",\n    \"numRectAreaLights\",\n    \"numDirLightShadows\",\n    \"numPointLightShadows\",\n    \"numSpotLightShadows\",\n    \"shadowMapEnabled\",\n    \"shadowMapType\",\n    \"toneMapping\",\n    \"physicallyCorrectLights\",\n    \"doubleSided\",\n    \"flipSided\",\n    \"numClippingPlanes\",\n    \"numClipIntersection\",\n    \"depthPacking\",\n    \"dithering\",\n    \"format\",\n    \"specularIntensityMap\",\n    \"specularColorMap\",\n    \"specularColorMapEncoding\",\n    \"transmission\",\n    \"transmissionMap\",\n    \"thicknessMap\",\n    \"sheen\",\n    \"sheenColorMap\",\n    \"sheenColorMapEncoding\",\n    \"sheenRoughnessMap\",\n  ];\n\n  function getMaxBones(object) {\n    const skeleton = object.skeleton;\n    const bones = skeleton.bones;\n\n    if (floatVertexTextures) {\n      return 1024;\n    } else {\n      // default for when object is not specified\n      // ( for example when prebuilding shader to be used with multiple objects )\n      //\n      //  - leave some extra space for other uniforms\n      //  - limit here is ANGLE's 254 max uniform vectors\n      //    (up to 54 should be safe)\n\n      const nVertexUniforms = maxVertexUniforms;\n      const nVertexMatrices = Math.floor((nVertexUniforms - 20) / 4);\n\n      const maxBones = Math.min(nVertexMatrices, bones.length);\n\n      if (maxBones < bones.length) {\n        console.warn(\n          \"THREE.WebGLRenderer: Skeleton has \" +\n            bones.length +\n            \" bones. This GPU supports \" +\n            maxBones +\n            \".\"\n        );\n        return 0;\n      }\n\n      return maxBones;\n    }\n  }\n\n  function getTextureEncodingFromMap(map) {\n    let encoding;\n\n    if (map && map.isTexture) {\n      encoding = map.encoding;\n    } else if (map && map.isWebGLRenderTarget) {\n      console.warn(\n        \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\"\n      );\n      encoding = map.texture.encoding;\n    } else {\n      encoding = LinearEncoding;\n    }\n\n    if (\n      isWebGL2 &&\n      map &&\n      map.isTexture &&\n      map.format === RGBAFormat &&\n      map.type === UnsignedByteType &&\n      map.encoding === sRGBEncoding\n    ) {\n      encoding = LinearEncoding; // disable inline decode for sRGB textures in WebGL 2\n    }\n\n    return encoding;\n  }\n\n  function getParameters(material, lights, shadows, scene, object) {\n    const fog = scene.fog;\n    const environment = material.isMeshStandardMaterial\n      ? scene.environment\n      : null;\n\n    const envMap = (\n      material.isMeshStandardMaterial ? cubeuvmaps : cubemaps\n    ).get(material.envMap || environment);\n\n    const shaderID = shaderIDs[material.type];\n\n    // heuristics to create shader parameters according to lights in the scene\n    // (not to blow over maxLights budget)\n\n    const maxBones = object.isSkinnedMesh ? getMaxBones(object) : 0;\n\n    if (material.precision !== null) {\n      precision = capabilities.getMaxPrecision(material.precision);\n\n      if (precision !== material.precision) {\n        console.warn(\n          \"THREE.WebGLProgram.getParameters:\",\n          material.precision,\n          \"not supported, using\",\n          precision,\n          \"instead.\"\n        );\n      }\n    }\n\n    let vertexShader, fragmentShader;\n\n    if (shaderID) {\n      const shader = ShaderLib[shaderID];\n\n      vertexShader = shader.vertexShader;\n      fragmentShader = shader.fragmentShader;\n    } else {\n      vertexShader = material.vertexShader;\n      fragmentShader = material.fragmentShader;\n    }\n\n    const currentRenderTarget = renderer.getRenderTarget();\n\n    const useAlphaTest = material.alphaTest > 0;\n    const useClearcoat = material.clearcoat > 0;\n\n    const parameters = {\n      isWebGL2: isWebGL2,\n\n      shaderID: shaderID,\n      shaderName: material.type,\n\n      vertexShader: vertexShader,\n      fragmentShader: fragmentShader,\n      defines: material.defines,\n\n      isRawShaderMaterial: material.isRawShaderMaterial === true,\n      glslVersion: material.glslVersion,\n\n      precision: precision,\n\n      instancing: object.isInstancedMesh === true,\n      instancingColor:\n        object.isInstancedMesh === true && object.instanceColor !== null,\n\n      supportsVertexTextures: vertexTextures,\n      outputEncoding:\n        currentRenderTarget !== null\n          ? getTextureEncodingFromMap(currentRenderTarget.texture)\n          : renderer.outputEncoding,\n      map: !!material.map,\n      mapEncoding: getTextureEncodingFromMap(material.map),\n      matcap: !!material.matcap,\n      matcapEncoding: getTextureEncodingFromMap(material.matcap),\n      envMap: !!envMap,\n      envMapMode: envMap && envMap.mapping,\n      envMapEncoding: getTextureEncodingFromMap(envMap),\n      envMapCubeUV:\n        !!envMap &&\n        (envMap.mapping === CubeUVReflectionMapping ||\n          envMap.mapping === CubeUVRefractionMapping),\n      lightMap: !!material.lightMap,\n      lightMapEncoding: getTextureEncodingFromMap(material.lightMap),\n      aoMap: !!material.aoMap,\n      emissiveMap: !!material.emissiveMap,\n      emissiveMapEncoding: getTextureEncodingFromMap(material.emissiveMap),\n      bumpMap: !!material.bumpMap,\n      normalMap: !!material.normalMap,\n      objectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n      tangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\n\n      clearcoat: useClearcoat,\n      clearcoatMap: useClearcoat && !!material.clearcoatMap,\n      clearcoatRoughnessMap: useClearcoat && !!material.clearcoatRoughnessMap,\n      clearcoatNormalMap: useClearcoat && !!material.clearcoatNormalMap,\n\n      displacementMap: !!material.displacementMap,\n      roughnessMap: !!material.roughnessMap,\n      metalnessMap: !!material.metalnessMap,\n      specularMap: !!material.specularMap,\n      specularIntensityMap: !!material.specularIntensityMap,\n      specularColorMap: !!material.specularColorMap,\n      specularColorMapEncoding: getTextureEncodingFromMap(\n        material.specularColorMap\n      ),\n\n      alphaMap: !!material.alphaMap,\n      alphaTest: useAlphaTest,\n\n      gradientMap: !!material.gradientMap,\n\n      sheen: material.sheen > 0,\n      sheenColorMap: !!material.sheenColorMap,\n      sheenColorMapEncoding: getTextureEncodingFromMap(material.sheenColorMap),\n      sheenRoughnessMap: !!material.sheenRoughnessMap,\n\n      transmission: material.transmission > 0,\n      transmissionMap: !!material.transmissionMap,\n      thicknessMap: !!material.thicknessMap,\n\n      combine: material.combine,\n\n      vertexTangents:\n        !!material.normalMap &&\n        !!object.geometry &&\n        !!object.geometry.attributes.tangent,\n      vertexColors: material.vertexColors,\n      vertexAlphas:\n        material.vertexColors === true &&\n        !!object.geometry &&\n        !!object.geometry.attributes.color &&\n        object.geometry.attributes.color.itemSize === 4,\n      vertexUvs:\n        !!material.map ||\n        !!material.bumpMap ||\n        !!material.normalMap ||\n        !!material.specularMap ||\n        !!material.alphaMap ||\n        !!material.emissiveMap ||\n        !!material.roughnessMap ||\n        !!material.metalnessMap ||\n        !!material.clearcoatMap ||\n        !!material.clearcoatRoughnessMap ||\n        !!material.clearcoatNormalMap ||\n        !!material.displacementMap ||\n        !!material.transmissionMap ||\n        !!material.thicknessMap ||\n        !!material.specularIntensityMap ||\n        !!material.specularColorMap ||\n        !!material.sheenColorMap ||\n        material.sheenRoughnessMap,\n      uvsVertexOnly:\n        !(\n          !!material.map ||\n          !!material.bumpMap ||\n          !!material.normalMap ||\n          !!material.specularMap ||\n          !!material.alphaMap ||\n          !!material.emissiveMap ||\n          !!material.roughnessMap ||\n          !!material.metalnessMap ||\n          !!material.clearcoatNormalMap ||\n          material.transmission > 0 ||\n          !!material.transmissionMap ||\n          !!material.thicknessMap ||\n          !!material.specularIntensityMap ||\n          !!material.specularColorMap ||\n          material.sheen > 0 ||\n          !!material.sheenColorMap ||\n          !!material.sheenRoughnessMap\n        ) && !!material.displacementMap,\n\n      fog: !!fog,\n      useFog: material.fog,\n      fogExp2: fog && fog.isFogExp2,\n\n      flatShading: !!material.flatShading,\n\n      sizeAttenuation: material.sizeAttenuation,\n      logarithmicDepthBuffer: logarithmicDepthBuffer,\n\n      skinning: object.isSkinnedMesh === true && maxBones > 0,\n      maxBones: maxBones,\n      useVertexTexture: floatVertexTextures,\n\n      morphTargets:\n        !!object.geometry && !!object.geometry.morphAttributes.position,\n      morphNormals:\n        !!object.geometry && !!object.geometry.morphAttributes.normal,\n      morphTargetsCount:\n        !!object.geometry && !!object.geometry.morphAttributes.position\n          ? object.geometry.morphAttributes.position.length\n          : 0,\n\n      numDirLights: lights.directional.length,\n      numPointLights: lights.point.length,\n      numSpotLights: lights.spot.length,\n      numRectAreaLights: lights.rectArea.length,\n      numHemiLights: lights.hemi.length,\n\n      numDirLightShadows: lights.directionalShadowMap.length,\n      numPointLightShadows: lights.pointShadowMap.length,\n      numSpotLightShadows: lights.spotShadowMap.length,\n\n      numClippingPlanes: clipping.numPlanes,\n      numClipIntersection: clipping.numIntersection,\n\n      format: material.format,\n      dithering: material.dithering,\n\n      shadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n      shadowMapType: renderer.shadowMap.type,\n\n      toneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n      physicallyCorrectLights: renderer.physicallyCorrectLights,\n\n      premultipliedAlpha: material.premultipliedAlpha,\n\n      doubleSided: material.side === DoubleSide,\n      flipSided: material.side === BackSide,\n\n      depthPacking:\n        material.depthPacking !== undefined ? material.depthPacking : false,\n\n      index0AttributeName: material.index0AttributeName,\n\n      extensionDerivatives:\n        material.extensions && material.extensions.derivatives,\n      extensionFragDepth: material.extensions && material.extensions.fragDepth,\n      extensionDrawBuffers:\n        material.extensions && material.extensions.drawBuffers,\n      extensionShaderTextureLOD:\n        material.extensions && material.extensions.shaderTextureLOD,\n\n      rendererExtensionFragDepth: isWebGL2 || extensions.has(\"EXT_frag_depth\"),\n      rendererExtensionDrawBuffers:\n        isWebGL2 || extensions.has(\"WEBGL_draw_buffers\"),\n      rendererExtensionShaderTextureLod:\n        isWebGL2 || extensions.has(\"EXT_shader_texture_lod\"),\n\n      customProgramCacheKey: material.customProgramCacheKey(),\n    };\n\n    return parameters;\n  }\n\n  function getProgramCacheKey(parameters) {\n    const array = [];\n\n    if (parameters.shaderID) {\n      array.push(parameters.shaderID);\n    } else {\n      array.push(hashString(parameters.fragmentShader));\n      array.push(hashString(parameters.vertexShader));\n    }\n\n    if (parameters.defines !== undefined) {\n      for (const name in parameters.defines) {\n        array.push(name);\n        array.push(parameters.defines[name]);\n      }\n    }\n\n    if (parameters.isRawShaderMaterial === false) {\n      for (let i = 0; i < parameterNames.length; i++) {\n        array.push(parameters[parameterNames[i]]);\n      }\n\n      array.push(renderer.outputEncoding);\n      array.push(renderer.gammaFactor);\n    }\n\n    array.push(parameters.customProgramCacheKey);\n\n    return array.join();\n  }\n\n  function getUniforms(material) {\n    const shaderID = shaderIDs[material.type];\n    let uniforms;\n\n    if (shaderID) {\n      const shader = ShaderLib[shaderID];\n      uniforms = UniformsUtils.clone(shader.uniforms);\n    } else {\n      uniforms = material.uniforms;\n    }\n\n    return uniforms;\n  }\n\n  function acquireProgram(parameters, cacheKey) {\n    let program;\n\n    // Check if code has been already compiled\n    for (let p = 0, pl = programs.length; p < pl; p++) {\n      const preexistingProgram = programs[p];\n\n      if (preexistingProgram.cacheKey === cacheKey) {\n        program = preexistingProgram;\n        ++program.usedTimes;\n\n        break;\n      }\n    }\n\n    if (program === undefined) {\n      program = new WebGLProgram(renderer, cacheKey, parameters, bindingStates);\n      programs.push(program);\n    }\n\n    return program;\n  }\n\n  function releaseProgram(program) {\n    if (--program.usedTimes === 0) {\n      // Remove from unordered set\n      const i = programs.indexOf(program);\n      programs[i] = programs[programs.length - 1];\n      programs.pop();\n\n      // Free WebGL resources\n      program.destroy();\n    }\n  }\n\n  return {\n    getParameters: getParameters,\n    getProgramCacheKey: getProgramCacheKey,\n    getUniforms: getUniforms,\n    acquireProgram: acquireProgram,\n    releaseProgram: releaseProgram,\n    // Exposed for resource monitoring & error feedback via renderer.info:\n    programs: programs,\n  };\n}\n\nfunction WebGLProperties() {\n  let properties = new WeakMap();\n\n  function get(object) {\n    let map = properties.get(object);\n\n    if (map === undefined) {\n      map = {};\n      properties.set(object, map);\n    }\n\n    return map;\n  }\n\n  function remove(object) {\n    properties.delete(object);\n  }\n\n  function update(object, key, value) {\n    properties.get(object)[key] = value;\n  }\n\n  function dispose() {\n    properties = new WeakMap();\n  }\n\n  return {\n    get: get,\n    remove: remove,\n    update: update,\n    dispose: dispose,\n  };\n}\n\nfunction painterSortStable(a, b) {\n  if (a.groupOrder !== b.groupOrder) {\n    return a.groupOrder - b.groupOrder;\n  } else if (a.renderOrder !== b.renderOrder) {\n    return a.renderOrder - b.renderOrder;\n  } else if (a.program !== b.program) {\n    return a.program.id - b.program.id;\n  } else if (a.material.id !== b.material.id) {\n    return a.material.id - b.material.id;\n  } else if (a.z !== b.z) {\n    return a.z - b.z;\n  } else {\n    return a.id - b.id;\n  }\n}\n\nfunction reversePainterSortStable(a, b) {\n  if (a.groupOrder !== b.groupOrder) {\n    return a.groupOrder - b.groupOrder;\n  } else if (a.renderOrder !== b.renderOrder) {\n    return a.renderOrder - b.renderOrder;\n  } else if (a.z !== b.z) {\n    return b.z - a.z;\n  } else {\n    return a.id - b.id;\n  }\n}\n\nfunction WebGLRenderList(properties) {\n  const renderItems = [];\n  let renderItemsIndex = 0;\n\n  const opaque = [];\n  const transmissive = [];\n  const transparent = [];\n\n  const defaultProgram = { id: -1 };\n\n  function init() {\n    renderItemsIndex = 0;\n\n    opaque.length = 0;\n    transmissive.length = 0;\n    transparent.length = 0;\n  }\n\n  function getNextRenderItem(object, geometry, material, groupOrder, z, group) {\n    let renderItem = renderItems[renderItemsIndex];\n    const materialProperties = properties.get(material);\n\n    if (renderItem === undefined) {\n      renderItem = {\n        id: object.id,\n        object: object,\n        geometry: geometry,\n        material: material,\n        program: materialProperties.program || defaultProgram,\n        groupOrder: groupOrder,\n        renderOrder: object.renderOrder,\n        z: z,\n        group: group,\n      };\n\n      renderItems[renderItemsIndex] = renderItem;\n    } else {\n      renderItem.id = object.id;\n      renderItem.object = object;\n      renderItem.geometry = geometry;\n      renderItem.material = material;\n      renderItem.program = materialProperties.program || defaultProgram;\n      renderItem.groupOrder = groupOrder;\n      renderItem.renderOrder = object.renderOrder;\n      renderItem.z = z;\n      renderItem.group = group;\n    }\n\n    renderItemsIndex++;\n\n    return renderItem;\n  }\n\n  function push(object, geometry, material, groupOrder, z, group) {\n    const renderItem = getNextRenderItem(\n      object,\n      geometry,\n      material,\n      groupOrder,\n      z,\n      group\n    );\n\n    if (material.transmission > 0.0) {\n      transmissive.push(renderItem);\n    } else if (material.transparent === true) {\n      transparent.push(renderItem);\n    } else {\n      opaque.push(renderItem);\n    }\n  }\n\n  function unshift(object, geometry, material, groupOrder, z, group) {\n    const renderItem = getNextRenderItem(\n      object,\n      geometry,\n      material,\n      groupOrder,\n      z,\n      group\n    );\n\n    if (material.transmission > 0.0) {\n      transmissive.unshift(renderItem);\n    } else if (material.transparent === true) {\n      transparent.unshift(renderItem);\n    } else {\n      opaque.unshift(renderItem);\n    }\n  }\n\n  function sort(customOpaqueSort, customTransparentSort) {\n    if (opaque.length > 1) opaque.sort(customOpaqueSort || painterSortStable);\n    if (transmissive.length > 1)\n      transmissive.sort(customTransparentSort || reversePainterSortStable);\n    if (transparent.length > 1)\n      transparent.sort(customTransparentSort || reversePainterSortStable);\n  }\n\n  function finish() {\n    // Clear references from inactive renderItems in the list\n\n    for (let i = renderItemsIndex, il = renderItems.length; i < il; i++) {\n      const renderItem = renderItems[i];\n\n      if (renderItem.id === null) break;\n\n      renderItem.id = null;\n      renderItem.object = null;\n      renderItem.geometry = null;\n      renderItem.material = null;\n      renderItem.program = null;\n      renderItem.group = null;\n    }\n  }\n\n  return {\n    opaque: opaque,\n    transmissive: transmissive,\n    transparent: transparent,\n\n    init: init,\n    push: push,\n    unshift: unshift,\n    finish: finish,\n\n    sort: sort,\n  };\n}\n\nfunction WebGLRenderLists(properties) {\n  let lists = new WeakMap();\n\n  function get(scene, renderCallDepth) {\n    let list;\n\n    if (lists.has(scene) === false) {\n      list = new WebGLRenderList(properties);\n      lists.set(scene, [list]);\n    } else {\n      if (renderCallDepth >= lists.get(scene).length) {\n        list = new WebGLRenderList(properties);\n        lists.get(scene).push(list);\n      } else {\n        list = lists.get(scene)[renderCallDepth];\n      }\n    }\n\n    return list;\n  }\n\n  function dispose() {\n    lists = new WeakMap();\n  }\n\n  return {\n    get: get,\n    dispose: dispose,\n  };\n}\n\nfunction UniformsCache() {\n  const lights = {};\n\n  return {\n    get: function (light) {\n      if (lights[light.id] !== undefined) {\n        return lights[light.id];\n      }\n\n      let uniforms;\n\n      switch (light.type) {\n        case \"DirectionalLight\":\n          uniforms = {\n            direction: new Vector3(),\n            color: new Color(),\n          };\n          break;\n\n        case \"SpotLight\":\n          uniforms = {\n            position: new Vector3(),\n            direction: new Vector3(),\n            color: new Color(),\n            distance: 0,\n            coneCos: 0,\n            penumbraCos: 0,\n            decay: 0,\n          };\n          break;\n\n        case \"PointLight\":\n          uniforms = {\n            position: new Vector3(),\n            color: new Color(),\n            distance: 0,\n            decay: 0,\n          };\n          break;\n\n        case \"HemisphereLight\":\n          uniforms = {\n            direction: new Vector3(),\n            skyColor: new Color(),\n            groundColor: new Color(),\n          };\n          break;\n\n        case \"RectAreaLight\":\n          uniforms = {\n            color: new Color(),\n            position: new Vector3(),\n            halfWidth: new Vector3(),\n            halfHeight: new Vector3(),\n          };\n          break;\n      }\n\n      lights[light.id] = uniforms;\n\n      return uniforms;\n    },\n  };\n}\n\nfunction ShadowUniformsCache() {\n  const lights = {};\n\n  return {\n    get: function (light) {\n      if (lights[light.id] !== undefined) {\n        return lights[light.id];\n      }\n\n      let uniforms;\n\n      switch (light.type) {\n        case \"DirectionalLight\":\n          uniforms = {\n            shadowBias: 0,\n            shadowNormalBias: 0,\n            shadowRadius: 1,\n            shadowMapSize: new Vector2(),\n          };\n          break;\n\n        case \"SpotLight\":\n          uniforms = {\n            shadowBias: 0,\n            shadowNormalBias: 0,\n            shadowRadius: 1,\n            shadowMapSize: new Vector2(),\n          };\n          break;\n\n        case \"PointLight\":\n          uniforms = {\n            shadowBias: 0,\n            shadowNormalBias: 0,\n            shadowRadius: 1,\n            shadowMapSize: new Vector2(),\n            shadowCameraNear: 1,\n            shadowCameraFar: 1000,\n          };\n          break;\n\n        // TODO (abelnation): set RectAreaLight shadow uniforms\n      }\n\n      lights[light.id] = uniforms;\n\n      return uniforms;\n    },\n  };\n}\n\nlet nextVersion = 0;\n\nfunction shadowCastingLightsFirst(lightA, lightB) {\n  return (lightB.castShadow ? 1 : 0) - (lightA.castShadow ? 1 : 0);\n}\n\nfunction WebGLLights(extensions, capabilities) {\n  const cache = new UniformsCache();\n\n  const shadowCache = ShadowUniformsCache();\n\n  const state = {\n    version: 0,\n\n    hash: {\n      directionalLength: -1,\n      pointLength: -1,\n      spotLength: -1,\n      rectAreaLength: -1,\n      hemiLength: -1,\n\n      numDirectionalShadows: -1,\n      numPointShadows: -1,\n      numSpotShadows: -1,\n    },\n\n    ambient: [0, 0, 0],\n    probe: [],\n    directional: [],\n    directionalShadow: [],\n    directionalShadowMap: [],\n    directionalShadowMatrix: [],\n    spot: [],\n    spotShadow: [],\n    spotShadowMap: [],\n    spotShadowMatrix: [],\n    rectArea: [],\n    rectAreaLTC1: null,\n    rectAreaLTC2: null,\n    point: [],\n    pointShadow: [],\n    pointShadowMap: [],\n    pointShadowMatrix: [],\n    hemi: [],\n  };\n\n  for (let i = 0; i < 9; i++) state.probe.push(new Vector3());\n\n  const vector3 = new Vector3();\n  const matrix4 = new Matrix4();\n  const matrix42 = new Matrix4();\n\n  function setup(lights, physicallyCorrectLights) {\n    let r = 0,\n      g = 0,\n      b = 0;\n\n    for (let i = 0; i < 9; i++) state.probe[i].set(0, 0, 0);\n\n    let directionalLength = 0;\n    let pointLength = 0;\n    let spotLength = 0;\n    let rectAreaLength = 0;\n    let hemiLength = 0;\n\n    let numDirectionalShadows = 0;\n    let numPointShadows = 0;\n    let numSpotShadows = 0;\n\n    lights.sort(shadowCastingLightsFirst);\n\n    // artist-friendly light intensity scaling factor\n    const scaleFactor = physicallyCorrectLights !== true ? Math.PI : 1;\n\n    for (let i = 0, l = lights.length; i < l; i++) {\n      const light = lights[i];\n\n      const color = light.color;\n      const intensity = light.intensity;\n      const distance = light.distance;\n\n      const shadowMap =\n        light.shadow && light.shadow.map ? light.shadow.map.texture : null;\n\n      if (light.isAmbientLight) {\n        r += color.r * intensity * scaleFactor;\n        g += color.g * intensity * scaleFactor;\n        b += color.b * intensity * scaleFactor;\n      } else if (light.isLightProbe) {\n        for (let j = 0; j < 9; j++) {\n          state.probe[j].addScaledVector(light.sh.coefficients[j], intensity);\n        }\n      } else if (light.isDirectionalLight) {\n        const uniforms = cache.get(light);\n\n        uniforms.color\n          .copy(light.color)\n          .multiplyScalar(light.intensity * scaleFactor);\n\n        if (light.castShadow) {\n          const shadow = light.shadow;\n\n          const shadowUniforms = shadowCache.get(light);\n\n          shadowUniforms.shadowBias = shadow.bias;\n          shadowUniforms.shadowNormalBias = shadow.normalBias;\n          shadowUniforms.shadowRadius = shadow.radius;\n          shadowUniforms.shadowMapSize = shadow.mapSize;\n\n          state.directionalShadow[directionalLength] = shadowUniforms;\n          state.directionalShadowMap[directionalLength] = shadowMap;\n          state.directionalShadowMatrix[directionalLength] =\n            light.shadow.matrix;\n\n          numDirectionalShadows++;\n        }\n\n        state.directional[directionalLength] = uniforms;\n\n        directionalLength++;\n      } else if (light.isSpotLight) {\n        const uniforms = cache.get(light);\n\n        uniforms.position.setFromMatrixPosition(light.matrixWorld);\n\n        uniforms.color.copy(color).multiplyScalar(intensity * scaleFactor);\n        uniforms.distance = distance;\n\n        uniforms.coneCos = Math.cos(light.angle);\n        uniforms.penumbraCos = Math.cos(light.angle * (1 - light.penumbra));\n        uniforms.decay = light.decay;\n\n        if (light.castShadow) {\n          const shadow = light.shadow;\n\n          const shadowUniforms = shadowCache.get(light);\n\n          shadowUniforms.shadowBias = shadow.bias;\n          shadowUniforms.shadowNormalBias = shadow.normalBias;\n          shadowUniforms.shadowRadius = shadow.radius;\n          shadowUniforms.shadowMapSize = shadow.mapSize;\n\n          state.spotShadow[spotLength] = shadowUniforms;\n          state.spotShadowMap[spotLength] = shadowMap;\n          state.spotShadowMatrix[spotLength] = light.shadow.matrix;\n\n          numSpotShadows++;\n        }\n\n        state.spot[spotLength] = uniforms;\n\n        spotLength++;\n      } else if (light.isRectAreaLight) {\n        const uniforms = cache.get(light);\n\n        // (a) intensity is the total visible light emitted\n        //uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\n        // (b) intensity is the brightness of the light\n        uniforms.color.copy(color).multiplyScalar(intensity);\n\n        uniforms.halfWidth.set(light.width * 0.5, 0.0, 0.0);\n        uniforms.halfHeight.set(0.0, light.height * 0.5, 0.0);\n\n        state.rectArea[rectAreaLength] = uniforms;\n\n        rectAreaLength++;\n      } else if (light.isPointLight) {\n        const uniforms = cache.get(light);\n\n        uniforms.color\n          .copy(light.color)\n          .multiplyScalar(light.intensity * scaleFactor);\n        uniforms.distance = light.distance;\n        uniforms.decay = light.decay;\n\n        if (light.castShadow) {\n          const shadow = light.shadow;\n\n          const shadowUniforms = shadowCache.get(light);\n\n          shadowUniforms.shadowBias = shadow.bias;\n          shadowUniforms.shadowNormalBias = shadow.normalBias;\n          shadowUniforms.shadowRadius = shadow.radius;\n          shadowUniforms.shadowMapSize = shadow.mapSize;\n          shadowUniforms.shadowCameraNear = shadow.camera.near;\n          shadowUniforms.shadowCameraFar = shadow.camera.far;\n\n          state.pointShadow[pointLength] = shadowUniforms;\n          state.pointShadowMap[pointLength] = shadowMap;\n          state.pointShadowMatrix[pointLength] = light.shadow.matrix;\n\n          numPointShadows++;\n        }\n\n        state.point[pointLength] = uniforms;\n\n        pointLength++;\n      } else if (light.isHemisphereLight) {\n        const uniforms = cache.get(light);\n\n        uniforms.skyColor\n          .copy(light.color)\n          .multiplyScalar(intensity * scaleFactor);\n        uniforms.groundColor\n          .copy(light.groundColor)\n          .multiplyScalar(intensity * scaleFactor);\n\n        state.hemi[hemiLength] = uniforms;\n\n        hemiLength++;\n      }\n    }\n\n    if (rectAreaLength > 0) {\n      if (capabilities.isWebGL2) {\n        // WebGL 2\n\n        state.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n        state.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n      } else {\n        // WebGL 1\n\n        if (extensions.has(\"OES_texture_float_linear\") === true) {\n          state.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n          state.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n        } else if (extensions.has(\"OES_texture_half_float_linear\") === true) {\n          state.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n          state.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n        } else {\n          console.error(\n            \"THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.\"\n          );\n        }\n      }\n    }\n\n    state.ambient[0] = r;\n    state.ambient[1] = g;\n    state.ambient[2] = b;\n\n    const hash = state.hash;\n\n    if (\n      hash.directionalLength !== directionalLength ||\n      hash.pointLength !== pointLength ||\n      hash.spotLength !== spotLength ||\n      hash.rectAreaLength !== rectAreaLength ||\n      hash.hemiLength !== hemiLength ||\n      hash.numDirectionalShadows !== numDirectionalShadows ||\n      hash.numPointShadows !== numPointShadows ||\n      hash.numSpotShadows !== numSpotShadows\n    ) {\n      state.directional.length = directionalLength;\n      state.spot.length = spotLength;\n      state.rectArea.length = rectAreaLength;\n      state.point.length = pointLength;\n      state.hemi.length = hemiLength;\n\n      state.directionalShadow.length = numDirectionalShadows;\n      state.directionalShadowMap.length = numDirectionalShadows;\n      state.pointShadow.length = numPointShadows;\n      state.pointShadowMap.length = numPointShadows;\n      state.spotShadow.length = numSpotShadows;\n      state.spotShadowMap.length = numSpotShadows;\n      state.directionalShadowMatrix.length = numDirectionalShadows;\n      state.pointShadowMatrix.length = numPointShadows;\n      state.spotShadowMatrix.length = numSpotShadows;\n\n      hash.directionalLength = directionalLength;\n      hash.pointLength = pointLength;\n      hash.spotLength = spotLength;\n      hash.rectAreaLength = rectAreaLength;\n      hash.hemiLength = hemiLength;\n\n      hash.numDirectionalShadows = numDirectionalShadows;\n      hash.numPointShadows = numPointShadows;\n      hash.numSpotShadows = numSpotShadows;\n\n      state.version = nextVersion++;\n    }\n  }\n\n  function setupView(lights, camera) {\n    let directionalLength = 0;\n    let pointLength = 0;\n    let spotLength = 0;\n    let rectAreaLength = 0;\n    let hemiLength = 0;\n\n    const viewMatrix = camera.matrixWorldInverse;\n\n    for (let i = 0, l = lights.length; i < l; i++) {\n      const light = lights[i];\n\n      if (light.isDirectionalLight) {\n        const uniforms = state.directional[directionalLength];\n\n        uniforms.direction.setFromMatrixPosition(light.matrixWorld);\n        vector3.setFromMatrixPosition(light.target.matrixWorld);\n        uniforms.direction.sub(vector3);\n        uniforms.direction.transformDirection(viewMatrix);\n\n        directionalLength++;\n      } else if (light.isSpotLight) {\n        const uniforms = state.spot[spotLength];\n\n        uniforms.position.setFromMatrixPosition(light.matrixWorld);\n        uniforms.position.applyMatrix4(viewMatrix);\n\n        uniforms.direction.setFromMatrixPosition(light.matrixWorld);\n        vector3.setFromMatrixPosition(light.target.matrixWorld);\n        uniforms.direction.sub(vector3);\n        uniforms.direction.transformDirection(viewMatrix);\n\n        spotLength++;\n      } else if (light.isRectAreaLight) {\n        const uniforms = state.rectArea[rectAreaLength];\n\n        uniforms.position.setFromMatrixPosition(light.matrixWorld);\n        uniforms.position.applyMatrix4(viewMatrix);\n\n        // extract local rotation of light to derive width/height half vectors\n        matrix42.identity();\n        matrix4.copy(light.matrixWorld);\n        matrix4.premultiply(viewMatrix);\n        matrix42.extractRotation(matrix4);\n\n        uniforms.halfWidth.set(light.width * 0.5, 0.0, 0.0);\n        uniforms.halfHeight.set(0.0, light.height * 0.5, 0.0);\n\n        uniforms.halfWidth.applyMatrix4(matrix42);\n        uniforms.halfHeight.applyMatrix4(matrix42);\n\n        rectAreaLength++;\n      } else if (light.isPointLight) {\n        const uniforms = state.point[pointLength];\n\n        uniforms.position.setFromMatrixPosition(light.matrixWorld);\n        uniforms.position.applyMatrix4(viewMatrix);\n\n        pointLength++;\n      } else if (light.isHemisphereLight) {\n        const uniforms = state.hemi[hemiLength];\n\n        uniforms.direction.setFromMatrixPosition(light.matrixWorld);\n        uniforms.direction.transformDirection(viewMatrix);\n        uniforms.direction.normalize();\n\n        hemiLength++;\n      }\n    }\n  }\n\n  return {\n    setup: setup,\n    setupView: setupView,\n    state: state,\n  };\n}\n\nfunction WebGLRenderState(extensions, capabilities) {\n  const lights = new WebGLLights(extensions, capabilities);\n\n  const lightsArray = [];\n  const shadowsArray = [];\n\n  function init() {\n    lightsArray.length = 0;\n    shadowsArray.length = 0;\n  }\n\n  function pushLight(light) {\n    lightsArray.push(light);\n  }\n\n  function pushShadow(shadowLight) {\n    shadowsArray.push(shadowLight);\n  }\n\n  function setupLights(physicallyCorrectLights) {\n    lights.setup(lightsArray, physicallyCorrectLights);\n  }\n\n  function setupLightsView(camera) {\n    lights.setupView(lightsArray, camera);\n  }\n\n  const state = {\n    lightsArray: lightsArray,\n    shadowsArray: shadowsArray,\n\n    lights: lights,\n  };\n\n  return {\n    init: init,\n    state: state,\n    setupLights: setupLights,\n    setupLightsView: setupLightsView,\n\n    pushLight: pushLight,\n    pushShadow: pushShadow,\n  };\n}\n\nfunction WebGLRenderStates(extensions, capabilities) {\n  let renderStates = new WeakMap();\n\n  function get(scene, renderCallDepth = 0) {\n    let renderState;\n\n    if (renderStates.has(scene) === false) {\n      renderState = new WebGLRenderState(extensions, capabilities);\n      renderStates.set(scene, [renderState]);\n    } else {\n      if (renderCallDepth >= renderStates.get(scene).length) {\n        renderState = new WebGLRenderState(extensions, capabilities);\n        renderStates.get(scene).push(renderState);\n      } else {\n        renderState = renderStates.get(scene)[renderCallDepth];\n      }\n    }\n\n    return renderState;\n  }\n\n  function dispose() {\n    renderStates = new WeakMap();\n  }\n\n  return {\n    get: get,\n    dispose: dispose,\n  };\n}\n\n/**\n * parameters = {\n *\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\n\nclass MeshDepthMaterial extends Material {\n  constructor(parameters) {\n    super();\n\n    this.type = \"MeshDepthMaterial\";\n\n    this.depthPacking = BasicDepthPacking;\n\n    this.map = null;\n\n    this.alphaMap = null;\n\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n\n    this.fog = false;\n\n    this.setValues(parameters);\n  }\n\n  copy(source) {\n    super.copy(source);\n\n    this.depthPacking = source.depthPacking;\n\n    this.map = source.map;\n\n    this.alphaMap = source.alphaMap;\n\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n\n    return this;\n  }\n}\n\nMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\n/**\n * parameters = {\n *\n *  referencePosition: <float>,\n *  nearDistance: <float>,\n *  farDistance: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>\n *\n * }\n */\n\nclass MeshDistanceMaterial extends Material {\n  constructor(parameters) {\n    super();\n\n    this.type = \"MeshDistanceMaterial\";\n\n    this.referencePosition = new Vector3();\n    this.nearDistance = 1;\n    this.farDistance = 1000;\n\n    this.map = null;\n\n    this.alphaMap = null;\n\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n\n    this.fog = false;\n\n    this.setValues(parameters);\n  }\n\n  copy(source) {\n    super.copy(source);\n\n    this.referencePosition.copy(source.referencePosition);\n    this.nearDistance = source.nearDistance;\n    this.farDistance = source.farDistance;\n\n    this.map = source.map;\n\n    this.alphaMap = source.alphaMap;\n\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n\n    return this;\n  }\n}\n\nMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\nconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\nconst fragment =\n  \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nfunction WebGLShadowMap(_renderer, _objects, _capabilities) {\n  let _frustum = new Frustum();\n\n  const _shadowMapSize = new Vector2(),\n    _viewportSize = new Vector2(),\n    _viewport = new Vector4(),\n    _depthMaterial = new MeshDepthMaterial({ depthPacking: RGBADepthPacking }),\n    _distanceMaterial = new MeshDistanceMaterial(),\n    _materialCache = {},\n    _maxTextureSize = _capabilities.maxTextureSize;\n\n  const shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n\n  const shadowMaterialVertical = new ShaderMaterial({\n    defines: {\n      VSM_SAMPLES: 8,\n    },\n    uniforms: {\n      shadow_pass: { value: null },\n      resolution: { value: new Vector2() },\n      radius: { value: 4.0 },\n    },\n\n    vertexShader: vertex,\n    fragmentShader: fragment,\n  });\n\n  const shadowMaterialHorizontal = shadowMaterialVertical.clone();\n  shadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n  const fullScreenTri = new BufferGeometry();\n  fullScreenTri.setAttribute(\n    \"position\",\n    new BufferAttribute(\n      new Float32Array([-1, -1, 0.5, 3, -1, 0.5, -1, 3, 0.5]),\n      3\n    )\n  );\n\n  const fullScreenMesh = new Mesh(fullScreenTri, shadowMaterialVertical);\n\n  const scope = this;\n\n  this.enabled = false;\n\n  this.autoUpdate = true;\n  this.needsUpdate = false;\n\n  this.type = PCFShadowMap;\n\n  this.render = function (lights, scene, camera) {\n    if (scope.enabled === false) return;\n    if (scope.autoUpdate === false && scope.needsUpdate === false) return;\n\n    if (lights.length === 0) return;\n\n    const currentRenderTarget = _renderer.getRenderTarget();\n    const activeCubeFace = _renderer.getActiveCubeFace();\n    const activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n    const _state = _renderer.state;\n\n    // Set GL state for depth map.\n    _state.setBlending(NoBlending);\n    _state.buffers.color.setClear(1, 1, 1, 1);\n    _state.buffers.depth.setTest(true);\n    _state.setScissorTest(false);\n\n    // render depth map\n\n    for (let i = 0, il = lights.length; i < il; i++) {\n      const light = lights[i];\n      const shadow = light.shadow;\n\n      if (shadow === undefined) {\n        console.warn(\"THREE.WebGLShadowMap:\", light, \"has no shadow.\");\n        continue;\n      }\n\n      if (shadow.autoUpdate === false && shadow.needsUpdate === false) continue;\n\n      _shadowMapSize.copy(shadow.mapSize);\n\n      const shadowFrameExtents = shadow.getFrameExtents();\n\n      _shadowMapSize.multiply(shadowFrameExtents);\n\n      _viewportSize.copy(shadow.mapSize);\n\n      if (\n        _shadowMapSize.x > _maxTextureSize ||\n        _shadowMapSize.y > _maxTextureSize\n      ) {\n        if (_shadowMapSize.x > _maxTextureSize) {\n          _viewportSize.x = Math.floor(_maxTextureSize / shadowFrameExtents.x);\n          _shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n          shadow.mapSize.x = _viewportSize.x;\n        }\n\n        if (_shadowMapSize.y > _maxTextureSize) {\n          _viewportSize.y = Math.floor(_maxTextureSize / shadowFrameExtents.y);\n          _shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n          shadow.mapSize.y = _viewportSize.y;\n        }\n      }\n\n      if (\n        shadow.map === null &&\n        !shadow.isPointLightShadow &&\n        this.type === VSMShadowMap\n      ) {\n        const pars = {\n          minFilter: LinearFilter,\n          magFilter: LinearFilter,\n          format: RGBAFormat,\n        };\n\n        shadow.map = new WebGLRenderTarget(\n          _shadowMapSize.x,\n          _shadowMapSize.y,\n          pars\n        );\n        shadow.map.texture.name = light.name + \".shadowMap\";\n\n        shadow.mapPass = new WebGLRenderTarget(\n          _shadowMapSize.x,\n          _shadowMapSize.y,\n          pars\n        );\n\n        shadow.camera.updateProjectionMatrix();\n      }\n\n      if (shadow.map === null) {\n        const pars = {\n          minFilter: NearestFilter,\n          magFilter: NearestFilter,\n          format: RGBAFormat,\n        };\n\n        shadow.map = new WebGLRenderTarget(\n          _shadowMapSize.x,\n          _shadowMapSize.y,\n          pars\n        );\n        shadow.map.texture.name = light.name + \".shadowMap\";\n\n        shadow.camera.updateProjectionMatrix();\n      }\n\n      _renderer.setRenderTarget(shadow.map);\n      _renderer.clear();\n\n      const viewportCount = shadow.getViewportCount();\n\n      for (let vp = 0; vp < viewportCount; vp++) {\n        const viewport = shadow.getViewport(vp);\n\n        _viewport.set(\n          _viewportSize.x * viewport.x,\n          _viewportSize.y * viewport.y,\n          _viewportSize.x * viewport.z,\n          _viewportSize.y * viewport.w\n        );\n\n        _state.viewport(_viewport);\n\n        shadow.updateMatrices(light, vp);\n\n        _frustum = shadow.getFrustum();\n\n        renderObject(scene, camera, shadow.camera, light, this.type);\n      }\n\n      // do blur pass for VSM\n\n      if (!shadow.isPointLightShadow && this.type === VSMShadowMap) {\n        VSMPass(shadow, camera);\n      }\n\n      shadow.needsUpdate = false;\n    }\n\n    scope.needsUpdate = false;\n\n    _renderer.setRenderTarget(\n      currentRenderTarget,\n      activeCubeFace,\n      activeMipmapLevel\n    );\n  };\n\n  function VSMPass(shadow, camera) {\n    const geometry = _objects.update(fullScreenMesh);\n\n    if (shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples) {\n      shadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n      shadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\n      shadowMaterialVertical.needsUpdate = true;\n      shadowMaterialHorizontal.needsUpdate = true;\n    }\n\n    // vertical pass\n\n    shadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n    shadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n    shadowMaterialVertical.uniforms.radius.value = shadow.radius;\n    _renderer.setRenderTarget(shadow.mapPass);\n    _renderer.clear();\n    _renderer.renderBufferDirect(\n      camera,\n      null,\n      geometry,\n      shadowMaterialVertical,\n      fullScreenMesh,\n      null\n    );\n\n    // horizontal pass\n\n    shadowMaterialHorizontal.uniforms.shadow_pass.value =\n      shadow.mapPass.texture;\n    shadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n    shadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n    _renderer.setRenderTarget(shadow.map);\n    _renderer.clear();\n    _renderer.renderBufferDirect(\n      camera,\n      null,\n      geometry,\n      shadowMaterialHorizontal,\n      fullScreenMesh,\n      null\n    );\n  }\n\n  function getDepthMaterial(\n    object,\n    geometry,\n    material,\n    light,\n    shadowCameraNear,\n    shadowCameraFar,\n    type\n  ) {\n    let result = null;\n\n    const customMaterial =\n      light.isPointLight === true\n        ? object.customDistanceMaterial\n        : object.customDepthMaterial;\n\n    if (customMaterial !== undefined) {\n      result = customMaterial;\n    } else {\n      result = light.isPointLight === true ? _distanceMaterial : _depthMaterial;\n    }\n\n    if (\n      (_renderer.localClippingEnabled &&\n        material.clipShadows === true &&\n        material.clippingPlanes.length !== 0) ||\n      (material.displacementMap && material.displacementScale !== 0) ||\n      (material.alphaMap && material.alphaTest > 0)\n    ) {\n      // in this case we need a unique material instance reflecting the\n      // appropriate state\n\n      const keyA = result.uuid,\n        keyB = material.uuid;\n\n      let materialsForVariant = _materialCache[keyA];\n\n      if (materialsForVariant === undefined) {\n        materialsForVariant = {};\n        _materialCache[keyA] = materialsForVariant;\n      }\n\n      let cachedMaterial = materialsForVariant[keyB];\n\n      if (cachedMaterial === undefined) {\n        cachedMaterial = result.clone();\n        materialsForVariant[keyB] = cachedMaterial;\n      }\n\n      result = cachedMaterial;\n    }\n\n    result.visible = material.visible;\n    result.wireframe = material.wireframe;\n\n    if (type === VSMShadowMap) {\n      result.side =\n        material.shadowSide !== null ? material.shadowSide : material.side;\n    } else {\n      result.side =\n        material.shadowSide !== null\n          ? material.shadowSide\n          : shadowSide[material.side];\n    }\n\n    result.alphaMap = material.alphaMap;\n    result.alphaTest = material.alphaTest;\n\n    result.clipShadows = material.clipShadows;\n    result.clippingPlanes = material.clippingPlanes;\n    result.clipIntersection = material.clipIntersection;\n\n    result.displacementMap = material.displacementMap;\n    result.displacementScale = material.displacementScale;\n    result.displacementBias = material.displacementBias;\n\n    result.wireframeLinewidth = material.wireframeLinewidth;\n    result.linewidth = material.linewidth;\n\n    if (light.isPointLight === true && result.isMeshDistanceMaterial === true) {\n      result.referencePosition.setFromMatrixPosition(light.matrixWorld);\n      result.nearDistance = shadowCameraNear;\n      result.farDistance = shadowCameraFar;\n    }\n\n    return result;\n  }\n\n  function renderObject(object, camera, shadowCamera, light, type) {\n    if (object.visible === false) return;\n\n    const visible = object.layers.test(camera.layers);\n\n    if (visible && (object.isMesh || object.isLine || object.isPoints)) {\n      if (\n        (object.castShadow ||\n          (object.receiveShadow && type === VSMShadowMap)) &&\n        (!object.frustumCulled || _frustum.intersectsObject(object))\n      ) {\n        object.modelViewMatrix.multiplyMatrices(\n          shadowCamera.matrixWorldInverse,\n          object.matrixWorld\n        );\n\n        const geometry = _objects.update(object);\n        const material = object.material;\n\n        if (Array.isArray(material)) {\n          const groups = geometry.groups;\n\n          for (let k = 0, kl = groups.length; k < kl; k++) {\n            const group = groups[k];\n            const groupMaterial = material[group.materialIndex];\n\n            if (groupMaterial && groupMaterial.visible) {\n              const depthMaterial = getDepthMaterial(\n                object,\n                geometry,\n                groupMaterial,\n                light,\n                shadowCamera.near,\n                shadowCamera.far,\n                type\n              );\n\n              _renderer.renderBufferDirect(\n                shadowCamera,\n                null,\n                geometry,\n                depthMaterial,\n                object,\n                group\n              );\n            }\n          }\n        } else if (material.visible) {\n          const depthMaterial = getDepthMaterial(\n            object,\n            geometry,\n            material,\n            light,\n            shadowCamera.near,\n            shadowCamera.far,\n            type\n          );\n\n          _renderer.renderBufferDirect(\n            shadowCamera,\n            null,\n            geometry,\n            depthMaterial,\n            object,\n            null\n          );\n        }\n      }\n    }\n\n    const children = object.children;\n\n    for (let i = 0, l = children.length; i < l; i++) {\n      renderObject(children[i], camera, shadowCamera, light, type);\n    }\n  }\n}\n\nfunction WebGLState(gl, extensions, capabilities) {\n  const isWebGL2 = capabilities.isWebGL2;\n\n  function ColorBuffer() {\n    let locked = false;\n\n    const color = new Vector4();\n    let currentColorMask = null;\n    const currentColorClear = new Vector4(0, 0, 0, 0);\n\n    return {\n      setMask: function (colorMask) {\n        if (currentColorMask !== colorMask && !locked) {\n          gl.colorMask(colorMask, colorMask, colorMask, colorMask);\n          currentColorMask = colorMask;\n        }\n      },\n\n      setLocked: function (lock) {\n        locked = lock;\n      },\n\n      setClear: function (r, g, b, a, premultipliedAlpha) {\n        if (premultipliedAlpha === true) {\n          r *= a;\n          g *= a;\n          b *= a;\n        }\n\n        color.set(r, g, b, a);\n\n        if (currentColorClear.equals(color) === false) {\n          gl.clearColor(r, g, b, a);\n          currentColorClear.copy(color);\n        }\n      },\n\n      reset: function () {\n        locked = false;\n\n        currentColorMask = null;\n        currentColorClear.set(-1, 0, 0, 0); // set to invalid state\n      },\n    };\n  }\n\n  function DepthBuffer() {\n    let locked = false;\n\n    let currentDepthMask = null;\n    let currentDepthFunc = null;\n    let currentDepthClear = null;\n\n    return {\n      setTest: function (depthTest) {\n        if (depthTest) {\n          enable(2929);\n        } else {\n          disable(2929);\n        }\n      },\n\n      setMask: function (depthMask) {\n        if (currentDepthMask !== depthMask && !locked) {\n          gl.depthMask(depthMask);\n          currentDepthMask = depthMask;\n        }\n      },\n\n      setFunc: function (depthFunc) {\n        if (currentDepthFunc !== depthFunc) {\n          if (depthFunc) {\n            switch (depthFunc) {\n              case NeverDepth:\n                gl.depthFunc(512);\n                break;\n\n              case AlwaysDepth:\n                gl.depthFunc(519);\n                break;\n\n              case LessDepth:\n                gl.depthFunc(513);\n                break;\n\n              case LessEqualDepth:\n                gl.depthFunc(515);\n                break;\n\n              case EqualDepth:\n                gl.depthFunc(514);\n                break;\n\n              case GreaterEqualDepth:\n                gl.depthFunc(518);\n                break;\n\n              case GreaterDepth:\n                gl.depthFunc(516);\n                break;\n\n              case NotEqualDepth:\n                gl.depthFunc(517);\n                break;\n\n              default:\n                gl.depthFunc(515);\n            }\n          } else {\n            gl.depthFunc(515);\n          }\n\n          currentDepthFunc = depthFunc;\n        }\n      },\n\n      setLocked: function (lock) {\n        locked = lock;\n      },\n\n      setClear: function (depth) {\n        if (currentDepthClear !== depth) {\n          gl.clearDepth(depth);\n          currentDepthClear = depth;\n        }\n      },\n\n      reset: function () {\n        locked = false;\n\n        currentDepthMask = null;\n        currentDepthFunc = null;\n        currentDepthClear = null;\n      },\n    };\n  }\n\n  function StencilBuffer() {\n    let locked = false;\n\n    let currentStencilMask = null;\n    let currentStencilFunc = null;\n    let currentStencilRef = null;\n    let currentStencilFuncMask = null;\n    let currentStencilFail = null;\n    let currentStencilZFail = null;\n    let currentStencilZPass = null;\n    let currentStencilClear = null;\n\n    return {\n      setTest: function (stencilTest) {\n        if (!locked) {\n          if (stencilTest) {\n            enable(2960);\n          } else {\n            disable(2960);\n          }\n        }\n      },\n\n      setMask: function (stencilMask) {\n        if (currentStencilMask !== stencilMask && !locked) {\n          gl.stencilMask(stencilMask);\n          currentStencilMask = stencilMask;\n        }\n      },\n\n      setFunc: function (stencilFunc, stencilRef, stencilMask) {\n        if (\n          currentStencilFunc !== stencilFunc ||\n          currentStencilRef !== stencilRef ||\n          currentStencilFuncMask !== stencilMask\n        ) {\n          gl.stencilFunc(stencilFunc, stencilRef, stencilMask);\n\n          currentStencilFunc = stencilFunc;\n          currentStencilRef = stencilRef;\n          currentStencilFuncMask = stencilMask;\n        }\n      },\n\n      setOp: function (stencilFail, stencilZFail, stencilZPass) {\n        if (\n          currentStencilFail !== stencilFail ||\n          currentStencilZFail !== stencilZFail ||\n          currentStencilZPass !== stencilZPass\n        ) {\n          gl.stencilOp(stencilFail, stencilZFail, stencilZPass);\n\n          currentStencilFail = stencilFail;\n          currentStencilZFail = stencilZFail;\n          currentStencilZPass = stencilZPass;\n        }\n      },\n\n      setLocked: function (lock) {\n        locked = lock;\n      },\n\n      setClear: function (stencil) {\n        if (currentStencilClear !== stencil) {\n          gl.clearStencil(stencil);\n          currentStencilClear = stencil;\n        }\n      },\n\n      reset: function () {\n        locked = false;\n\n        currentStencilMask = null;\n        currentStencilFunc = null;\n        currentStencilRef = null;\n        currentStencilFuncMask = null;\n        currentStencilFail = null;\n        currentStencilZFail = null;\n        currentStencilZPass = null;\n        currentStencilClear = null;\n      },\n    };\n  }\n\n  //\n\n  const colorBuffer = new ColorBuffer();\n  const depthBuffer = new DepthBuffer();\n  const stencilBuffer = new StencilBuffer();\n\n  let enabledCapabilities = {};\n\n  let xrFramebuffer = null;\n  let currentBoundFramebuffers = {};\n\n  let currentProgram = null;\n\n  let currentBlendingEnabled = false;\n  let currentBlending = null;\n  let currentBlendEquation = null;\n  let currentBlendSrc = null;\n  let currentBlendDst = null;\n  let currentBlendEquationAlpha = null;\n  let currentBlendSrcAlpha = null;\n  let currentBlendDstAlpha = null;\n  let currentPremultipledAlpha = false;\n\n  let currentFlipSided = null;\n  let currentCullFace = null;\n\n  let currentLineWidth = null;\n\n  let currentPolygonOffsetFactor = null;\n  let currentPolygonOffsetUnits = null;\n\n  const maxTextures = gl.getParameter(35661);\n\n  let lineWidthAvailable = false;\n  let version = 0;\n  const glVersion = gl.getParameter(7938);\n\n  if (glVersion.indexOf(\"WebGL\") !== -1) {\n    version = parseFloat(/^WebGL (\\d)/.exec(glVersion)[1]);\n    lineWidthAvailable = version >= 1.0;\n  } else if (glVersion.indexOf(\"OpenGL ES\") !== -1) {\n    version = parseFloat(/^OpenGL ES (\\d)/.exec(glVersion)[1]);\n    lineWidthAvailable = version >= 2.0;\n  }\n\n  let currentTextureSlot = null;\n  let currentBoundTextures = {};\n\n  const scissorParam = gl.getParameter(3088);\n  const viewportParam = gl.getParameter(2978);\n\n  const currentScissor = new Vector4().fromArray(scissorParam);\n  const currentViewport = new Vector4().fromArray(viewportParam);\n\n  function createTexture(type, target, count) {\n    const data = new Uint8Array(4); // 4 is required to match default unpack alignment of 4.\n    const texture = gl.createTexture();\n\n    gl.bindTexture(type, texture);\n    gl.texParameteri(type, 10241, 9728);\n    gl.texParameteri(type, 10240, 9728);\n\n    for (let i = 0; i < count; i++) {\n      gl.texImage2D(target + i, 0, 6408, 1, 1, 0, 6408, 5121, data);\n    }\n\n    return texture;\n  }\n\n  const emptyTextures = {};\n  emptyTextures[3553] = createTexture(3553, 3553, 1);\n  emptyTextures[34067] = createTexture(34067, 34069, 6);\n\n  // init\n\n  colorBuffer.setClear(0, 0, 0, 1);\n  depthBuffer.setClear(1);\n  stencilBuffer.setClear(0);\n\n  enable(2929);\n  depthBuffer.setFunc(LessEqualDepth);\n\n  setFlipSided(false);\n  setCullFace(CullFaceBack);\n  enable(2884);\n\n  setBlending(NoBlending);\n\n  //\n\n  function enable(id) {\n    if (enabledCapabilities[id] !== true) {\n      gl.enable(id);\n      enabledCapabilities[id] = true;\n    }\n  }\n\n  function disable(id) {\n    if (enabledCapabilities[id] !== false) {\n      gl.disable(id);\n      enabledCapabilities[id] = false;\n    }\n  }\n\n  function bindXRFramebuffer(framebuffer) {\n    if (framebuffer !== xrFramebuffer) {\n      gl.bindFramebuffer(36160, framebuffer);\n\n      xrFramebuffer = framebuffer;\n    }\n  }\n\n  function bindFramebuffer(target, framebuffer) {\n    if (framebuffer === null && xrFramebuffer !== null)\n      framebuffer = xrFramebuffer; // use active XR framebuffer if available\n\n    if (currentBoundFramebuffers[target] !== framebuffer) {\n      gl.bindFramebuffer(target, framebuffer);\n\n      currentBoundFramebuffers[target] = framebuffer;\n\n      if (isWebGL2) {\n        // 36009 is equivalent to 36160\n\n        if (target === 36009) {\n          currentBoundFramebuffers[36160] = framebuffer;\n        }\n\n        if (target === 36160) {\n          currentBoundFramebuffers[36009] = framebuffer;\n        }\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  function useProgram(program) {\n    if (currentProgram !== program) {\n      gl.useProgram(program);\n\n      currentProgram = program;\n\n      return true;\n    }\n\n    return false;\n  }\n\n  const equationToGL = {\n    [AddEquation]: 32774,\n    [SubtractEquation]: 32778,\n    [ReverseSubtractEquation]: 32779,\n  };\n\n  if (isWebGL2) {\n    equationToGL[MinEquation] = 32775;\n    equationToGL[MaxEquation] = 32776;\n  } else {\n    const extension = extensions.get(\"EXT_blend_minmax\");\n\n    if (extension !== null) {\n      equationToGL[MinEquation] = extension.MIN_EXT;\n      equationToGL[MaxEquation] = extension.MAX_EXT;\n    }\n  }\n\n  const factorToGL = {\n    [ZeroFactor]: 0,\n    [OneFactor]: 1,\n    [SrcColorFactor]: 768,\n    [SrcAlphaFactor]: 770,\n    [SrcAlphaSaturateFactor]: 776,\n    [DstColorFactor]: 774,\n    [DstAlphaFactor]: 772,\n    [OneMinusSrcColorFactor]: 769,\n    [OneMinusSrcAlphaFactor]: 771,\n    [OneMinusDstColorFactor]: 775,\n    [OneMinusDstAlphaFactor]: 773,\n  };\n\n  function setBlending(\n    blending,\n    blendEquation,\n    blendSrc,\n    blendDst,\n    blendEquationAlpha,\n    blendSrcAlpha,\n    blendDstAlpha,\n    premultipliedAlpha\n  ) {\n    if (blending === NoBlending) {\n      if (currentBlendingEnabled === true) {\n        disable(3042);\n        currentBlendingEnabled = false;\n      }\n\n      return;\n    }\n\n    if (currentBlendingEnabled === false) {\n      enable(3042);\n      currentBlendingEnabled = true;\n    }\n\n    if (blending !== CustomBlending) {\n      if (\n        blending !== currentBlending ||\n        premultipliedAlpha !== currentPremultipledAlpha\n      ) {\n        if (\n          currentBlendEquation !== AddEquation ||\n          currentBlendEquationAlpha !== AddEquation\n        ) {\n          gl.blendEquation(32774);\n\n          currentBlendEquation = AddEquation;\n          currentBlendEquationAlpha = AddEquation;\n        }\n\n        if (premultipliedAlpha) {\n          switch (blending) {\n            case NormalBlending:\n              gl.blendFuncSeparate(1, 771, 1, 771);\n              break;\n\n            case AdditiveBlending:\n              gl.blendFunc(1, 1);\n              break;\n\n            case SubtractiveBlending:\n              gl.blendFuncSeparate(0, 0, 769, 771);\n              break;\n\n            case MultiplyBlending:\n              gl.blendFuncSeparate(0, 768, 0, 770);\n              break;\n\n            default:\n              console.error(\"THREE.WebGLState: Invalid blending: \", blending);\n              break;\n          }\n        } else {\n          switch (blending) {\n            case NormalBlending:\n              gl.blendFuncSeparate(770, 771, 1, 771);\n              break;\n\n            case AdditiveBlending:\n              gl.blendFunc(770, 1);\n              break;\n\n            case SubtractiveBlending:\n              gl.blendFunc(0, 769);\n              break;\n\n            case MultiplyBlending:\n              gl.blendFunc(0, 768);\n              break;\n\n            default:\n              console.error(\"THREE.WebGLState: Invalid blending: \", blending);\n              break;\n          }\n        }\n\n        currentBlendSrc = null;\n        currentBlendDst = null;\n        currentBlendSrcAlpha = null;\n        currentBlendDstAlpha = null;\n\n        currentBlending = blending;\n        currentPremultipledAlpha = premultipliedAlpha;\n      }\n\n      return;\n    }\n\n    // custom blending\n\n    blendEquationAlpha = blendEquationAlpha || blendEquation;\n    blendSrcAlpha = blendSrcAlpha || blendSrc;\n    blendDstAlpha = blendDstAlpha || blendDst;\n\n    if (\n      blendEquation !== currentBlendEquation ||\n      blendEquationAlpha !== currentBlendEquationAlpha\n    ) {\n      gl.blendEquationSeparate(\n        equationToGL[blendEquation],\n        equationToGL[blendEquationAlpha]\n      );\n\n      currentBlendEquation = blendEquation;\n      currentBlendEquationAlpha = blendEquationAlpha;\n    }\n\n    if (\n      blendSrc !== currentBlendSrc ||\n      blendDst !== currentBlendDst ||\n      blendSrcAlpha !== currentBlendSrcAlpha ||\n      blendDstAlpha !== currentBlendDstAlpha\n    ) {\n      gl.blendFuncSeparate(\n        factorToGL[blendSrc],\n        factorToGL[blendDst],\n        factorToGL[blendSrcAlpha],\n        factorToGL[blendDstAlpha]\n      );\n\n      currentBlendSrc = blendSrc;\n      currentBlendDst = blendDst;\n      currentBlendSrcAlpha = blendSrcAlpha;\n      currentBlendDstAlpha = blendDstAlpha;\n    }\n\n    currentBlending = blending;\n    currentPremultipledAlpha = null;\n  }\n\n  function setMaterial(material, frontFaceCW) {\n    material.side === DoubleSide ? disable(2884) : enable(2884);\n\n    let flipSided = material.side === BackSide;\n    if (frontFaceCW) flipSided = !flipSided;\n\n    setFlipSided(flipSided);\n\n    material.blending === NormalBlending && material.transparent === false\n      ? setBlending(NoBlending)\n      : setBlending(\n          material.blending,\n          material.blendEquation,\n          material.blendSrc,\n          material.blendDst,\n          material.blendEquationAlpha,\n          material.blendSrcAlpha,\n          material.blendDstAlpha,\n          material.premultipliedAlpha\n        );\n\n    depthBuffer.setFunc(material.depthFunc);\n    depthBuffer.setTest(material.depthTest);\n    depthBuffer.setMask(material.depthWrite);\n    colorBuffer.setMask(material.colorWrite);\n\n    const stencilWrite = material.stencilWrite;\n    stencilBuffer.setTest(stencilWrite);\n    if (stencilWrite) {\n      stencilBuffer.setMask(material.stencilWriteMask);\n      stencilBuffer.setFunc(\n        material.stencilFunc,\n        material.stencilRef,\n        material.stencilFuncMask\n      );\n      stencilBuffer.setOp(\n        material.stencilFail,\n        material.stencilZFail,\n        material.stencilZPass\n      );\n    }\n\n    setPolygonOffset(\n      material.polygonOffset,\n      material.polygonOffsetFactor,\n      material.polygonOffsetUnits\n    );\n\n    material.alphaToCoverage === true ? enable(32926) : disable(32926);\n  }\n\n  //\n\n  function setFlipSided(flipSided) {\n    if (currentFlipSided !== flipSided) {\n      if (flipSided) {\n        gl.frontFace(2304);\n      } else {\n        gl.frontFace(2305);\n      }\n\n      currentFlipSided = flipSided;\n    }\n  }\n\n  function setCullFace(cullFace) {\n    if (cullFace !== CullFaceNone) {\n      enable(2884);\n\n      if (cullFace !== currentCullFace) {\n        if (cullFace === CullFaceBack) {\n          gl.cullFace(1029);\n        } else if (cullFace === CullFaceFront) {\n          gl.cullFace(1028);\n        } else {\n          gl.cullFace(1032);\n        }\n      }\n    } else {\n      disable(2884);\n    }\n\n    currentCullFace = cullFace;\n  }\n\n  function setLineWidth(width) {\n    if (width !== currentLineWidth) {\n      if (lineWidthAvailable) gl.lineWidth(width);\n\n      currentLineWidth = width;\n    }\n  }\n\n  function setPolygonOffset(polygonOffset, factor, units) {\n    if (polygonOffset) {\n      enable(32823);\n\n      if (\n        currentPolygonOffsetFactor !== factor ||\n        currentPolygonOffsetUnits !== units\n      ) {\n        gl.polygonOffset(factor, units);\n\n        currentPolygonOffsetFactor = factor;\n        currentPolygonOffsetUnits = units;\n      }\n    } else {\n      disable(32823);\n    }\n  }\n\n  function setScissorTest(scissorTest) {\n    if (scissorTest) {\n      enable(3089);\n    } else {\n      disable(3089);\n    }\n  }\n\n  // texture\n\n  function activeTexture(webglSlot) {\n    if (webglSlot === undefined) webglSlot = 33984 + maxTextures - 1;\n\n    if (currentTextureSlot !== webglSlot) {\n      gl.activeTexture(webglSlot);\n      currentTextureSlot = webglSlot;\n    }\n  }\n\n  function bindTexture(webglType, webglTexture) {\n    if (currentTextureSlot === null) {\n      activeTexture();\n    }\n\n    let boundTexture = currentBoundTextures[currentTextureSlot];\n\n    if (boundTexture === undefined) {\n      boundTexture = { type: undefined, texture: undefined };\n      currentBoundTextures[currentTextureSlot] = boundTexture;\n    }\n\n    if (\n      boundTexture.type !== webglType ||\n      boundTexture.texture !== webglTexture\n    ) {\n      gl.bindTexture(webglType, webglTexture || emptyTextures[webglType]);\n\n      boundTexture.type = webglType;\n      boundTexture.texture = webglTexture;\n    }\n  }\n\n  function unbindTexture() {\n    const boundTexture = currentBoundTextures[currentTextureSlot];\n\n    if (boundTexture !== undefined && boundTexture.type !== undefined) {\n      gl.bindTexture(boundTexture.type, null);\n\n      boundTexture.type = undefined;\n      boundTexture.texture = undefined;\n    }\n  }\n\n  function compressedTexImage2D() {\n    try {\n      gl.compressedTexImage2D.apply(gl, arguments);\n    } catch (error) {\n      console.error(\"THREE.WebGLState:\", error);\n    }\n  }\n\n  function texImage2D() {\n    try {\n      gl.texImage2D.apply(gl, arguments);\n    } catch (error) {\n      console.error(\"THREE.WebGLState:\", error);\n    }\n  }\n\n  function texImage3D() {\n    try {\n      gl.texImage3D.apply(gl, arguments);\n    } catch (error) {\n      console.error(\"THREE.WebGLState:\", error);\n    }\n  }\n\n  //\n\n  function scissor(scissor) {\n    if (currentScissor.equals(scissor) === false) {\n      gl.scissor(scissor.x, scissor.y, scissor.z, scissor.w);\n      currentScissor.copy(scissor);\n    }\n  }\n\n  function viewport(viewport) {\n    if (currentViewport.equals(viewport) === false) {\n      gl.viewport(viewport.x, viewport.y, viewport.z, viewport.w);\n      currentViewport.copy(viewport);\n    }\n  }\n\n  //\n\n  function reset() {\n    // reset state\n\n    gl.disable(3042);\n    gl.disable(2884);\n    gl.disable(2929);\n    gl.disable(32823);\n    gl.disable(3089);\n    gl.disable(2960);\n    gl.disable(32926);\n\n    gl.blendEquation(32774);\n    gl.blendFunc(1, 0);\n    gl.blendFuncSeparate(1, 0, 1, 0);\n\n    gl.colorMask(true, true, true, true);\n    gl.clearColor(0, 0, 0, 0);\n\n    gl.depthMask(true);\n    gl.depthFunc(513);\n    gl.clearDepth(1);\n\n    gl.stencilMask(0xffffffff);\n    gl.stencilFunc(519, 0, 0xffffffff);\n    gl.stencilOp(7680, 7680, 7680);\n    gl.clearStencil(0);\n\n    gl.cullFace(1029);\n    gl.frontFace(2305);\n\n    gl.polygonOffset(0, 0);\n\n    gl.activeTexture(33984);\n\n    gl.bindFramebuffer(36160, null);\n\n    if (isWebGL2 === true) {\n      gl.bindFramebuffer(36009, null);\n      gl.bindFramebuffer(36008, null);\n    }\n\n    gl.useProgram(null);\n\n    gl.lineWidth(1);\n\n    gl.scissor(0, 0, gl.canvas.width, gl.canvas.height);\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n\n    // reset internals\n\n    enabledCapabilities = {};\n\n    currentTextureSlot = null;\n    currentBoundTextures = {};\n\n    xrFramebuffer = null;\n    currentBoundFramebuffers = {};\n\n    currentProgram = null;\n\n    currentBlendingEnabled = false;\n    currentBlending = null;\n    currentBlendEquation = null;\n    currentBlendSrc = null;\n    currentBlendDst = null;\n    currentBlendEquationAlpha = null;\n    currentBlendSrcAlpha = null;\n    currentBlendDstAlpha = null;\n    currentPremultipledAlpha = false;\n\n    currentFlipSided = null;\n    currentCullFace = null;\n\n    currentLineWidth = null;\n\n    currentPolygonOffsetFactor = null;\n    currentPolygonOffsetUnits = null;\n\n    currentScissor.set(0, 0, gl.canvas.width, gl.canvas.height);\n    currentViewport.set(0, 0, gl.canvas.width, gl.canvas.height);\n\n    colorBuffer.reset();\n    depthBuffer.reset();\n    stencilBuffer.reset();\n  }\n\n  return {\n    buffers: {\n      color: colorBuffer,\n      depth: depthBuffer,\n      stencil: stencilBuffer,\n    },\n\n    enable: enable,\n    disable: disable,\n\n    bindFramebuffer: bindFramebuffer,\n    bindXRFramebuffer: bindXRFramebuffer,\n\n    useProgram: useProgram,\n\n    setBlending: setBlending,\n    setMaterial: setMaterial,\n\n    setFlipSided: setFlipSided,\n    setCullFace: setCullFace,\n\n    setLineWidth: setLineWidth,\n    setPolygonOffset: setPolygonOffset,\n\n    setScissorTest: setScissorTest,\n\n    activeTexture: activeTexture,\n    bindTexture: bindTexture,\n    unbindTexture: unbindTexture,\n    compressedTexImage2D: compressedTexImage2D,\n    texImage2D: texImage2D,\n    texImage3D: texImage3D,\n\n    scissor: scissor,\n    viewport: viewport,\n\n    reset: reset,\n  };\n}\n\nfunction WebGLTextures(\n  _gl,\n  extensions,\n  state,\n  properties,\n  capabilities,\n  utils,\n  info\n) {\n  const isWebGL2 = capabilities.isWebGL2;\n  const maxTextures = capabilities.maxTextures;\n  const maxCubemapSize = capabilities.maxCubemapSize;\n  const maxTextureSize = capabilities.maxTextureSize;\n  const maxSamples = capabilities.maxSamples;\n\n  const _videoTextures = new WeakMap();\n  let _canvas;\n\n  // cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n  // also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n  // Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n  let useOffscreenCanvas = false;\n\n  try {\n    useOffscreenCanvas =\n      typeof OffscreenCanvas !== \"undefined\" &&\n      new OffscreenCanvas(1, 1).getContext(\"2d\") !== null;\n  } catch (err) {\n    // Ignore any errors\n  }\n\n  function createCanvas(width, height) {\n    // Use OffscreenCanvas when available. Specially needed in web workers\n\n    return useOffscreenCanvas\n      ? new OffscreenCanvas(width, height)\n      : createElementNS(\"canvas\");\n  }\n\n  function resizeImage(image, needsPowerOfTwo, needsNewCanvas, maxSize) {\n    let scale = 1;\n\n    // handle case if texture exceeds max size\n\n    if (image.width > maxSize || image.height > maxSize) {\n      scale = maxSize / Math.max(image.width, image.height);\n    }\n\n    // only perform resize if necessary\n\n    if (scale < 1 || needsPowerOfTwo === true) {\n      // only perform resize for certain image types\n\n      if (\n        (typeof HTMLImageElement !== \"undefined\" &&\n          image instanceof HTMLImageElement) ||\n        (typeof HTMLCanvasElement !== \"undefined\" &&\n          image instanceof HTMLCanvasElement) ||\n        (typeof ImageBitmap !== \"undefined\" && image instanceof ImageBitmap)\n      ) {\n        const floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\n\n        const width = floor(scale * image.width);\n        const height = floor(scale * image.height);\n\n        if (_canvas === undefined) _canvas = createCanvas(width, height);\n\n        // cube textures can't reuse the same canvas\n\n        const canvas = needsNewCanvas ? createCanvas(width, height) : _canvas;\n\n        canvas.width = width;\n        canvas.height = height;\n\n        const context = canvas.getContext(\"2d\");\n        context.drawImage(image, 0, 0, width, height);\n\n        console.warn(\n          \"THREE.WebGLRenderer: Texture has been resized from (\" +\n            image.width +\n            \"x\" +\n            image.height +\n            \") to (\" +\n            width +\n            \"x\" +\n            height +\n            \").\"\n        );\n\n        return canvas;\n      } else {\n        if (\"data\" in image) {\n          console.warn(\n            \"THREE.WebGLRenderer: Image in DataTexture is too big (\" +\n              image.width +\n              \"x\" +\n              image.height +\n              \").\"\n          );\n        }\n\n        return image;\n      }\n    }\n\n    return image;\n  }\n\n  function isPowerOfTwo$1(image) {\n    return isPowerOfTwo(image.width) && isPowerOfTwo(image.height);\n  }\n\n  function textureNeedsPowerOfTwo(texture) {\n    if (isWebGL2) return false;\n\n    return (\n      texture.wrapS !== ClampToEdgeWrapping ||\n      texture.wrapT !== ClampToEdgeWrapping ||\n      (texture.minFilter !== NearestFilter &&\n        texture.minFilter !== LinearFilter)\n    );\n  }\n\n  function textureNeedsGenerateMipmaps(texture, supportsMips) {\n    return (\n      texture.generateMipmaps &&\n      supportsMips &&\n      texture.minFilter !== NearestFilter &&\n      texture.minFilter !== LinearFilter\n    );\n  }\n\n  function generateMipmap(target) {\n    _gl.generateMipmap(target);\n  }\n\n  function getInternalFormat(internalFormatName, glFormat, glType, encoding) {\n    if (isWebGL2 === false) return glFormat;\n\n    if (internalFormatName !== null) {\n      if (_gl[internalFormatName] !== undefined) return _gl[internalFormatName];\n\n      console.warn(\n        \"THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '\" +\n          internalFormatName +\n          \"'\"\n      );\n    }\n\n    let internalFormat = glFormat;\n\n    if (glFormat === 6403) {\n      if (glType === 5126) internalFormat = 33326;\n      if (glType === 5131) internalFormat = 33325;\n      if (glType === 5121) internalFormat = 33321;\n    }\n\n    if (glFormat === 6407) {\n      if (glType === 5126) internalFormat = 34837;\n      if (glType === 5131) internalFormat = 34843;\n      if (glType === 5121) internalFormat = 32849;\n    }\n\n    if (glFormat === 6408) {\n      if (glType === 5126) internalFormat = 34836;\n      if (glType === 5131) internalFormat = 34842;\n      if (glType === 5121)\n        internalFormat = encoding === sRGBEncoding ? 35907 : 32856;\n    }\n\n    if (\n      internalFormat === 33325 ||\n      internalFormat === 33326 ||\n      internalFormat === 34842 ||\n      internalFormat === 34836\n    ) {\n      extensions.get(\"EXT_color_buffer_float\");\n    }\n\n    return internalFormat;\n  }\n\n  // Fallback filters for non-power-of-2 textures\n\n  function filterFallback(f) {\n    if (\n      f === NearestFilter ||\n      f === NearestMipmapNearestFilter ||\n      f === NearestMipmapLinearFilter\n    ) {\n      return 9728;\n    }\n\n    return 9729;\n  }\n\n  //\n\n  function onTextureDispose(event) {\n    const texture = event.target;\n\n    texture.removeEventListener(\"dispose\", onTextureDispose);\n\n    deallocateTexture(texture);\n\n    if (texture.isVideoTexture) {\n      _videoTextures.delete(texture);\n    }\n\n    info.memory.textures--;\n  }\n\n  function onRenderTargetDispose(event) {\n    const renderTarget = event.target;\n\n    renderTarget.removeEventListener(\"dispose\", onRenderTargetDispose);\n\n    deallocateRenderTarget(renderTarget);\n  }\n\n  //\n\n  function deallocateTexture(texture) {\n    const textureProperties = properties.get(texture);\n\n    if (textureProperties.__webglInit === undefined) return;\n\n    _gl.deleteTexture(textureProperties.__webglTexture);\n\n    properties.remove(texture);\n  }\n\n  function deallocateRenderTarget(renderTarget) {\n    const texture = renderTarget.texture;\n\n    const renderTargetProperties = properties.get(renderTarget);\n    const textureProperties = properties.get(texture);\n\n    if (!renderTarget) return;\n\n    if (textureProperties.__webglTexture !== undefined) {\n      _gl.deleteTexture(textureProperties.__webglTexture);\n\n      info.memory.textures--;\n    }\n\n    if (renderTarget.depthTexture) {\n      renderTarget.depthTexture.dispose();\n    }\n\n    if (renderTarget.isWebGLCubeRenderTarget) {\n      for (let i = 0; i < 6; i++) {\n        _gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer[i]);\n        if (renderTargetProperties.__webglDepthbuffer)\n          _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer[i]);\n      }\n    } else {\n      _gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer);\n      if (renderTargetProperties.__webglDepthbuffer)\n        _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer);\n      if (renderTargetProperties.__webglMultisampledFramebuffer)\n        _gl.deleteFramebuffer(\n          renderTargetProperties.__webglMultisampledFramebuffer\n        );\n      if (renderTargetProperties.__webglColorRenderbuffer)\n        _gl.deleteRenderbuffer(renderTargetProperties.__webglColorRenderbuffer);\n      if (renderTargetProperties.__webglDepthRenderbuffer)\n        _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthRenderbuffer);\n    }\n\n    if (renderTarget.isWebGLMultipleRenderTargets) {\n      for (let i = 0, il = texture.length; i < il; i++) {\n        const attachmentProperties = properties.get(texture[i]);\n\n        if (attachmentProperties.__webglTexture) {\n          _gl.deleteTexture(attachmentProperties.__webglTexture);\n\n          info.memory.textures--;\n        }\n\n        properties.remove(texture[i]);\n      }\n    }\n\n    properties.remove(texture);\n    properties.remove(renderTarget);\n  }\n\n  //\n\n  let textureUnits = 0;\n\n  function resetTextureUnits() {\n    textureUnits = 0;\n  }\n\n  function allocateTextureUnit() {\n    const textureUnit = textureUnits;\n\n    if (textureUnit >= maxTextures) {\n      console.warn(\n        \"THREE.WebGLTextures: Trying to use \" +\n          textureUnit +\n          \" texture units while this GPU supports only \" +\n          maxTextures\n      );\n    }\n\n    textureUnits += 1;\n\n    return textureUnit;\n  }\n\n  //\n\n  function setTexture2D(texture, slot) {\n    const textureProperties = properties.get(texture);\n\n    if (texture.isVideoTexture) updateVideoTexture(texture);\n\n    if (\n      texture.version > 0 &&\n      textureProperties.__version !== texture.version\n    ) {\n      const image = texture.image;\n\n      if (image === undefined) {\n        console.warn(\n          \"THREE.WebGLRenderer: Texture marked for update but image is undefined\"\n        );\n      } else if (image.complete === false) {\n        console.warn(\n          \"THREE.WebGLRenderer: Texture marked for update but image is incomplete\"\n        );\n      } else {\n        uploadTexture(textureProperties, texture, slot);\n        return;\n      }\n    }\n\n    state.activeTexture(33984 + slot);\n    state.bindTexture(3553, textureProperties.__webglTexture);\n  }\n\n  function setTexture2DArray(texture, slot) {\n    const textureProperties = properties.get(texture);\n\n    if (\n      texture.version > 0 &&\n      textureProperties.__version !== texture.version\n    ) {\n      uploadTexture(textureProperties, texture, slot);\n      return;\n    }\n\n    state.activeTexture(33984 + slot);\n    state.bindTexture(35866, textureProperties.__webglTexture);\n  }\n\n  function setTexture3D(texture, slot) {\n    const textureProperties = properties.get(texture);\n\n    if (\n      texture.version > 0 &&\n      textureProperties.__version !== texture.version\n    ) {\n      uploadTexture(textureProperties, texture, slot);\n      return;\n    }\n\n    state.activeTexture(33984 + slot);\n    state.bindTexture(32879, textureProperties.__webglTexture);\n  }\n\n  function setTextureCube(texture, slot) {\n    const textureProperties = properties.get(texture);\n\n    if (\n      texture.version > 0 &&\n      textureProperties.__version !== texture.version\n    ) {\n      uploadCubeTexture(textureProperties, texture, slot);\n      return;\n    }\n\n    state.activeTexture(33984 + slot);\n    state.bindTexture(34067, textureProperties.__webglTexture);\n  }\n\n  const wrappingToGL = {\n    [RepeatWrapping]: 10497,\n    [ClampToEdgeWrapping]: 33071,\n    [MirroredRepeatWrapping]: 33648,\n  };\n\n  const filterToGL = {\n    [NearestFilter]: 9728,\n    [NearestMipmapNearestFilter]: 9984,\n    [NearestMipmapLinearFilter]: 9986,\n\n    [LinearFilter]: 9729,\n    [LinearMipmapNearestFilter]: 9985,\n    [LinearMipmapLinearFilter]: 9987,\n  };\n\n  function setTextureParameters(textureType, texture, supportsMips) {\n    if (supportsMips) {\n      _gl.texParameteri(textureType, 10242, wrappingToGL[texture.wrapS]);\n      _gl.texParameteri(textureType, 10243, wrappingToGL[texture.wrapT]);\n\n      if (textureType === 32879 || textureType === 35866) {\n        _gl.texParameteri(textureType, 32882, wrappingToGL[texture.wrapR]);\n      }\n\n      _gl.texParameteri(textureType, 10240, filterToGL[texture.magFilter]);\n      _gl.texParameteri(textureType, 10241, filterToGL[texture.minFilter]);\n    } else {\n      _gl.texParameteri(textureType, 10242, 33071);\n      _gl.texParameteri(textureType, 10243, 33071);\n\n      if (textureType === 32879 || textureType === 35866) {\n        _gl.texParameteri(textureType, 32882, 33071);\n      }\n\n      if (\n        texture.wrapS !== ClampToEdgeWrapping ||\n        texture.wrapT !== ClampToEdgeWrapping\n      ) {\n        console.warn(\n          \"THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.\"\n        );\n      }\n\n      _gl.texParameteri(textureType, 10240, filterFallback(texture.magFilter));\n      _gl.texParameteri(textureType, 10241, filterFallback(texture.minFilter));\n\n      if (\n        texture.minFilter !== NearestFilter &&\n        texture.minFilter !== LinearFilter\n      ) {\n        console.warn(\n          \"THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.\"\n        );\n      }\n    }\n\n    if (extensions.has(\"EXT_texture_filter_anisotropic\") === true) {\n      const extension = extensions.get(\"EXT_texture_filter_anisotropic\");\n\n      if (\n        texture.type === FloatType &&\n        extensions.has(\"OES_texture_float_linear\") === false\n      )\n        return; // verify extension for WebGL 1 and WebGL 2\n      if (\n        isWebGL2 === false &&\n        texture.type === HalfFloatType &&\n        extensions.has(\"OES_texture_half_float_linear\") === false\n      )\n        return; // verify extension for WebGL 1 only\n\n      if (\n        texture.anisotropy > 1 ||\n        properties.get(texture).__currentAnisotropy\n      ) {\n        _gl.texParameterf(\n          textureType,\n          extension.TEXTURE_MAX_ANISOTROPY_EXT,\n          Math.min(texture.anisotropy, capabilities.getMaxAnisotropy())\n        );\n        properties.get(texture).__currentAnisotropy = texture.anisotropy;\n      }\n    }\n  }\n\n  function initTexture(textureProperties, texture) {\n    if (textureProperties.__webglInit === undefined) {\n      textureProperties.__webglInit = true;\n\n      texture.addEventListener(\"dispose\", onTextureDispose);\n\n      textureProperties.__webglTexture = _gl.createTexture();\n\n      info.memory.textures++;\n    }\n  }\n\n  function uploadTexture(textureProperties, texture, slot) {\n    let textureType = 3553;\n\n    if (texture.isDataTexture2DArray) textureType = 35866;\n    if (texture.isDataTexture3D) textureType = 32879;\n\n    initTexture(textureProperties, texture);\n\n    state.activeTexture(33984 + slot);\n    state.bindTexture(textureType, textureProperties.__webglTexture);\n\n    _gl.pixelStorei(37440, texture.flipY);\n    _gl.pixelStorei(37441, texture.premultiplyAlpha);\n    _gl.pixelStorei(3317, texture.unpackAlignment);\n    _gl.pixelStorei(37443, 0);\n\n    const needsPowerOfTwo =\n      textureNeedsPowerOfTwo(texture) &&\n      isPowerOfTwo$1(texture.image) === false;\n    const image = resizeImage(\n      texture.image,\n      needsPowerOfTwo,\n      false,\n      maxTextureSize\n    );\n\n    const supportsMips = isPowerOfTwo$1(image) || isWebGL2,\n      glFormat = utils.convert(texture.format);\n\n    let glType = utils.convert(texture.type),\n      glInternalFormat = getInternalFormat(\n        texture.internalFormat,\n        glFormat,\n        glType,\n        texture.encoding\n      );\n\n    setTextureParameters(textureType, texture, supportsMips);\n\n    let mipmap;\n    const mipmaps = texture.mipmaps;\n\n    if (texture.isDepthTexture) {\n      // populate depth texture with dummy data\n\n      glInternalFormat = 6402;\n\n      if (isWebGL2) {\n        if (texture.type === FloatType) {\n          glInternalFormat = 36012;\n        } else if (texture.type === UnsignedIntType) {\n          glInternalFormat = 33190;\n        } else if (texture.type === UnsignedInt248Type) {\n          glInternalFormat = 35056;\n        } else {\n          glInternalFormat = 33189; // WebGL2 requires sized internalformat for glTexImage2D\n        }\n      } else {\n        if (texture.type === FloatType) {\n          console.error(\n            \"WebGLRenderer: Floating point depth texture requires WebGL2.\"\n          );\n        }\n      }\n\n      // validation checks for WebGL 1\n\n      if (texture.format === DepthFormat && glInternalFormat === 6402) {\n        // The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n        // DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n        // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n        if (\n          texture.type !== UnsignedShortType &&\n          texture.type !== UnsignedIntType\n        ) {\n          console.warn(\n            \"THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.\"\n          );\n\n          texture.type = UnsignedShortType;\n          glType = utils.convert(texture.type);\n        }\n      }\n\n      if (texture.format === DepthStencilFormat && glInternalFormat === 6402) {\n        // Depth stencil textures need the DEPTH_STENCIL internal format\n        // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n        glInternalFormat = 34041;\n\n        // The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n        // DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n        // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n        if (texture.type !== UnsignedInt248Type) {\n          console.warn(\n            \"THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.\"\n          );\n\n          texture.type = UnsignedInt248Type;\n          glType = utils.convert(texture.type);\n        }\n      }\n\n      //\n\n      state.texImage2D(\n        3553,\n        0,\n        glInternalFormat,\n        image.width,\n        image.height,\n        0,\n        glFormat,\n        glType,\n        null\n      );\n    } else if (texture.isDataTexture) {\n      // use manually created mipmaps if available\n      // if there are no manual mipmaps\n      // set 0 level mipmap and then use GL to generate other mipmap levels\n\n      if (mipmaps.length > 0 && supportsMips) {\n        for (let i = 0, il = mipmaps.length; i < il; i++) {\n          mipmap = mipmaps[i];\n          state.texImage2D(\n            3553,\n            i,\n            glInternalFormat,\n            mipmap.width,\n            mipmap.height,\n            0,\n            glFormat,\n            glType,\n            mipmap.data\n          );\n        }\n\n        texture.generateMipmaps = false;\n      } else {\n        state.texImage2D(\n          3553,\n          0,\n          glInternalFormat,\n          image.width,\n          image.height,\n          0,\n          glFormat,\n          glType,\n          image.data\n        );\n      }\n    } else if (texture.isCompressedTexture) {\n      for (let i = 0, il = mipmaps.length; i < il; i++) {\n        mipmap = mipmaps[i];\n\n        if (texture.format !== RGBAFormat && texture.format !== RGBFormat) {\n          if (glFormat !== null) {\n            state.compressedTexImage2D(\n              3553,\n              i,\n              glInternalFormat,\n              mipmap.width,\n              mipmap.height,\n              0,\n              mipmap.data\n            );\n          } else {\n            console.warn(\n              \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\"\n            );\n          }\n        } else {\n          state.texImage2D(\n            3553,\n            i,\n            glInternalFormat,\n            mipmap.width,\n            mipmap.height,\n            0,\n            glFormat,\n            glType,\n            mipmap.data\n          );\n        }\n      }\n    } else if (texture.isDataTexture2DArray) {\n      state.texImage3D(\n        35866,\n        0,\n        glInternalFormat,\n        image.width,\n        image.height,\n        image.depth,\n        0,\n        glFormat,\n        glType,\n        image.data\n      );\n    } else if (texture.isDataTexture3D) {\n      state.texImage3D(\n        32879,\n        0,\n        glInternalFormat,\n        image.width,\n        image.height,\n        image.depth,\n        0,\n        glFormat,\n        glType,\n        image.data\n      );\n    } else {\n      // regular Texture (image, video, canvas)\n\n      // use manually created mipmaps if available\n      // if there are no manual mipmaps\n      // set 0 level mipmap and then use GL to generate other mipmap levels\n\n      if (mipmaps.length > 0 && supportsMips) {\n        for (let i = 0, il = mipmaps.length; i < il; i++) {\n          mipmap = mipmaps[i];\n          state.texImage2D(3553, i, glInternalFormat, glFormat, glType, mipmap);\n        }\n\n        texture.generateMipmaps = false;\n      } else {\n        state.texImage2D(3553, 0, glInternalFormat, glFormat, glType, image);\n      }\n    }\n\n    if (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n      generateMipmap(textureType);\n    }\n\n    textureProperties.__version = texture.version;\n\n    if (texture.onUpdate) texture.onUpdate(texture);\n  }\n\n  function uploadCubeTexture(textureProperties, texture, slot) {\n    if (texture.image.length !== 6) return;\n\n    initTexture(textureProperties, texture);\n\n    state.activeTexture(33984 + slot);\n    state.bindTexture(34067, textureProperties.__webglTexture);\n\n    _gl.pixelStorei(37440, texture.flipY);\n    _gl.pixelStorei(37441, texture.premultiplyAlpha);\n    _gl.pixelStorei(3317, texture.unpackAlignment);\n    _gl.pixelStorei(37443, 0);\n\n    const isCompressed =\n      texture &&\n      (texture.isCompressedTexture || texture.image[0].isCompressedTexture);\n    const isDataTexture = texture.image[0] && texture.image[0].isDataTexture;\n\n    const cubeImage = [];\n\n    for (let i = 0; i < 6; i++) {\n      if (!isCompressed && !isDataTexture) {\n        cubeImage[i] = resizeImage(\n          texture.image[i],\n          false,\n          true,\n          maxCubemapSize\n        );\n      } else {\n        cubeImage[i] = isDataTexture\n          ? texture.image[i].image\n          : texture.image[i];\n      }\n    }\n\n    const image = cubeImage[0],\n      supportsMips = isPowerOfTwo$1(image) || isWebGL2,\n      glFormat = utils.convert(texture.format),\n      glType = utils.convert(texture.type),\n      glInternalFormat = getInternalFormat(\n        texture.internalFormat,\n        glFormat,\n        glType,\n        texture.encoding\n      );\n\n    setTextureParameters(34067, texture, supportsMips);\n\n    let mipmaps;\n\n    if (isCompressed) {\n      for (let i = 0; i < 6; i++) {\n        mipmaps = cubeImage[i].mipmaps;\n\n        for (let j = 0; j < mipmaps.length; j++) {\n          const mipmap = mipmaps[j];\n\n          if (texture.format !== RGBAFormat && texture.format !== RGBFormat) {\n            if (glFormat !== null) {\n              state.compressedTexImage2D(\n                34069 + i,\n                j,\n                glInternalFormat,\n                mipmap.width,\n                mipmap.height,\n                0,\n                mipmap.data\n              );\n            } else {\n              console.warn(\n                \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()\"\n              );\n            }\n          } else {\n            state.texImage2D(\n              34069 + i,\n              j,\n              glInternalFormat,\n              mipmap.width,\n              mipmap.height,\n              0,\n              glFormat,\n              glType,\n              mipmap.data\n            );\n          }\n        }\n      }\n    } else {\n      mipmaps = texture.mipmaps;\n\n      for (let i = 0; i < 6; i++) {\n        if (isDataTexture) {\n          state.texImage2D(\n            34069 + i,\n            0,\n            glInternalFormat,\n            cubeImage[i].width,\n            cubeImage[i].height,\n            0,\n            glFormat,\n            glType,\n            cubeImage[i].data\n          );\n\n          for (let j = 0; j < mipmaps.length; j++) {\n            const mipmap = mipmaps[j];\n            const mipmapImage = mipmap.image[i].image;\n\n            state.texImage2D(\n              34069 + i,\n              j + 1,\n              glInternalFormat,\n              mipmapImage.width,\n              mipmapImage.height,\n              0,\n              glFormat,\n              glType,\n              mipmapImage.data\n            );\n          }\n        } else {\n          state.texImage2D(\n            34069 + i,\n            0,\n            glInternalFormat,\n            glFormat,\n            glType,\n            cubeImage[i]\n          );\n\n          for (let j = 0; j < mipmaps.length; j++) {\n            const mipmap = mipmaps[j];\n\n            state.texImage2D(\n              34069 + i,\n              j + 1,\n              glInternalFormat,\n              glFormat,\n              glType,\n              mipmap.image[i]\n            );\n          }\n        }\n      }\n    }\n\n    if (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n      // We assume images for cube map have the same size.\n      generateMipmap(34067);\n    }\n\n    textureProperties.__version = texture.version;\n\n    if (texture.onUpdate) texture.onUpdate(texture);\n  }\n\n  // Render targets\n\n  // Setup storage for target texture and bind it to correct framebuffer\n  function setupFrameBufferTexture(\n    framebuffer,\n    renderTarget,\n    texture,\n    attachment,\n    textureTarget\n  ) {\n    const glFormat = utils.convert(texture.format);\n    const glType = utils.convert(texture.type);\n    const glInternalFormat = getInternalFormat(\n      texture.internalFormat,\n      glFormat,\n      glType,\n      texture.encoding\n    );\n\n    if (textureTarget === 32879 || textureTarget === 35866) {\n      state.texImage3D(\n        textureTarget,\n        0,\n        glInternalFormat,\n        renderTarget.width,\n        renderTarget.height,\n        renderTarget.depth,\n        0,\n        glFormat,\n        glType,\n        null\n      );\n    } else {\n      state.texImage2D(\n        textureTarget,\n        0,\n        glInternalFormat,\n        renderTarget.width,\n        renderTarget.height,\n        0,\n        glFormat,\n        glType,\n        null\n      );\n    }\n\n    state.bindFramebuffer(36160, framebuffer);\n    _gl.framebufferTexture2D(\n      36160,\n      attachment,\n      textureTarget,\n      properties.get(texture).__webglTexture,\n      0\n    );\n    state.bindFramebuffer(36160, null);\n  }\n\n  // Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n  function setupRenderBufferStorage(renderbuffer, renderTarget, isMultisample) {\n    _gl.bindRenderbuffer(36161, renderbuffer);\n\n    if (renderTarget.depthBuffer && !renderTarget.stencilBuffer) {\n      let glInternalFormat = 33189;\n\n      if (isMultisample) {\n        const depthTexture = renderTarget.depthTexture;\n\n        if (depthTexture && depthTexture.isDepthTexture) {\n          if (depthTexture.type === FloatType) {\n            glInternalFormat = 36012;\n          } else if (depthTexture.type === UnsignedIntType) {\n            glInternalFormat = 33190;\n          }\n        }\n\n        const samples = getRenderTargetSamples(renderTarget);\n\n        _gl.renderbufferStorageMultisample(\n          36161,\n          samples,\n          glInternalFormat,\n          renderTarget.width,\n          renderTarget.height\n        );\n      } else {\n        _gl.renderbufferStorage(\n          36161,\n          glInternalFormat,\n          renderTarget.width,\n          renderTarget.height\n        );\n      }\n\n      _gl.framebufferRenderbuffer(36160, 36096, 36161, renderbuffer);\n    } else if (renderTarget.depthBuffer && renderTarget.stencilBuffer) {\n      if (isMultisample) {\n        const samples = getRenderTargetSamples(renderTarget);\n\n        _gl.renderbufferStorageMultisample(\n          36161,\n          samples,\n          35056,\n          renderTarget.width,\n          renderTarget.height\n        );\n      } else {\n        _gl.renderbufferStorage(\n          36161,\n          34041,\n          renderTarget.width,\n          renderTarget.height\n        );\n      }\n\n      _gl.framebufferRenderbuffer(36160, 33306, 36161, renderbuffer);\n    } else {\n      // Use the first texture for MRT so far\n      const texture =\n        renderTarget.isWebGLMultipleRenderTargets === true\n          ? renderTarget.texture[0]\n          : renderTarget.texture;\n\n      const glFormat = utils.convert(texture.format);\n      const glType = utils.convert(texture.type);\n      const glInternalFormat = getInternalFormat(\n        texture.internalFormat,\n        glFormat,\n        glType,\n        texture.encoding\n      );\n\n      if (isMultisample) {\n        const samples = getRenderTargetSamples(renderTarget);\n\n        _gl.renderbufferStorageMultisample(\n          36161,\n          samples,\n          glInternalFormat,\n          renderTarget.width,\n          renderTarget.height\n        );\n      } else {\n        _gl.renderbufferStorage(\n          36161,\n          glInternalFormat,\n          renderTarget.width,\n          renderTarget.height\n        );\n      }\n    }\n\n    _gl.bindRenderbuffer(36161, null);\n  }\n\n  // Setup resources for a Depth Texture for a FBO (needs an extension)\n  function setupDepthTexture(framebuffer, renderTarget) {\n    const isCube = renderTarget && renderTarget.isWebGLCubeRenderTarget;\n    if (isCube)\n      throw new Error(\n        \"Depth Texture with cube render targets is not supported\"\n      );\n\n    state.bindFramebuffer(36160, framebuffer);\n\n    if (\n      !(renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture)\n    ) {\n      throw new Error(\n        \"renderTarget.depthTexture must be an instance of THREE.DepthTexture\"\n      );\n    }\n\n    // upload an empty depth texture with framebuffer size\n    if (\n      !properties.get(renderTarget.depthTexture).__webglTexture ||\n      renderTarget.depthTexture.image.width !== renderTarget.width ||\n      renderTarget.depthTexture.image.height !== renderTarget.height\n    ) {\n      renderTarget.depthTexture.image.width = renderTarget.width;\n      renderTarget.depthTexture.image.height = renderTarget.height;\n      renderTarget.depthTexture.needsUpdate = true;\n    }\n\n    setTexture2D(renderTarget.depthTexture, 0);\n\n    const webglDepthTexture = properties.get(\n      renderTarget.depthTexture\n    ).__webglTexture;\n\n    if (renderTarget.depthTexture.format === DepthFormat) {\n      _gl.framebufferTexture2D(36160, 36096, 3553, webglDepthTexture, 0);\n    } else if (renderTarget.depthTexture.format === DepthStencilFormat) {\n      _gl.framebufferTexture2D(36160, 33306, 3553, webglDepthTexture, 0);\n    } else {\n      throw new Error(\"Unknown depthTexture format\");\n    }\n  }\n\n  // Setup GL resources for a non-texture depth buffer\n  function setupDepthRenderbuffer(renderTarget) {\n    const renderTargetProperties = properties.get(renderTarget);\n\n    const isCube = renderTarget.isWebGLCubeRenderTarget === true;\n\n    if (renderTarget.depthTexture) {\n      if (isCube)\n        throw new Error(\n          \"target.depthTexture not supported in Cube render targets\"\n        );\n\n      setupDepthTexture(\n        renderTargetProperties.__webglFramebuffer,\n        renderTarget\n      );\n    } else {\n      if (isCube) {\n        renderTargetProperties.__webglDepthbuffer = [];\n\n        for (let i = 0; i < 6; i++) {\n          state.bindFramebuffer(\n            36160,\n            renderTargetProperties.__webglFramebuffer[i]\n          );\n          renderTargetProperties.__webglDepthbuffer[i] =\n            _gl.createRenderbuffer();\n          setupRenderBufferStorage(\n            renderTargetProperties.__webglDepthbuffer[i],\n            renderTarget,\n            false\n          );\n        }\n      } else {\n        state.bindFramebuffer(36160, renderTargetProperties.__webglFramebuffer);\n        renderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n        setupRenderBufferStorage(\n          renderTargetProperties.__webglDepthbuffer,\n          renderTarget,\n          false\n        );\n      }\n    }\n\n    state.bindFramebuffer(36160, null);\n  }\n\n  // Set up GL resources for the render target\n  function setupRenderTarget(renderTarget) {\n    const texture = renderTarget.texture;\n\n    const renderTargetProperties = properties.get(renderTarget);\n    const textureProperties = properties.get(texture);\n\n    renderTarget.addEventListener(\"dispose\", onRenderTargetDispose);\n\n    if (renderTarget.isWebGLMultipleRenderTargets !== true) {\n      textureProperties.__webglTexture = _gl.createTexture();\n      textureProperties.__version = texture.version;\n      info.memory.textures++;\n    }\n\n    const isCube = renderTarget.isWebGLCubeRenderTarget === true;\n    const isMultipleRenderTargets =\n      renderTarget.isWebGLMultipleRenderTargets === true;\n    const isMultisample = renderTarget.isWebGLMultisampleRenderTarget === true;\n    const isRenderTarget3D =\n      texture.isDataTexture3D || texture.isDataTexture2DArray;\n    const supportsMips = isPowerOfTwo$1(renderTarget) || isWebGL2;\n\n    // Handles WebGL2 RGBFormat fallback - #18858\n\n    if (\n      isWebGL2 &&\n      texture.format === RGBFormat &&\n      (texture.type === FloatType || texture.type === HalfFloatType)\n    ) {\n      texture.format = RGBAFormat;\n\n      console.warn(\n        \"THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.\"\n      );\n    }\n\n    // Setup framebuffer\n\n    if (isCube) {\n      renderTargetProperties.__webglFramebuffer = [];\n\n      for (let i = 0; i < 6; i++) {\n        renderTargetProperties.__webglFramebuffer[i] = _gl.createFramebuffer();\n      }\n    } else {\n      renderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n      if (isMultipleRenderTargets) {\n        if (capabilities.drawBuffers) {\n          const textures = renderTarget.texture;\n\n          for (let i = 0, il = textures.length; i < il; i++) {\n            const attachmentProperties = properties.get(textures[i]);\n\n            if (attachmentProperties.__webglTexture === undefined) {\n              attachmentProperties.__webglTexture = _gl.createTexture();\n\n              info.memory.textures++;\n            }\n          }\n        } else {\n          console.warn(\n            \"THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.\"\n          );\n        }\n      } else if (isMultisample) {\n        if (isWebGL2) {\n          renderTargetProperties.__webglMultisampledFramebuffer =\n            _gl.createFramebuffer();\n          renderTargetProperties.__webglColorRenderbuffer =\n            _gl.createRenderbuffer();\n\n          _gl.bindRenderbuffer(\n            36161,\n            renderTargetProperties.__webglColorRenderbuffer\n          );\n\n          const glFormat = utils.convert(texture.format);\n          const glType = utils.convert(texture.type);\n          const glInternalFormat = getInternalFormat(\n            texture.internalFormat,\n            glFormat,\n            glType,\n            texture.encoding\n          );\n          const samples = getRenderTargetSamples(renderTarget);\n          _gl.renderbufferStorageMultisample(\n            36161,\n            samples,\n            glInternalFormat,\n            renderTarget.width,\n            renderTarget.height\n          );\n\n          state.bindFramebuffer(\n            36160,\n            renderTargetProperties.__webglMultisampledFramebuffer\n          );\n          _gl.framebufferRenderbuffer(\n            36160,\n            36064,\n            36161,\n            renderTargetProperties.__webglColorRenderbuffer\n          );\n          _gl.bindRenderbuffer(36161, null);\n\n          if (renderTarget.depthBuffer) {\n            renderTargetProperties.__webglDepthRenderbuffer =\n              _gl.createRenderbuffer();\n            setupRenderBufferStorage(\n              renderTargetProperties.__webglDepthRenderbuffer,\n              renderTarget,\n              true\n            );\n          }\n\n          state.bindFramebuffer(36160, null);\n        } else {\n          console.warn(\n            \"THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.\"\n          );\n        }\n      }\n    }\n\n    // Setup color buffer\n\n    if (isCube) {\n      state.bindTexture(34067, textureProperties.__webglTexture);\n      setTextureParameters(34067, texture, supportsMips);\n\n      for (let i = 0; i < 6; i++) {\n        setupFrameBufferTexture(\n          renderTargetProperties.__webglFramebuffer[i],\n          renderTarget,\n          texture,\n          36064,\n          34069 + i\n        );\n      }\n\n      if (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n        generateMipmap(34067);\n      }\n\n      state.unbindTexture();\n    } else if (isMultipleRenderTargets) {\n      const textures = renderTarget.texture;\n\n      for (let i = 0, il = textures.length; i < il; i++) {\n        const attachment = textures[i];\n        const attachmentProperties = properties.get(attachment);\n\n        state.bindTexture(3553, attachmentProperties.__webglTexture);\n        setTextureParameters(3553, attachment, supportsMips);\n        setupFrameBufferTexture(\n          renderTargetProperties.__webglFramebuffer,\n          renderTarget,\n          attachment,\n          36064 + i,\n          3553\n        );\n\n        if (textureNeedsGenerateMipmaps(attachment, supportsMips)) {\n          generateMipmap(3553);\n        }\n      }\n\n      state.unbindTexture();\n    } else {\n      let glTextureType = 3553;\n\n      if (isRenderTarget3D) {\n        // Render targets containing layers, i.e: Texture 3D and 2d arrays\n\n        if (isWebGL2) {\n          const isTexture3D = texture.isDataTexture3D;\n          glTextureType = isTexture3D ? 32879 : 35866;\n        } else {\n          console.warn(\n            \"THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.\"\n          );\n        }\n      }\n\n      state.bindTexture(glTextureType, textureProperties.__webglTexture);\n      setTextureParameters(glTextureType, texture, supportsMips);\n      setupFrameBufferTexture(\n        renderTargetProperties.__webglFramebuffer,\n        renderTarget,\n        texture,\n        36064,\n        glTextureType\n      );\n\n      if (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n        generateMipmap(glTextureType);\n      }\n\n      state.unbindTexture();\n    }\n\n    // Setup depth and stencil buffers\n\n    if (renderTarget.depthBuffer) {\n      setupDepthRenderbuffer(renderTarget);\n    }\n  }\n\n  function updateRenderTargetMipmap(renderTarget) {\n    const supportsMips = isPowerOfTwo$1(renderTarget) || isWebGL2;\n\n    const textures =\n      renderTarget.isWebGLMultipleRenderTargets === true\n        ? renderTarget.texture\n        : [renderTarget.texture];\n\n    for (let i = 0, il = textures.length; i < il; i++) {\n      const texture = textures[i];\n\n      if (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n        const target = renderTarget.isWebGLCubeRenderTarget ? 34067 : 3553;\n        const webglTexture = properties.get(texture).__webglTexture;\n\n        state.bindTexture(target, webglTexture);\n        generateMipmap(target);\n        state.unbindTexture();\n      }\n    }\n  }\n\n  function updateMultisampleRenderTarget(renderTarget) {\n    if (renderTarget.isWebGLMultisampleRenderTarget) {\n      if (isWebGL2) {\n        const width = renderTarget.width;\n        const height = renderTarget.height;\n        let mask = 16384;\n\n        if (renderTarget.depthBuffer) mask |= 256;\n        if (renderTarget.stencilBuffer) mask |= 1024;\n\n        const renderTargetProperties = properties.get(renderTarget);\n\n        state.bindFramebuffer(\n          36008,\n          renderTargetProperties.__webglMultisampledFramebuffer\n        );\n        state.bindFramebuffer(36009, renderTargetProperties.__webglFramebuffer);\n\n        _gl.blitFramebuffer(\n          0,\n          0,\n          width,\n          height,\n          0,\n          0,\n          width,\n          height,\n          mask,\n          9728\n        );\n\n        state.bindFramebuffer(36008, null);\n        state.bindFramebuffer(\n          36009,\n          renderTargetProperties.__webglMultisampledFramebuffer\n        );\n      } else {\n        console.warn(\n          \"THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.\"\n        );\n      }\n    }\n  }\n\n  function getRenderTargetSamples(renderTarget) {\n    return isWebGL2 && renderTarget.isWebGLMultisampleRenderTarget\n      ? Math.min(maxSamples, renderTarget.samples)\n      : 0;\n  }\n\n  function updateVideoTexture(texture) {\n    const frame = info.render.frame;\n\n    // Check the last frame we updated the VideoTexture\n\n    if (_videoTextures.get(texture) !== frame) {\n      _videoTextures.set(texture, frame);\n      texture.update();\n    }\n  }\n\n  // backwards compatibility\n\n  let warnedTexture2D = false;\n  let warnedTextureCube = false;\n\n  function safeSetTexture2D(texture, slot) {\n    if (texture && texture.isWebGLRenderTarget) {\n      if (warnedTexture2D === false) {\n        console.warn(\n          \"THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead.\"\n        );\n        warnedTexture2D = true;\n      }\n\n      texture = texture.texture;\n    }\n\n    setTexture2D(texture, slot);\n  }\n\n  function safeSetTextureCube(texture, slot) {\n    if (texture && texture.isWebGLCubeRenderTarget) {\n      if (warnedTextureCube === false) {\n        console.warn(\n          \"THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead.\"\n        );\n        warnedTextureCube = true;\n      }\n\n      texture = texture.texture;\n    }\n\n    setTextureCube(texture, slot);\n  }\n\n  //\n\n  this.allocateTextureUnit = allocateTextureUnit;\n  this.resetTextureUnits = resetTextureUnits;\n\n  this.setTexture2D = setTexture2D;\n  this.setTexture2DArray = setTexture2DArray;\n  this.setTexture3D = setTexture3D;\n  this.setTextureCube = setTextureCube;\n  this.setupRenderTarget = setupRenderTarget;\n  this.updateRenderTargetMipmap = updateRenderTargetMipmap;\n  this.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\n  this.safeSetTexture2D = safeSetTexture2D;\n  this.safeSetTextureCube = safeSetTextureCube;\n}\n\nfunction WebGLUtils(gl, extensions, capabilities) {\n  const isWebGL2 = capabilities.isWebGL2;\n\n  function convert(p) {\n    let extension;\n\n    if (p === UnsignedByteType) return 5121;\n    if (p === UnsignedShort4444Type) return 32819;\n    if (p === UnsignedShort5551Type) return 32820;\n    if (p === UnsignedShort565Type) return 33635;\n\n    if (p === ByteType) return 5120;\n    if (p === ShortType) return 5122;\n    if (p === UnsignedShortType) return 5123;\n    if (p === IntType) return 5124;\n    if (p === UnsignedIntType) return 5125;\n    if (p === FloatType) return 5126;\n\n    if (p === HalfFloatType) {\n      if (isWebGL2) return 5131;\n\n      extension = extensions.get(\"OES_texture_half_float\");\n\n      if (extension !== null) {\n        return extension.HALF_FLOAT_OES;\n      } else {\n        return null;\n      }\n    }\n\n    if (p === AlphaFormat) return 6406;\n    if (p === RGBFormat) return 6407;\n    if (p === RGBAFormat) return 6408;\n    if (p === LuminanceFormat) return 6409;\n    if (p === LuminanceAlphaFormat) return 6410;\n    if (p === DepthFormat) return 6402;\n    if (p === DepthStencilFormat) return 34041;\n    if (p === RedFormat) return 6403;\n\n    // WebGL2 formats.\n\n    if (p === RedIntegerFormat) return 36244;\n    if (p === RGFormat) return 33319;\n    if (p === RGIntegerFormat) return 33320;\n    if (p === RGBIntegerFormat) return 36248;\n    if (p === RGBAIntegerFormat) return 36249;\n\n    if (\n      p === RGB_S3TC_DXT1_Format ||\n      p === RGBA_S3TC_DXT1_Format ||\n      p === RGBA_S3TC_DXT3_Format ||\n      p === RGBA_S3TC_DXT5_Format\n    ) {\n      extension = extensions.get(\"WEBGL_compressed_texture_s3tc\");\n\n      if (extension !== null) {\n        if (p === RGB_S3TC_DXT1_Format)\n          return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n        if (p === RGBA_S3TC_DXT1_Format)\n          return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n        if (p === RGBA_S3TC_DXT3_Format)\n          return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n        if (p === RGBA_S3TC_DXT5_Format)\n          return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n      } else {\n        return null;\n      }\n    }\n\n    if (\n      p === RGB_PVRTC_4BPPV1_Format ||\n      p === RGB_PVRTC_2BPPV1_Format ||\n      p === RGBA_PVRTC_4BPPV1_Format ||\n      p === RGBA_PVRTC_2BPPV1_Format\n    ) {\n      extension = extensions.get(\"WEBGL_compressed_texture_pvrtc\");\n\n      if (extension !== null) {\n        if (p === RGB_PVRTC_4BPPV1_Format)\n          return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n        if (p === RGB_PVRTC_2BPPV1_Format)\n          return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n        if (p === RGBA_PVRTC_4BPPV1_Format)\n          return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n        if (p === RGBA_PVRTC_2BPPV1_Format)\n          return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n      } else {\n        return null;\n      }\n    }\n\n    if (p === RGB_ETC1_Format) {\n      extension = extensions.get(\"WEBGL_compressed_texture_etc1\");\n\n      if (extension !== null) {\n        return extension.COMPRESSED_RGB_ETC1_WEBGL;\n      } else {\n        return null;\n      }\n    }\n\n    if (p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format) {\n      extension = extensions.get(\"WEBGL_compressed_texture_etc\");\n\n      if (extension !== null) {\n        if (p === RGB_ETC2_Format) return extension.COMPRESSED_RGB8_ETC2;\n        if (p === RGBA_ETC2_EAC_Format)\n          return extension.COMPRESSED_RGBA8_ETC2_EAC;\n      }\n    }\n\n    if (\n      p === RGBA_ASTC_4x4_Format ||\n      p === RGBA_ASTC_5x4_Format ||\n      p === RGBA_ASTC_5x5_Format ||\n      p === RGBA_ASTC_6x5_Format ||\n      p === RGBA_ASTC_6x6_Format ||\n      p === RGBA_ASTC_8x5_Format ||\n      p === RGBA_ASTC_8x6_Format ||\n      p === RGBA_ASTC_8x8_Format ||\n      p === RGBA_ASTC_10x5_Format ||\n      p === RGBA_ASTC_10x6_Format ||\n      p === RGBA_ASTC_10x8_Format ||\n      p === RGBA_ASTC_10x10_Format ||\n      p === RGBA_ASTC_12x10_Format ||\n      p === RGBA_ASTC_12x12_Format ||\n      p === SRGB8_ALPHA8_ASTC_4x4_Format ||\n      p === SRGB8_ALPHA8_ASTC_5x4_Format ||\n      p === SRGB8_ALPHA8_ASTC_5x5_Format ||\n      p === SRGB8_ALPHA8_ASTC_6x5_Format ||\n      p === SRGB8_ALPHA8_ASTC_6x6_Format ||\n      p === SRGB8_ALPHA8_ASTC_8x5_Format ||\n      p === SRGB8_ALPHA8_ASTC_8x6_Format ||\n      p === SRGB8_ALPHA8_ASTC_8x8_Format ||\n      p === SRGB8_ALPHA8_ASTC_10x5_Format ||\n      p === SRGB8_ALPHA8_ASTC_10x6_Format ||\n      p === SRGB8_ALPHA8_ASTC_10x8_Format ||\n      p === SRGB8_ALPHA8_ASTC_10x10_Format ||\n      p === SRGB8_ALPHA8_ASTC_12x10_Format ||\n      p === SRGB8_ALPHA8_ASTC_12x12_Format\n    ) {\n      extension = extensions.get(\"WEBGL_compressed_texture_astc\");\n\n      if (extension !== null) {\n        // TODO Complete?\n\n        return p;\n      } else {\n        return null;\n      }\n    }\n\n    if (p === RGBA_BPTC_Format) {\n      extension = extensions.get(\"EXT_texture_compression_bptc\");\n\n      if (extension !== null) {\n        // TODO Complete?\n\n        return p;\n      } else {\n        return null;\n      }\n    }\n\n    if (p === UnsignedInt248Type) {\n      if (isWebGL2) return 34042;\n\n      extension = extensions.get(\"WEBGL_depth_texture\");\n\n      if (extension !== null) {\n        return extension.UNSIGNED_INT_24_8_WEBGL;\n      } else {\n        return null;\n      }\n    }\n  }\n\n  return { convert: convert };\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n  constructor(array = []) {\n    super();\n\n    this.cameras = array;\n  }\n}\n\nArrayCamera.prototype.isArrayCamera = true;\n\nclass Group extends Object3D {\n  constructor() {\n    super();\n\n    this.type = \"Group\";\n  }\n}\n\nGroup.prototype.isGroup = true;\n\nconst _moveEvent = { type: \"move\" };\n\nclass WebXRController {\n  constructor() {\n    this._targetRay = null;\n    this._grip = null;\n    this._hand = null;\n  }\n\n  getHandSpace() {\n    if (this._hand === null) {\n      this._hand = new Group();\n      this._hand.matrixAutoUpdate = false;\n      this._hand.visible = false;\n\n      this._hand.joints = {};\n      this._hand.inputState = { pinching: false };\n    }\n\n    return this._hand;\n  }\n\n  getTargetRaySpace() {\n    if (this._targetRay === null) {\n      this._targetRay = new Group();\n      this._targetRay.matrixAutoUpdate = false;\n      this._targetRay.visible = false;\n      this._targetRay.hasLinearVelocity = false;\n      this._targetRay.linearVelocity = new Vector3();\n      this._targetRay.hasAngularVelocity = false;\n      this._targetRay.angularVelocity = new Vector3();\n    }\n\n    return this._targetRay;\n  }\n\n  getGripSpace() {\n    if (this._grip === null) {\n      this._grip = new Group();\n      this._grip.matrixAutoUpdate = false;\n      this._grip.visible = false;\n      this._grip.hasLinearVelocity = false;\n      this._grip.linearVelocity = new Vector3();\n      this._grip.hasAngularVelocity = false;\n      this._grip.angularVelocity = new Vector3();\n    }\n\n    return this._grip;\n  }\n\n  dispatchEvent(event) {\n    if (this._targetRay !== null) {\n      this._targetRay.dispatchEvent(event);\n    }\n\n    if (this._grip !== null) {\n      this._grip.dispatchEvent(event);\n    }\n\n    if (this._hand !== null) {\n      this._hand.dispatchEvent(event);\n    }\n\n    return this;\n  }\n\n  disconnect(inputSource) {\n    this.dispatchEvent({ type: \"disconnected\", data: inputSource });\n\n    if (this._targetRay !== null) {\n      this._targetRay.visible = false;\n    }\n\n    if (this._grip !== null) {\n      this._grip.visible = false;\n    }\n\n    if (this._hand !== null) {\n      this._hand.visible = false;\n    }\n\n    return this;\n  }\n\n  update(inputSource, frame, referenceSpace) {\n    let inputPose = null;\n    let gripPose = null;\n    let handPose = null;\n\n    const targetRay = this._targetRay;\n    const grip = this._grip;\n    const hand = this._hand;\n\n    if (inputSource && frame.session.visibilityState !== \"visible-blurred\") {\n      if (targetRay !== null) {\n        inputPose = frame.getPose(inputSource.targetRaySpace, referenceSpace);\n\n        if (inputPose !== null) {\n          targetRay.matrix.fromArray(inputPose.transform.matrix);\n          targetRay.matrix.decompose(\n            targetRay.position,\n            targetRay.rotation,\n            targetRay.scale\n          );\n\n          if (inputPose.linearVelocity) {\n            targetRay.hasLinearVelocity = true;\n            targetRay.linearVelocity.copy(inputPose.linearVelocity);\n          } else {\n            targetRay.hasLinearVelocity = false;\n          }\n\n          if (inputPose.angularVelocity) {\n            targetRay.hasAngularVelocity = true;\n            targetRay.angularVelocity.copy(inputPose.angularVelocity);\n          } else {\n            targetRay.hasAngularVelocity = false;\n          }\n\n          this.dispatchEvent(_moveEvent);\n        }\n      }\n\n      if (hand && inputSource.hand) {\n        handPose = true;\n\n        for (const inputjoint of inputSource.hand.values()) {\n          // Update the joints groups with the XRJoint poses\n          const jointPose = frame.getJointPose(inputjoint, referenceSpace);\n\n          if (hand.joints[inputjoint.jointName] === undefined) {\n            // The transform of this joint will be updated with the joint pose on each frame\n            const joint = new Group();\n            joint.matrixAutoUpdate = false;\n            joint.visible = false;\n            hand.joints[inputjoint.jointName] = joint;\n            // ??\n            hand.add(joint);\n          }\n\n          const joint = hand.joints[inputjoint.jointName];\n\n          if (jointPose !== null) {\n            joint.matrix.fromArray(jointPose.transform.matrix);\n            joint.matrix.decompose(joint.position, joint.rotation, joint.scale);\n            joint.jointRadius = jointPose.radius;\n          }\n\n          joint.visible = jointPose !== null;\n        }\n\n        // Custom events\n\n        // Check pinchz\n        const indexTip = hand.joints[\"index-finger-tip\"];\n        const thumbTip = hand.joints[\"thumb-tip\"];\n        const distance = indexTip.position.distanceTo(thumbTip.position);\n\n        const distanceToPinch = 0.02;\n        const threshold = 0.005;\n\n        if (\n          hand.inputState.pinching &&\n          distance > distanceToPinch + threshold\n        ) {\n          hand.inputState.pinching = false;\n          this.dispatchEvent({\n            type: \"pinchend\",\n            handedness: inputSource.handedness,\n            target: this,\n          });\n        } else if (\n          !hand.inputState.pinching &&\n          distance <= distanceToPinch - threshold\n        ) {\n          hand.inputState.pinching = true;\n          this.dispatchEvent({\n            type: \"pinchstart\",\n            handedness: inputSource.handedness,\n            target: this,\n          });\n        }\n      } else {\n        if (grip !== null && inputSource.gripSpace) {\n          gripPose = frame.getPose(inputSource.gripSpace, referenceSpace);\n\n          if (gripPose !== null) {\n            grip.matrix.fromArray(gripPose.transform.matrix);\n            grip.matrix.decompose(grip.position, grip.rotation, grip.scale);\n\n            if (gripPose.linearVelocity) {\n              grip.hasLinearVelocity = true;\n              grip.linearVelocity.copy(gripPose.linearVelocity);\n            } else {\n              grip.hasLinearVelocity = false;\n            }\n\n            if (gripPose.angularVelocity) {\n              grip.hasAngularVelocity = true;\n              grip.angularVelocity.copy(gripPose.angularVelocity);\n            } else {\n              grip.hasAngularVelocity = false;\n            }\n          }\n        }\n      }\n    }\n\n    if (targetRay !== null) {\n      targetRay.visible = inputPose !== null;\n    }\n\n    if (grip !== null) {\n      grip.visible = gripPose !== null;\n    }\n\n    if (hand !== null) {\n      hand.visible = handPose !== null;\n    }\n\n    return this;\n  }\n}\n\nclass WebXRManager extends EventDispatcher {\n  constructor(renderer, gl) {\n    super();\n\n    const scope = this;\n    const state = renderer.state;\n\n    let session = null;\n    let framebufferScaleFactor = 1.0;\n\n    let referenceSpace = null;\n    let referenceSpaceType = \"local-floor\";\n\n    let pose = null;\n    let glBinding = null;\n    let glFramebuffer = null;\n    let glProjLayer = null;\n    let glBaseLayer = null;\n    let isMultisample = false;\n    let glMultisampledFramebuffer = null;\n    let glColorRenderbuffer = null;\n    let glDepthRenderbuffer = null;\n    let xrFrame = null;\n    let depthStyle = null;\n    let clearStyle = null;\n\n    const controllers = [];\n    const inputSourcesMap = new Map();\n\n    //\n\n    const cameraL = new PerspectiveCamera();\n    cameraL.layers.enable(1);\n    cameraL.viewport = new Vector4();\n\n    const cameraR = new PerspectiveCamera();\n    cameraR.layers.enable(2);\n    cameraR.viewport = new Vector4();\n\n    const cameras = [cameraL, cameraR];\n\n    const cameraVR = new ArrayCamera();\n    cameraVR.layers.enable(1);\n    cameraVR.layers.enable(2);\n\n    let _currentDepthNear = null;\n    let _currentDepthFar = null;\n\n    //\n\n    this.cameraAutoUpdate = true;\n    this.enabled = false;\n\n    this.isPresenting = false;\n\n    this.getController = function (index) {\n      let controller = controllers[index];\n\n      if (controller === undefined) {\n        controller = new WebXRController();\n        controllers[index] = controller;\n      }\n\n      return controller.getTargetRaySpace();\n    };\n\n    this.getControllerGrip = function (index) {\n      let controller = controllers[index];\n\n      if (controller === undefined) {\n        controller = new WebXRController();\n        controllers[index] = controller;\n      }\n\n      return controller.getGripSpace();\n    };\n\n    this.getHand = function (index) {\n      let controller = controllers[index];\n\n      if (controller === undefined) {\n        controller = new WebXRController();\n        controllers[index] = controller;\n      }\n\n      return controller.getHandSpace();\n    };\n\n    //\n\n    function onSessionEvent(event) {\n      const controller = inputSourcesMap.get(event.inputSource);\n\n      if (controller) {\n        controller.dispatchEvent({ type: event.type, data: event.inputSource });\n      }\n    }\n\n    function onSessionEnd() {\n      inputSourcesMap.forEach(function (controller, inputSource) {\n        controller.disconnect(inputSource);\n      });\n\n      inputSourcesMap.clear();\n\n      _currentDepthNear = null;\n      _currentDepthFar = null;\n\n      // restore framebuffer/rendering state\n\n      state.bindXRFramebuffer(null);\n      renderer.setRenderTarget(renderer.getRenderTarget());\n\n      if (glFramebuffer) gl.deleteFramebuffer(glFramebuffer);\n      if (glMultisampledFramebuffer)\n        gl.deleteFramebuffer(glMultisampledFramebuffer);\n      if (glColorRenderbuffer) gl.deleteRenderbuffer(glColorRenderbuffer);\n      if (glDepthRenderbuffer) gl.deleteRenderbuffer(glDepthRenderbuffer);\n      glFramebuffer = null;\n      glMultisampledFramebuffer = null;\n      glColorRenderbuffer = null;\n      glDepthRenderbuffer = null;\n      glBaseLayer = null;\n      glProjLayer = null;\n      glBinding = null;\n      session = null;\n\n      //\n\n      animation.stop();\n\n      scope.isPresenting = false;\n\n      scope.dispatchEvent({ type: \"sessionend\" });\n    }\n\n    this.setFramebufferScaleFactor = function (value) {\n      framebufferScaleFactor = value;\n\n      if (scope.isPresenting === true) {\n        console.warn(\n          \"THREE.WebXRManager: Cannot change framebuffer scale while presenting.\"\n        );\n      }\n    };\n\n    this.setReferenceSpaceType = function (value) {\n      referenceSpaceType = value;\n\n      if (scope.isPresenting === true) {\n        console.warn(\n          \"THREE.WebXRManager: Cannot change reference space type while presenting.\"\n        );\n      }\n    };\n\n    this.getReferenceSpace = function () {\n      return referenceSpace;\n    };\n\n    this.getBaseLayer = function () {\n      return glProjLayer !== null ? glProjLayer : glBaseLayer;\n    };\n\n    this.getBinding = function () {\n      return glBinding;\n    };\n\n    this.getFrame = function () {\n      return xrFrame;\n    };\n\n    this.getSession = function () {\n      return session;\n    };\n\n    this.setSession = async function (value) {\n      session = value;\n\n      if (session !== null) {\n        session.addEventListener(\"select\", onSessionEvent);\n        session.addEventListener(\"selectstart\", onSessionEvent);\n        session.addEventListener(\"selectend\", onSessionEvent);\n        session.addEventListener(\"squeeze\", onSessionEvent);\n        session.addEventListener(\"squeezestart\", onSessionEvent);\n        session.addEventListener(\"squeezeend\", onSessionEvent);\n        session.addEventListener(\"end\", onSessionEnd);\n        session.addEventListener(\"inputsourceschange\", onInputSourcesChange);\n\n        const attributes = gl.getContextAttributes();\n\n        if (attributes.xrCompatible !== true) {\n          await gl.makeXRCompatible();\n        }\n\n        if (session.renderState.layers === undefined) {\n          const layerInit = {\n            antialias: attributes.antialias,\n            alpha: attributes.alpha,\n            depth: attributes.depth,\n            stencil: attributes.stencil,\n            framebufferScaleFactor: framebufferScaleFactor,\n          };\n\n          glBaseLayer = new XRWebGLLayer(session, gl, layerInit);\n\n          session.updateRenderState({ baseLayer: glBaseLayer });\n        } else if (gl instanceof WebGLRenderingContext) {\n          // Use old style webgl layer because we can't use MSAA\n          // WebGL2 support.\n\n          const layerInit = {\n            antialias: true,\n            alpha: attributes.alpha,\n            depth: attributes.depth,\n            stencil: attributes.stencil,\n            framebufferScaleFactor: framebufferScaleFactor,\n          };\n\n          glBaseLayer = new XRWebGLLayer(session, gl, layerInit);\n\n          session.updateRenderState({ layers: [glBaseLayer] });\n        } else {\n          isMultisample = attributes.antialias;\n          let depthFormat = null;\n\n          if (attributes.depth) {\n            clearStyle = 256;\n\n            if (attributes.stencil) clearStyle |= 1024;\n\n            depthStyle = attributes.stencil ? 33306 : 36096;\n            depthFormat = attributes.stencil ? 35056 : 33190;\n          }\n\n          const projectionlayerInit = {\n            colorFormat: attributes.alpha ? 32856 : 32849,\n            depthFormat: depthFormat,\n            scaleFactor: framebufferScaleFactor,\n          };\n\n          glBinding = new XRWebGLBinding(session, gl);\n\n          glProjLayer = glBinding.createProjectionLayer(projectionlayerInit);\n\n          glFramebuffer = gl.createFramebuffer();\n\n          session.updateRenderState({ layers: [glProjLayer] });\n\n          if (isMultisample) {\n            glMultisampledFramebuffer = gl.createFramebuffer();\n            glColorRenderbuffer = gl.createRenderbuffer();\n            gl.bindRenderbuffer(36161, glColorRenderbuffer);\n            gl.renderbufferStorageMultisample(\n              36161,\n              4,\n              32856,\n              glProjLayer.textureWidth,\n              glProjLayer.textureHeight\n            );\n            state.bindFramebuffer(36160, glMultisampledFramebuffer);\n            gl.framebufferRenderbuffer(\n              36160,\n              36064,\n              36161,\n              glColorRenderbuffer\n            );\n            gl.bindRenderbuffer(36161, null);\n\n            if (depthFormat !== null) {\n              glDepthRenderbuffer = gl.createRenderbuffer();\n              gl.bindRenderbuffer(36161, glDepthRenderbuffer);\n              gl.renderbufferStorageMultisample(\n                36161,\n                4,\n                depthFormat,\n                glProjLayer.textureWidth,\n                glProjLayer.textureHeight\n              );\n              gl.framebufferRenderbuffer(\n                36160,\n                depthStyle,\n                36161,\n                glDepthRenderbuffer\n              );\n              gl.bindRenderbuffer(36161, null);\n            }\n\n            state.bindFramebuffer(36160, null);\n          }\n        }\n\n        referenceSpace = await session.requestReferenceSpace(\n          referenceSpaceType\n        );\n\n        animation.setContext(session);\n        animation.start();\n\n        scope.isPresenting = true;\n\n        scope.dispatchEvent({ type: \"sessionstart\" });\n      }\n    };\n\n    function onInputSourcesChange(event) {\n      const inputSources = session.inputSources;\n\n      // Assign inputSources to available controllers\n\n      for (let i = 0; i < controllers.length; i++) {\n        inputSourcesMap.set(inputSources[i], controllers[i]);\n      }\n\n      // Notify disconnected\n\n      for (let i = 0; i < event.removed.length; i++) {\n        const inputSource = event.removed[i];\n        const controller = inputSourcesMap.get(inputSource);\n\n        if (controller) {\n          controller.dispatchEvent({ type: \"disconnected\", data: inputSource });\n          inputSourcesMap.delete(inputSource);\n        }\n      }\n\n      // Notify connected\n\n      for (let i = 0; i < event.added.length; i++) {\n        const inputSource = event.added[i];\n        const controller = inputSourcesMap.get(inputSource);\n\n        if (controller) {\n          controller.dispatchEvent({ type: \"connected\", data: inputSource });\n        }\n      }\n    }\n\n    //\n\n    const cameraLPos = new Vector3();\n    const cameraRPos = new Vector3();\n\n    /**\n     * Assumes 2 cameras that are parallel and share an X-axis, and that\n     * the cameras' projection and world matrices have already been set.\n     * And that near and far planes are identical for both cameras.\n     * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n     */\n    function setProjectionFromUnion(camera, cameraL, cameraR) {\n      cameraLPos.setFromMatrixPosition(cameraL.matrixWorld);\n      cameraRPos.setFromMatrixPosition(cameraR.matrixWorld);\n\n      const ipd = cameraLPos.distanceTo(cameraRPos);\n\n      const projL = cameraL.projectionMatrix.elements;\n      const projR = cameraR.projectionMatrix.elements;\n\n      // VR systems will have identical far and near planes, and\n      // most likely identical top and bottom frustum extents.\n      // Use the left camera for these values.\n      const near = projL[14] / (projL[10] - 1);\n      const far = projL[14] / (projL[10] + 1);\n      const topFov = (projL[9] + 1) / projL[5];\n      const bottomFov = (projL[9] - 1) / projL[5];\n\n      const leftFov = (projL[8] - 1) / projL[0];\n      const rightFov = (projR[8] + 1) / projR[0];\n      const left = near * leftFov;\n      const right = near * rightFov;\n\n      // Calculate the new camera's position offset from the\n      // left camera. xOffset should be roughly half `ipd`.\n      const zOffset = ipd / (-leftFov + rightFov);\n      const xOffset = zOffset * -leftFov;\n\n      // TODO: Better way to apply this offset?\n      cameraL.matrixWorld.decompose(\n        camera.position,\n        camera.quaternion,\n        camera.scale\n      );\n      camera.translateX(xOffset);\n      camera.translateZ(zOffset);\n      camera.matrixWorld.compose(\n        camera.position,\n        camera.quaternion,\n        camera.scale\n      );\n      camera.matrixWorldInverse.copy(camera.matrixWorld).invert();\n\n      // Find the union of the frustum values of the cameras and scale\n      // the values so that the near plane's position does not change in world space,\n      // although must now be relative to the new union camera.\n      const near2 = near + zOffset;\n      const far2 = far + zOffset;\n      const left2 = left - xOffset;\n      const right2 = right + (ipd - xOffset);\n      const top2 = ((topFov * far) / far2) * near2;\n      const bottom2 = ((bottomFov * far) / far2) * near2;\n\n      camera.projectionMatrix.makePerspective(\n        left2,\n        right2,\n        top2,\n        bottom2,\n        near2,\n        far2\n      );\n    }\n\n    function updateCamera(camera, parent) {\n      if (parent === null) {\n        camera.matrixWorld.copy(camera.matrix);\n      } else {\n        camera.matrixWorld.multiplyMatrices(parent.matrixWorld, camera.matrix);\n      }\n\n      camera.matrixWorldInverse.copy(camera.matrixWorld).invert();\n    }\n\n    this.updateCamera = function (camera) {\n      if (session === null) return;\n\n      cameraVR.near = cameraR.near = cameraL.near = camera.near;\n      cameraVR.far = cameraR.far = cameraL.far = camera.far;\n\n      if (\n        _currentDepthNear !== cameraVR.near ||\n        _currentDepthFar !== cameraVR.far\n      ) {\n        // Note that the new renderState won't apply until the next frame. See #18320\n\n        session.updateRenderState({\n          depthNear: cameraVR.near,\n          depthFar: cameraVR.far,\n        });\n\n        _currentDepthNear = cameraVR.near;\n        _currentDepthFar = cameraVR.far;\n      }\n\n      const parent = camera.parent;\n      const cameras = cameraVR.cameras;\n\n      updateCamera(cameraVR, parent);\n\n      for (let i = 0; i < cameras.length; i++) {\n        updateCamera(cameras[i], parent);\n      }\n\n      cameraVR.matrixWorld.decompose(\n        cameraVR.position,\n        cameraVR.quaternion,\n        cameraVR.scale\n      );\n\n      // update user camera and its children\n\n      camera.position.copy(cameraVR.position);\n      camera.quaternion.copy(cameraVR.quaternion);\n      camera.scale.copy(cameraVR.scale);\n      camera.matrix.copy(cameraVR.matrix);\n      camera.matrixWorld.copy(cameraVR.matrixWorld);\n\n      const children = camera.children;\n\n      for (let i = 0, l = children.length; i < l; i++) {\n        children[i].updateMatrixWorld(true);\n      }\n\n      // update projection matrix for proper view frustum culling\n\n      if (cameras.length === 2) {\n        setProjectionFromUnion(cameraVR, cameraL, cameraR);\n      } else {\n        // assume single camera setup (AR)\n\n        cameraVR.projectionMatrix.copy(cameraL.projectionMatrix);\n      }\n    };\n\n    this.getCamera = function () {\n      return cameraVR;\n    };\n\n    this.getFoveation = function () {\n      if (glProjLayer !== null) {\n        return glProjLayer.fixedFoveation;\n      }\n\n      if (glBaseLayer !== null) {\n        return glBaseLayer.fixedFoveation;\n      }\n\n      return undefined;\n    };\n\n    this.setFoveation = function (foveation) {\n      // 0 = no foveation = full resolution\n      // 1 = maximum foveation = the edges render at lower resolution\n\n      if (glProjLayer !== null) {\n        glProjLayer.fixedFoveation = foveation;\n      }\n\n      if (glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined) {\n        glBaseLayer.fixedFoveation = foveation;\n      }\n    };\n\n    // Animation Loop\n\n    let onAnimationFrameCallback = null;\n\n    function onAnimationFrame(time, frame) {\n      pose = frame.getViewerPose(referenceSpace);\n      xrFrame = frame;\n\n      if (pose !== null) {\n        const views = pose.views;\n\n        if (glBaseLayer !== null) {\n          state.bindXRFramebuffer(glBaseLayer.framebuffer);\n        }\n\n        let cameraVRNeedsUpdate = false;\n\n        // check if it's necessary to rebuild cameraVR's camera list\n\n        if (views.length !== cameraVR.cameras.length) {\n          cameraVR.cameras.length = 0;\n\n          cameraVRNeedsUpdate = true;\n        }\n\n        for (let i = 0; i < views.length; i++) {\n          const view = views[i];\n\n          let viewport = null;\n\n          if (glBaseLayer !== null) {\n            viewport = glBaseLayer.getViewport(view);\n          } else {\n            const glSubImage = glBinding.getViewSubImage(glProjLayer, view);\n\n            state.bindXRFramebuffer(glFramebuffer);\n\n            if (glSubImage.depthStencilTexture !== undefined) {\n              gl.framebufferTexture2D(\n                36160,\n                depthStyle,\n                3553,\n                glSubImage.depthStencilTexture,\n                0\n              );\n            }\n\n            gl.framebufferTexture2D(\n              36160,\n              36064,\n              3553,\n              glSubImage.colorTexture,\n              0\n            );\n\n            viewport = glSubImage.viewport;\n          }\n\n          const camera = cameras[i];\n\n          camera.matrix.fromArray(view.transform.matrix);\n          camera.projectionMatrix.fromArray(view.projectionMatrix);\n          camera.viewport.set(\n            viewport.x,\n            viewport.y,\n            viewport.width,\n            viewport.height\n          );\n\n          if (i === 0) {\n            cameraVR.matrix.copy(camera.matrix);\n          }\n\n          if (cameraVRNeedsUpdate === true) {\n            cameraVR.cameras.push(camera);\n          }\n        }\n\n        if (isMultisample) {\n          state.bindXRFramebuffer(glMultisampledFramebuffer);\n\n          if (clearStyle !== null) gl.clear(clearStyle);\n        }\n      }\n\n      //\n\n      const inputSources = session.inputSources;\n\n      for (let i = 0; i < controllers.length; i++) {\n        const controller = controllers[i];\n        const inputSource = inputSources[i];\n\n        controller.update(inputSource, frame, referenceSpace);\n      }\n\n      if (onAnimationFrameCallback) onAnimationFrameCallback(time, frame);\n\n      if (isMultisample) {\n        const width = glProjLayer.textureWidth;\n        const height = glProjLayer.textureHeight;\n\n        state.bindFramebuffer(36008, glMultisampledFramebuffer);\n        state.bindFramebuffer(36009, glFramebuffer);\n        // Invalidate the depth here to avoid flush of the depth data to main memory.\n        gl.invalidateFramebuffer(36008, [depthStyle]);\n        gl.invalidateFramebuffer(36009, [depthStyle]);\n        gl.blitFramebuffer(\n          0,\n          0,\n          width,\n          height,\n          0,\n          0,\n          width,\n          height,\n          16384,\n          9728\n        );\n        // Invalidate the MSAA buffer because it's not needed anymore.\n        gl.invalidateFramebuffer(36008, [36064]);\n        state.bindFramebuffer(36008, null);\n        state.bindFramebuffer(36009, null);\n\n        state.bindFramebuffer(36160, glMultisampledFramebuffer);\n      }\n\n      xrFrame = null;\n    }\n\n    const animation = new WebGLAnimation();\n\n    animation.setAnimationLoop(onAnimationFrame);\n\n    this.setAnimationLoop = function (callback) {\n      onAnimationFrameCallback = callback;\n    };\n\n    this.dispose = function () {};\n  }\n}\n\nfunction WebGLMaterials(properties) {\n  function refreshFogUniforms(uniforms, fog) {\n    uniforms.fogColor.value.copy(fog.color);\n\n    if (fog.isFog) {\n      uniforms.fogNear.value = fog.near;\n      uniforms.fogFar.value = fog.far;\n    } else if (fog.isFogExp2) {\n      uniforms.fogDensity.value = fog.density;\n    }\n  }\n\n  function refreshMaterialUniforms(\n    uniforms,\n    material,\n    pixelRatio,\n    height,\n    transmissionRenderTarget\n  ) {\n    if (material.isMeshBasicMaterial) {\n      refreshUniformsCommon(uniforms, material);\n    } else if (material.isMeshLambertMaterial) {\n      refreshUniformsCommon(uniforms, material);\n      refreshUniformsLambert(uniforms, material);\n    } else if (material.isMeshToonMaterial) {\n      refreshUniformsCommon(uniforms, material);\n      refreshUniformsToon(uniforms, material);\n    } else if (material.isMeshPhongMaterial) {\n      refreshUniformsCommon(uniforms, material);\n      refreshUniformsPhong(uniforms, material);\n    } else if (material.isMeshStandardMaterial) {\n      refreshUniformsCommon(uniforms, material);\n\n      if (material.isMeshPhysicalMaterial) {\n        refreshUniformsPhysical(uniforms, material, transmissionRenderTarget);\n      } else {\n        refreshUniformsStandard(uniforms, material);\n      }\n    } else if (material.isMeshMatcapMaterial) {\n      refreshUniformsCommon(uniforms, material);\n      refreshUniformsMatcap(uniforms, material);\n    } else if (material.isMeshDepthMaterial) {\n      refreshUniformsCommon(uniforms, material);\n      refreshUniformsDepth(uniforms, material);\n    } else if (material.isMeshDistanceMaterial) {\n      refreshUniformsCommon(uniforms, material);\n      refreshUniformsDistance(uniforms, material);\n    } else if (material.isMeshNormalMaterial) {\n      refreshUniformsCommon(uniforms, material);\n      refreshUniformsNormal(uniforms, material);\n    } else if (material.isLineBasicMaterial) {\n      refreshUniformsLine(uniforms, material);\n\n      if (material.isLineDashedMaterial) {\n        refreshUniformsDash(uniforms, material);\n      }\n    } else if (material.isPointsMaterial) {\n      refreshUniformsPoints(uniforms, material, pixelRatio, height);\n    } else if (material.isSpriteMaterial) {\n      refreshUniformsSprites(uniforms, material);\n    } else if (material.isShadowMaterial) {\n      uniforms.color.value.copy(material.color);\n      uniforms.opacity.value = material.opacity;\n    } else if (material.isShaderMaterial) {\n      material.uniformsNeedUpdate = false; // #15581\n    }\n  }\n\n  function refreshUniformsCommon(uniforms, material) {\n    uniforms.opacity.value = material.opacity;\n\n    if (material.color) {\n      uniforms.diffuse.value.copy(material.color);\n    }\n\n    if (material.emissive) {\n      uniforms.emissive.value\n        .copy(material.emissive)\n        .multiplyScalar(material.emissiveIntensity);\n    }\n\n    if (material.map) {\n      uniforms.map.value = material.map;\n    }\n\n    if (material.alphaMap) {\n      uniforms.alphaMap.value = material.alphaMap;\n    }\n\n    if (material.specularMap) {\n      uniforms.specularMap.value = material.specularMap;\n    }\n\n    if (material.alphaTest > 0) {\n      uniforms.alphaTest.value = material.alphaTest;\n    }\n\n    const envMap = properties.get(material).envMap;\n\n    if (envMap) {\n      uniforms.envMap.value = envMap;\n\n      uniforms.flipEnvMap.value =\n        envMap.isCubeTexture && envMap.isRenderTargetTexture === false ? -1 : 1;\n\n      uniforms.reflectivity.value = material.reflectivity;\n      uniforms.ior.value = material.ior;\n      uniforms.refractionRatio.value = material.refractionRatio;\n    }\n\n    if (material.lightMap) {\n      uniforms.lightMap.value = material.lightMap;\n      uniforms.lightMapIntensity.value = material.lightMapIntensity;\n    }\n\n    if (material.aoMap) {\n      uniforms.aoMap.value = material.aoMap;\n      uniforms.aoMapIntensity.value = material.aoMapIntensity;\n    }\n\n    // uv repeat and offset setting priorities\n    // 1. color map\n    // 2. specular map\n    // 3. displacementMap map\n    // 4. normal map\n    // 5. bump map\n    // 6. roughnessMap map\n    // 7. metalnessMap map\n    // 8. alphaMap map\n    // 9. emissiveMap map\n    // 10. clearcoat map\n    // 11. clearcoat normal map\n    // 12. clearcoat roughnessMap map\n    // 13. specular intensity map\n    // 14. specular tint map\n    // 15. transmission map\n    // 16. thickness map\n\n    let uvScaleMap;\n\n    if (material.map) {\n      uvScaleMap = material.map;\n    } else if (material.specularMap) {\n      uvScaleMap = material.specularMap;\n    } else if (material.displacementMap) {\n      uvScaleMap = material.displacementMap;\n    } else if (material.normalMap) {\n      uvScaleMap = material.normalMap;\n    } else if (material.bumpMap) {\n      uvScaleMap = material.bumpMap;\n    } else if (material.roughnessMap) {\n      uvScaleMap = material.roughnessMap;\n    } else if (material.metalnessMap) {\n      uvScaleMap = material.metalnessMap;\n    } else if (material.alphaMap) {\n      uvScaleMap = material.alphaMap;\n    } else if (material.emissiveMap) {\n      uvScaleMap = material.emissiveMap;\n    } else if (material.clearcoatMap) {\n      uvScaleMap = material.clearcoatMap;\n    } else if (material.clearcoatNormalMap) {\n      uvScaleMap = material.clearcoatNormalMap;\n    } else if (material.clearcoatRoughnessMap) {\n      uvScaleMap = material.clearcoatRoughnessMap;\n    } else if (material.specularIntensityMap) {\n      uvScaleMap = material.specularIntensityMap;\n    } else if (material.specularColorMap) {\n      uvScaleMap = material.specularColorMap;\n    } else if (material.transmissionMap) {\n      uvScaleMap = material.transmissionMap;\n    } else if (material.thicknessMap) {\n      uvScaleMap = material.thicknessMap;\n    } else if (material.sheenColorMap) {\n      uvScaleMap = material.sheenColorMap;\n    } else if (material.sheenRoughnessMap) {\n      uvScaleMap = material.sheenRoughnessMap;\n    }\n\n    if (uvScaleMap !== undefined) {\n      // backwards compatibility\n      if (uvScaleMap.isWebGLRenderTarget) {\n        uvScaleMap = uvScaleMap.texture;\n      }\n\n      if (uvScaleMap.matrixAutoUpdate === true) {\n        uvScaleMap.updateMatrix();\n      }\n\n      uniforms.uvTransform.value.copy(uvScaleMap.matrix);\n    }\n\n    // uv repeat and offset setting priorities for uv2\n    // 1. ao map\n    // 2. light map\n\n    let uv2ScaleMap;\n\n    if (material.aoMap) {\n      uv2ScaleMap = material.aoMap;\n    } else if (material.lightMap) {\n      uv2ScaleMap = material.lightMap;\n    }\n\n    if (uv2ScaleMap !== undefined) {\n      // backwards compatibility\n      if (uv2ScaleMap.isWebGLRenderTarget) {\n        uv2ScaleMap = uv2ScaleMap.texture;\n      }\n\n      if (uv2ScaleMap.matrixAutoUpdate === true) {\n        uv2ScaleMap.updateMatrix();\n      }\n\n      uniforms.uv2Transform.value.copy(uv2ScaleMap.matrix);\n    }\n  }\n\n  function refreshUniformsLine(uniforms, material) {\n    uniforms.diffuse.value.copy(material.color);\n    uniforms.opacity.value = material.opacity;\n  }\n\n  function refreshUniformsDash(uniforms, material) {\n    uniforms.dashSize.value = material.dashSize;\n    uniforms.totalSize.value = material.dashSize + material.gapSize;\n    uniforms.scale.value = material.scale;\n  }\n\n  function refreshUniformsPoints(uniforms, material, pixelRatio, height) {\n    uniforms.diffuse.value.copy(material.color);\n    uniforms.opacity.value = material.opacity;\n    uniforms.size.value = material.size * pixelRatio;\n    uniforms.scale.value = height * 0.5;\n\n    if (material.map) {\n      uniforms.map.value = material.map;\n    }\n\n    if (material.alphaMap) {\n      uniforms.alphaMap.value = material.alphaMap;\n    }\n\n    if (material.alphaTest > 0) {\n      uniforms.alphaTest.value = material.alphaTest;\n    }\n\n    // uv repeat and offset setting priorities\n    // 1. color map\n    // 2. alpha map\n\n    let uvScaleMap;\n\n    if (material.map) {\n      uvScaleMap = material.map;\n    } else if (material.alphaMap) {\n      uvScaleMap = material.alphaMap;\n    }\n\n    if (uvScaleMap !== undefined) {\n      if (uvScaleMap.matrixAutoUpdate === true) {\n        uvScaleMap.updateMatrix();\n      }\n\n      uniforms.uvTransform.value.copy(uvScaleMap.matrix);\n    }\n  }\n\n  function refreshUniformsSprites(uniforms, material) {\n    uniforms.diffuse.value.copy(material.color);\n    uniforms.opacity.value = material.opacity;\n    uniforms.rotation.value = material.rotation;\n\n    if (material.map) {\n      uniforms.map.value = material.map;\n    }\n\n    if (material.alphaMap) {\n      uniforms.alphaMap.value = material.alphaMap;\n    }\n\n    if (material.alphaTest > 0) {\n      uniforms.alphaTest.value = material.alphaTest;\n    }\n\n    // uv repeat and offset setting priorities\n    // 1. color map\n    // 2. alpha map\n\n    let uvScaleMap;\n\n    if (material.map) {\n      uvScaleMap = material.map;\n    } else if (material.alphaMap) {\n      uvScaleMap = material.alphaMap;\n    }\n\n    if (uvScaleMap !== undefined) {\n      if (uvScaleMap.matrixAutoUpdate === true) {\n        uvScaleMap.updateMatrix();\n      }\n\n      uniforms.uvTransform.value.copy(uvScaleMap.matrix);\n    }\n  }\n\n  function refreshUniformsLambert(uniforms, material) {\n    if (material.emissiveMap) {\n      uniforms.emissiveMap.value = material.emissiveMap;\n    }\n  }\n\n  function refreshUniformsPhong(uniforms, material) {\n    uniforms.specular.value.copy(material.specular);\n    uniforms.shininess.value = Math.max(material.shininess, 1e-4); // to prevent pow( 0.0, 0.0 )\n\n    if (material.emissiveMap) {\n      uniforms.emissiveMap.value = material.emissiveMap;\n    }\n\n    if (material.bumpMap) {\n      uniforms.bumpMap.value = material.bumpMap;\n      uniforms.bumpScale.value = material.bumpScale;\n      if (material.side === BackSide) uniforms.bumpScale.value *= -1;\n    }\n\n    if (material.normalMap) {\n      uniforms.normalMap.value = material.normalMap;\n      uniforms.normalScale.value.copy(material.normalScale);\n      if (material.side === BackSide) uniforms.normalScale.value.negate();\n    }\n\n    if (material.displacementMap) {\n      uniforms.displacementMap.value = material.displacementMap;\n      uniforms.displacementScale.value = material.displacementScale;\n      uniforms.displacementBias.value = material.displacementBias;\n    }\n  }\n\n  function refreshUniformsToon(uniforms, material) {\n    if (material.gradientMap) {\n      uniforms.gradientMap.value = material.gradientMap;\n    }\n\n    if (material.emissiveMap) {\n      uniforms.emissiveMap.value = material.emissiveMap;\n    }\n\n    if (material.bumpMap) {\n      uniforms.bumpMap.value = material.bumpMap;\n      uniforms.bumpScale.value = material.bumpScale;\n      if (material.side === BackSide) uniforms.bumpScale.value *= -1;\n    }\n\n    if (material.normalMap) {\n      uniforms.normalMap.value = material.normalMap;\n      uniforms.normalScale.value.copy(material.normalScale);\n      if (material.side === BackSide) uniforms.normalScale.value.negate();\n    }\n\n    if (material.displacementMap) {\n      uniforms.displacementMap.value = material.displacementMap;\n      uniforms.displacementScale.value = material.displacementScale;\n      uniforms.displacementBias.value = material.displacementBias;\n    }\n  }\n\n  function refreshUniformsStandard(uniforms, material) {\n    uniforms.roughness.value = material.roughness;\n    uniforms.metalness.value = material.metalness;\n\n    if (material.roughnessMap) {\n      uniforms.roughnessMap.value = material.roughnessMap;\n    }\n\n    if (material.metalnessMap) {\n      uniforms.metalnessMap.value = material.metalnessMap;\n    }\n\n    if (material.emissiveMap) {\n      uniforms.emissiveMap.value = material.emissiveMap;\n    }\n\n    if (material.bumpMap) {\n      uniforms.bumpMap.value = material.bumpMap;\n      uniforms.bumpScale.value = material.bumpScale;\n      if (material.side === BackSide) uniforms.bumpScale.value *= -1;\n    }\n\n    if (material.normalMap) {\n      uniforms.normalMap.value = material.normalMap;\n      uniforms.normalScale.value.copy(material.normalScale);\n      if (material.side === BackSide) uniforms.normalScale.value.negate();\n    }\n\n    if (material.displacementMap) {\n      uniforms.displacementMap.value = material.displacementMap;\n      uniforms.displacementScale.value = material.displacementScale;\n      uniforms.displacementBias.value = material.displacementBias;\n    }\n\n    const envMap = properties.get(material).envMap;\n\n    if (envMap) {\n      //uniforms.envMap.value = material.envMap; // part of uniforms common\n      uniforms.envMapIntensity.value = material.envMapIntensity;\n    }\n  }\n\n  function refreshUniformsPhysical(\n    uniforms,\n    material,\n    transmissionRenderTarget\n  ) {\n    refreshUniformsStandard(uniforms, material);\n\n    uniforms.ior.value = material.ior; // also part of uniforms common\n\n    if (material.sheen > 0) {\n      uniforms.sheenColor.value\n        .copy(material.sheenColor)\n        .multiplyScalar(material.sheen);\n\n      uniforms.sheenRoughness.value = material.sheenRoughness;\n\n      if (material.sheenColorMap) {\n        uniforms.sheenColorMap.value = material.sheenColorMap;\n      }\n\n      if (material.sheenRoughnessMap) {\n        uniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n      }\n    }\n\n    if (material.clearcoat > 0) {\n      uniforms.clearcoat.value = material.clearcoat;\n      uniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n      if (material.clearcoatMap) {\n        uniforms.clearcoatMap.value = material.clearcoatMap;\n      }\n\n      if (material.clearcoatRoughnessMap) {\n        uniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n      }\n\n      if (material.clearcoatNormalMap) {\n        uniforms.clearcoatNormalScale.value.copy(material.clearcoatNormalScale);\n        uniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n        if (material.side === BackSide) {\n          uniforms.clearcoatNormalScale.value.negate();\n        }\n      }\n    }\n\n    if (material.transmission > 0) {\n      uniforms.transmission.value = material.transmission;\n      uniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n      uniforms.transmissionSamplerSize.value.set(\n        transmissionRenderTarget.width,\n        transmissionRenderTarget.height\n      );\n\n      if (material.transmissionMap) {\n        uniforms.transmissionMap.value = material.transmissionMap;\n      }\n\n      uniforms.thickness.value = material.thickness;\n\n      if (material.thicknessMap) {\n        uniforms.thicknessMap.value = material.thicknessMap;\n      }\n\n      uniforms.attenuationDistance.value = material.attenuationDistance;\n      uniforms.attenuationColor.value.copy(material.attenuationColor);\n    }\n\n    uniforms.specularIntensity.value = material.specularIntensity;\n    uniforms.specularColor.value.copy(material.specularColor);\n\n    if (material.specularIntensityMap) {\n      uniforms.specularIntensityMap.value = material.specularIntensityMap;\n    }\n\n    if (material.specularColorMap) {\n      uniforms.specularColorMap.value = material.specularColorMap;\n    }\n  }\n\n  function refreshUniformsMatcap(uniforms, material) {\n    if (material.matcap) {\n      uniforms.matcap.value = material.matcap;\n    }\n\n    if (material.bumpMap) {\n      uniforms.bumpMap.value = material.bumpMap;\n      uniforms.bumpScale.value = material.bumpScale;\n      if (material.side === BackSide) uniforms.bumpScale.value *= -1;\n    }\n\n    if (material.normalMap) {\n      uniforms.normalMap.value = material.normalMap;\n      uniforms.normalScale.value.copy(material.normalScale);\n      if (material.side === BackSide) uniforms.normalScale.value.negate();\n    }\n\n    if (material.displacementMap) {\n      uniforms.displacementMap.value = material.displacementMap;\n      uniforms.displacementScale.value = material.displacementScale;\n      uniforms.displacementBias.value = material.displacementBias;\n    }\n  }\n\n  function refreshUniformsDepth(uniforms, material) {\n    if (material.displacementMap) {\n      uniforms.displacementMap.value = material.displacementMap;\n      uniforms.displacementScale.value = material.displacementScale;\n      uniforms.displacementBias.value = material.displacementBias;\n    }\n  }\n\n  function refreshUniformsDistance(uniforms, material) {\n    if (material.displacementMap) {\n      uniforms.displacementMap.value = material.displacementMap;\n      uniforms.displacementScale.value = material.displacementScale;\n      uniforms.displacementBias.value = material.displacementBias;\n    }\n\n    uniforms.referencePosition.value.copy(material.referencePosition);\n    uniforms.nearDistance.value = material.nearDistance;\n    uniforms.farDistance.value = material.farDistance;\n  }\n\n  function refreshUniformsNormal(uniforms, material) {\n    if (material.bumpMap) {\n      uniforms.bumpMap.value = material.bumpMap;\n      uniforms.bumpScale.value = material.bumpScale;\n      if (material.side === BackSide) uniforms.bumpScale.value *= -1;\n    }\n\n    if (material.normalMap) {\n      uniforms.normalMap.value = material.normalMap;\n      uniforms.normalScale.value.copy(material.normalScale);\n      if (material.side === BackSide) uniforms.normalScale.value.negate();\n    }\n\n    if (material.displacementMap) {\n      uniforms.displacementMap.value = material.displacementMap;\n      uniforms.displacementScale.value = material.displacementScale;\n      uniforms.displacementBias.value = material.displacementBias;\n    }\n  }\n\n  return {\n    refreshFogUniforms: refreshFogUniforms,\n    refreshMaterialUniforms: refreshMaterialUniforms,\n  };\n}\n\nfunction createCanvasElement() {\n  const canvas = createElementNS(\"canvas\");\n  canvas.style.display = \"block\";\n  return canvas;\n}\n\nfunction WebGLRenderer(parameters = {}) {\n  const _canvas =\n      parameters.canvas !== undefined\n        ? parameters.canvas\n        : createCanvasElement(),\n    _context = parameters.context !== undefined ? parameters.context : null,\n    _alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n    _depth = parameters.depth !== undefined ? parameters.depth : true,\n    _stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n    _antialias =\n      parameters.antialias !== undefined ? parameters.antialias : false,\n    _premultipliedAlpha =\n      parameters.premultipliedAlpha !== undefined\n        ? parameters.premultipliedAlpha\n        : true,\n    _preserveDrawingBuffer =\n      parameters.preserveDrawingBuffer !== undefined\n        ? parameters.preserveDrawingBuffer\n        : false,\n    _powerPreference =\n      parameters.powerPreference !== undefined\n        ? parameters.powerPreference\n        : \"default\",\n    _failIfMajorPerformanceCaveat =\n      parameters.failIfMajorPerformanceCaveat !== undefined\n        ? parameters.failIfMajorPerformanceCaveat\n        : false;\n\n  let currentRenderList = null;\n  let currentRenderState = null;\n\n  // render() can be called from within a callback triggered by another render.\n  // We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n  const renderListStack = [];\n  const renderStateStack = [];\n\n  // public properties\n\n  this.domElement = _canvas;\n\n  // Debug configuration container\n  this.debug = {\n    /**\n     * Enables error checking and reporting when shader programs are being compiled\n     * @type {boolean}\n     */\n    checkShaderErrors: true,\n  };\n\n  // clearing\n\n  this.autoClear = true;\n  this.autoClearColor = true;\n  this.autoClearDepth = true;\n  this.autoClearStencil = true;\n\n  // scene graph\n\n  this.sortObjects = true;\n\n  // user-defined clipping\n\n  this.clippingPlanes = [];\n  this.localClippingEnabled = false;\n\n  // physically based shading\n\n  this.gammaFactor = 2.0; // for backwards compatibility\n  this.outputEncoding = LinearEncoding;\n\n  // physical lights\n\n  this.physicallyCorrectLights = false;\n\n  // tone mapping\n\n  this.toneMapping = NoToneMapping;\n  this.toneMappingExposure = 1.0;\n\n  // internal properties\n\n  const _this = this;\n\n  let _isContextLost = false;\n\n  // internal state cache\n\n  let _currentActiveCubeFace = 0;\n  let _currentActiveMipmapLevel = 0;\n  let _currentRenderTarget = null;\n  let _currentMaterialId = -1;\n\n  let _currentCamera = null;\n\n  const _currentViewport = new Vector4();\n  const _currentScissor = new Vector4();\n  let _currentScissorTest = null;\n\n  //\n\n  let _width = _canvas.width;\n  let _height = _canvas.height;\n\n  let _pixelRatio = 1;\n  let _opaqueSort = null;\n  let _transparentSort = null;\n\n  const _viewport = new Vector4(0, 0, _width, _height);\n  const _scissor = new Vector4(0, 0, _width, _height);\n  let _scissorTest = false;\n\n  //\n\n  const _currentDrawBuffers = [];\n\n  // frustum\n\n  const _frustum = new Frustum();\n\n  // clipping\n\n  let _clippingEnabled = false;\n  let _localClippingEnabled = false;\n\n  // transmission\n\n  let _transmissionRenderTarget = null;\n\n  // camera matrices cache\n\n  const _projScreenMatrix = new Matrix4();\n\n  const _vector3 = new Vector3();\n\n  const _emptyScene = {\n    background: null,\n    fog: null,\n    environment: null,\n    overrideMaterial: null,\n    isScene: true,\n  };\n\n  function getTargetPixelRatio() {\n    return _currentRenderTarget === null ? _pixelRatio : 1;\n  }\n\n  // initialize\n\n  let _gl = _context;\n\n  function getContext(contextNames, contextAttributes) {\n    for (let i = 0; i < contextNames.length; i++) {\n      const contextName = contextNames[i];\n      const context = _canvas.getContext(contextName, contextAttributes);\n      if (context !== null) return context;\n    }\n\n    return null;\n  }\n\n  try {\n    const contextAttributes = {\n      alpha: _alpha,\n      depth: _depth,\n      stencil: _stencil,\n      antialias: _antialias,\n      premultipliedAlpha: _premultipliedAlpha,\n      preserveDrawingBuffer: _preserveDrawingBuffer,\n      powerPreference: _powerPreference,\n      failIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat,\n    };\n\n    _canvas.setAttribute(\"data-engine\", `three.js r${REVISION}`);\n\n    // event listeners must be registered before WebGL context is created, see #12753\n\n    _canvas.addEventListener(\"webglcontextlost\", onContextLost, false);\n    _canvas.addEventListener(\"webglcontextrestored\", onContextRestore, false);\n\n    if (_gl === null) {\n      const contextNames = [\"webgl2\", \"webgl\", \"experimental-webgl\"];\n\n      if (_this.isWebGL1Renderer === true) {\n        contextNames.shift();\n      }\n\n      _gl = getContext(contextNames, contextAttributes);\n\n      if (_gl === null) {\n        if (getContext(contextNames)) {\n          throw new Error(\n            \"Error creating WebGL context with your selected attributes.\"\n          );\n        } else {\n          throw new Error(\"Error creating WebGL context.\");\n        }\n      }\n    }\n\n    // Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n    if (_gl.getShaderPrecisionFormat === undefined) {\n      _gl.getShaderPrecisionFormat = function () {\n        return { rangeMin: 1, rangeMax: 1, precision: 1 };\n      };\n    }\n  } catch (error) {\n    console.error(\"THREE.WebGLRenderer: \" + error.message);\n    throw error;\n  }\n\n  let extensions, capabilities, state, info;\n  let properties,\n    textures,\n    cubemaps,\n    cubeuvmaps,\n    attributes,\n    geometries,\n    objects;\n  let programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n  let background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n  let utils, bindingStates;\n\n  function initGLContext() {\n    extensions = new WebGLExtensions(_gl);\n\n    capabilities = new WebGLCapabilities(_gl, extensions, parameters);\n\n    extensions.init(capabilities);\n\n    utils = new WebGLUtils(_gl, extensions, capabilities);\n\n    state = new WebGLState(_gl, extensions, capabilities);\n\n    _currentDrawBuffers[0] = 1029;\n\n    info = new WebGLInfo(_gl);\n    properties = new WebGLProperties();\n    textures = new WebGLTextures(\n      _gl,\n      extensions,\n      state,\n      properties,\n      capabilities,\n      utils,\n      info\n    );\n    cubemaps = new WebGLCubeMaps(_this);\n    cubeuvmaps = new WebGLCubeUVMaps(_this);\n    attributes = new WebGLAttributes(_gl, capabilities);\n    bindingStates = new WebGLBindingStates(\n      _gl,\n      extensions,\n      attributes,\n      capabilities\n    );\n    geometries = new WebGLGeometries(_gl, attributes, info, bindingStates);\n    objects = new WebGLObjects(_gl, geometries, attributes, info);\n    morphtargets = new WebGLMorphtargets(_gl, capabilities, textures);\n    clipping = new WebGLClipping(properties);\n    programCache = new WebGLPrograms(\n      _this,\n      cubemaps,\n      cubeuvmaps,\n      extensions,\n      capabilities,\n      bindingStates,\n      clipping\n    );\n    materials = new WebGLMaterials(properties);\n    renderLists = new WebGLRenderLists(properties);\n    renderStates = new WebGLRenderStates(extensions, capabilities);\n    background = new WebGLBackground(\n      _this,\n      cubemaps,\n      state,\n      objects,\n      _premultipliedAlpha\n    );\n    shadowMap = new WebGLShadowMap(_this, objects, capabilities);\n\n    bufferRenderer = new WebGLBufferRenderer(\n      _gl,\n      extensions,\n      info,\n      capabilities\n    );\n    indexedBufferRenderer = new WebGLIndexedBufferRenderer(\n      _gl,\n      extensions,\n      info,\n      capabilities\n    );\n\n    info.programs = programCache.programs;\n\n    _this.capabilities = capabilities;\n    _this.extensions = extensions;\n    _this.properties = properties;\n    _this.renderLists = renderLists;\n    _this.shadowMap = shadowMap;\n    _this.state = state;\n    _this.info = info;\n  }\n\n  initGLContext();\n\n  // xr\n\n  const xr = new WebXRManager(_this, _gl);\n\n  this.xr = xr;\n\n  // API\n\n  this.getContext = function () {\n    return _gl;\n  };\n\n  this.getContextAttributes = function () {\n    return _gl.getContextAttributes();\n  };\n\n  this.forceContextLoss = function () {\n    const extension = extensions.get(\"WEBGL_lose_context\");\n    if (extension) extension.loseContext();\n  };\n\n  this.forceContextRestore = function () {\n    const extension = extensions.get(\"WEBGL_lose_context\");\n    if (extension) extension.restoreContext();\n  };\n\n  this.getPixelRatio = function () {\n    return _pixelRatio;\n  };\n\n  this.setPixelRatio = function (value) {\n    if (value === undefined) return;\n\n    _pixelRatio = value;\n\n    this.setSize(_width, _height, false);\n  };\n\n  this.getSize = function (target) {\n    return target.set(_width, _height);\n  };\n\n  this.setSize = function (width, height, updateStyle) {\n    if (xr.isPresenting) {\n      console.warn(\n        \"THREE.WebGLRenderer: Can't change size while VR device is presenting.\"\n      );\n      return;\n    }\n\n    _width = width;\n    _height = height;\n\n    _canvas.width = Math.floor(width * _pixelRatio);\n    _canvas.height = Math.floor(height * _pixelRatio);\n\n    if (updateStyle !== false) {\n      _canvas.style.width = width + \"px\";\n      _canvas.style.height = height + \"px\";\n    }\n\n    this.setViewport(0, 0, width, height);\n  };\n\n  this.getDrawingBufferSize = function (target) {\n    return target.set(_width * _pixelRatio, _height * _pixelRatio).floor();\n  };\n\n  this.setDrawingBufferSize = function (width, height, pixelRatio) {\n    _width = width;\n    _height = height;\n\n    _pixelRatio = pixelRatio;\n\n    _canvas.width = Math.floor(width * pixelRatio);\n    _canvas.height = Math.floor(height * pixelRatio);\n\n    this.setViewport(0, 0, width, height);\n  };\n\n  this.getCurrentViewport = function (target) {\n    return target.copy(_currentViewport);\n  };\n\n  this.getViewport = function (target) {\n    return target.copy(_viewport);\n  };\n\n  this.setViewport = function (x, y, width, height) {\n    if (x.isVector4) {\n      _viewport.set(x.x, x.y, x.z, x.w);\n    } else {\n      _viewport.set(x, y, width, height);\n    }\n\n    state.viewport(\n      _currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor()\n    );\n  };\n\n  this.getScissor = function (target) {\n    return target.copy(_scissor);\n  };\n\n  this.setScissor = function (x, y, width, height) {\n    if (x.isVector4) {\n      _scissor.set(x.x, x.y, x.z, x.w);\n    } else {\n      _scissor.set(x, y, width, height);\n    }\n\n    state.scissor(\n      _currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor()\n    );\n  };\n\n  this.getScissorTest = function () {\n    return _scissorTest;\n  };\n\n  this.setScissorTest = function (boolean) {\n    state.setScissorTest((_scissorTest = boolean));\n  };\n\n  this.setOpaqueSort = function (method) {\n    _opaqueSort = method;\n  };\n\n  this.setTransparentSort = function (method) {\n    _transparentSort = method;\n  };\n\n  // Clearing\n\n  this.getClearColor = function (target) {\n    return target.copy(background.getClearColor());\n  };\n\n  this.setClearColor = function () {\n    background.setClearColor.apply(background, arguments);\n  };\n\n  this.getClearAlpha = function () {\n    return background.getClearAlpha();\n  };\n\n  this.setClearAlpha = function () {\n    background.setClearAlpha.apply(background, arguments);\n  };\n\n  this.clear = function (color, depth, stencil) {\n    let bits = 0;\n\n    if (color === undefined || color) bits |= 16384;\n    if (depth === undefined || depth) bits |= 256;\n    if (stencil === undefined || stencil) bits |= 1024;\n\n    _gl.clear(bits);\n  };\n\n  this.clearColor = function () {\n    this.clear(true, false, false);\n  };\n\n  this.clearDepth = function () {\n    this.clear(false, true, false);\n  };\n\n  this.clearStencil = function () {\n    this.clear(false, false, true);\n  };\n\n  //\n\n  this.dispose = function () {\n    _canvas.removeEventListener(\"webglcontextlost\", onContextLost, false);\n    _canvas.removeEventListener(\n      \"webglcontextrestored\",\n      onContextRestore,\n      false\n    );\n\n    renderLists.dispose();\n    renderStates.dispose();\n    properties.dispose();\n    cubemaps.dispose();\n    cubeuvmaps.dispose();\n    objects.dispose();\n    bindingStates.dispose();\n\n    xr.dispose();\n\n    xr.removeEventListener(\"sessionstart\", onXRSessionStart);\n    xr.removeEventListener(\"sessionend\", onXRSessionEnd);\n\n    if (_transmissionRenderTarget) {\n      _transmissionRenderTarget.dispose();\n      _transmissionRenderTarget = null;\n    }\n\n    animation.stop();\n  };\n\n  // Events\n\n  function onContextLost(event) {\n    event.preventDefault();\n\n    console.log(\"THREE.WebGLRenderer: Context Lost.\");\n\n    _isContextLost = true;\n  }\n\n  function onContextRestore(/* event */) {\n    console.log(\"THREE.WebGLRenderer: Context Restored.\");\n\n    _isContextLost = false;\n\n    const infoAutoReset = info.autoReset;\n    const shadowMapEnabled = shadowMap.enabled;\n    const shadowMapAutoUpdate = shadowMap.autoUpdate;\n    const shadowMapNeedsUpdate = shadowMap.needsUpdate;\n    const shadowMapType = shadowMap.type;\n\n    initGLContext();\n\n    info.autoReset = infoAutoReset;\n    shadowMap.enabled = shadowMapEnabled;\n    shadowMap.autoUpdate = shadowMapAutoUpdate;\n    shadowMap.needsUpdate = shadowMapNeedsUpdate;\n    shadowMap.type = shadowMapType;\n  }\n\n  function onMaterialDispose(event) {\n    const material = event.target;\n\n    material.removeEventListener(\"dispose\", onMaterialDispose);\n\n    deallocateMaterial(material);\n  }\n\n  // Buffer deallocation\n\n  function deallocateMaterial(material) {\n    releaseMaterialProgramReferences(material);\n\n    properties.remove(material);\n  }\n\n  function releaseMaterialProgramReferences(material) {\n    const programs = properties.get(material).programs;\n\n    if (programs !== undefined) {\n      programs.forEach(function (program) {\n        programCache.releaseProgram(program);\n      });\n    }\n  }\n\n  // Buffer rendering\n\n  this.renderBufferDirect = function (\n    camera,\n    scene,\n    geometry,\n    material,\n    object,\n    group\n  ) {\n    if (scene === null) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n    const frontFaceCW = object.isMesh && object.matrixWorld.determinant() < 0;\n\n    const program = setProgram(camera, scene, geometry, material, object);\n\n    state.setMaterial(material, frontFaceCW);\n\n    //\n\n    let index = geometry.index;\n    const position = geometry.attributes.position;\n\n    //\n\n    if (index === null) {\n      if (position === undefined || position.count === 0) return;\n    } else if (index.count === 0) {\n      return;\n    }\n\n    //\n\n    let rangeFactor = 1;\n\n    if (material.wireframe === true) {\n      index = geometries.getWireframeAttribute(geometry);\n      rangeFactor = 2;\n    }\n\n    bindingStates.setup(object, material, program, geometry, index);\n\n    let attribute;\n    let renderer = bufferRenderer;\n\n    if (index !== null) {\n      attribute = attributes.get(index);\n\n      renderer = indexedBufferRenderer;\n      renderer.setIndex(attribute);\n    }\n\n    //\n\n    const dataCount = index !== null ? index.count : position.count;\n\n    const rangeStart = geometry.drawRange.start * rangeFactor;\n    const rangeCount = geometry.drawRange.count * rangeFactor;\n\n    const groupStart = group !== null ? group.start * rangeFactor : 0;\n    const groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n    const drawStart = Math.max(rangeStart, groupStart);\n    const drawEnd =\n      Math.min(dataCount, rangeStart + rangeCount, groupStart + groupCount) - 1;\n\n    const drawCount = Math.max(0, drawEnd - drawStart + 1);\n\n    if (drawCount === 0) return;\n\n    //\n\n    if (object.isMesh) {\n      if (material.wireframe === true) {\n        state.setLineWidth(material.wireframeLinewidth * getTargetPixelRatio());\n        renderer.setMode(1);\n      } else {\n        renderer.setMode(4);\n      }\n    } else if (object.isLine) {\n      let lineWidth = material.linewidth;\n\n      if (lineWidth === undefined) lineWidth = 1; // Not using Line*Material\n\n      state.setLineWidth(lineWidth * getTargetPixelRatio());\n\n      if (object.isLineSegments) {\n        renderer.setMode(1);\n      } else if (object.isLineLoop) {\n        renderer.setMode(2);\n      } else {\n        renderer.setMode(3);\n      }\n    } else if (object.isPoints) {\n      renderer.setMode(0);\n    } else if (object.isSprite) {\n      renderer.setMode(4);\n    }\n\n    if (object.isInstancedMesh) {\n      renderer.renderInstances(drawStart, drawCount, object.count);\n    } else if (geometry.isInstancedBufferGeometry) {\n      const instanceCount = Math.min(\n        geometry.instanceCount,\n        geometry._maxInstanceCount\n      );\n\n      renderer.renderInstances(drawStart, drawCount, instanceCount);\n    } else {\n      renderer.render(drawStart, drawCount);\n    }\n  };\n\n  // Compile\n\n  this.compile = function (scene, camera) {\n    currentRenderState = renderStates.get(scene);\n    currentRenderState.init();\n\n    renderStateStack.push(currentRenderState);\n\n    scene.traverseVisible(function (object) {\n      if (object.isLight && object.layers.test(camera.layers)) {\n        currentRenderState.pushLight(object);\n\n        if (object.castShadow) {\n          currentRenderState.pushShadow(object);\n        }\n      }\n    });\n\n    currentRenderState.setupLights(_this.physicallyCorrectLights);\n\n    scene.traverse(function (object) {\n      const material = object.material;\n\n      if (material) {\n        if (Array.isArray(material)) {\n          for (let i = 0; i < material.length; i++) {\n            const material2 = material[i];\n\n            getProgram(material2, scene, object);\n          }\n        } else {\n          getProgram(material, scene, object);\n        }\n      }\n    });\n\n    renderStateStack.pop();\n    currentRenderState = null;\n  };\n\n  // Animation Loop\n\n  let onAnimationFrameCallback = null;\n\n  function onAnimationFrame(time) {\n    if (onAnimationFrameCallback) onAnimationFrameCallback(time);\n  }\n\n  function onXRSessionStart() {\n    animation.stop();\n  }\n\n  function onXRSessionEnd() {\n    animation.start();\n  }\n\n  const animation = new WebGLAnimation();\n  animation.setAnimationLoop(onAnimationFrame);\n\n  if (typeof window !== \"undefined\") animation.setContext(window);\n\n  this.setAnimationLoop = function (callback) {\n    onAnimationFrameCallback = callback;\n    xr.setAnimationLoop(callback);\n\n    callback === null ? animation.stop() : animation.start();\n  };\n\n  xr.addEventListener(\"sessionstart\", onXRSessionStart);\n  xr.addEventListener(\"sessionend\", onXRSessionEnd);\n\n  // Rendering\n\n  this.render = function (scene, camera) {\n    if (camera !== undefined && camera.isCamera !== true) {\n      console.error(\n        \"THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.\"\n      );\n      return;\n    }\n\n    if (_isContextLost === true) return;\n\n    // update scene graph\n\n    if (scene.autoUpdate === true) scene.updateMatrixWorld();\n\n    // update camera matrices and frustum\n\n    if (camera.parent === null) camera.updateMatrixWorld();\n\n    if (xr.enabled === true && xr.isPresenting === true) {\n      if (xr.cameraAutoUpdate === true) xr.updateCamera(camera);\n\n      camera = xr.getCamera(); // use XR camera for rendering\n    }\n\n    //\n    if (scene.isScene === true)\n      scene.onBeforeRender(_this, scene, camera, _currentRenderTarget);\n\n    currentRenderState = renderStates.get(scene, renderStateStack.length);\n    currentRenderState.init();\n\n    renderStateStack.push(currentRenderState);\n\n    _projScreenMatrix.multiplyMatrices(\n      camera.projectionMatrix,\n      camera.matrixWorldInverse\n    );\n    _frustum.setFromProjectionMatrix(_projScreenMatrix);\n\n    _localClippingEnabled = this.localClippingEnabled;\n    _clippingEnabled = clipping.init(\n      this.clippingPlanes,\n      _localClippingEnabled,\n      camera\n    );\n\n    currentRenderList = renderLists.get(scene, renderListStack.length);\n    currentRenderList.init();\n\n    renderListStack.push(currentRenderList);\n\n    projectObject(scene, camera, 0, _this.sortObjects);\n\n    currentRenderList.finish();\n\n    if (_this.sortObjects === true) {\n      currentRenderList.sort(_opaqueSort, _transparentSort);\n    }\n\n    //\n\n    if (_clippingEnabled === true) clipping.beginShadows();\n\n    const shadowsArray = currentRenderState.state.shadowsArray;\n\n    shadowMap.render(shadowsArray, scene, camera);\n\n    if (_clippingEnabled === true) clipping.endShadows();\n\n    //\n\n    if (this.info.autoReset === true) this.info.reset();\n\n    //\n\n    background.render(currentRenderList, scene);\n\n    // render scene\n\n    currentRenderState.setupLights(_this.physicallyCorrectLights);\n\n    if (camera.isArrayCamera) {\n      const cameras = camera.cameras;\n\n      for (let i = 0, l = cameras.length; i < l; i++) {\n        const camera2 = cameras[i];\n\n        renderScene(currentRenderList, scene, camera2, camera2.viewport);\n      }\n    } else {\n      renderScene(currentRenderList, scene, camera);\n    }\n\n    //\n\n    if (_currentRenderTarget !== null) {\n      // resolve multisample renderbuffers to a single-sample texture if necessary\n\n      textures.updateMultisampleRenderTarget(_currentRenderTarget);\n\n      // Generate mipmap if we're using any kind of mipmap filtering\n\n      textures.updateRenderTargetMipmap(_currentRenderTarget);\n    }\n\n    //\n\n    if (scene.isScene === true) scene.onAfterRender(_this, scene, camera);\n\n    // Ensure depth buffer writing is enabled so it can be cleared on next render\n\n    state.buffers.depth.setTest(true);\n    state.buffers.depth.setMask(true);\n    state.buffers.color.setMask(true);\n\n    state.setPolygonOffset(false);\n\n    // _gl.finish();\n\n    bindingStates.resetDefaultState();\n    _currentMaterialId = -1;\n    _currentCamera = null;\n\n    renderStateStack.pop();\n\n    if (renderStateStack.length > 0) {\n      currentRenderState = renderStateStack[renderStateStack.length - 1];\n    } else {\n      currentRenderState = null;\n    }\n\n    renderListStack.pop();\n\n    if (renderListStack.length > 0) {\n      currentRenderList = renderListStack[renderListStack.length - 1];\n    } else {\n      currentRenderList = null;\n    }\n  };\n\n  function projectObject(object, camera, groupOrder, sortObjects) {\n    if (object.visible === false) return;\n\n    const visible = object.layers.test(camera.layers);\n\n    if (visible) {\n      if (object.isGroup) {\n        groupOrder = object.renderOrder;\n      } else if (object.isLOD) {\n        if (object.autoUpdate === true) object.update(camera);\n      } else if (object.isLight) {\n        currentRenderState.pushLight(object);\n\n        if (object.castShadow) {\n          currentRenderState.pushShadow(object);\n        }\n      } else if (object.isSprite) {\n        if (!object.frustumCulled || _frustum.intersectsSprite(object)) {\n          if (sortObjects) {\n            _vector3\n              .setFromMatrixPosition(object.matrixWorld)\n              .applyMatrix4(_projScreenMatrix);\n          }\n\n          const geometry = objects.update(object);\n          const material = object.material;\n\n          if (material.visible) {\n            currentRenderList.push(\n              object,\n              geometry,\n              material,\n              groupOrder,\n              _vector3.z,\n              null\n            );\n          }\n        }\n      } else if (object.isMesh || object.isLine || object.isPoints) {\n        if (object.isSkinnedMesh) {\n          // update skeleton only once in a frame\n\n          if (object.skeleton.frame !== info.render.frame) {\n            object.skeleton.update();\n            object.skeleton.frame = info.render.frame;\n          }\n        }\n\n        if (!object.frustumCulled || _frustum.intersectsObject(object)) {\n          if (sortObjects) {\n            _vector3\n              .setFromMatrixPosition(object.matrixWorld)\n              .applyMatrix4(_projScreenMatrix);\n          }\n\n          const geometry = objects.update(object);\n          const material = object.material;\n\n          if (Array.isArray(material)) {\n            const groups = geometry.groups;\n\n            for (let i = 0, l = groups.length; i < l; i++) {\n              const group = groups[i];\n              const groupMaterial = material[group.materialIndex];\n\n              if (groupMaterial && groupMaterial.visible) {\n                currentRenderList.push(\n                  object,\n                  geometry,\n                  groupMaterial,\n                  groupOrder,\n                  _vector3.z,\n                  group\n                );\n              }\n            }\n          } else if (material.visible) {\n            currentRenderList.push(\n              object,\n              geometry,\n              material,\n              groupOrder,\n              _vector3.z,\n              null\n            );\n          }\n        }\n      }\n    }\n\n    const children = object.children;\n\n    for (let i = 0, l = children.length; i < l; i++) {\n      projectObject(children[i], camera, groupOrder, sortObjects);\n    }\n  }\n\n  function renderScene(currentRenderList, scene, camera, viewport) {\n    const opaqueObjects = currentRenderList.opaque;\n    const transmissiveObjects = currentRenderList.transmissive;\n    const transparentObjects = currentRenderList.transparent;\n\n    currentRenderState.setupLightsView(camera);\n\n    if (transmissiveObjects.length > 0)\n      renderTransmissionPass(opaqueObjects, scene, camera);\n\n    if (viewport) state.viewport(_currentViewport.copy(viewport));\n\n    if (opaqueObjects.length > 0) renderObjects(opaqueObjects, scene, camera);\n    if (transmissiveObjects.length > 0)\n      renderObjects(transmissiveObjects, scene, camera);\n    if (transparentObjects.length > 0)\n      renderObjects(transparentObjects, scene, camera);\n  }\n\n  function renderTransmissionPass(opaqueObjects, scene, camera) {\n    if (_transmissionRenderTarget === null) {\n      const needsAntialias =\n        _antialias === true && capabilities.isWebGL2 === true;\n      const renderTargetType = needsAntialias\n        ? WebGLMultisampleRenderTarget\n        : WebGLRenderTarget;\n\n      _transmissionRenderTarget = new renderTargetType(1024, 1024, {\n        generateMipmaps: true,\n        type:\n          utils.convert(HalfFloatType) !== null\n            ? HalfFloatType\n            : UnsignedByteType,\n        minFilter: LinearMipmapLinearFilter,\n        magFilter: NearestFilter,\n        wrapS: ClampToEdgeWrapping,\n        wrapT: ClampToEdgeWrapping,\n      });\n    }\n\n    const currentRenderTarget = _this.getRenderTarget();\n    _this.setRenderTarget(_transmissionRenderTarget);\n    _this.clear();\n\n    // Turn off the features which can affect the frag color for opaque objects pass.\n    // Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n    const currentToneMapping = _this.toneMapping;\n    _this.toneMapping = NoToneMapping;\n\n    renderObjects(opaqueObjects, scene, camera);\n\n    _this.toneMapping = currentToneMapping;\n\n    textures.updateMultisampleRenderTarget(_transmissionRenderTarget);\n    textures.updateRenderTargetMipmap(_transmissionRenderTarget);\n\n    _this.setRenderTarget(currentRenderTarget);\n  }\n\n  function renderObjects(renderList, scene, camera) {\n    const overrideMaterial =\n      scene.isScene === true ? scene.overrideMaterial : null;\n\n    for (let i = 0, l = renderList.length; i < l; i++) {\n      const renderItem = renderList[i];\n\n      const object = renderItem.object;\n      const geometry = renderItem.geometry;\n      const material =\n        overrideMaterial === null ? renderItem.material : overrideMaterial;\n      const group = renderItem.group;\n\n      if (object.layers.test(camera.layers)) {\n        renderObject(object, scene, camera, geometry, material, group);\n      }\n    }\n  }\n\n  function renderObject(object, scene, camera, geometry, material, group) {\n    object.onBeforeRender(_this, scene, camera, geometry, material, group);\n\n    object.modelViewMatrix.multiplyMatrices(\n      camera.matrixWorldInverse,\n      object.matrixWorld\n    );\n    object.normalMatrix.getNormalMatrix(object.modelViewMatrix);\n\n    material.onBeforeRender(_this, scene, camera, geometry, object, group);\n\n    if (material.transparent === true && material.side === DoubleSide) {\n      material.side = BackSide;\n      material.needsUpdate = true;\n      _this.renderBufferDirect(\n        camera,\n        scene,\n        geometry,\n        material,\n        object,\n        group\n      );\n\n      material.side = FrontSide;\n      material.needsUpdate = true;\n      _this.renderBufferDirect(\n        camera,\n        scene,\n        geometry,\n        material,\n        object,\n        group\n      );\n\n      material.side = DoubleSide;\n    } else {\n      _this.renderBufferDirect(\n        camera,\n        scene,\n        geometry,\n        material,\n        object,\n        group\n      );\n    }\n\n    object.onAfterRender(_this, scene, camera, geometry, material, group);\n  }\n\n  function getProgram(material, scene, object) {\n    if (scene.isScene !== true) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n    const materialProperties = properties.get(material);\n\n    const lights = currentRenderState.state.lights;\n    const shadowsArray = currentRenderState.state.shadowsArray;\n\n    const lightsStateVersion = lights.state.version;\n\n    const parameters = programCache.getParameters(\n      material,\n      lights.state,\n      shadowsArray,\n      scene,\n      object\n    );\n    const programCacheKey = programCache.getProgramCacheKey(parameters);\n\n    let programs = materialProperties.programs;\n\n    // always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n    materialProperties.environment = material.isMeshStandardMaterial\n      ? scene.environment\n      : null;\n    materialProperties.fog = scene.fog;\n    materialProperties.envMap = (\n      material.isMeshStandardMaterial ? cubeuvmaps : cubemaps\n    ).get(material.envMap || materialProperties.environment);\n\n    if (programs === undefined) {\n      // new material\n\n      material.addEventListener(\"dispose\", onMaterialDispose);\n\n      programs = new Map();\n      materialProperties.programs = programs;\n    }\n\n    let program = programs.get(programCacheKey);\n\n    if (program !== undefined) {\n      // early out if program and light state is identical\n\n      if (\n        materialProperties.currentProgram === program &&\n        materialProperties.lightsStateVersion === lightsStateVersion\n      ) {\n        updateCommonMaterialProperties(material, parameters);\n\n        return program;\n      }\n    } else {\n      parameters.uniforms = programCache.getUniforms(material);\n\n      material.onBuild(object, parameters, _this);\n\n      material.onBeforeCompile(parameters, _this);\n\n      program = programCache.acquireProgram(parameters, programCacheKey);\n      programs.set(programCacheKey, program);\n\n      materialProperties.uniforms = parameters.uniforms;\n    }\n\n    const uniforms = materialProperties.uniforms;\n\n    if (\n      (!material.isShaderMaterial && !material.isRawShaderMaterial) ||\n      material.clipping === true\n    ) {\n      uniforms.clippingPlanes = clipping.uniform;\n    }\n\n    updateCommonMaterialProperties(material, parameters);\n\n    // store the light setup it was created for\n\n    materialProperties.needsLights = materialNeedsLights(material);\n    materialProperties.lightsStateVersion = lightsStateVersion;\n\n    if (materialProperties.needsLights) {\n      // wire up the material to this renderer's lighting state\n\n      uniforms.ambientLightColor.value = lights.state.ambient;\n      uniforms.lightProbe.value = lights.state.probe;\n      uniforms.directionalLights.value = lights.state.directional;\n      uniforms.directionalLightShadows.value = lights.state.directionalShadow;\n      uniforms.spotLights.value = lights.state.spot;\n      uniforms.spotLightShadows.value = lights.state.spotShadow;\n      uniforms.rectAreaLights.value = lights.state.rectArea;\n      uniforms.ltc_1.value = lights.state.rectAreaLTC1;\n      uniforms.ltc_2.value = lights.state.rectAreaLTC2;\n      uniforms.pointLights.value = lights.state.point;\n      uniforms.pointLightShadows.value = lights.state.pointShadow;\n      uniforms.hemisphereLights.value = lights.state.hemi;\n\n      uniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n      uniforms.directionalShadowMatrix.value =\n        lights.state.directionalShadowMatrix;\n      uniforms.spotShadowMap.value = lights.state.spotShadowMap;\n      uniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n      uniforms.pointShadowMap.value = lights.state.pointShadowMap;\n      uniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n      // TODO (abelnation): add area lights shadow info to uniforms\n    }\n\n    const progUniforms = program.getUniforms();\n    const uniformsList = WebGLUniforms.seqWithValue(progUniforms.seq, uniforms);\n\n    materialProperties.currentProgram = program;\n    materialProperties.uniformsList = uniformsList;\n\n    return program;\n  }\n\n  function updateCommonMaterialProperties(material, parameters) {\n    const materialProperties = properties.get(material);\n\n    materialProperties.outputEncoding = parameters.outputEncoding;\n    materialProperties.instancing = parameters.instancing;\n    materialProperties.skinning = parameters.skinning;\n    materialProperties.morphTargets = parameters.morphTargets;\n    materialProperties.morphNormals = parameters.morphNormals;\n    materialProperties.morphTargetsCount = parameters.morphTargetsCount;\n    materialProperties.numClippingPlanes = parameters.numClippingPlanes;\n    materialProperties.numIntersection = parameters.numClipIntersection;\n    materialProperties.vertexAlphas = parameters.vertexAlphas;\n    materialProperties.vertexTangents = parameters.vertexTangents;\n  }\n\n  function setProgram(camera, scene, geometry, material, object) {\n    if (scene.isScene !== true) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n    textures.resetTextureUnits();\n\n    const fog = scene.fog;\n    const environment = material.isMeshStandardMaterial\n      ? scene.environment\n      : null;\n    const encoding =\n      _currentRenderTarget === null\n        ? _this.outputEncoding\n        : _currentRenderTarget.texture.encoding;\n    const envMap = (\n      material.isMeshStandardMaterial ? cubeuvmaps : cubemaps\n    ).get(material.envMap || environment);\n    const vertexAlphas =\n      material.vertexColors === true &&\n      !!geometry.attributes.color &&\n      geometry.attributes.color.itemSize === 4;\n    const vertexTangents =\n      !!material.normalMap && !!geometry.attributes.tangent;\n    const morphTargets = !!geometry.morphAttributes.position;\n    const morphNormals = !!geometry.morphAttributes.normal;\n    const morphTargetsCount = !!geometry.morphAttributes.position\n      ? geometry.morphAttributes.position.length\n      : 0;\n\n    const materialProperties = properties.get(material);\n    const lights = currentRenderState.state.lights;\n\n    if (_clippingEnabled === true) {\n      if (_localClippingEnabled === true || camera !== _currentCamera) {\n        const useCache =\n          camera === _currentCamera && material.id === _currentMaterialId;\n\n        // we might want to call this function with some ClippingGroup\n        // object instead of the material, once it becomes feasible\n        // (#8465, #8379)\n        clipping.setState(material, camera, useCache);\n      }\n    }\n\n    //\n\n    let needsProgramChange = false;\n\n    if (material.version === materialProperties.__version) {\n      if (\n        materialProperties.needsLights &&\n        materialProperties.lightsStateVersion !== lights.state.version\n      ) {\n        needsProgramChange = true;\n      } else if (materialProperties.outputEncoding !== encoding) {\n        needsProgramChange = true;\n      } else if (\n        object.isInstancedMesh &&\n        materialProperties.instancing === false\n      ) {\n        needsProgramChange = true;\n      } else if (\n        !object.isInstancedMesh &&\n        materialProperties.instancing === true\n      ) {\n        needsProgramChange = true;\n      } else if (\n        object.isSkinnedMesh &&\n        materialProperties.skinning === false\n      ) {\n        needsProgramChange = true;\n      } else if (\n        !object.isSkinnedMesh &&\n        materialProperties.skinning === true\n      ) {\n        needsProgramChange = true;\n      } else if (materialProperties.envMap !== envMap) {\n        needsProgramChange = true;\n      } else if (material.fog && materialProperties.fog !== fog) {\n        needsProgramChange = true;\n      } else if (\n        materialProperties.numClippingPlanes !== undefined &&\n        (materialProperties.numClippingPlanes !== clipping.numPlanes ||\n          materialProperties.numIntersection !== clipping.numIntersection)\n      ) {\n        needsProgramChange = true;\n      } else if (materialProperties.vertexAlphas !== vertexAlphas) {\n        needsProgramChange = true;\n      } else if (materialProperties.vertexTangents !== vertexTangents) {\n        needsProgramChange = true;\n      } else if (materialProperties.morphTargets !== morphTargets) {\n        needsProgramChange = true;\n      } else if (materialProperties.morphNormals !== morphNormals) {\n        needsProgramChange = true;\n      } else if (\n        capabilities.isWebGL2 === true &&\n        materialProperties.morphTargetsCount !== morphTargetsCount\n      ) {\n        needsProgramChange = true;\n      }\n    } else {\n      needsProgramChange = true;\n      materialProperties.__version = material.version;\n    }\n\n    //\n\n    let program = materialProperties.currentProgram;\n\n    if (needsProgramChange === true) {\n      program = getProgram(material, scene, object);\n    }\n\n    let refreshProgram = false;\n    let refreshMaterial = false;\n    let refreshLights = false;\n\n    const p_uniforms = program.getUniforms(),\n      m_uniforms = materialProperties.uniforms;\n\n    if (state.useProgram(program.program)) {\n      refreshProgram = true;\n      refreshMaterial = true;\n      refreshLights = true;\n    }\n\n    if (material.id !== _currentMaterialId) {\n      _currentMaterialId = material.id;\n\n      refreshMaterial = true;\n    }\n\n    if (refreshProgram || _currentCamera !== camera) {\n      p_uniforms.setValue(_gl, \"projectionMatrix\", camera.projectionMatrix);\n\n      if (capabilities.logarithmicDepthBuffer) {\n        p_uniforms.setValue(\n          _gl,\n          \"logDepthBufFC\",\n          2.0 / (Math.log(camera.far + 1.0) / Math.LN2)\n        );\n      }\n\n      if (_currentCamera !== camera) {\n        _currentCamera = camera;\n\n        // lighting uniforms depend on the camera so enforce an update\n        // now, in case this material supports lights - or later, when\n        // the next material that does gets activated:\n\n        refreshMaterial = true; // set to true on material change\n        refreshLights = true; // remains set until update done\n      }\n\n      // load material specific uniforms\n      // (shader material also gets them for the sake of genericity)\n\n      if (\n        material.isShaderMaterial ||\n        material.isMeshPhongMaterial ||\n        material.isMeshToonMaterial ||\n        material.isMeshStandardMaterial ||\n        material.envMap\n      ) {\n        const uCamPos = p_uniforms.map.cameraPosition;\n\n        if (uCamPos !== undefined) {\n          uCamPos.setValue(\n            _gl,\n            _vector3.setFromMatrixPosition(camera.matrixWorld)\n          );\n        }\n      }\n\n      if (\n        material.isMeshPhongMaterial ||\n        material.isMeshToonMaterial ||\n        material.isMeshLambertMaterial ||\n        material.isMeshBasicMaterial ||\n        material.isMeshStandardMaterial ||\n        material.isShaderMaterial\n      ) {\n        p_uniforms.setValue(\n          _gl,\n          \"isOrthographic\",\n          camera.isOrthographicCamera === true\n        );\n      }\n\n      if (\n        material.isMeshPhongMaterial ||\n        material.isMeshToonMaterial ||\n        material.isMeshLambertMaterial ||\n        material.isMeshBasicMaterial ||\n        material.isMeshStandardMaterial ||\n        material.isShaderMaterial ||\n        material.isShadowMaterial ||\n        object.isSkinnedMesh\n      ) {\n        p_uniforms.setValue(_gl, \"viewMatrix\", camera.matrixWorldInverse);\n      }\n    }\n\n    // skinning and morph target uniforms must be set even if material didn't change\n    // auto-setting of texture unit for bone and morph texture must go before other textures\n    // otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n    if (object.isSkinnedMesh) {\n      p_uniforms.setOptional(_gl, object, \"bindMatrix\");\n      p_uniforms.setOptional(_gl, object, \"bindMatrixInverse\");\n\n      const skeleton = object.skeleton;\n\n      if (skeleton) {\n        if (capabilities.floatVertexTextures) {\n          if (skeleton.boneTexture === null) skeleton.computeBoneTexture();\n\n          p_uniforms.setValue(\n            _gl,\n            \"boneTexture\",\n            skeleton.boneTexture,\n            textures\n          );\n          p_uniforms.setValue(_gl, \"boneTextureSize\", skeleton.boneTextureSize);\n        } else {\n          p_uniforms.setOptional(_gl, skeleton, \"boneMatrices\");\n        }\n      }\n    }\n\n    if (\n      !!geometry &&\n      (geometry.morphAttributes.position !== undefined ||\n        geometry.morphAttributes.normal !== undefined)\n    ) {\n      morphtargets.update(object, geometry, material, program);\n    }\n\n    if (\n      refreshMaterial ||\n      materialProperties.receiveShadow !== object.receiveShadow\n    ) {\n      materialProperties.receiveShadow = object.receiveShadow;\n      p_uniforms.setValue(_gl, \"receiveShadow\", object.receiveShadow);\n    }\n\n    if (refreshMaterial) {\n      p_uniforms.setValue(\n        _gl,\n        \"toneMappingExposure\",\n        _this.toneMappingExposure\n      );\n\n      if (materialProperties.needsLights) {\n        // the current material requires lighting info\n\n        // note: all lighting uniforms are always set correctly\n        // they simply reference the renderer's state for their\n        // values\n        //\n        // use the current material's .needsUpdate flags to set\n        // the GL state when required\n\n        markUniformsLightsNeedsUpdate(m_uniforms, refreshLights);\n      }\n\n      // refresh uniforms common to several materials\n\n      if (fog && material.fog) {\n        materials.refreshFogUniforms(m_uniforms, fog);\n      }\n\n      materials.refreshMaterialUniforms(\n        m_uniforms,\n        material,\n        _pixelRatio,\n        _height,\n        _transmissionRenderTarget\n      );\n\n      WebGLUniforms.upload(\n        _gl,\n        materialProperties.uniformsList,\n        m_uniforms,\n        textures\n      );\n    }\n\n    if (material.isShaderMaterial && material.uniformsNeedUpdate === true) {\n      WebGLUniforms.upload(\n        _gl,\n        materialProperties.uniformsList,\n        m_uniforms,\n        textures\n      );\n      material.uniformsNeedUpdate = false;\n    }\n\n    if (material.isSpriteMaterial) {\n      p_uniforms.setValue(_gl, \"center\", object.center);\n    }\n\n    // common matrices\n\n    p_uniforms.setValue(_gl, \"modelViewMatrix\", object.modelViewMatrix);\n    p_uniforms.setValue(_gl, \"normalMatrix\", object.normalMatrix);\n    p_uniforms.setValue(_gl, \"modelMatrix\", object.matrixWorld);\n\n    return program;\n  }\n\n  // If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n  function markUniformsLightsNeedsUpdate(uniforms, value) {\n    uniforms.ambientLightColor.needsUpdate = value;\n    uniforms.lightProbe.needsUpdate = value;\n\n    uniforms.directionalLights.needsUpdate = value;\n    uniforms.directionalLightShadows.needsUpdate = value;\n    uniforms.pointLights.needsUpdate = value;\n    uniforms.pointLightShadows.needsUpdate = value;\n    uniforms.spotLights.needsUpdate = value;\n    uniforms.spotLightShadows.needsUpdate = value;\n    uniforms.rectAreaLights.needsUpdate = value;\n    uniforms.hemisphereLights.needsUpdate = value;\n  }\n\n  function materialNeedsLights(material) {\n    return (\n      material.isMeshLambertMaterial ||\n      material.isMeshToonMaterial ||\n      material.isMeshPhongMaterial ||\n      material.isMeshStandardMaterial ||\n      material.isShadowMaterial ||\n      (material.isShaderMaterial && material.lights === true)\n    );\n  }\n\n  this.getActiveCubeFace = function () {\n    return _currentActiveCubeFace;\n  };\n\n  this.getActiveMipmapLevel = function () {\n    return _currentActiveMipmapLevel;\n  };\n\n  this.getRenderTarget = function () {\n    return _currentRenderTarget;\n  };\n\n  this.setRenderTarget = function (\n    renderTarget,\n    activeCubeFace = 0,\n    activeMipmapLevel = 0\n  ) {\n    _currentRenderTarget = renderTarget;\n    _currentActiveCubeFace = activeCubeFace;\n    _currentActiveMipmapLevel = activeMipmapLevel;\n\n    if (\n      renderTarget &&\n      properties.get(renderTarget).__webglFramebuffer === undefined\n    ) {\n      textures.setupRenderTarget(renderTarget);\n    }\n\n    let framebuffer = null;\n    let isCube = false;\n    let isRenderTarget3D = false;\n\n    if (renderTarget) {\n      const texture = renderTarget.texture;\n\n      if (texture.isDataTexture3D || texture.isDataTexture2DArray) {\n        isRenderTarget3D = true;\n      }\n\n      const __webglFramebuffer =\n        properties.get(renderTarget).__webglFramebuffer;\n\n      if (renderTarget.isWebGLCubeRenderTarget) {\n        framebuffer = __webglFramebuffer[activeCubeFace];\n        isCube = true;\n      } else if (renderTarget.isWebGLMultisampleRenderTarget) {\n        framebuffer =\n          properties.get(renderTarget).__webglMultisampledFramebuffer;\n      } else {\n        framebuffer = __webglFramebuffer;\n      }\n\n      _currentViewport.copy(renderTarget.viewport);\n      _currentScissor.copy(renderTarget.scissor);\n      _currentScissorTest = renderTarget.scissorTest;\n    } else {\n      _currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor();\n      _currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor();\n      _currentScissorTest = _scissorTest;\n    }\n\n    const framebufferBound = state.bindFramebuffer(36160, framebuffer);\n\n    if (framebufferBound && capabilities.drawBuffers) {\n      let needsUpdate = false;\n\n      if (renderTarget) {\n        if (renderTarget.isWebGLMultipleRenderTargets) {\n          const textures = renderTarget.texture;\n\n          if (\n            _currentDrawBuffers.length !== textures.length ||\n            _currentDrawBuffers[0] !== 36064\n          ) {\n            for (let i = 0, il = textures.length; i < il; i++) {\n              _currentDrawBuffers[i] = 36064 + i;\n            }\n\n            _currentDrawBuffers.length = textures.length;\n\n            needsUpdate = true;\n          }\n        } else {\n          if (\n            _currentDrawBuffers.length !== 1 ||\n            _currentDrawBuffers[0] !== 36064\n          ) {\n            _currentDrawBuffers[0] = 36064;\n            _currentDrawBuffers.length = 1;\n\n            needsUpdate = true;\n          }\n        }\n      } else {\n        if (\n          _currentDrawBuffers.length !== 1 ||\n          _currentDrawBuffers[0] !== 1029\n        ) {\n          _currentDrawBuffers[0] = 1029;\n          _currentDrawBuffers.length = 1;\n\n          needsUpdate = true;\n        }\n      }\n\n      if (needsUpdate) {\n        if (capabilities.isWebGL2) {\n          _gl.drawBuffers(_currentDrawBuffers);\n        } else {\n          extensions\n            .get(\"WEBGL_draw_buffers\")\n            .drawBuffersWEBGL(_currentDrawBuffers);\n        }\n      }\n    }\n\n    state.viewport(_currentViewport);\n    state.scissor(_currentScissor);\n    state.setScissorTest(_currentScissorTest);\n\n    if (isCube) {\n      const textureProperties = properties.get(renderTarget.texture);\n      _gl.framebufferTexture2D(\n        36160,\n        36064,\n        34069 + activeCubeFace,\n        textureProperties.__webglTexture,\n        activeMipmapLevel\n      );\n    } else if (isRenderTarget3D) {\n      const textureProperties = properties.get(renderTarget.texture);\n      const layer = activeCubeFace || 0;\n      _gl.framebufferTextureLayer(\n        36160,\n        36064,\n        textureProperties.__webglTexture,\n        activeMipmapLevel || 0,\n        layer\n      );\n    }\n\n    _currentMaterialId = -1; // reset current material to ensure correct uniform bindings\n  };\n\n  this.readRenderTargetPixels = function (\n    renderTarget,\n    x,\n    y,\n    width,\n    height,\n    buffer,\n    activeCubeFaceIndex\n  ) {\n    if (!(renderTarget && renderTarget.isWebGLRenderTarget)) {\n      console.error(\n        \"THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.\"\n      );\n      return;\n    }\n\n    let framebuffer = properties.get(renderTarget).__webglFramebuffer;\n\n    if (\n      renderTarget.isWebGLCubeRenderTarget &&\n      activeCubeFaceIndex !== undefined\n    ) {\n      framebuffer = framebuffer[activeCubeFaceIndex];\n    }\n\n    if (framebuffer) {\n      state.bindFramebuffer(36160, framebuffer);\n\n      try {\n        const texture = renderTarget.texture;\n        const textureFormat = texture.format;\n        const textureType = texture.type;\n\n        if (\n          textureFormat !== RGBAFormat &&\n          utils.convert(textureFormat) !== _gl.getParameter(35739)\n        ) {\n          console.error(\n            \"THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.\"\n          );\n          return;\n        }\n\n        const halfFloatSupportedByExt =\n          textureType === HalfFloatType &&\n          (extensions.has(\"EXT_color_buffer_half_float\") ||\n            (capabilities.isWebGL2 &&\n              extensions.has(\"EXT_color_buffer_float\")));\n\n        if (\n          textureType !== UnsignedByteType &&\n          utils.convert(textureType) !== _gl.getParameter(35738) && // Edge and Chrome Mac < 52 (#9513)\n          !(\n            textureType === FloatType &&\n            (capabilities.isWebGL2 ||\n              extensions.has(\"OES_texture_float\") ||\n              extensions.has(\"WEBGL_color_buffer_float\"))\n          ) && // Chrome Mac >= 52 and Firefox\n          !halfFloatSupportedByExt\n        ) {\n          console.error(\n            \"THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.\"\n          );\n          return;\n        }\n\n        if (_gl.checkFramebufferStatus(36160) === 36053) {\n          // the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n          if (\n            x >= 0 &&\n            x <= renderTarget.width - width &&\n            y >= 0 &&\n            y <= renderTarget.height - height\n          ) {\n            _gl.readPixels(\n              x,\n              y,\n              width,\n              height,\n              utils.convert(textureFormat),\n              utils.convert(textureType),\n              buffer\n            );\n          }\n        } else {\n          console.error(\n            \"THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.\"\n          );\n        }\n      } finally {\n        // restore framebuffer of current render target if necessary\n\n        const framebuffer =\n          _currentRenderTarget !== null\n            ? properties.get(_currentRenderTarget).__webglFramebuffer\n            : null;\n        state.bindFramebuffer(36160, framebuffer);\n      }\n    }\n  };\n\n  this.copyFramebufferToTexture = function (position, texture, level = 0) {\n    const levelScale = Math.pow(2, -level);\n    const width = Math.floor(texture.image.width * levelScale);\n    const height = Math.floor(texture.image.height * levelScale);\n\n    let glFormat = utils.convert(texture.format);\n\n    if (capabilities.isWebGL2) {\n      // Workaround for https://bugs.chromium.org/p/chromium/issues/detail?id=1120100\n      // Not needed in Chrome 93+\n\n      if (glFormat === 6407) glFormat = 32849;\n      if (glFormat === 6408) glFormat = 32856;\n    }\n\n    textures.setTexture2D(texture, 0);\n\n    _gl.copyTexImage2D(\n      3553,\n      level,\n      glFormat,\n      position.x,\n      position.y,\n      width,\n      height,\n      0\n    );\n\n    state.unbindTexture();\n  };\n\n  this.copyTextureToTexture = function (\n    position,\n    srcTexture,\n    dstTexture,\n    level = 0\n  ) {\n    const width = srcTexture.image.width;\n    const height = srcTexture.image.height;\n    const glFormat = utils.convert(dstTexture.format);\n    const glType = utils.convert(dstTexture.type);\n\n    textures.setTexture2D(dstTexture, 0);\n\n    // As another texture upload may have changed pixelStorei\n    // parameters, make sure they are correct for the dstTexture\n    _gl.pixelStorei(37440, dstTexture.flipY);\n    _gl.pixelStorei(37441, dstTexture.premultiplyAlpha);\n    _gl.pixelStorei(3317, dstTexture.unpackAlignment);\n\n    if (srcTexture.isDataTexture) {\n      _gl.texSubImage2D(\n        3553,\n        level,\n        position.x,\n        position.y,\n        width,\n        height,\n        glFormat,\n        glType,\n        srcTexture.image.data\n      );\n    } else {\n      if (srcTexture.isCompressedTexture) {\n        _gl.compressedTexSubImage2D(\n          3553,\n          level,\n          position.x,\n          position.y,\n          srcTexture.mipmaps[0].width,\n          srcTexture.mipmaps[0].height,\n          glFormat,\n          srcTexture.mipmaps[0].data\n        );\n      } else {\n        _gl.texSubImage2D(\n          3553,\n          level,\n          position.x,\n          position.y,\n          glFormat,\n          glType,\n          srcTexture.image\n        );\n      }\n    }\n\n    // Generate mipmaps only when copying level 0\n    if (level === 0 && dstTexture.generateMipmaps) _gl.generateMipmap(3553);\n\n    state.unbindTexture();\n  };\n\n  this.copyTextureToTexture3D = function (\n    sourceBox,\n    position,\n    srcTexture,\n    dstTexture,\n    level = 0\n  ) {\n    if (_this.isWebGL1Renderer) {\n      console.warn(\n        \"THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.\"\n      );\n      return;\n    }\n\n    const width = sourceBox.max.x - sourceBox.min.x + 1;\n    const height = sourceBox.max.y - sourceBox.min.y + 1;\n    const depth = sourceBox.max.z - sourceBox.min.z + 1;\n    const glFormat = utils.convert(dstTexture.format);\n    const glType = utils.convert(dstTexture.type);\n    let glTarget;\n\n    if (dstTexture.isDataTexture3D) {\n      textures.setTexture3D(dstTexture, 0);\n      glTarget = 32879;\n    } else if (dstTexture.isDataTexture2DArray) {\n      textures.setTexture2DArray(dstTexture, 0);\n      glTarget = 35866;\n    } else {\n      console.warn(\n        \"THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.\"\n      );\n      return;\n    }\n\n    _gl.pixelStorei(37440, dstTexture.flipY);\n    _gl.pixelStorei(37441, dstTexture.premultiplyAlpha);\n    _gl.pixelStorei(3317, dstTexture.unpackAlignment);\n\n    const unpackRowLen = _gl.getParameter(3314);\n    const unpackImageHeight = _gl.getParameter(32878);\n    const unpackSkipPixels = _gl.getParameter(3316);\n    const unpackSkipRows = _gl.getParameter(3315);\n    const unpackSkipImages = _gl.getParameter(32877);\n\n    const image = srcTexture.isCompressedTexture\n      ? srcTexture.mipmaps[0]\n      : srcTexture.image;\n\n    _gl.pixelStorei(3314, image.width);\n    _gl.pixelStorei(32878, image.height);\n    _gl.pixelStorei(3316, sourceBox.min.x);\n    _gl.pixelStorei(3315, sourceBox.min.y);\n    _gl.pixelStorei(32877, sourceBox.min.z);\n\n    if (srcTexture.isDataTexture || srcTexture.isDataTexture3D) {\n      _gl.texSubImage3D(\n        glTarget,\n        level,\n        position.x,\n        position.y,\n        position.z,\n        width,\n        height,\n        depth,\n        glFormat,\n        glType,\n        image.data\n      );\n    } else {\n      if (srcTexture.isCompressedTexture) {\n        console.warn(\n          \"THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.\"\n        );\n        _gl.compressedTexSubImage3D(\n          glTarget,\n          level,\n          position.x,\n          position.y,\n          position.z,\n          width,\n          height,\n          depth,\n          glFormat,\n          image.data\n        );\n      } else {\n        _gl.texSubImage3D(\n          glTarget,\n          level,\n          position.x,\n          position.y,\n          position.z,\n          width,\n          height,\n          depth,\n          glFormat,\n          glType,\n          image\n        );\n      }\n    }\n\n    _gl.pixelStorei(3314, unpackRowLen);\n    _gl.pixelStorei(32878, unpackImageHeight);\n    _gl.pixelStorei(3316, unpackSkipPixels);\n    _gl.pixelStorei(3315, unpackSkipRows);\n    _gl.pixelStorei(32877, unpackSkipImages);\n\n    // Generate mipmaps only when copying level 0\n    if (level === 0 && dstTexture.generateMipmaps) _gl.generateMipmap(glTarget);\n\n    state.unbindTexture();\n  };\n\n  this.initTexture = function (texture) {\n    textures.setTexture2D(texture, 0);\n\n    state.unbindTexture();\n  };\n\n  this.resetState = function () {\n    _currentActiveCubeFace = 0;\n    _currentActiveMipmapLevel = 0;\n    _currentRenderTarget = null;\n\n    state.reset();\n    bindingStates.reset();\n  };\n\n  if (typeof __THREE_DEVTOOLS__ !== \"undefined\") {\n    __THREE_DEVTOOLS__.dispatchEvent(\n      new CustomEvent(\"observe\", { detail: this })\n    ); // eslint-disable-line no-undef\n  }\n}\n\nWebGLRenderer.prototype.isWebGLRenderer = true;\n\nclass WebGL1Renderer extends WebGLRenderer {}\n\nWebGL1Renderer.prototype.isWebGL1Renderer = true;\n\nclass FogExp2 {\n  constructor(color, density = 0.00025) {\n    this.name = \"\";\n\n    this.color = new Color(color);\n    this.density = density;\n  }\n\n  clone() {\n    return new FogExp2(this.color, this.density);\n  }\n\n  toJSON(/* meta */) {\n    return {\n      type: \"FogExp2\",\n      color: this.color.getHex(),\n      density: this.density,\n    };\n  }\n}\n\nFogExp2.prototype.isFogExp2 = true;\n\nclass Fog {\n  constructor(color, near = 1, far = 1000) {\n    this.name = \"\";\n\n    this.color = new Color(color);\n\n    this.near = near;\n    this.far = far;\n  }\n\n  clone() {\n    return new Fog(this.color, this.near, this.far);\n  }\n\n  toJSON(/* meta */) {\n    return {\n      type: \"Fog\",\n      color: this.color.getHex(),\n      near: this.near,\n      far: this.far,\n    };\n  }\n}\n\nFog.prototype.isFog = true;\n\nclass Scene extends Object3D {\n  constructor() {\n    super();\n\n    this.type = \"Scene\";\n\n    this.background = null;\n    this.environment = null;\n    this.fog = null;\n\n    this.overrideMaterial = null;\n\n    this.autoUpdate = true; // checked by the renderer\n\n    if (typeof __THREE_DEVTOOLS__ !== \"undefined\") {\n      __THREE_DEVTOOLS__.dispatchEvent(\n        new CustomEvent(\"observe\", { detail: this })\n      ); // eslint-disable-line no-undef\n    }\n  }\n\n  copy(source, recursive) {\n    super.copy(source, recursive);\n\n    if (source.background !== null) this.background = source.background.clone();\n    if (source.environment !== null)\n      this.environment = source.environment.clone();\n    if (source.fog !== null) this.fog = source.fog.clone();\n\n    if (source.overrideMaterial !== null)\n      this.overrideMaterial = source.overrideMaterial.clone();\n\n    this.autoUpdate = source.autoUpdate;\n    this.matrixAutoUpdate = source.matrixAutoUpdate;\n\n    return this;\n  }\n\n  toJSON(meta) {\n    const data = super.toJSON(meta);\n\n    if (this.fog !== null) data.object.fog = this.fog.toJSON();\n\n    return data;\n  }\n}\n\nScene.prototype.isScene = true;\n\nclass InterleavedBuffer {\n  constructor(array, stride) {\n    this.array = array;\n    this.stride = stride;\n    this.count = array !== undefined ? array.length / stride : 0;\n\n    this.usage = StaticDrawUsage;\n    this.updateRange = { offset: 0, count: -1 };\n\n    this.version = 0;\n\n    this.uuid = generateUUID();\n  }\n\n  onUploadCallback() {}\n\n  set needsUpdate(value) {\n    if (value === true) this.version++;\n  }\n\n  setUsage(value) {\n    this.usage = value;\n\n    return this;\n  }\n\n  copy(source) {\n    this.array = new source.array.constructor(source.array);\n    this.count = source.count;\n    this.stride = source.stride;\n    this.usage = source.usage;\n\n    return this;\n  }\n\n  copyAt(index1, attribute, index2) {\n    index1 *= this.stride;\n    index2 *= attribute.stride;\n\n    for (let i = 0, l = this.stride; i < l; i++) {\n      this.array[index1 + i] = attribute.array[index2 + i];\n    }\n\n    return this;\n  }\n\n  set(value, offset = 0) {\n    this.array.set(value, offset);\n\n    return this;\n  }\n\n  clone(data) {\n    if (data.arrayBuffers === undefined) {\n      data.arrayBuffers = {};\n    }\n\n    if (this.array.buffer._uuid === undefined) {\n      this.array.buffer._uuid = generateUUID();\n    }\n\n    if (data.arrayBuffers[this.array.buffer._uuid] === undefined) {\n      data.arrayBuffers[this.array.buffer._uuid] = this.array.slice(0).buffer;\n    }\n\n    const array = new this.array.constructor(\n      data.arrayBuffers[this.array.buffer._uuid]\n    );\n\n    const ib = new this.constructor(array, this.stride);\n    ib.setUsage(this.usage);\n\n    return ib;\n  }\n\n  onUpload(callback) {\n    this.onUploadCallback = callback;\n\n    return this;\n  }\n\n  toJSON(data) {\n    if (data.arrayBuffers === undefined) {\n      data.arrayBuffers = {};\n    }\n\n    // generate UUID for array buffer if necessary\n\n    if (this.array.buffer._uuid === undefined) {\n      this.array.buffer._uuid = generateUUID();\n    }\n\n    if (data.arrayBuffers[this.array.buffer._uuid] === undefined) {\n      data.arrayBuffers[this.array.buffer._uuid] = Array.prototype.slice.call(\n        new Uint32Array(this.array.buffer)\n      );\n    }\n\n    //\n\n    return {\n      uuid: this.uuid,\n      buffer: this.array.buffer._uuid,\n      type: this.array.constructor.name,\n      stride: this.stride,\n    };\n  }\n}\n\nInterleavedBuffer.prototype.isInterleavedBuffer = true;\n\nconst _vector$6 = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n  constructor(interleavedBuffer, itemSize, offset, normalized = false) {\n    this.name = \"\";\n\n    this.data = interleavedBuffer;\n    this.itemSize = itemSize;\n    this.offset = offset;\n\n    this.normalized = normalized === true;\n  }\n\n  get count() {\n    return this.data.count;\n  }\n\n  get array() {\n    return this.data.array;\n  }\n\n  set needsUpdate(value) {\n    this.data.needsUpdate = value;\n  }\n\n  applyMatrix4(m) {\n    for (let i = 0, l = this.data.count; i < l; i++) {\n      _vector$6.x = this.getX(i);\n      _vector$6.y = this.getY(i);\n      _vector$6.z = this.getZ(i);\n\n      _vector$6.applyMatrix4(m);\n\n      this.setXYZ(i, _vector$6.x, _vector$6.y, _vector$6.z);\n    }\n\n    return this;\n  }\n\n  applyNormalMatrix(m) {\n    for (let i = 0, l = this.count; i < l; i++) {\n      _vector$6.x = this.getX(i);\n      _vector$6.y = this.getY(i);\n      _vector$6.z = this.getZ(i);\n\n      _vector$6.applyNormalMatrix(m);\n\n      this.setXYZ(i, _vector$6.x, _vector$6.y, _vector$6.z);\n    }\n\n    return this;\n  }\n\n  transformDirection(m) {\n    for (let i = 0, l = this.count; i < l; i++) {\n      _vector$6.x = this.getX(i);\n      _vector$6.y = this.getY(i);\n      _vector$6.z = this.getZ(i);\n\n      _vector$6.transformDirection(m);\n\n      this.setXYZ(i, _vector$6.x, _vector$6.y, _vector$6.z);\n    }\n\n    return this;\n  }\n\n  setX(index, x) {\n    this.data.array[index * this.data.stride + this.offset] = x;\n\n    return this;\n  }\n\n  setY(index, y) {\n    this.data.array[index * this.data.stride + this.offset + 1] = y;\n\n    return this;\n  }\n\n  setZ(index, z) {\n    this.data.array[index * this.data.stride + this.offset + 2] = z;\n\n    return this;\n  }\n\n  setW(index, w) {\n    this.data.array[index * this.data.stride + this.offset + 3] = w;\n\n    return this;\n  }\n\n  getX(index) {\n    return this.data.array[index * this.data.stride + this.offset];\n  }\n\n  getY(index) {\n    return this.data.array[index * this.data.stride + this.offset + 1];\n  }\n\n  getZ(index) {\n    return this.data.array[index * this.data.stride + this.offset + 2];\n  }\n\n  getW(index) {\n    return this.data.array[index * this.data.stride + this.offset + 3];\n  }\n\n  setXY(index, x, y) {\n    index = index * this.data.stride + this.offset;\n\n    this.data.array[index + 0] = x;\n    this.data.array[index + 1] = y;\n\n    return this;\n  }\n\n  setXYZ(index, x, y, z) {\n    index = index * this.data.stride + this.offset;\n\n    this.data.array[index + 0] = x;\n    this.data.array[index + 1] = y;\n    this.data.array[index + 2] = z;\n\n    return this;\n  }\n\n  setXYZW(index, x, y, z, w) {\n    index = index * this.data.stride + this.offset;\n\n    this.data.array[index + 0] = x;\n    this.data.array[index + 1] = y;\n    this.data.array[index + 2] = z;\n    this.data.array[index + 3] = w;\n\n    return this;\n  }\n\n  clone(data) {\n    if (data === undefined) {\n      console.log(\n        \"THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.\"\n      );\n\n      const array = [];\n\n      for (let i = 0; i < this.count; i++) {\n        const index = i * this.data.stride + this.offset;\n\n        for (let j = 0; j < this.itemSize; j++) {\n          array.push(this.data.array[index + j]);\n        }\n      }\n\n      return new BufferAttribute(\n        new this.array.constructor(array),\n        this.itemSize,\n        this.normalized\n      );\n    } else {\n      if (data.interleavedBuffers === undefined) {\n        data.interleavedBuffers = {};\n      }\n\n      if (data.interleavedBuffers[this.data.uuid] === undefined) {\n        data.interleavedBuffers[this.data.uuid] = this.data.clone(data);\n      }\n\n      return new InterleavedBufferAttribute(\n        data.interleavedBuffers[this.data.uuid],\n        this.itemSize,\n        this.offset,\n        this.normalized\n      );\n    }\n  }\n\n  toJSON(data) {\n    if (data === undefined) {\n      console.log(\n        \"THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.\"\n      );\n\n      const array = [];\n\n      for (let i = 0; i < this.count; i++) {\n        const index = i * this.data.stride + this.offset;\n\n        for (let j = 0; j < this.itemSize; j++) {\n          array.push(this.data.array[index + j]);\n        }\n      }\n\n      // deinterleave data and save it as an ordinary buffer attribute for now\n\n      return {\n        itemSize: this.itemSize,\n        type: this.array.constructor.name,\n        array: array,\n        normalized: this.normalized,\n      };\n    } else {\n      // save as true interlaved attribtue\n\n      if (data.interleavedBuffers === undefined) {\n        data.interleavedBuffers = {};\n      }\n\n      if (data.interleavedBuffers[this.data.uuid] === undefined) {\n        data.interleavedBuffers[this.data.uuid] = this.data.toJSON(data);\n      }\n\n      return {\n        isInterleavedBufferAttribute: true,\n        itemSize: this.itemSize,\n        data: this.data.uuid,\n        offset: this.offset,\n        normalized: this.normalized,\n      };\n    }\n  }\n}\n\nInterleavedBufferAttribute.prototype.isInterleavedBufferAttribute = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  map: new THREE.Texture( <Image> ),\n *  alphaMap: new THREE.Texture( <Image> ),\n *  rotation: <float>,\n *  sizeAttenuation: <bool>\n * }\n */\n\nclass SpriteMaterial extends Material {\n  constructor(parameters) {\n    super();\n\n    this.type = \"SpriteMaterial\";\n\n    this.color = new Color(0xffffff);\n\n    this.map = null;\n\n    this.alphaMap = null;\n\n    this.rotation = 0;\n\n    this.sizeAttenuation = true;\n\n    this.transparent = true;\n\n    this.setValues(parameters);\n  }\n\n  copy(source) {\n    super.copy(source);\n\n    this.color.copy(source.color);\n\n    this.map = source.map;\n\n    this.alphaMap = source.alphaMap;\n\n    this.rotation = source.rotation;\n\n    this.sizeAttenuation = source.sizeAttenuation;\n\n    return this;\n  }\n}\n\nSpriteMaterial.prototype.isSpriteMaterial = true;\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n  constructor(material) {\n    super();\n\n    this.type = \"Sprite\";\n\n    if (_geometry === undefined) {\n      _geometry = new BufferGeometry();\n\n      const float32Array = new Float32Array([\n        -0.5, -0.5, 0, 0, 0, 0.5, -0.5, 0, 1, 0, 0.5, 0.5, 0, 1, 1, -0.5, 0.5,\n        0, 0, 1,\n      ]);\n\n      const interleavedBuffer = new InterleavedBuffer(float32Array, 5);\n\n      _geometry.setIndex([0, 1, 2, 0, 2, 3]);\n      _geometry.setAttribute(\n        \"position\",\n        new InterleavedBufferAttribute(interleavedBuffer, 3, 0, false)\n      );\n      _geometry.setAttribute(\n        \"uv\",\n        new InterleavedBufferAttribute(interleavedBuffer, 2, 3, false)\n      );\n    }\n\n    this.geometry = _geometry;\n    this.material = material !== undefined ? material : new SpriteMaterial();\n\n    this.center = new Vector2(0.5, 0.5);\n  }\n\n  raycast(raycaster, intersects) {\n    if (raycaster.camera === null) {\n      console.error(\n        'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.'\n      );\n    }\n\n    _worldScale.setFromMatrixScale(this.matrixWorld);\n\n    _viewWorldMatrix.copy(raycaster.camera.matrixWorld);\n    this.modelViewMatrix.multiplyMatrices(\n      raycaster.camera.matrixWorldInverse,\n      this.matrixWorld\n    );\n\n    _mvPosition.setFromMatrixPosition(this.modelViewMatrix);\n\n    if (\n      raycaster.camera.isPerspectiveCamera &&\n      this.material.sizeAttenuation === false\n    ) {\n      _worldScale.multiplyScalar(-_mvPosition.z);\n    }\n\n    const rotation = this.material.rotation;\n    let sin, cos;\n\n    if (rotation !== 0) {\n      cos = Math.cos(rotation);\n      sin = Math.sin(rotation);\n    }\n\n    const center = this.center;\n\n    transformVertex(\n      _vA.set(-0.5, -0.5, 0),\n      _mvPosition,\n      center,\n      _worldScale,\n      sin,\n      cos\n    );\n    transformVertex(\n      _vB.set(0.5, -0.5, 0),\n      _mvPosition,\n      center,\n      _worldScale,\n      sin,\n      cos\n    );\n    transformVertex(\n      _vC.set(0.5, 0.5, 0),\n      _mvPosition,\n      center,\n      _worldScale,\n      sin,\n      cos\n    );\n\n    _uvA.set(0, 0);\n    _uvB.set(1, 0);\n    _uvC.set(1, 1);\n\n    // check first triangle\n    let intersect = raycaster.ray.intersectTriangle(\n      _vA,\n      _vB,\n      _vC,\n      false,\n      _intersectPoint\n    );\n\n    if (intersect === null) {\n      // check second triangle\n      transformVertex(\n        _vB.set(-0.5, 0.5, 0),\n        _mvPosition,\n        center,\n        _worldScale,\n        sin,\n        cos\n      );\n      _uvB.set(0, 1);\n\n      intersect = raycaster.ray.intersectTriangle(\n        _vA,\n        _vC,\n        _vB,\n        false,\n        _intersectPoint\n      );\n      if (intersect === null) {\n        return;\n      }\n    }\n\n    const distance = raycaster.ray.origin.distanceTo(_intersectPoint);\n\n    if (distance < raycaster.near || distance > raycaster.far) return;\n\n    intersects.push({\n      distance: distance,\n      point: _intersectPoint.clone(),\n      uv: Triangle.getUV(\n        _intersectPoint,\n        _vA,\n        _vB,\n        _vC,\n        _uvA,\n        _uvB,\n        _uvC,\n        new Vector2()\n      ),\n      face: null,\n      object: this,\n    });\n  }\n\n  copy(source) {\n    super.copy(source);\n\n    if (source.center !== undefined) this.center.copy(source.center);\n\n    this.material = source.material;\n\n    return this;\n  }\n}\n\nSprite.prototype.isSprite = true;\n\nfunction transformVertex(vertexPosition, mvPosition, center, scale, sin, cos) {\n  // compute position in camera space\n  _alignedPosition\n    .subVectors(vertexPosition, center)\n    .addScalar(0.5)\n    .multiply(scale);\n\n  // to check if rotation is not zero\n  if (sin !== undefined) {\n    _rotatedPosition.x = cos * _alignedPosition.x - sin * _alignedPosition.y;\n    _rotatedPosition.y = sin * _alignedPosition.x + cos * _alignedPosition.y;\n  } else {\n    _rotatedPosition.copy(_alignedPosition);\n  }\n\n  vertexPosition.copy(mvPosition);\n  vertexPosition.x += _rotatedPosition.x;\n  vertexPosition.y += _rotatedPosition.y;\n\n  // transform to world space\n  vertexPosition.applyMatrix4(_viewWorldMatrix);\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n  constructor() {\n    super();\n\n    this._currentLevel = 0;\n\n    this.type = \"LOD\";\n\n    Object.defineProperties(this, {\n      levels: {\n        enumerable: true,\n        value: [],\n      },\n      isLOD: {\n        value: true,\n      },\n    });\n\n    this.autoUpdate = true;\n  }\n\n  copy(source) {\n    super.copy(source, false);\n\n    const levels = source.levels;\n\n    for (let i = 0, l = levels.length; i < l; i++) {\n      const level = levels[i];\n\n      this.addLevel(level.object.clone(), level.distance);\n    }\n\n    this.autoUpdate = source.autoUpdate;\n\n    return this;\n  }\n\n  addLevel(object, distance = 0) {\n    distance = Math.abs(distance);\n\n    const levels = this.levels;\n\n    let l;\n\n    for (l = 0; l < levels.length; l++) {\n      if (distance < levels[l].distance) {\n        break;\n      }\n    }\n\n    levels.splice(l, 0, { distance: distance, object: object });\n\n    this.add(object);\n\n    return this;\n  }\n\n  getCurrentLevel() {\n    return this._currentLevel;\n  }\n\n  getObjectForDistance(distance) {\n    const levels = this.levels;\n\n    if (levels.length > 0) {\n      let i, l;\n\n      for (i = 1, l = levels.length; i < l; i++) {\n        if (distance < levels[i].distance) {\n          break;\n        }\n      }\n\n      return levels[i - 1].object;\n    }\n\n    return null;\n  }\n\n  raycast(raycaster, intersects) {\n    const levels = this.levels;\n\n    if (levels.length > 0) {\n      _v1$2.setFromMatrixPosition(this.matrixWorld);\n\n      const distance = raycaster.ray.origin.distanceTo(_v1$2);\n\n      this.getObjectForDistance(distance).raycast(raycaster, intersects);\n    }\n  }\n\n  update(camera) {\n    const levels = this.levels;\n\n    if (levels.length > 1) {\n      _v1$2.setFromMatrixPosition(camera.matrixWorld);\n      _v2$1.setFromMatrixPosition(this.matrixWorld);\n\n      const distance = _v1$2.distanceTo(_v2$1) / camera.zoom;\n\n      levels[0].object.visible = true;\n\n      let i, l;\n\n      for (i = 1, l = levels.length; i < l; i++) {\n        if (distance >= levels[i].distance) {\n          levels[i - 1].object.visible = false;\n          levels[i].object.visible = true;\n        } else {\n          break;\n        }\n      }\n\n      this._currentLevel = i - 1;\n\n      for (; i < l; i++) {\n        levels[i].object.visible = false;\n      }\n    }\n  }\n\n  toJSON(meta) {\n    const data = super.toJSON(meta);\n\n    if (this.autoUpdate === false) data.object.autoUpdate = false;\n\n    data.object.levels = [];\n\n    const levels = this.levels;\n\n    for (let i = 0, l = levels.length; i < l; i++) {\n      const level = levels[i];\n\n      data.object.levels.push({\n        object: level.object.uuid,\n        distance: level.distance,\n      });\n    }\n\n    return data;\n  }\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector$5 = /*@__PURE__*/ new Vector3();\nconst _matrix = /*@__PURE__*/ new Matrix4();\n\nclass SkinnedMesh extends Mesh {\n  constructor(geometry, material) {\n    super(geometry, material);\n\n    this.type = \"SkinnedMesh\";\n\n    this.bindMode = \"attached\";\n    this.bindMatrix = new Matrix4();\n    this.bindMatrixInverse = new Matrix4();\n  }\n\n  copy(source) {\n    super.copy(source);\n\n    this.bindMode = source.bindMode;\n    this.bindMatrix.copy(source.bindMatrix);\n    this.bindMatrixInverse.copy(source.bindMatrixInverse);\n\n    this.skeleton = source.skeleton;\n\n    return this;\n  }\n\n  bind(skeleton, bindMatrix) {\n    this.skeleton = skeleton;\n\n    if (bindMatrix === undefined) {\n      this.updateMatrixWorld(true);\n\n      this.skeleton.calculateInverses();\n\n      bindMatrix = this.matrixWorld;\n    }\n\n    this.bindMatrix.copy(bindMatrix);\n    this.bindMatrixInverse.copy(bindMatrix).invert();\n  }\n\n  pose() {\n    this.skeleton.pose();\n  }\n\n  normalizeSkinWeights() {\n    const vector = new Vector4();\n\n    const skinWeight = this.geometry.attributes.skinWeight;\n\n    for (let i = 0, l = skinWeight.count; i < l; i++) {\n      vector.x = skinWeight.getX(i);\n      vector.y = skinWeight.getY(i);\n      vector.z = skinWeight.getZ(i);\n      vector.w = skinWeight.getW(i);\n\n      const scale = 1.0 / vector.manhattanLength();\n\n      if (scale !== Infinity) {\n        vector.multiplyScalar(scale);\n      } else {\n        vector.set(1, 0, 0, 0); // do something reasonable\n      }\n\n      skinWeight.setXYZW(i, vector.x, vector.y, vector.z, vector.w);\n    }\n  }\n\n  updateMatrixWorld(force) {\n    super.updateMatrixWorld(force);\n\n    if (this.bindMode === \"attached\") {\n      this.bindMatrixInverse.copy(this.matrixWorld).invert();\n    } else if (this.bindMode === \"detached\") {\n      this.bindMatrixInverse.copy(this.bindMatrix).invert();\n    } else {\n      console.warn(\n        \"THREE.SkinnedMesh: Unrecognized bindMode: \" + this.bindMode\n      );\n    }\n  }\n\n  boneTransform(index, target) {\n    const skeleton = this.skeleton;\n    const geometry = this.geometry;\n\n    _skinIndex.fromBufferAttribute(geometry.attributes.skinIndex, index);\n    _skinWeight.fromBufferAttribute(geometry.attributes.skinWeight, index);\n\n    _basePosition.copy(target).applyMatrix4(this.bindMatrix);\n\n    target.set(0, 0, 0);\n\n    for (let i = 0; i < 4; i++) {\n      const weight = _skinWeight.getComponent(i);\n\n      if (weight !== 0) {\n        const boneIndex = _skinIndex.getComponent(i);\n\n        _matrix.multiplyMatrices(\n          skeleton.bones[boneIndex].matrixWorld,\n          skeleton.boneInverses[boneIndex]\n        );\n\n        target.addScaledVector(\n          _vector$5.copy(_basePosition).applyMatrix4(_matrix),\n          weight\n        );\n      }\n    }\n\n    return target.applyMatrix4(this.bindMatrixInverse);\n  }\n}\n\nSkinnedMesh.prototype.isSkinnedMesh = true;\n\nclass Bone extends Object3D {\n  constructor() {\n    super();\n\n    this.type = \"Bone\";\n  }\n}\n\nBone.prototype.isBone = true;\n\nclass DataTexture extends Texture {\n  constructor(\n    data = null,\n    width = 1,\n    height = 1,\n    format,\n    type,\n    mapping,\n    wrapS,\n    wrapT,\n    magFilter = NearestFilter,\n    minFilter = NearestFilter,\n    anisotropy,\n    encoding\n  ) {\n    super(\n      null,\n      mapping,\n      wrapS,\n      wrapT,\n      magFilter,\n      minFilter,\n      format,\n      type,\n      anisotropy,\n      encoding\n    );\n\n    this.image = { data: data, width: width, height: height };\n\n    this.magFilter = magFilter;\n    this.minFilter = minFilter;\n\n    this.generateMipmaps = false;\n    this.flipY = false;\n    this.unpackAlignment = 1;\n\n    this.needsUpdate = true;\n  }\n}\n\nDataTexture.prototype.isDataTexture = true;\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n  constructor(bones = [], boneInverses = []) {\n    this.uuid = generateUUID();\n\n    this.bones = bones.slice(0);\n    this.boneInverses = boneInverses;\n    this.boneMatrices = null;\n\n    this.boneTexture = null;\n    this.boneTextureSize = 0;\n\n    this.frame = -1;\n\n    this.init();\n  }\n\n  init() {\n    const bones = this.bones;\n    const boneInverses = this.boneInverses;\n\n    this.boneMatrices = new Float32Array(bones.length * 16);\n\n    // calculate inverse bone matrices if necessary\n\n    if (boneInverses.length === 0) {\n      this.calculateInverses();\n    } else {\n      // handle special case\n\n      if (bones.length !== boneInverses.length) {\n        console.warn(\n          \"THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.\"\n        );\n\n        this.boneInverses = [];\n\n        for (let i = 0, il = this.bones.length; i < il; i++) {\n          this.boneInverses.push(new Matrix4());\n        }\n      }\n    }\n  }\n\n  calculateInverses() {\n    this.boneInverses.length = 0;\n\n    for (let i = 0, il = this.bones.length; i < il; i++) {\n      const inverse = new Matrix4();\n\n      if (this.bones[i]) {\n        inverse.copy(this.bones[i].matrixWorld).invert();\n      }\n\n      this.boneInverses.push(inverse);\n    }\n  }\n\n  pose() {\n    // recover the bind-time world matrices\n\n    for (let i = 0, il = this.bones.length; i < il; i++) {\n      const bone = this.bones[i];\n\n      if (bone) {\n        bone.matrixWorld.copy(this.boneInverses[i]).invert();\n      }\n    }\n\n    // compute the local matrices, positions, rotations and scales\n\n    for (let i = 0, il = this.bones.length; i < il; i++) {\n      const bone = this.bones[i];\n\n      if (bone) {\n        if (bone.parent && bone.parent.isBone) {\n          bone.matrix.copy(bone.parent.matrixWorld).invert();\n          bone.matrix.multiply(bone.matrixWorld);\n        } else {\n          bone.matrix.copy(bone.matrixWorld);\n        }\n\n        bone.matrix.decompose(bone.position, bone.quaternion, bone.scale);\n      }\n    }\n  }\n\n  update() {\n    const bones = this.bones;\n    const boneInverses = this.boneInverses;\n    const boneMatrices = this.boneMatrices;\n    const boneTexture = this.boneTexture;\n\n    // flatten bone matrices to array\n\n    for (let i = 0, il = bones.length; i < il; i++) {\n      // compute the offset between the current and the original transform\n\n      const matrix = bones[i] ? bones[i].matrixWorld : _identityMatrix;\n\n      _offsetMatrix.multiplyMatrices(matrix, boneInverses[i]);\n      _offsetMatrix.toArray(boneMatrices, i * 16);\n    }\n\n    if (boneTexture !== null) {\n      boneTexture.needsUpdate = true;\n    }\n  }\n\n  clone() {\n    return new Skeleton(this.bones, this.boneInverses);\n  }\n\n  computeBoneTexture() {\n    // layout (1 matrix = 4 pixels)\n    //      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n    //  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n    //       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n    //       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n    //       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n    let size = Math.sqrt(this.bones.length * 4); // 4 pixels needed for 1 matrix\n    size = ceilPowerOfTwo(size);\n    size = Math.max(size, 4);\n\n    const boneMatrices = new Float32Array(size * size * 4); // 4 floats per RGBA pixel\n    boneMatrices.set(this.boneMatrices); // copy current values\n\n    const boneTexture = new DataTexture(\n      boneMatrices,\n      size,\n      size,\n      RGBAFormat,\n      FloatType\n    );\n\n    this.boneMatrices = boneMatrices;\n    this.boneTexture = boneTexture;\n    this.boneTextureSize = size;\n\n    return this;\n  }\n\n  getBoneByName(name) {\n    for (let i = 0, il = this.bones.length; i < il; i++) {\n      const bone = this.bones[i];\n\n      if (bone.name === name) {\n        return bone;\n      }\n    }\n\n    return undefined;\n  }\n\n  dispose() {\n    if (this.boneTexture !== null) {\n      this.boneTexture.dispose();\n\n      this.boneTexture = null;\n    }\n  }\n\n  fromJSON(json, bones) {\n    this.uuid = json.uuid;\n\n    for (let i = 0, l = json.bones.length; i < l; i++) {\n      const uuid = json.bones[i];\n      let bone = bones[uuid];\n\n      if (bone === undefined) {\n        console.warn(\"THREE.Skeleton: No bone found with UUID:\", uuid);\n        bone = new Bone();\n      }\n\n      this.bones.push(bone);\n      this.boneInverses.push(new Matrix4().fromArray(json.boneInverses[i]));\n    }\n\n    this.init();\n\n    return this;\n  }\n\n  toJSON() {\n    const data = {\n      metadata: {\n        version: 4.5,\n        type: \"Skeleton\",\n        generator: \"Skeleton.toJSON\",\n      },\n      bones: [],\n      boneInverses: [],\n    };\n\n    data.uuid = this.uuid;\n\n    const bones = this.bones;\n    const boneInverses = this.boneInverses;\n\n    for (let i = 0, l = bones.length; i < l; i++) {\n      const bone = bones[i];\n      data.bones.push(bone.uuid);\n\n      const boneInverse = boneInverses[i];\n      data.boneInverses.push(boneInverse.toArray());\n    }\n\n    return data;\n  }\n}\n\nclass InstancedBufferAttribute extends BufferAttribute {\n  constructor(array, itemSize, normalized, meshPerAttribute = 1) {\n    if (typeof normalized === \"number\") {\n      meshPerAttribute = normalized;\n\n      normalized = false;\n\n      console.error(\n        \"THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.\"\n      );\n    }\n\n    super(array, itemSize, normalized);\n\n    this.meshPerAttribute = meshPerAttribute;\n  }\n\n  copy(source) {\n    super.copy(source);\n\n    this.meshPerAttribute = source.meshPerAttribute;\n\n    return this;\n  }\n\n  toJSON() {\n    const data = super.toJSON();\n\n    data.meshPerAttribute = this.meshPerAttribute;\n\n    data.isInstancedBufferAttribute = true;\n\n    return data;\n  }\n}\n\nInstancedBufferAttribute.prototype.isInstancedBufferAttribute = true;\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _mesh = /*@__PURE__*/ new Mesh();\n\nclass InstancedMesh extends Mesh {\n  constructor(geometry, material, count) {\n    super(geometry, material);\n\n    this.instanceMatrix = new InstancedBufferAttribute(\n      new Float32Array(count * 16),\n      16\n    );\n    this.instanceColor = null;\n\n    this.count = count;\n\n    this.frustumCulled = false;\n  }\n\n  copy(source) {\n    super.copy(source);\n\n    this.instanceMatrix.copy(source.instanceMatrix);\n\n    if (source.instanceColor !== null)\n      this.instanceColor = source.instanceColor.clone();\n\n    this.count = source.count;\n\n    return this;\n  }\n\n  getColorAt(index, color) {\n    color.fromArray(this.instanceColor.array, index * 3);\n  }\n\n  getMatrixAt(index, matrix) {\n    matrix.fromArray(this.instanceMatrix.array, index * 16);\n  }\n\n  raycast(raycaster, intersects) {\n    const matrixWorld = this.matrixWorld;\n    const raycastTimes = this.count;\n\n    _mesh.geometry = this.geometry;\n    _mesh.material = this.material;\n\n    if (_mesh.material === undefined) return;\n\n    for (let instanceId = 0; instanceId < raycastTimes; instanceId++) {\n      // calculate the world matrix for each instance\n\n      this.getMatrixAt(instanceId, _instanceLocalMatrix);\n\n      _instanceWorldMatrix.multiplyMatrices(matrixWorld, _instanceLocalMatrix);\n\n      // the mesh represents this single instance\n\n      _mesh.matrixWorld = _instanceWorldMatrix;\n\n      _mesh.raycast(raycaster, _instanceIntersects);\n\n      // process the result of raycast\n\n      for (let i = 0, l = _instanceIntersects.length; i < l; i++) {\n        const intersect = _instanceIntersects[i];\n        intersect.instanceId = instanceId;\n        intersect.object = this;\n        intersects.push(intersect);\n      }\n\n      _instanceIntersects.length = 0;\n    }\n  }\n\n  setColorAt(index, color) {\n    if (this.instanceColor === null) {\n      this.instanceColor = new InstancedBufferAttribute(\n        new Float32Array(this.instanceMatrix.count * 3),\n        3\n      );\n    }\n\n    color.toArray(this.instanceColor.array, index * 3);\n  }\n\n  setMatrixAt(index, matrix) {\n    matrix.toArray(this.instanceMatrix.array, index * 16);\n  }\n\n  updateMorphTargets() {}\n\n  dispose() {\n    this.dispatchEvent({ type: \"dispose\" });\n  }\n}\n\nInstancedMesh.prototype.isInstancedMesh = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *  linecap: \"round\",\n *  linejoin: \"round\"\n * }\n */\n\nclass LineBasicMaterial extends Material {\n  constructor(parameters) {\n    super();\n\n    this.type = \"LineBasicMaterial\";\n\n    this.color = new Color(0xffffff);\n\n    this.linewidth = 1;\n    this.linecap = \"round\";\n    this.linejoin = \"round\";\n\n    this.setValues(parameters);\n  }\n\n  copy(source) {\n    super.copy(source);\n\n    this.color.copy(source.color);\n\n    this.linewidth = source.linewidth;\n    this.linecap = source.linecap;\n    this.linejoin = source.linejoin;\n\n    return this;\n  }\n}\n\nLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\nconst _start$1 = /*@__PURE__*/ new Vector3();\nconst _end$1 = /*@__PURE__*/ new Vector3();\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nclass Line extends Object3D {\n  constructor(\n    geometry = new BufferGeometry(),\n    material = new LineBasicMaterial()\n  ) {\n    super();\n\n    this.type = \"Line\";\n\n    this.geometry = geometry;\n    this.material = material;\n\n    this.updateMorphTargets();\n  }\n\n  copy(source) {\n    super.copy(source);\n\n    this.material = source.material;\n    this.geometry = source.geometry;\n\n    return this;\n  }\n\n  computeLineDistances() {\n    const geometry = this.geometry;\n\n    if (geometry.isBufferGeometry) {\n      // we assume non-indexed geometry\n\n      if (geometry.index === null) {\n        const positionAttribute = geometry.attributes.position;\n        const lineDistances = [0];\n\n        for (let i = 1, l = positionAttribute.count; i < l; i++) {\n          _start$1.fromBufferAttribute(positionAttribute, i - 1);\n          _end$1.fromBufferAttribute(positionAttribute, i);\n\n          lineDistances[i] = lineDistances[i - 1];\n          lineDistances[i] += _start$1.distanceTo(_end$1);\n        }\n\n        geometry.setAttribute(\n          \"lineDistance\",\n          new Float32BufferAttribute(lineDistances, 1)\n        );\n      } else {\n        console.warn(\n          \"THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.\"\n        );\n      }\n    } else if (geometry.isGeometry) {\n      console.error(\n        \"THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.\"\n      );\n    }\n\n    return this;\n  }\n\n  raycast(raycaster, intersects) {\n    const geometry = this.geometry;\n    const matrixWorld = this.matrixWorld;\n    const threshold = raycaster.params.Line.threshold;\n    const drawRange = geometry.drawRange;\n\n    // Checking boundingSphere distance to ray\n\n    if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n    _sphere$1.copy(geometry.boundingSphere);\n    _sphere$1.applyMatrix4(matrixWorld);\n    _sphere$1.radius += threshold;\n\n    if (raycaster.ray.intersectsSphere(_sphere$1) === false) return;\n\n    //\n\n    _inverseMatrix$1.copy(matrixWorld).invert();\n    _ray$1.copy(raycaster.ray).applyMatrix4(_inverseMatrix$1);\n\n    const localThreshold =\n      threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\n    const localThresholdSq = localThreshold * localThreshold;\n\n    const vStart = new Vector3();\n    const vEnd = new Vector3();\n    const interSegment = new Vector3();\n    const interRay = new Vector3();\n    const step = this.isLineSegments ? 2 : 1;\n\n    if (geometry.isBufferGeometry) {\n      const index = geometry.index;\n      const attributes = geometry.attributes;\n      const positionAttribute = attributes.position;\n\n      if (index !== null) {\n        const start = Math.max(0, drawRange.start);\n        const end = Math.min(index.count, drawRange.start + drawRange.count);\n\n        for (let i = start, l = end - 1; i < l; i += step) {\n          const a = index.getX(i);\n          const b = index.getX(i + 1);\n\n          vStart.fromBufferAttribute(positionAttribute, a);\n          vEnd.fromBufferAttribute(positionAttribute, b);\n\n          const distSq = _ray$1.distanceSqToSegment(\n            vStart,\n            vEnd,\n            interRay,\n            interSegment\n          );\n\n          if (distSq > localThresholdSq) continue;\n\n          interRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n          const distance = raycaster.ray.origin.distanceTo(interRay);\n\n          if (distance < raycaster.near || distance > raycaster.far) continue;\n\n          intersects.push({\n            distance: distance,\n            // What do we want? intersection point on the ray or on the segment??\n            // point: raycaster.ray.at( distance ),\n            point: interSegment.clone().applyMatrix4(this.matrixWorld),\n            index: i,\n            face: null,\n            faceIndex: null,\n            object: this,\n          });\n        }\n      } else {\n        const start = Math.max(0, drawRange.start);\n        const end = Math.min(\n          positionAttribute.count,\n          drawRange.start + drawRange.count\n        );\n\n        for (let i = start, l = end - 1; i < l; i += step) {\n          vStart.fromBufferAttribute(positionAttribute, i);\n          vEnd.fromBufferAttribute(positionAttribute, i + 1);\n\n          const distSq = _ray$1.distanceSqToSegment(\n            vStart,\n            vEnd,\n            interRay,\n            interSegment\n          );\n\n          if (distSq > localThresholdSq) continue;\n\n          interRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n          const distance = raycaster.ray.origin.distanceTo(interRay);\n\n          if (distance < raycaster.near || distance > raycaster.far) continue;\n\n          intersects.push({\n            distance: distance,\n            // What do we want? intersection point on the ray or on the segment??\n            // point: raycaster.ray.at( distance ),\n            point: interSegment.clone().applyMatrix4(this.matrixWorld),\n            index: i,\n            face: null,\n            faceIndex: null,\n            object: this,\n          });\n        }\n      }\n    } else if (geometry.isGeometry) {\n      console.error(\n        \"THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.\"\n      );\n    }\n  }\n\n  updateMorphTargets() {\n    const geometry = this.geometry;\n\n    if (geometry.isBufferGeometry) {\n      const morphAttributes = geometry.morphAttributes;\n      const keys = Object.keys(morphAttributes);\n\n      if (keys.length > 0) {\n        const morphAttribute = morphAttributes[keys[0]];\n\n        if (morphAttribute !== undefined) {\n          this.morphTargetInfluences = [];\n          this.morphTargetDictionary = {};\n\n          for (let m = 0, ml = morphAttribute.length; m < ml; m++) {\n            const name = morphAttribute[m].name || String(m);\n\n            this.morphTargetInfluences.push(0);\n            this.morphTargetDictionary[name] = m;\n          }\n        }\n      }\n    } else {\n      const morphTargets = geometry.morphTargets;\n\n      if (morphTargets !== undefined && morphTargets.length > 0) {\n        console.error(\n          \"THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.\"\n        );\n      }\n    }\n  }\n}\n\nLine.prototype.isLine = true;\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n  constructor(geometry, material) {\n    super(geometry, material);\n\n    this.type = \"LineSegments\";\n  }\n\n  computeLineDistances() {\n    const geometry = this.geometry;\n\n    if (geometry.isBufferGeometry) {\n      // we assume non-indexed geometry\n\n      if (geometry.index === null) {\n        const positionAttribute = geometry.attributes.position;\n        const lineDistances = [];\n\n        for (let i = 0, l = positionAttribute.count; i < l; i += 2) {\n          _start.fromBufferAttribute(positionAttribute, i);\n          _end.fromBufferAttribute(positionAttribute, i + 1);\n\n          lineDistances[i] = i === 0 ? 0 : lineDistances[i - 1];\n          lineDistances[i + 1] = lineDistances[i] + _start.distanceTo(_end);\n        }\n\n        geometry.setAttribute(\n          \"lineDistance\",\n          new Float32BufferAttribute(lineDistances, 1)\n        );\n      } else {\n        console.warn(\n          \"THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.\"\n        );\n      }\n    } else if (geometry.isGeometry) {\n      console.error(\n        \"THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.\"\n      );\n    }\n\n    return this;\n  }\n}\n\nLineSegments.prototype.isLineSegments = true;\n\nclass LineLoop extends Line {\n  constructor(geometry, material) {\n    super(geometry, material);\n\n    this.type = \"LineLoop\";\n  }\n}\n\nLineLoop.prototype.isLineLoop = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  size: <float>,\n *  sizeAttenuation: <bool>\n *\n * }\n */\n\nclass PointsMaterial extends Material {\n  constructor(parameters) {\n    super();\n\n    this.type = \"PointsMaterial\";\n\n    this.color = new Color(0xffffff);\n\n    this.map = null;\n\n    this.alphaMap = null;\n\n    this.size = 1;\n    this.sizeAttenuation = true;\n\n    this.setValues(parameters);\n  }\n\n  copy(source) {\n    super.copy(source);\n\n    this.color.copy(source.color);\n\n    this.map = source.map;\n\n    this.alphaMap = source.alphaMap;\n\n    this.size = source.size;\n    this.sizeAttenuation = source.sizeAttenuation;\n\n    return this;\n  }\n}\n\nPointsMaterial.prototype.isPointsMaterial = true;\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n  constructor(\n    geometry = new BufferGeometry(),\n    material = new PointsMaterial()\n  ) {\n    super();\n\n    this.type = \"Points\";\n\n    this.geometry = geometry;\n    this.material = material;\n\n    this.updateMorphTargets();\n  }\n\n  copy(source) {\n    super.copy(source);\n\n    this.material = source.material;\n    this.geometry = source.geometry;\n\n    return this;\n  }\n\n  raycast(raycaster, intersects) {\n    const geometry = this.geometry;\n    const matrixWorld = this.matrixWorld;\n    const threshold = raycaster.params.Points.threshold;\n    const drawRange = geometry.drawRange;\n\n    // Checking boundingSphere distance to ray\n\n    if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n    _sphere.copy(geometry.boundingSphere);\n    _sphere.applyMatrix4(matrixWorld);\n    _sphere.radius += threshold;\n\n    if (raycaster.ray.intersectsSphere(_sphere) === false) return;\n\n    //\n\n    _inverseMatrix.copy(matrixWorld).invert();\n    _ray.copy(raycaster.ray).applyMatrix4(_inverseMatrix);\n\n    const localThreshold =\n      threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\n    const localThresholdSq = localThreshold * localThreshold;\n\n    if (geometry.isBufferGeometry) {\n      const index = geometry.index;\n      const attributes = geometry.attributes;\n      const positionAttribute = attributes.position;\n\n      if (index !== null) {\n        const start = Math.max(0, drawRange.start);\n        const end = Math.min(index.count, drawRange.start + drawRange.count);\n\n        for (let i = start, il = end; i < il; i++) {\n          const a = index.getX(i);\n\n          _position$2.fromBufferAttribute(positionAttribute, a);\n\n          testPoint(\n            _position$2,\n            a,\n            localThresholdSq,\n            matrixWorld,\n            raycaster,\n            intersects,\n            this\n          );\n        }\n      } else {\n        const start = Math.max(0, drawRange.start);\n        const end = Math.min(\n          positionAttribute.count,\n          drawRange.start + drawRange.count\n        );\n\n        for (let i = start, l = end; i < l; i++) {\n          _position$2.fromBufferAttribute(positionAttribute, i);\n\n          testPoint(\n            _position$2,\n            i,\n            localThresholdSq,\n            matrixWorld,\n            raycaster,\n            intersects,\n            this\n          );\n        }\n      }\n    } else {\n      console.error(\n        \"THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.\"\n      );\n    }\n  }\n\n  updateMorphTargets() {\n    const geometry = this.geometry;\n\n    if (geometry.isBufferGeometry) {\n      const morphAttributes = geometry.morphAttributes;\n      const keys = Object.keys(morphAttributes);\n\n      if (keys.length > 0) {\n        const morphAttribute = morphAttributes[keys[0]];\n\n        if (morphAttribute !== undefined) {\n          this.morphTargetInfluences = [];\n          this.morphTargetDictionary = {};\n\n          for (let m = 0, ml = morphAttribute.length; m < ml; m++) {\n            const name = morphAttribute[m].name || String(m);\n\n            this.morphTargetInfluences.push(0);\n            this.morphTargetDictionary[name] = m;\n          }\n        }\n      }\n    } else {\n      const morphTargets = geometry.morphTargets;\n\n      if (morphTargets !== undefined && morphTargets.length > 0) {\n        console.error(\n          \"THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.\"\n        );\n      }\n    }\n  }\n}\n\nPoints.prototype.isPoints = true;\n\nfunction testPoint(\n  point,\n  index,\n  localThresholdSq,\n  matrixWorld,\n  raycaster,\n  intersects,\n  object\n) {\n  const rayPointDistanceSq = _ray.distanceSqToPoint(point);\n\n  if (rayPointDistanceSq < localThresholdSq) {\n    const intersectPoint = new Vector3();\n\n    _ray.closestPointToPoint(point, intersectPoint);\n    intersectPoint.applyMatrix4(matrixWorld);\n\n    const distance = raycaster.ray.origin.distanceTo(intersectPoint);\n\n    if (distance < raycaster.near || distance > raycaster.far) return;\n\n    intersects.push({\n      distance: distance,\n      distanceToRay: Math.sqrt(rayPointDistanceSq),\n      point: intersectPoint,\n      index: index,\n      face: null,\n      object: object,\n    });\n  }\n}\n\nclass VideoTexture extends Texture {\n  constructor(\n    video,\n    mapping,\n    wrapS,\n    wrapT,\n    magFilter,\n    minFilter,\n    format,\n    type,\n    anisotropy\n  ) {\n    super(\n      video,\n      mapping,\n      wrapS,\n      wrapT,\n      magFilter,\n      minFilter,\n      format,\n      type,\n      anisotropy\n    );\n\n    this.format = format !== undefined ? format : RGBFormat;\n\n    this.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n    this.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n    this.generateMipmaps = false;\n\n    const scope = this;\n\n    function updateVideo() {\n      scope.needsUpdate = true;\n      video.requestVideoFrameCallback(updateVideo);\n    }\n\n    if (\"requestVideoFrameCallback\" in video) {\n      video.requestVideoFrameCallback(updateVideo);\n    }\n  }\n\n  clone() {\n    return new this.constructor(this.image).copy(this);\n  }\n\n  update() {\n    const video = this.image;\n    const hasVideoFrameCallback = \"requestVideoFrameCallback\" in video;\n\n    if (\n      hasVideoFrameCallback === false &&\n      video.readyState >= video.HAVE_CURRENT_DATA\n    ) {\n      this.needsUpdate = true;\n    }\n  }\n}\n\nVideoTexture.prototype.isVideoTexture = true;\n\nclass CompressedTexture extends Texture {\n  constructor(\n    mipmaps,\n    width,\n    height,\n    format,\n    type,\n    mapping,\n    wrapS,\n    wrapT,\n    magFilter,\n    minFilter,\n    anisotropy,\n    encoding\n  ) {\n    super(\n      null,\n      mapping,\n      wrapS,\n      wrapT,\n      magFilter,\n      minFilter,\n      format,\n      type,\n      anisotropy,\n      encoding\n    );\n\n    this.image = { width: width, height: height };\n    this.mipmaps = mipmaps;\n\n    // no flipping for cube textures\n    // (also flipping doesn't work for compressed textures )\n\n    this.flipY = false;\n\n    // can't generate mipmaps for compressed textures\n    // mips must be embedded in DDS files\n\n    this.generateMipmaps = false;\n  }\n}\n\nCompressedTexture.prototype.isCompressedTexture = true;\n\nclass CanvasTexture extends Texture {\n  constructor(\n    canvas,\n    mapping,\n    wrapS,\n    wrapT,\n    magFilter,\n    minFilter,\n    format,\n    type,\n    anisotropy\n  ) {\n    super(\n      canvas,\n      mapping,\n      wrapS,\n      wrapT,\n      magFilter,\n      minFilter,\n      format,\n      type,\n      anisotropy\n    );\n\n    this.needsUpdate = true;\n  }\n}\n\nCanvasTexture.prototype.isCanvasTexture = true;\n\nclass DepthTexture extends Texture {\n  constructor(\n    width,\n    height,\n    type,\n    mapping,\n    wrapS,\n    wrapT,\n    magFilter,\n    minFilter,\n    anisotropy,\n    format\n  ) {\n    format = format !== undefined ? format : DepthFormat;\n\n    if (format !== DepthFormat && format !== DepthStencilFormat) {\n      throw new Error(\n        \"DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat\"\n      );\n    }\n\n    if (type === undefined && format === DepthFormat) type = UnsignedShortType;\n    if (type === undefined && format === DepthStencilFormat)\n      type = UnsignedInt248Type;\n\n    super(\n      null,\n      mapping,\n      wrapS,\n      wrapT,\n      magFilter,\n      minFilter,\n      format,\n      type,\n      anisotropy\n    );\n\n    this.image = { width: width, height: height };\n\n    this.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n    this.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n    this.flipY = false;\n    this.generateMipmaps = false;\n  }\n}\n\nDepthTexture.prototype.isDepthTexture = true;\n\nclass CircleGeometry extends BufferGeometry {\n  constructor(\n    radius = 1,\n    segments = 8,\n    thetaStart = 0,\n    thetaLength = Math.PI * 2\n  ) {\n    super();\n\n    this.type = \"CircleGeometry\";\n\n    this.parameters = {\n      radius: radius,\n      segments: segments,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength,\n    };\n\n    segments = Math.max(3, segments);\n\n    // buffers\n\n    const indices = [];\n    const vertices = [];\n    const normals = [];\n    const uvs = [];\n\n    // helper variables\n\n    const vertex = new Vector3();\n    const uv = new Vector2();\n\n    // center point\n\n    vertices.push(0, 0, 0);\n    normals.push(0, 0, 1);\n    uvs.push(0.5, 0.5);\n\n    for (let s = 0, i = 3; s <= segments; s++, i += 3) {\n      const segment = thetaStart + (s / segments) * thetaLength;\n\n      // vertex\n\n      vertex.x = radius * Math.cos(segment);\n      vertex.y = radius * Math.sin(segment);\n\n      vertices.push(vertex.x, vertex.y, vertex.z);\n\n      // normal\n\n      normals.push(0, 0, 1);\n\n      // uvs\n\n      uv.x = (vertices[i] / radius + 1) / 2;\n      uv.y = (vertices[i + 1] / radius + 1) / 2;\n\n      uvs.push(uv.x, uv.y);\n    }\n\n    // indices\n\n    for (let i = 1; i <= segments; i++) {\n      indices.push(i, i + 1, 0);\n    }\n\n    // build geometry\n\n    this.setIndex(indices);\n    this.setAttribute(\"position\", new Float32BufferAttribute(vertices, 3));\n    this.setAttribute(\"normal\", new Float32BufferAttribute(normals, 3));\n    this.setAttribute(\"uv\", new Float32BufferAttribute(uvs, 2));\n  }\n\n  static fromJSON(data) {\n    return new CircleGeometry(\n      data.radius,\n      data.segments,\n      data.thetaStart,\n      data.thetaLength\n    );\n  }\n}\n\nclass CylinderGeometry extends BufferGeometry {\n  constructor(\n    radiusTop = 1,\n    radiusBottom = 1,\n    height = 1,\n    radialSegments = 8,\n    heightSegments = 1,\n    openEnded = false,\n    thetaStart = 0,\n    thetaLength = Math.PI * 2\n  ) {\n    super();\n    this.type = \"CylinderGeometry\";\n\n    this.parameters = {\n      radiusTop: radiusTop,\n      radiusBottom: radiusBottom,\n      height: height,\n      radialSegments: radialSegments,\n      heightSegments: heightSegments,\n      openEnded: openEnded,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength,\n    };\n\n    const scope = this;\n\n    radialSegments = Math.floor(radialSegments);\n    heightSegments = Math.floor(heightSegments);\n\n    // buffers\n\n    const indices = [];\n    const vertices = [];\n    const normals = [];\n    const uvs = [];\n\n    // helper variables\n\n    let index = 0;\n    const indexArray = [];\n    const halfHeight = height / 2;\n    let groupStart = 0;\n\n    // generate geometry\n\n    generateTorso();\n\n    if (openEnded === false) {\n      if (radiusTop > 0) generateCap(true);\n      if (radiusBottom > 0) generateCap(false);\n    }\n\n    // build geometry\n\n    this.setIndex(indices);\n    this.setAttribute(\"position\", new Float32BufferAttribute(vertices, 3));\n    this.setAttribute(\"normal\", new Float32BufferAttribute(normals, 3));\n    this.setAttribute(\"uv\", new Float32BufferAttribute(uvs, 2));\n\n    function generateTorso() {\n      const normal = new Vector3();\n      const vertex = new Vector3();\n\n      let groupCount = 0;\n\n      // this will be used to calculate the normal\n      const slope = (radiusBottom - radiusTop) / height;\n\n      // generate vertices, normals and uvs\n\n      for (let y = 0; y <= heightSegments; y++) {\n        const indexRow = [];\n\n        const v = y / heightSegments;\n\n        // calculate the radius of the current row\n\n        const radius = v * (radiusBottom - radiusTop) + radiusTop;\n\n        for (let x = 0; x <= radialSegments; x++) {\n          const u = x / radialSegments;\n\n          const theta = u * thetaLength + thetaStart;\n\n          const sinTheta = Math.sin(theta);\n          const cosTheta = Math.cos(theta);\n\n          // vertex\n\n          vertex.x = radius * sinTheta;\n          vertex.y = -v * height + halfHeight;\n          vertex.z = radius * cosTheta;\n          vertices.push(vertex.x, vertex.y, vertex.z);\n\n          // normal\n\n          normal.set(sinTheta, slope, cosTheta).normalize();\n          normals.push(normal.x, normal.y, normal.z);\n\n          // uv\n\n          uvs.push(u, 1 - v);\n\n          // save index of vertex in respective row\n\n          indexRow.push(index++);\n        }\n\n        // now save vertices of the row in our index array\n\n        indexArray.push(indexRow);\n      }\n\n      // generate indices\n\n      for (let x = 0; x < radialSegments; x++) {\n        for (let y = 0; y < heightSegments; y++) {\n          // we use the index array to access the correct indices\n\n          const a = indexArray[y][x];\n          const b = indexArray[y + 1][x];\n          const c = indexArray[y + 1][x + 1];\n          const d = indexArray[y][x + 1];\n\n          // faces\n\n          indices.push(a, b, d);\n          indices.push(b, c, d);\n\n          // update group counter\n\n          groupCount += 6;\n        }\n      }\n\n      // add a group to the geometry. this will ensure multi material support\n\n      scope.addGroup(groupStart, groupCount, 0);\n\n      // calculate new start value for groups\n\n      groupStart += groupCount;\n    }\n\n    function generateCap(top) {\n      // save the index of the first center vertex\n      const centerIndexStart = index;\n\n      const uv = new Vector2();\n      const vertex = new Vector3();\n\n      let groupCount = 0;\n\n      const radius = top === true ? radiusTop : radiusBottom;\n      const sign = top === true ? 1 : -1;\n\n      // first we generate the center vertex data of the cap.\n      // because the geometry needs one set of uvs per face,\n      // we must generate a center vertex per face/segment\n\n      for (let x = 1; x <= radialSegments; x++) {\n        // vertex\n\n        vertices.push(0, halfHeight * sign, 0);\n\n        // normal\n\n        normals.push(0, sign, 0);\n\n        // uv\n\n        uvs.push(0.5, 0.5);\n\n        // increase index\n\n        index++;\n      }\n\n      // save the index of the last center vertex\n      const centerIndexEnd = index;\n\n      // now we generate the surrounding vertices, normals and uvs\n\n      for (let x = 0; x <= radialSegments; x++) {\n        const u = x / radialSegments;\n        const theta = u * thetaLength + thetaStart;\n\n        const cosTheta = Math.cos(theta);\n        const sinTheta = Math.sin(theta);\n\n        // vertex\n\n        vertex.x = radius * sinTheta;\n        vertex.y = halfHeight * sign;\n        vertex.z = radius * cosTheta;\n        vertices.push(vertex.x, vertex.y, vertex.z);\n\n        // normal\n\n        normals.push(0, sign, 0);\n\n        // uv\n\n        uv.x = cosTheta * 0.5 + 0.5;\n        uv.y = sinTheta * 0.5 * sign + 0.5;\n        uvs.push(uv.x, uv.y);\n\n        // increase index\n\n        index++;\n      }\n\n      // generate indices\n\n      for (let x = 0; x < radialSegments; x++) {\n        const c = centerIndexStart + x;\n        const i = centerIndexEnd + x;\n\n        if (top === true) {\n          // face top\n\n          indices.push(i, i + 1, c);\n        } else {\n          // face bottom\n\n          indices.push(i + 1, i, c);\n        }\n\n        groupCount += 3;\n      }\n\n      // add a group to the geometry. this will ensure multi material support\n\n      scope.addGroup(groupStart, groupCount, top === true ? 1 : 2);\n\n      // calculate new start value for groups\n\n      groupStart += groupCount;\n    }\n  }\n\n  static fromJSON(data) {\n    return new CylinderGeometry(\n      data.radiusTop,\n      data.radiusBottom,\n      data.height,\n      data.radialSegments,\n      data.heightSegments,\n      data.openEnded,\n      data.thetaStart,\n      data.thetaLength\n    );\n  }\n}\n\nclass ConeGeometry extends CylinderGeometry {\n  constructor(\n    radius = 1,\n    height = 1,\n    radialSegments = 8,\n    heightSegments = 1,\n    openEnded = false,\n    thetaStart = 0,\n    thetaLength = Math.PI * 2\n  ) {\n    super(\n      0,\n      radius,\n      height,\n      radialSegments,\n      heightSegments,\n      openEnded,\n      thetaStart,\n      thetaLength\n    );\n\n    this.type = \"ConeGeometry\";\n\n    this.parameters = {\n      radius: radius,\n      height: height,\n      radialSegments: radialSegments,\n      heightSegments: heightSegments,\n      openEnded: openEnded,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength,\n    };\n  }\n\n  static fromJSON(data) {\n    return new ConeGeometry(\n      data.radius,\n      data.height,\n      data.radialSegments,\n      data.heightSegments,\n      data.openEnded,\n      data.thetaStart,\n      data.thetaLength\n    );\n  }\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n  constructor(vertices = [], indices = [], radius = 1, detail = 0) {\n    super();\n\n    this.type = \"PolyhedronGeometry\";\n\n    this.parameters = {\n      vertices: vertices,\n      indices: indices,\n      radius: radius,\n      detail: detail,\n    };\n\n    // default buffer data\n\n    const vertexBuffer = [];\n    const uvBuffer = [];\n\n    // the subdivision creates the vertex buffer data\n\n    subdivide(detail);\n\n    // all vertices should lie on a conceptual sphere with a given radius\n\n    applyRadius(radius);\n\n    // finally, create the uv data\n\n    generateUVs();\n\n    // build non-indexed geometry\n\n    this.setAttribute(\"position\", new Float32BufferAttribute(vertexBuffer, 3));\n    this.setAttribute(\n      \"normal\",\n      new Float32BufferAttribute(vertexBuffer.slice(), 3)\n    );\n    this.setAttribute(\"uv\", new Float32BufferAttribute(uvBuffer, 2));\n\n    if (detail === 0) {\n      this.computeVertexNormals(); // flat normals\n    } else {\n      this.normalizeNormals(); // smooth normals\n    }\n\n    // helper functions\n\n    function subdivide(detail) {\n      const a = new Vector3();\n      const b = new Vector3();\n      const c = new Vector3();\n\n      // iterate over all faces and apply a subdivison with the given detail value\n\n      for (let i = 0; i < indices.length; i += 3) {\n        // get the vertices of the face\n\n        getVertexByIndex(indices[i + 0], a);\n        getVertexByIndex(indices[i + 1], b);\n        getVertexByIndex(indices[i + 2], c);\n\n        // perform subdivision\n\n        subdivideFace(a, b, c, detail);\n      }\n    }\n\n    function subdivideFace(a, b, c, detail) {\n      const cols = detail + 1;\n\n      // we use this multidimensional array as a data structure for creating the subdivision\n\n      const v = [];\n\n      // construct all of the vertices for this subdivision\n\n      for (let i = 0; i <= cols; i++) {\n        v[i] = [];\n\n        const aj = a.clone().lerp(c, i / cols);\n        const bj = b.clone().lerp(c, i / cols);\n\n        const rows = cols - i;\n\n        for (let j = 0; j <= rows; j++) {\n          if (j === 0 && i === cols) {\n            v[i][j] = aj;\n          } else {\n            v[i][j] = aj.clone().lerp(bj, j / rows);\n          }\n        }\n      }\n\n      // construct all of the faces\n\n      for (let i = 0; i < cols; i++) {\n        for (let j = 0; j < 2 * (cols - i) - 1; j++) {\n          const k = Math.floor(j / 2);\n\n          if (j % 2 === 0) {\n            pushVertex(v[i][k + 1]);\n            pushVertex(v[i + 1][k]);\n            pushVertex(v[i][k]);\n          } else {\n            pushVertex(v[i][k + 1]);\n            pushVertex(v[i + 1][k + 1]);\n            pushVertex(v[i + 1][k]);\n          }\n        }\n      }\n    }\n\n    function applyRadius(radius) {\n      const vertex = new Vector3();\n\n      // iterate over the entire buffer and apply the radius to each vertex\n\n      for (let i = 0; i < vertexBuffer.length; i += 3) {\n        vertex.x = vertexBuffer[i + 0];\n        vertex.y = vertexBuffer[i + 1];\n        vertex.z = vertexBuffer[i + 2];\n\n        vertex.normalize().multiplyScalar(radius);\n\n        vertexBuffer[i + 0] = vertex.x;\n        vertexBuffer[i + 1] = vertex.y;\n        vertexBuffer[i + 2] = vertex.z;\n      }\n    }\n\n    function generateUVs() {\n      const vertex = new Vector3();\n\n      for (let i = 0; i < vertexBuffer.length; i += 3) {\n        vertex.x = vertexBuffer[i + 0];\n        vertex.y = vertexBuffer[i + 1];\n        vertex.z = vertexBuffer[i + 2];\n\n        const u = azimuth(vertex) / 2 / Math.PI + 0.5;\n        const v = inclination(vertex) / Math.PI + 0.5;\n        uvBuffer.push(u, 1 - v);\n      }\n\n      correctUVs();\n\n      correctSeam();\n    }\n\n    function correctSeam() {\n      // handle case when face straddles the seam, see #3269\n\n      for (let i = 0; i < uvBuffer.length; i += 6) {\n        // uv data of a single face\n\n        const x0 = uvBuffer[i + 0];\n        const x1 = uvBuffer[i + 2];\n        const x2 = uvBuffer[i + 4];\n\n        const max = Math.max(x0, x1, x2);\n        const min = Math.min(x0, x1, x2);\n\n        // 0.9 is somewhat arbitrary\n\n        if (max > 0.9 && min < 0.1) {\n          if (x0 < 0.2) uvBuffer[i + 0] += 1;\n          if (x1 < 0.2) uvBuffer[i + 2] += 1;\n          if (x2 < 0.2) uvBuffer[i + 4] += 1;\n        }\n      }\n    }\n\n    function pushVertex(vertex) {\n      vertexBuffer.push(vertex.x, vertex.y, vertex.z);\n    }\n\n    function getVertexByIndex(index, vertex) {\n      const stride = index * 3;\n\n      vertex.x = vertices[stride + 0];\n      vertex.y = vertices[stride + 1];\n      vertex.z = vertices[stride + 2];\n    }\n\n    function correctUVs() {\n      const a = new Vector3();\n      const b = new Vector3();\n      const c = new Vector3();\n\n      const centroid = new Vector3();\n\n      const uvA = new Vector2();\n      const uvB = new Vector2();\n      const uvC = new Vector2();\n\n      for (let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6) {\n        a.set(vertexBuffer[i + 0], vertexBuffer[i + 1], vertexBuffer[i + 2]);\n        b.set(vertexBuffer[i + 3], vertexBuffer[i + 4], vertexBuffer[i + 5]);\n        c.set(vertexBuffer[i + 6], vertexBuffer[i + 7], vertexBuffer[i + 8]);\n\n        uvA.set(uvBuffer[j + 0], uvBuffer[j + 1]);\n        uvB.set(uvBuffer[j + 2], uvBuffer[j + 3]);\n        uvC.set(uvBuffer[j + 4], uvBuffer[j + 5]);\n\n        centroid.copy(a).add(b).add(c).divideScalar(3);\n\n        const azi = azimuth(centroid);\n\n        correctUV(uvA, j + 0, a, azi);\n        correctUV(uvB, j + 2, b, azi);\n        correctUV(uvC, j + 4, c, azi);\n      }\n    }\n\n    function correctUV(uv, stride, vector, azimuth) {\n      if (azimuth < 0 && uv.x === 1) {\n        uvBuffer[stride] = uv.x - 1;\n      }\n\n      if (vector.x === 0 && vector.z === 0) {\n        uvBuffer[stride] = azimuth / 2 / Math.PI + 0.5;\n      }\n    }\n\n    // Angle around the Y axis, counter-clockwise when looking from above.\n\n    function azimuth(vector) {\n      return Math.atan2(vector.z, -vector.x);\n    }\n\n    // Angle above the XZ plane.\n\n    function inclination(vector) {\n      return Math.atan2(\n        -vector.y,\n        Math.sqrt(vector.x * vector.x + vector.z * vector.z)\n      );\n    }\n  }\n\n  static fromJSON(data) {\n    return new PolyhedronGeometry(\n      data.vertices,\n      data.indices,\n      data.radius,\n      data.details\n    );\n  }\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n  constructor(radius = 1, detail = 0) {\n    const t = (1 + Math.sqrt(5)) / 2;\n    const r = 1 / t;\n\n    const vertices = [\n      // (±1, ±1, ±1)\n      -1,\n      -1,\n      -1,\n      -1,\n      -1,\n      1,\n      -1,\n      1,\n      -1,\n      -1,\n      1,\n      1,\n      1,\n      -1,\n      -1,\n      1,\n      -1,\n      1,\n      1,\n      1,\n      -1,\n      1,\n      1,\n      1,\n\n      // (0, ±1/φ, ±φ)\n      0,\n      -r,\n      -t,\n      0,\n      -r,\n      t,\n      0,\n      r,\n      -t,\n      0,\n      r,\n      t,\n\n      // (±1/φ, ±φ, 0)\n      -r,\n      -t,\n      0,\n      -r,\n      t,\n      0,\n      r,\n      -t,\n      0,\n      r,\n      t,\n      0,\n\n      // (±φ, 0, ±1/φ)\n      -t,\n      0,\n      -r,\n      t,\n      0,\n      -r,\n      -t,\n      0,\n      r,\n      t,\n      0,\n      r,\n    ];\n\n    const indices = [\n      3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8,\n      17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0,\n      18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18,\n      1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5,\n      19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5,\n      9,\n    ];\n\n    super(vertices, indices, radius, detail);\n\n    this.type = \"DodecahedronGeometry\";\n\n    this.parameters = {\n      radius: radius,\n      detail: detail,\n    };\n  }\n\n  static fromJSON(data) {\n    return new DodecahedronGeometry(data.radius, data.detail);\n  }\n}\n\nconst _v0 = new Vector3();\nconst _v1$1 = new Vector3();\nconst _normal = new Vector3();\nconst _triangle = new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n  constructor(geometry = null, thresholdAngle = 1) {\n    super();\n    this.type = \"EdgesGeometry\";\n\n    this.parameters = {\n      geometry: geometry,\n      thresholdAngle: thresholdAngle,\n    };\n\n    if (geometry !== null) {\n      const precisionPoints = 4;\n      const precision = Math.pow(10, precisionPoints);\n      const thresholdDot = Math.cos(DEG2RAD * thresholdAngle);\n\n      const indexAttr = geometry.getIndex();\n      const positionAttr = geometry.getAttribute(\"position\");\n      const indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n      const indexArr = [0, 0, 0];\n      const vertKeys = [\"a\", \"b\", \"c\"];\n      const hashes = new Array(3);\n\n      const edgeData = {};\n      const vertices = [];\n      for (let i = 0; i < indexCount; i += 3) {\n        if (indexAttr) {\n          indexArr[0] = indexAttr.getX(i);\n          indexArr[1] = indexAttr.getX(i + 1);\n          indexArr[2] = indexAttr.getX(i + 2);\n        } else {\n          indexArr[0] = i;\n          indexArr[1] = i + 1;\n          indexArr[2] = i + 2;\n        }\n\n        const { a, b, c } = _triangle;\n        a.fromBufferAttribute(positionAttr, indexArr[0]);\n        b.fromBufferAttribute(positionAttr, indexArr[1]);\n        c.fromBufferAttribute(positionAttr, indexArr[2]);\n        _triangle.getNormal(_normal);\n\n        // create hashes for the edge from the vertices\n        hashes[0] = `${Math.round(a.x * precision)},${Math.round(\n          a.y * precision\n        )},${Math.round(a.z * precision)}`;\n        hashes[1] = `${Math.round(b.x * precision)},${Math.round(\n          b.y * precision\n        )},${Math.round(b.z * precision)}`;\n        hashes[2] = `${Math.round(c.x * precision)},${Math.round(\n          c.y * precision\n        )},${Math.round(c.z * precision)}`;\n\n        // skip degenerate triangles\n        if (\n          hashes[0] === hashes[1] ||\n          hashes[1] === hashes[2] ||\n          hashes[2] === hashes[0]\n        ) {\n          continue;\n        }\n\n        // iterate over every edge\n        for (let j = 0; j < 3; j++) {\n          // get the first and next vertex making up the edge\n          const jNext = (j + 1) % 3;\n          const vecHash0 = hashes[j];\n          const vecHash1 = hashes[jNext];\n          const v0 = _triangle[vertKeys[j]];\n          const v1 = _triangle[vertKeys[jNext]];\n\n          const hash = `${vecHash0}_${vecHash1}`;\n          const reverseHash = `${vecHash1}_${vecHash0}`;\n\n          if (reverseHash in edgeData && edgeData[reverseHash]) {\n            // if we found a sibling edge add it into the vertex array if\n            // it meets the angle threshold and delete the edge from the map.\n            if (_normal.dot(edgeData[reverseHash].normal) <= thresholdDot) {\n              vertices.push(v0.x, v0.y, v0.z);\n              vertices.push(v1.x, v1.y, v1.z);\n            }\n\n            edgeData[reverseHash] = null;\n          } else if (!(hash in edgeData)) {\n            // if we've already got an edge here then skip adding a new one\n            edgeData[hash] = {\n              index0: indexArr[j],\n              index1: indexArr[jNext],\n              normal: _normal.clone(),\n            };\n          }\n        }\n      }\n\n      // iterate over all remaining, unmatched edges and add them to the vertex array\n      for (const key in edgeData) {\n        if (edgeData[key]) {\n          const { index0, index1 } = edgeData[key];\n          _v0.fromBufferAttribute(positionAttr, index0);\n          _v1$1.fromBufferAttribute(positionAttr, index1);\n\n          vertices.push(_v0.x, _v0.y, _v0.z);\n          vertices.push(_v1$1.x, _v1$1.y, _v1$1.z);\n        }\n      }\n\n      this.setAttribute(\"position\", new Float32BufferAttribute(vertices, 3));\n    }\n  }\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n  constructor() {\n    this.type = \"Curve\";\n\n    this.arcLengthDivisions = 200;\n  }\n\n  // Virtual base class method to overwrite and implement in subclasses\n  //\t- t [0 .. 1]\n\n  getPoint(/* t, optionalTarget */) {\n    console.warn(\"THREE.Curve: .getPoint() not implemented.\");\n    return null;\n  }\n\n  // Get point at relative position in curve according to arc length\n  // - u [0 .. 1]\n\n  getPointAt(u, optionalTarget) {\n    const t = this.getUtoTmapping(u);\n    return this.getPoint(t, optionalTarget);\n  }\n\n  // Get sequence of points using getPoint( t )\n\n  getPoints(divisions = 5) {\n    const points = [];\n\n    for (let d = 0; d <= divisions; d++) {\n      points.push(this.getPoint(d / divisions));\n    }\n\n    return points;\n  }\n\n  // Get sequence of points using getPointAt( u )\n\n  getSpacedPoints(divisions = 5) {\n    const points = [];\n\n    for (let d = 0; d <= divisions; d++) {\n      points.push(this.getPointAt(d / divisions));\n    }\n\n    return points;\n  }\n\n  // Get total curve arc length\n\n  getLength() {\n    const lengths = this.getLengths();\n    return lengths[lengths.length - 1];\n  }\n\n  // Get list of cumulative segment lengths\n\n  getLengths(divisions = this.arcLengthDivisions) {\n    if (\n      this.cacheArcLengths &&\n      this.cacheArcLengths.length === divisions + 1 &&\n      !this.needsUpdate\n    ) {\n      return this.cacheArcLengths;\n    }\n\n    this.needsUpdate = false;\n\n    const cache = [];\n    let current,\n      last = this.getPoint(0);\n    let sum = 0;\n\n    cache.push(0);\n\n    for (let p = 1; p <= divisions; p++) {\n      current = this.getPoint(p / divisions);\n      sum += current.distanceTo(last);\n      cache.push(sum);\n      last = current;\n    }\n\n    this.cacheArcLengths = cache;\n\n    return cache; // { sums: cache, sum: sum }; Sum is in the last element.\n  }\n\n  updateArcLengths() {\n    this.needsUpdate = true;\n    this.getLengths();\n  }\n\n  // Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n  getUtoTmapping(u, distance) {\n    const arcLengths = this.getLengths();\n\n    let i = 0;\n    const il = arcLengths.length;\n\n    let targetArcLength; // The targeted u distance value to get\n\n    if (distance) {\n      targetArcLength = distance;\n    } else {\n      targetArcLength = u * arcLengths[il - 1];\n    }\n\n    // binary search for the index with largest value smaller than target u distance\n\n    let low = 0,\n      high = il - 1,\n      comparison;\n\n    while (low <= high) {\n      i = Math.floor(low + (high - low) / 2); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n      comparison = arcLengths[i] - targetArcLength;\n\n      if (comparison < 0) {\n        low = i + 1;\n      } else if (comparison > 0) {\n        high = i - 1;\n      } else {\n        high = i;\n        break;\n\n        // DONE\n      }\n    }\n\n    i = high;\n\n    if (arcLengths[i] === targetArcLength) {\n      return i / (il - 1);\n    }\n\n    // we could get finer grain at lengths, or use simple interpolation between two points\n\n    const lengthBefore = arcLengths[i];\n    const lengthAfter = arcLengths[i + 1];\n\n    const segmentLength = lengthAfter - lengthBefore;\n\n    // determine where we are between the 'before' and 'after' points\n\n    const segmentFraction = (targetArcLength - lengthBefore) / segmentLength;\n\n    // add that fractional amount to t\n\n    const t = (i + segmentFraction) / (il - 1);\n\n    return t;\n  }\n\n  // Returns a unit vector tangent at t\n  // In case any sub curve does not implement its tangent derivation,\n  // 2 points a small delta apart will be used to find its gradient\n  // which seems to give a reasonable approximation\n\n  getTangent(t, optionalTarget) {\n    const delta = 0.0001;\n    let t1 = t - delta;\n    let t2 = t + delta;\n\n    // Capping in case of danger\n\n    if (t1 < 0) t1 = 0;\n    if (t2 > 1) t2 = 1;\n\n    const pt1 = this.getPoint(t1);\n    const pt2 = this.getPoint(t2);\n\n    const tangent =\n      optionalTarget || (pt1.isVector2 ? new Vector2() : new Vector3());\n\n    tangent.copy(pt2).sub(pt1).normalize();\n\n    return tangent;\n  }\n\n  getTangentAt(u, optionalTarget) {\n    const t = this.getUtoTmapping(u);\n    return this.getTangent(t, optionalTarget);\n  }\n\n  computeFrenetFrames(segments, closed) {\n    // see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n    const normal = new Vector3();\n\n    const tangents = [];\n    const normals = [];\n    const binormals = [];\n\n    const vec = new Vector3();\n    const mat = new Matrix4();\n\n    // compute the tangent vectors for each segment on the curve\n\n    for (let i = 0; i <= segments; i++) {\n      const u = i / segments;\n\n      tangents[i] = this.getTangentAt(u, new Vector3());\n    }\n\n    // select an initial normal vector perpendicular to the first tangent vector,\n    // and in the direction of the minimum tangent xyz component\n\n    normals[0] = new Vector3();\n    binormals[0] = new Vector3();\n    let min = Number.MAX_VALUE;\n    const tx = Math.abs(tangents[0].x);\n    const ty = Math.abs(tangents[0].y);\n    const tz = Math.abs(tangents[0].z);\n\n    if (tx <= min) {\n      min = tx;\n      normal.set(1, 0, 0);\n    }\n\n    if (ty <= min) {\n      min = ty;\n      normal.set(0, 1, 0);\n    }\n\n    if (tz <= min) {\n      normal.set(0, 0, 1);\n    }\n\n    vec.crossVectors(tangents[0], normal).normalize();\n\n    normals[0].crossVectors(tangents[0], vec);\n    binormals[0].crossVectors(tangents[0], normals[0]);\n\n    // compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n    for (let i = 1; i <= segments; i++) {\n      normals[i] = normals[i - 1].clone();\n\n      binormals[i] = binormals[i - 1].clone();\n\n      vec.crossVectors(tangents[i - 1], tangents[i]);\n\n      if (vec.length() > Number.EPSILON) {\n        vec.normalize();\n\n        const theta = Math.acos(clamp(tangents[i - 1].dot(tangents[i]), -1, 1)); // clamp for floating pt errors\n\n        normals[i].applyMatrix4(mat.makeRotationAxis(vec, theta));\n      }\n\n      binormals[i].crossVectors(tangents[i], normals[i]);\n    }\n\n    // if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n    if (closed === true) {\n      let theta = Math.acos(clamp(normals[0].dot(normals[segments]), -1, 1));\n      theta /= segments;\n\n      if (\n        tangents[0].dot(vec.crossVectors(normals[0], normals[segments])) > 0\n      ) {\n        theta = -theta;\n      }\n\n      for (let i = 1; i <= segments; i++) {\n        // twist a little...\n        normals[i].applyMatrix4(mat.makeRotationAxis(tangents[i], theta * i));\n        binormals[i].crossVectors(tangents[i], normals[i]);\n      }\n    }\n\n    return {\n      tangents: tangents,\n      normals: normals,\n      binormals: binormals,\n    };\n  }\n\n  clone() {\n    return new this.constructor().copy(this);\n  }\n\n  copy(source) {\n    this.arcLengthDivisions = source.arcLengthDivisions;\n\n    return this;\n  }\n\n  toJSON() {\n    const data = {\n      metadata: {\n        version: 4.5,\n        type: \"Curve\",\n        generator: \"Curve.toJSON\",\n      },\n    };\n\n    data.arcLengthDivisions = this.arcLengthDivisions;\n    data.type = this.type;\n\n    return data;\n  }\n\n  fromJSON(json) {\n    this.arcLengthDivisions = json.arcLengthDivisions;\n\n    return this;\n  }\n}\n\nclass EllipseCurve extends Curve {\n  constructor(\n    aX = 0,\n    aY = 0,\n    xRadius = 1,\n    yRadius = 1,\n    aStartAngle = 0,\n    aEndAngle = Math.PI * 2,\n    aClockwise = false,\n    aRotation = 0\n  ) {\n    super();\n\n    this.type = \"EllipseCurve\";\n\n    this.aX = aX;\n    this.aY = aY;\n\n    this.xRadius = xRadius;\n    this.yRadius = yRadius;\n\n    this.aStartAngle = aStartAngle;\n    this.aEndAngle = aEndAngle;\n\n    this.aClockwise = aClockwise;\n\n    this.aRotation = aRotation;\n  }\n\n  getPoint(t, optionalTarget) {\n    const point = optionalTarget || new Vector2();\n\n    const twoPi = Math.PI * 2;\n    let deltaAngle = this.aEndAngle - this.aStartAngle;\n    const samePoints = Math.abs(deltaAngle) < Number.EPSILON;\n\n    // ensures that deltaAngle is 0 .. 2 PI\n    while (deltaAngle < 0) deltaAngle += twoPi;\n    while (deltaAngle > twoPi) deltaAngle -= twoPi;\n\n    if (deltaAngle < Number.EPSILON) {\n      if (samePoints) {\n        deltaAngle = 0;\n      } else {\n        deltaAngle = twoPi;\n      }\n    }\n\n    if (this.aClockwise === true && !samePoints) {\n      if (deltaAngle === twoPi) {\n        deltaAngle = -twoPi;\n      } else {\n        deltaAngle = deltaAngle - twoPi;\n      }\n    }\n\n    const angle = this.aStartAngle + t * deltaAngle;\n    let x = this.aX + this.xRadius * Math.cos(angle);\n    let y = this.aY + this.yRadius * Math.sin(angle);\n\n    if (this.aRotation !== 0) {\n      const cos = Math.cos(this.aRotation);\n      const sin = Math.sin(this.aRotation);\n\n      const tx = x - this.aX;\n      const ty = y - this.aY;\n\n      // Rotate the point about the center of the ellipse.\n      x = tx * cos - ty * sin + this.aX;\n      y = tx * sin + ty * cos + this.aY;\n    }\n\n    return point.set(x, y);\n  }\n\n  copy(source) {\n    super.copy(source);\n\n    this.aX = source.aX;\n    this.aY = source.aY;\n\n    this.xRadius = source.xRadius;\n    this.yRadius = source.yRadius;\n\n    this.aStartAngle = source.aStartAngle;\n    this.aEndAngle = source.aEndAngle;\n\n    this.aClockwise = source.aClockwise;\n\n    this.aRotation = source.aRotation;\n\n    return this;\n  }\n\n  toJSON() {\n    const data = super.toJSON();\n\n    data.aX = this.aX;\n    data.aY = this.aY;\n\n    data.xRadius = this.xRadius;\n    data.yRadius = this.yRadius;\n\n    data.aStartAngle = this.aStartAngle;\n    data.aEndAngle = this.aEndAngle;\n\n    data.aClockwise = this.aClockwise;\n\n    data.aRotation = this.aRotation;\n\n    return data;\n  }\n\n  fromJSON(json) {\n    super.fromJSON(json);\n\n    this.aX = json.aX;\n    this.aY = json.aY;\n\n    this.xRadius = json.xRadius;\n    this.yRadius = json.yRadius;\n\n    this.aStartAngle = json.aStartAngle;\n    this.aEndAngle = json.aEndAngle;\n\n    this.aClockwise = json.aClockwise;\n\n    this.aRotation = json.aRotation;\n\n    return this;\n  }\n}\n\nEllipseCurve.prototype.isEllipseCurve = true;\n\nclass ArcCurve extends EllipseCurve {\n  constructor(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n    super(aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\n\n    this.type = \"ArcCurve\";\n  }\n}\n\nArcCurve.prototype.isArcCurve = true;\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n  let c0 = 0,\n    c1 = 0,\n    c2 = 0,\n    c3 = 0;\n\n  /*\n   * Compute coefficients for a cubic polynomial\n   *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n   * such that\n   *   p(0) = x0, p(1) = x1\n   *  and\n   *   p'(0) = t0, p'(1) = t1.\n   */\n  function init(x0, x1, t0, t1) {\n    c0 = x0;\n    c1 = t0;\n    c2 = -3 * x0 + 3 * x1 - 2 * t0 - t1;\n    c3 = 2 * x0 - 2 * x1 + t0 + t1;\n  }\n\n  return {\n    initCatmullRom: function (x0, x1, x2, x3, tension) {\n      init(x1, x2, tension * (x2 - x0), tension * (x3 - x1));\n    },\n\n    initNonuniformCatmullRom: function (x0, x1, x2, x3, dt0, dt1, dt2) {\n      // compute tangents when parameterized in [t1,t2]\n      let t1 = (x1 - x0) / dt0 - (x2 - x0) / (dt0 + dt1) + (x2 - x1) / dt1;\n      let t2 = (x2 - x1) / dt1 - (x3 - x1) / (dt1 + dt2) + (x3 - x2) / dt2;\n\n      // rescale tangents for parametrization in [0,1]\n      t1 *= dt1;\n      t2 *= dt1;\n\n      init(x1, x2, t1, t2);\n    },\n\n    calc: function (t) {\n      const t2 = t * t;\n      const t3 = t2 * t;\n      return c0 + c1 * t + c2 * t2 + c3 * t3;\n    },\n  };\n}\n\n//\n\nconst tmp = new Vector3();\nconst px = new CubicPoly(),\n  py = new CubicPoly(),\n  pz = new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n  constructor(\n    points = [],\n    closed = false,\n    curveType = \"centripetal\",\n    tension = 0.5\n  ) {\n    super();\n\n    this.type = \"CatmullRomCurve3\";\n\n    this.points = points;\n    this.closed = closed;\n    this.curveType = curveType;\n    this.tension = tension;\n  }\n\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget;\n\n    const points = this.points;\n    const l = points.length;\n\n    const p = (l - (this.closed ? 0 : 1)) * t;\n    let intPoint = Math.floor(p);\n    let weight = p - intPoint;\n\n    if (this.closed) {\n      intPoint +=\n        intPoint > 0 ? 0 : (Math.floor(Math.abs(intPoint) / l) + 1) * l;\n    } else if (weight === 0 && intPoint === l - 1) {\n      intPoint = l - 2;\n      weight = 1;\n    }\n\n    let p0, p3; // 4 points (p1 & p2 defined below)\n\n    if (this.closed || intPoint > 0) {\n      p0 = points[(intPoint - 1) % l];\n    } else {\n      // extrapolate first point\n      tmp.subVectors(points[0], points[1]).add(points[0]);\n      p0 = tmp;\n    }\n\n    const p1 = points[intPoint % l];\n    const p2 = points[(intPoint + 1) % l];\n\n    if (this.closed || intPoint + 2 < l) {\n      p3 = points[(intPoint + 2) % l];\n    } else {\n      // extrapolate last point\n      tmp.subVectors(points[l - 1], points[l - 2]).add(points[l - 1]);\n      p3 = tmp;\n    }\n\n    if (this.curveType === \"centripetal\" || this.curveType === \"chordal\") {\n      // init Centripetal / Chordal Catmull-Rom\n      const pow = this.curveType === \"chordal\" ? 0.5 : 0.25;\n      let dt0 = Math.pow(p0.distanceToSquared(p1), pow);\n      let dt1 = Math.pow(p1.distanceToSquared(p2), pow);\n      let dt2 = Math.pow(p2.distanceToSquared(p3), pow);\n\n      // safety check for repeated points\n      if (dt1 < 1e-4) dt1 = 1.0;\n      if (dt0 < 1e-4) dt0 = dt1;\n      if (dt2 < 1e-4) dt2 = dt1;\n\n      px.initNonuniformCatmullRom(p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2);\n      py.initNonuniformCatmullRom(p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2);\n      pz.initNonuniformCatmullRom(p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2);\n    } else if (this.curveType === \"catmullrom\") {\n      px.initCatmullRom(p0.x, p1.x, p2.x, p3.x, this.tension);\n      py.initCatmullRom(p0.y, p1.y, p2.y, p3.y, this.tension);\n      pz.initCatmullRom(p0.z, p1.z, p2.z, p3.z, this.tension);\n    }\n\n    point.set(px.calc(weight), py.calc(weight), pz.calc(weight));\n\n    return point;\n  }\n\n  copy(source) {\n    super.copy(source);\n\n    this.points = [];\n\n    for (let i = 0, l = source.points.length; i < l; i++) {\n      const point = source.points[i];\n\n      this.points.push(point.clone());\n    }\n\n    this.closed = source.closed;\n    this.curveType = source.curveType;\n    this.tension = source.tension;\n\n    return this;\n  }\n\n  toJSON() {\n    const data = super.toJSON();\n\n    data.points = [];\n\n    for (let i = 0, l = this.points.length; i < l; i++) {\n      const point = this.points[i];\n      data.points.push(point.toArray());\n    }\n\n    data.closed = this.closed;\n    data.curveType = this.curveType;\n    data.tension = this.tension;\n\n    return data;\n  }\n\n  fromJSON(json) {\n    super.fromJSON(json);\n\n    this.points = [];\n\n    for (let i = 0, l = json.points.length; i < l; i++) {\n      const point = json.points[i];\n      this.points.push(new Vector3().fromArray(point));\n    }\n\n    this.closed = json.closed;\n    this.curveType = json.curveType;\n    this.tension = json.tension;\n\n    return this;\n  }\n}\n\nCatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\n\n/**\n * Bezier Curves formulas obtained from\n * http://en.wikipedia.org/wiki/Bézier_curve\n */\n\nfunction CatmullRom(t, p0, p1, p2, p3) {\n  const v0 = (p2 - p0) * 0.5;\n  const v1 = (p3 - p1) * 0.5;\n  const t2 = t * t;\n  const t3 = t * t2;\n  return (\n    (2 * p1 - 2 * p2 + v0 + v1) * t3 +\n    (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 +\n    v0 * t +\n    p1\n  );\n}\n\n//\n\nfunction QuadraticBezierP0(t, p) {\n  const k = 1 - t;\n  return k * k * p;\n}\n\nfunction QuadraticBezierP1(t, p) {\n  return 2 * (1 - t) * t * p;\n}\n\nfunction QuadraticBezierP2(t, p) {\n  return t * t * p;\n}\n\nfunction QuadraticBezier(t, p0, p1, p2) {\n  return (\n    QuadraticBezierP0(t, p0) +\n    QuadraticBezierP1(t, p1) +\n    QuadraticBezierP2(t, p2)\n  );\n}\n\n//\n\nfunction CubicBezierP0(t, p) {\n  const k = 1 - t;\n  return k * k * k * p;\n}\n\nfunction CubicBezierP1(t, p) {\n  const k = 1 - t;\n  return 3 * k * k * t * p;\n}\n\nfunction CubicBezierP2(t, p) {\n  return 3 * (1 - t) * t * t * p;\n}\n\nfunction CubicBezierP3(t, p) {\n  return t * t * t * p;\n}\n\nfunction CubicBezier(t, p0, p1, p2, p3) {\n  return (\n    CubicBezierP0(t, p0) +\n    CubicBezierP1(t, p1) +\n    CubicBezierP2(t, p2) +\n    CubicBezierP3(t, p3)\n  );\n}\n\nclass CubicBezierCurve extends Curve {\n  constructor(\n    v0 = new Vector2(),\n    v1 = new Vector2(),\n    v2 = new Vector2(),\n    v3 = new Vector2()\n  ) {\n    super();\n\n    this.type = \"CubicBezierCurve\";\n\n    this.v0 = v0;\n    this.v1 = v1;\n    this.v2 = v2;\n    this.v3 = v3;\n  }\n\n  getPoint(t, optionalTarget = new Vector2()) {\n    const point = optionalTarget;\n\n    const v0 = this.v0,\n      v1 = this.v1,\n      v2 = this.v2,\n      v3 = this.v3;\n\n    point.set(\n      CubicBezier(t, v0.x, v1.x, v2.x, v3.x),\n      CubicBezier(t, v0.y, v1.y, v2.y, v3.y)\n    );\n\n    return point;\n  }\n\n  copy(source) {\n    super.copy(source);\n\n    this.v0.copy(source.v0);\n    this.v1.copy(source.v1);\n    this.v2.copy(source.v2);\n    this.v3.copy(source.v3);\n\n    return this;\n  }\n\n  toJSON() {\n    const data = super.toJSON();\n\n    data.v0 = this.v0.toArray();\n    data.v1 = this.v1.toArray();\n    data.v2 = this.v2.toArray();\n    data.v3 = this.v3.toArray();\n\n    return data;\n  }\n\n  fromJSON(json) {\n    super.fromJSON(json);\n\n    this.v0.fromArray(json.v0);\n    this.v1.fromArray(json.v1);\n    this.v2.fromArray(json.v2);\n    this.v3.fromArray(json.v3);\n\n    return this;\n  }\n}\n\nCubicBezierCurve.prototype.isCubicBezierCurve = true;\n\nclass CubicBezierCurve3 extends Curve {\n  constructor(\n    v0 = new Vector3(),\n    v1 = new Vector3(),\n    v2 = new Vector3(),\n    v3 = new Vector3()\n  ) {\n    super();\n\n    this.type = \"CubicBezierCurve3\";\n\n    this.v0 = v0;\n    this.v1 = v1;\n    this.v2 = v2;\n    this.v3 = v3;\n  }\n\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget;\n\n    const v0 = this.v0,\n      v1 = this.v1,\n      v2 = this.v2,\n      v3 = this.v3;\n\n    point.set(\n      CubicBezier(t, v0.x, v1.x, v2.x, v3.x),\n      CubicBezier(t, v0.y, v1.y, v2.y, v3.y),\n      CubicBezier(t, v0.z, v1.z, v2.z, v3.z)\n    );\n\n    return point;\n  }\n\n  copy(source) {\n    super.copy(source);\n\n    this.v0.copy(source.v0);\n    this.v1.copy(source.v1);\n    this.v2.copy(source.v2);\n    this.v3.copy(source.v3);\n\n    return this;\n  }\n\n  toJSON() {\n    const data = super.toJSON();\n\n    data.v0 = this.v0.toArray();\n    data.v1 = this.v1.toArray();\n    data.v2 = this.v2.toArray();\n    data.v3 = this.v3.toArray();\n\n    return data;\n  }\n\n  fromJSON(json) {\n    super.fromJSON(json);\n\n    this.v0.fromArray(json.v0);\n    this.v1.fromArray(json.v1);\n    this.v2.fromArray(json.v2);\n    this.v3.fromArray(json.v3);\n\n    return this;\n  }\n}\n\nCubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\n\nclass LineCurve extends Curve {\n  constructor(v1 = new Vector2(), v2 = new Vector2()) {\n    super();\n\n    this.type = \"LineCurve\";\n\n    this.v1 = v1;\n    this.v2 = v2;\n  }\n\n  getPoint(t, optionalTarget = new Vector2()) {\n    const point = optionalTarget;\n\n    if (t === 1) {\n      point.copy(this.v2);\n    } else {\n      point.copy(this.v2).sub(this.v1);\n      point.multiplyScalar(t).add(this.v1);\n    }\n\n    return point;\n  }\n\n  // Line curve is linear, so we can overwrite default getPointAt\n  getPointAt(u, optionalTarget) {\n    return this.getPoint(u, optionalTarget);\n  }\n\n  getTangent(t, optionalTarget) {\n    const tangent = optionalTarget || new Vector2();\n\n    tangent.copy(this.v2).sub(this.v1).normalize();\n\n    return tangent;\n  }\n\n  copy(source) {\n    super.copy(source);\n\n    this.v1.copy(source.v1);\n    this.v2.copy(source.v2);\n\n    return this;\n  }\n\n  toJSON() {\n    const data = super.toJSON();\n\n    data.v1 = this.v1.toArray();\n    data.v2 = this.v2.toArray();\n\n    return data;\n  }\n\n  fromJSON(json) {\n    super.fromJSON(json);\n\n    this.v1.fromArray(json.v1);\n    this.v2.fromArray(json.v2);\n\n    return this;\n  }\n}\n\nLineCurve.prototype.isLineCurve = true;\n\nclass LineCurve3 extends Curve {\n  constructor(v1 = new Vector3(), v2 = new Vector3()) {\n    super();\n\n    this.type = \"LineCurve3\";\n    this.isLineCurve3 = true;\n\n    this.v1 = v1;\n    this.v2 = v2;\n  }\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget;\n\n    if (t === 1) {\n      point.copy(this.v2);\n    } else {\n      point.copy(this.v2).sub(this.v1);\n      point.multiplyScalar(t).add(this.v1);\n    }\n\n    return point;\n  }\n  // Line curve is linear, so we can overwrite default getPointAt\n  getPointAt(u, optionalTarget) {\n    return this.getPoint(u, optionalTarget);\n  }\n  copy(source) {\n    super.copy(source);\n\n    this.v1.copy(source.v1);\n    this.v2.copy(source.v2);\n\n    return this;\n  }\n  toJSON() {\n    const data = super.toJSON();\n\n    data.v1 = this.v1.toArray();\n    data.v2 = this.v2.toArray();\n\n    return data;\n  }\n  fromJSON(json) {\n    super.fromJSON(json);\n\n    this.v1.fromArray(json.v1);\n    this.v2.fromArray(json.v2);\n\n    return this;\n  }\n}\n\nclass QuadraticBezierCurve extends Curve {\n  constructor(v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2()) {\n    super();\n\n    this.type = \"QuadraticBezierCurve\";\n\n    this.v0 = v0;\n    this.v1 = v1;\n    this.v2 = v2;\n  }\n\n  getPoint(t, optionalTarget = new Vector2()) {\n    const point = optionalTarget;\n\n    const v0 = this.v0,\n      v1 = this.v1,\n      v2 = this.v2;\n\n    point.set(\n      QuadraticBezier(t, v0.x, v1.x, v2.x),\n      QuadraticBezier(t, v0.y, v1.y, v2.y)\n    );\n\n    return point;\n  }\n\n  copy(source) {\n    super.copy(source);\n\n    this.v0.copy(source.v0);\n    this.v1.copy(source.v1);\n    this.v2.copy(source.v2);\n\n    return this;\n  }\n\n  toJSON() {\n    const data = super.toJSON();\n\n    data.v0 = this.v0.toArray();\n    data.v1 = this.v1.toArray();\n    data.v2 = this.v2.toArray();\n\n    return data;\n  }\n\n  fromJSON(json) {\n    super.fromJSON(json);\n\n    this.v0.fromArray(json.v0);\n    this.v1.fromArray(json.v1);\n    this.v2.fromArray(json.v2);\n\n    return this;\n  }\n}\n\nQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n\nclass QuadraticBezierCurve3 extends Curve {\n  constructor(v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3()) {\n    super();\n\n    this.type = \"QuadraticBezierCurve3\";\n\n    this.v0 = v0;\n    this.v1 = v1;\n    this.v2 = v2;\n  }\n\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget;\n\n    const v0 = this.v0,\n      v1 = this.v1,\n      v2 = this.v2;\n\n    point.set(\n      QuadraticBezier(t, v0.x, v1.x, v2.x),\n      QuadraticBezier(t, v0.y, v1.y, v2.y),\n      QuadraticBezier(t, v0.z, v1.z, v2.z)\n    );\n\n    return point;\n  }\n\n  copy(source) {\n    super.copy(source);\n\n    this.v0.copy(source.v0);\n    this.v1.copy(source.v1);\n    this.v2.copy(source.v2);\n\n    return this;\n  }\n\n  toJSON() {\n    const data = super.toJSON();\n\n    data.v0 = this.v0.toArray();\n    data.v1 = this.v1.toArray();\n    data.v2 = this.v2.toArray();\n\n    return data;\n  }\n\n  fromJSON(json) {\n    super.fromJSON(json);\n\n    this.v0.fromArray(json.v0);\n    this.v1.fromArray(json.v1);\n    this.v2.fromArray(json.v2);\n\n    return this;\n  }\n}\n\nQuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n\nclass SplineCurve extends Curve {\n  constructor(points = []) {\n    super();\n\n    this.type = \"SplineCurve\";\n\n    this.points = points;\n  }\n\n  getPoint(t, optionalTarget = new Vector2()) {\n    const point = optionalTarget;\n\n    const points = this.points;\n    const p = (points.length - 1) * t;\n\n    const intPoint = Math.floor(p);\n    const weight = p - intPoint;\n\n    const p0 = points[intPoint === 0 ? intPoint : intPoint - 1];\n    const p1 = points[intPoint];\n    const p2 =\n      points[intPoint > points.length - 2 ? points.length - 1 : intPoint + 1];\n    const p3 =\n      points[intPoint > points.length - 3 ? points.length - 1 : intPoint + 2];\n\n    point.set(\n      CatmullRom(weight, p0.x, p1.x, p2.x, p3.x),\n      CatmullRom(weight, p0.y, p1.y, p2.y, p3.y)\n    );\n\n    return point;\n  }\n\n  copy(source) {\n    super.copy(source);\n\n    this.points = [];\n\n    for (let i = 0, l = source.points.length; i < l; i++) {\n      const point = source.points[i];\n\n      this.points.push(point.clone());\n    }\n\n    return this;\n  }\n\n  toJSON() {\n    const data = super.toJSON();\n\n    data.points = [];\n\n    for (let i = 0, l = this.points.length; i < l; i++) {\n      const point = this.points[i];\n      data.points.push(point.toArray());\n    }\n\n    return data;\n  }\n\n  fromJSON(json) {\n    super.fromJSON(json);\n\n    this.points = [];\n\n    for (let i = 0, l = json.points.length; i < l; i++) {\n      const point = json.points[i];\n      this.points.push(new Vector2().fromArray(point));\n    }\n\n    return this;\n  }\n}\n\nSplineCurve.prototype.isSplineCurve = true;\n\nvar Curves = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  ArcCurve: ArcCurve,\n  CatmullRomCurve3: CatmullRomCurve3,\n  CubicBezierCurve: CubicBezierCurve,\n  CubicBezierCurve3: CubicBezierCurve3,\n  EllipseCurve: EllipseCurve,\n  LineCurve: LineCurve,\n  LineCurve3: LineCurve3,\n  QuadraticBezierCurve: QuadraticBezierCurve,\n  QuadraticBezierCurve3: QuadraticBezierCurve3,\n  SplineCurve: SplineCurve,\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n  constructor() {\n    super();\n\n    this.type = \"CurvePath\";\n\n    this.curves = [];\n    this.autoClose = false; // Automatically closes the path\n  }\n\n  add(curve) {\n    this.curves.push(curve);\n  }\n\n  closePath() {\n    // Add a line curve if start and end of lines are not connected\n    const startPoint = this.curves[0].getPoint(0);\n    const endPoint = this.curves[this.curves.length - 1].getPoint(1);\n\n    if (!startPoint.equals(endPoint)) {\n      this.curves.push(new LineCurve(endPoint, startPoint));\n    }\n  }\n\n  // To get accurate point with reference to\n  // entire path distance at time t,\n  // following has to be done:\n\n  // 1. Length of each sub path have to be known\n  // 2. Locate and identify type of curve\n  // 3. Get t for the curve\n  // 4. Return curve.getPointAt(t')\n\n  getPoint(t, optionalTarget) {\n    const d = t * this.getLength();\n    const curveLengths = this.getCurveLengths();\n    let i = 0;\n\n    // To think about boundaries points.\n\n    while (i < curveLengths.length) {\n      if (curveLengths[i] >= d) {\n        const diff = curveLengths[i] - d;\n        const curve = this.curves[i];\n\n        const segmentLength = curve.getLength();\n        const u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n        return curve.getPointAt(u, optionalTarget);\n      }\n\n      i++;\n    }\n\n    return null;\n\n    // loop where sum != 0, sum > d , sum+1 <d\n  }\n\n  // We cannot use the default THREE.Curve getPoint() with getLength() because in\n  // THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n  // getPoint() depends on getLength\n\n  getLength() {\n    const lens = this.getCurveLengths();\n    return lens[lens.length - 1];\n  }\n\n  // cacheLengths must be recalculated.\n  updateArcLengths() {\n    this.needsUpdate = true;\n    this.cacheLengths = null;\n    this.getCurveLengths();\n  }\n\n  // Compute lengths and cache them\n  // We cannot overwrite getLengths() because UtoT mapping uses it.\n\n  getCurveLengths() {\n    // We use cache values if curves and cache array are same length\n\n    if (this.cacheLengths && this.cacheLengths.length === this.curves.length) {\n      return this.cacheLengths;\n    }\n\n    // Get length of sub-curve\n    // Push sums into cached array\n\n    const lengths = [];\n    let sums = 0;\n\n    for (let i = 0, l = this.curves.length; i < l; i++) {\n      sums += this.curves[i].getLength();\n      lengths.push(sums);\n    }\n\n    this.cacheLengths = lengths;\n\n    return lengths;\n  }\n\n  getSpacedPoints(divisions = 40) {\n    const points = [];\n\n    for (let i = 0; i <= divisions; i++) {\n      points.push(this.getPoint(i / divisions));\n    }\n\n    if (this.autoClose) {\n      points.push(points[0]);\n    }\n\n    return points;\n  }\n\n  getPoints(divisions = 12) {\n    const points = [];\n    let last;\n\n    for (let i = 0, curves = this.curves; i < curves.length; i++) {\n      const curve = curves[i];\n      const resolution =\n        curve && curve.isEllipseCurve\n          ? divisions * 2\n          : curve && (curve.isLineCurve || curve.isLineCurve3)\n          ? 1\n          : curve && curve.isSplineCurve\n          ? divisions * curve.points.length\n          : divisions;\n\n      const pts = curve.getPoints(resolution);\n\n      for (let j = 0; j < pts.length; j++) {\n        const point = pts[j];\n\n        if (last && last.equals(point)) continue; // ensures no consecutive points are duplicates\n\n        points.push(point);\n        last = point;\n      }\n    }\n\n    if (\n      this.autoClose &&\n      points.length > 1 &&\n      !points[points.length - 1].equals(points[0])\n    ) {\n      points.push(points[0]);\n    }\n\n    return points;\n  }\n\n  copy(source) {\n    super.copy(source);\n\n    this.curves = [];\n\n    for (let i = 0, l = source.curves.length; i < l; i++) {\n      const curve = source.curves[i];\n\n      this.curves.push(curve.clone());\n    }\n\n    this.autoClose = source.autoClose;\n\n    return this;\n  }\n\n  toJSON() {\n    const data = super.toJSON();\n\n    data.autoClose = this.autoClose;\n    data.curves = [];\n\n    for (let i = 0, l = this.curves.length; i < l; i++) {\n      const curve = this.curves[i];\n      data.curves.push(curve.toJSON());\n    }\n\n    return data;\n  }\n\n  fromJSON(json) {\n    super.fromJSON(json);\n\n    this.autoClose = json.autoClose;\n    this.curves = [];\n\n    for (let i = 0, l = json.curves.length; i < l; i++) {\n      const curve = json.curves[i];\n      this.curves.push(new Curves[curve.type]().fromJSON(curve));\n    }\n\n    return this;\n  }\n}\n\nclass Path extends CurvePath {\n  constructor(points) {\n    super();\n    this.type = \"Path\";\n\n    this.currentPoint = new Vector2();\n\n    if (points) {\n      this.setFromPoints(points);\n    }\n  }\n\n  setFromPoints(points) {\n    this.moveTo(points[0].x, points[0].y);\n\n    for (let i = 1, l = points.length; i < l; i++) {\n      this.lineTo(points[i].x, points[i].y);\n    }\n\n    return this;\n  }\n\n  moveTo(x, y) {\n    this.currentPoint.set(x, y); // TODO consider referencing vectors instead of copying?\n\n    return this;\n  }\n\n  lineTo(x, y) {\n    const curve = new LineCurve(this.currentPoint.clone(), new Vector2(x, y));\n    this.curves.push(curve);\n\n    this.currentPoint.set(x, y);\n\n    return this;\n  }\n\n  quadraticCurveTo(aCPx, aCPy, aX, aY) {\n    const curve = new QuadraticBezierCurve(\n      this.currentPoint.clone(),\n      new Vector2(aCPx, aCPy),\n      new Vector2(aX, aY)\n    );\n\n    this.curves.push(curve);\n\n    this.currentPoint.set(aX, aY);\n\n    return this;\n  }\n\n  bezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY) {\n    const curve = new CubicBezierCurve(\n      this.currentPoint.clone(),\n      new Vector2(aCP1x, aCP1y),\n      new Vector2(aCP2x, aCP2y),\n      new Vector2(aX, aY)\n    );\n\n    this.curves.push(curve);\n\n    this.currentPoint.set(aX, aY);\n\n    return this;\n  }\n\n  splineThru(pts /*Array of Vector*/) {\n    const npts = [this.currentPoint.clone()].concat(pts);\n\n    const curve = new SplineCurve(npts);\n    this.curves.push(curve);\n\n    this.currentPoint.copy(pts[pts.length - 1]);\n\n    return this;\n  }\n\n  arc(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n    const x0 = this.currentPoint.x;\n    const y0 = this.currentPoint.y;\n\n    this.absarc(aX + x0, aY + y0, aRadius, aStartAngle, aEndAngle, aClockwise);\n\n    return this;\n  }\n\n  absarc(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n    this.absellipse(\n      aX,\n      aY,\n      aRadius,\n      aRadius,\n      aStartAngle,\n      aEndAngle,\n      aClockwise\n    );\n\n    return this;\n  }\n\n  ellipse(\n    aX,\n    aY,\n    xRadius,\n    yRadius,\n    aStartAngle,\n    aEndAngle,\n    aClockwise,\n    aRotation\n  ) {\n    const x0 = this.currentPoint.x;\n    const y0 = this.currentPoint.y;\n\n    this.absellipse(\n      aX + x0,\n      aY + y0,\n      xRadius,\n      yRadius,\n      aStartAngle,\n      aEndAngle,\n      aClockwise,\n      aRotation\n    );\n\n    return this;\n  }\n\n  absellipse(\n    aX,\n    aY,\n    xRadius,\n    yRadius,\n    aStartAngle,\n    aEndAngle,\n    aClockwise,\n    aRotation\n  ) {\n    const curve = new EllipseCurve(\n      aX,\n      aY,\n      xRadius,\n      yRadius,\n      aStartAngle,\n      aEndAngle,\n      aClockwise,\n      aRotation\n    );\n\n    if (this.curves.length > 0) {\n      // if a previous curve is present, attempt to join\n      const firstPoint = curve.getPoint(0);\n\n      if (!firstPoint.equals(this.currentPoint)) {\n        this.lineTo(firstPoint.x, firstPoint.y);\n      }\n    }\n\n    this.curves.push(curve);\n\n    const lastPoint = curve.getPoint(1);\n    this.currentPoint.copy(lastPoint);\n\n    return this;\n  }\n\n  copy(source) {\n    super.copy(source);\n\n    this.currentPoint.copy(source.currentPoint);\n\n    return this;\n  }\n\n  toJSON() {\n    const data = super.toJSON();\n\n    data.currentPoint = this.currentPoint.toArray();\n\n    return data;\n  }\n\n  fromJSON(json) {\n    super.fromJSON(json);\n\n    this.currentPoint.fromArray(json.currentPoint);\n\n    return this;\n  }\n}\n\nclass Shape extends Path {\n  constructor(points) {\n    super(points);\n\n    this.uuid = generateUUID();\n\n    this.type = \"Shape\";\n\n    this.holes = [];\n  }\n\n  getPointsHoles(divisions) {\n    const holesPts = [];\n\n    for (let i = 0, l = this.holes.length; i < l; i++) {\n      holesPts[i] = this.holes[i].getPoints(divisions);\n    }\n\n    return holesPts;\n  }\n\n  // get points of shape and holes (keypoints based on segments parameter)\n\n  extractPoints(divisions) {\n    return {\n      shape: this.getPoints(divisions),\n      holes: this.getPointsHoles(divisions),\n    };\n  }\n\n  copy(source) {\n    super.copy(source);\n\n    this.holes = [];\n\n    for (let i = 0, l = source.holes.length; i < l; i++) {\n      const hole = source.holes[i];\n\n      this.holes.push(hole.clone());\n    }\n\n    return this;\n  }\n\n  toJSON() {\n    const data = super.toJSON();\n\n    data.uuid = this.uuid;\n    data.holes = [];\n\n    for (let i = 0, l = this.holes.length; i < l; i++) {\n      const hole = this.holes[i];\n      data.holes.push(hole.toJSON());\n    }\n\n    return data;\n  }\n\n  fromJSON(json) {\n    super.fromJSON(json);\n\n    this.uuid = json.uuid;\n    this.holes = [];\n\n    for (let i = 0, l = json.holes.length; i < l; i++) {\n      const hole = json.holes[i];\n      this.holes.push(new Path().fromJSON(hole));\n    }\n\n    return this;\n  }\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.2)\n */\n\nconst Earcut = {\n  triangulate: function (data, holeIndices, dim = 2) {\n    const hasHoles = holeIndices && holeIndices.length;\n    const outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n    let outerNode = linkedList(data, 0, outerLen, dim, true);\n    const triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    let minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n      minX = maxX = data[0];\n      minY = maxY = data[1];\n\n      for (let i = dim; i < outerLen; i += dim) {\n        x = data[i];\n        y = data[i + 1];\n        if (x < minX) minX = x;\n        if (y < minY) minY = y;\n        if (x > maxX) maxX = x;\n        if (y > maxY) maxY = y;\n      }\n\n      // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n      invSize = Math.max(maxX - minX, maxY - minY);\n      invSize = invSize !== 0 ? 1 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize);\n\n    return triangles;\n  },\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n  let i, last;\n\n  if (clockwise === signedArea(data, start, end, dim) > 0) {\n    for (i = start; i < end; i += dim)\n      last = insertNode(i, data[i], data[i + 1], last);\n  } else {\n    for (i = end - dim; i >= start; i -= dim)\n      last = insertNode(i, data[i], data[i + 1], last);\n  }\n\n  if (last && equals(last, last.next)) {\n    removeNode(last);\n    last = last.next;\n  }\n\n  return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n  if (!start) return start;\n  if (!end) end = start;\n\n  let p = start,\n    again;\n  do {\n    again = false;\n\n    if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n      removeNode(p);\n      p = end = p.prev;\n      if (p === p.next) break;\n      again = true;\n    } else {\n      p = p.next;\n    }\n  } while (again || p !== end);\n\n  return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n  if (!ear) return;\n\n  // interlink polygon nodes in z-order\n  if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n  let stop = ear,\n    prev,\n    next;\n\n  // iterate through ears, slicing them one by one\n  while (ear.prev !== ear.next) {\n    prev = ear.prev;\n    next = ear.next;\n\n    if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n      // cut off the triangle\n      triangles.push(prev.i / dim);\n      triangles.push(ear.i / dim);\n      triangles.push(next.i / dim);\n\n      removeNode(ear);\n\n      // skipping the next vertex leads to less sliver triangles\n      ear = next.next;\n      stop = next.next;\n\n      continue;\n    }\n\n    ear = next;\n\n    // if we looped through the whole remaining polygon and can't find any more ears\n    if (ear === stop) {\n      // try filtering points and slicing again\n      if (!pass) {\n        earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n        // if this didn't work, try curing all small self-intersections locally\n      } else if (pass === 1) {\n        ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n        earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n        // as a last resort, try splitting the remaining polygon into two\n      } else if (pass === 2) {\n        splitEarcut(ear, triangles, dim, minX, minY, invSize);\n      }\n\n      break;\n    }\n  }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n  const a = ear.prev,\n    b = ear,\n    c = ear.next;\n\n  if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n  // now make sure we don't have other points inside the potential ear\n  let p = ear.next.next;\n\n  while (p !== ear.prev) {\n    if (\n      pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n      area(p.prev, p, p.next) >= 0\n    )\n      return false;\n    p = p.next;\n  }\n\n  return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n  const a = ear.prev,\n    b = ear,\n    c = ear.next;\n\n  if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n  // triangle bbox; min & max are calculated like this for speed\n  const minTX = a.x < b.x ? (a.x < c.x ? a.x : c.x) : b.x < c.x ? b.x : c.x,\n    minTY = a.y < b.y ? (a.y < c.y ? a.y : c.y) : b.y < c.y ? b.y : c.y,\n    maxTX = a.x > b.x ? (a.x > c.x ? a.x : c.x) : b.x > c.x ? b.x : c.x,\n    maxTY = a.y > b.y ? (a.y > c.y ? a.y : c.y) : b.y > c.y ? b.y : c.y;\n\n  // z-order range for the current triangle bbox;\n  const minZ = zOrder(minTX, minTY, minX, minY, invSize),\n    maxZ = zOrder(maxTX, maxTY, minX, minY, invSize);\n\n  let p = ear.prevZ,\n    n = ear.nextZ;\n\n  // look for points inside the triangle in both directions\n  while (p && p.z >= minZ && n && n.z <= maxZ) {\n    if (\n      p !== ear.prev &&\n      p !== ear.next &&\n      pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n      area(p.prev, p, p.next) >= 0\n    )\n      return false;\n    p = p.prevZ;\n\n    if (\n      n !== ear.prev &&\n      n !== ear.next &&\n      pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n      area(n.prev, n, n.next) >= 0\n    )\n      return false;\n    n = n.nextZ;\n  }\n\n  // look for remaining points in decreasing z-order\n  while (p && p.z >= minZ) {\n    if (\n      p !== ear.prev &&\n      p !== ear.next &&\n      pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n      area(p.prev, p, p.next) >= 0\n    )\n      return false;\n    p = p.prevZ;\n  }\n\n  // look for remaining points in increasing z-order\n  while (n && n.z <= maxZ) {\n    if (\n      n !== ear.prev &&\n      n !== ear.next &&\n      pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n      area(n.prev, n, n.next) >= 0\n    )\n      return false;\n    n = n.nextZ;\n  }\n\n  return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n  let p = start;\n  do {\n    const a = p.prev,\n      b = p.next.next;\n\n    if (\n      !equals(a, b) &&\n      intersects(a, p, p.next, b) &&\n      locallyInside(a, b) &&\n      locallyInside(b, a)\n    ) {\n      triangles.push(a.i / dim);\n      triangles.push(p.i / dim);\n      triangles.push(b.i / dim);\n\n      // remove two nodes involved\n      removeNode(p);\n      removeNode(p.next);\n\n      p = start = b;\n    }\n\n    p = p.next;\n  } while (p !== start);\n\n  return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n  // look for a valid diagonal that divides the polygon into two\n  let a = start;\n  do {\n    let b = a.next.next;\n    while (b !== a.prev) {\n      if (a.i !== b.i && isValidDiagonal(a, b)) {\n        // split the polygon in two by the diagonal\n        let c = splitPolygon(a, b);\n\n        // filter colinear points around the cuts\n        a = filterPoints(a, a.next);\n        c = filterPoints(c, c.next);\n\n        // run earcut on each half\n        earcutLinked(a, triangles, dim, minX, minY, invSize);\n        earcutLinked(c, triangles, dim, minX, minY, invSize);\n        return;\n      }\n\n      b = b.next;\n    }\n\n    a = a.next;\n  } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n  const queue = [];\n  let i, len, start, end, list;\n\n  for (i = 0, len = holeIndices.length; i < len; i++) {\n    start = holeIndices[i] * dim;\n    end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n    list = linkedList(data, start, end, dim, false);\n    if (list === list.next) list.steiner = true;\n    queue.push(getLeftmost(list));\n  }\n\n  queue.sort(compareX);\n\n  // process holes from left to right\n  for (i = 0; i < queue.length; i++) {\n    eliminateHole(queue[i], outerNode);\n    outerNode = filterPoints(outerNode, outerNode.next);\n  }\n\n  return outerNode;\n}\n\nfunction compareX(a, b) {\n  return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n  outerNode = findHoleBridge(hole, outerNode);\n  if (outerNode) {\n    const b = splitPolygon(outerNode, hole);\n\n    // filter collinear points around the cuts\n    filterPoints(outerNode, outerNode.next);\n    filterPoints(b, b.next);\n  }\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n  let p = outerNode;\n  const hx = hole.x;\n  const hy = hole.y;\n  let qx = -Infinity,\n    m;\n\n  // find a segment intersected by a ray from the hole's leftmost point to the left;\n  // segment's endpoint with lesser x will be potential connection point\n  do {\n    if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n      const x = p.x + ((hy - p.y) * (p.next.x - p.x)) / (p.next.y - p.y);\n      if (x <= hx && x > qx) {\n        qx = x;\n        if (x === hx) {\n          if (hy === p.y) return p;\n          if (hy === p.next.y) return p.next;\n        }\n\n        m = p.x < p.next.x ? p : p.next;\n      }\n    }\n\n    p = p.next;\n  } while (p !== outerNode);\n\n  if (!m) return null;\n\n  if (hx === qx) return m; // hole touches outer segment; pick leftmost endpoint\n\n  // look for points inside the triangle of hole point, segment intersection and endpoint;\n  // if there are no points found, we have a valid connection;\n  // otherwise choose the point of the minimum angle with the ray as connection point\n\n  const stop = m,\n    mx = m.x,\n    my = m.y;\n  let tanMin = Infinity,\n    tan;\n\n  p = m;\n\n  do {\n    if (\n      hx >= p.x &&\n      p.x >= mx &&\n      hx !== p.x &&\n      pointInTriangle(\n        hy < my ? hx : qx,\n        hy,\n        mx,\n        my,\n        hy < my ? qx : hx,\n        hy,\n        p.x,\n        p.y\n      )\n    ) {\n      tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n      if (\n        locallyInside(p, hole) &&\n        (tan < tanMin ||\n          (tan === tanMin &&\n            (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))\n      ) {\n        m = p;\n        tanMin = tan;\n      }\n    }\n\n    p = p.next;\n  } while (p !== stop);\n\n  return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n  return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n  let p = start;\n  do {\n    if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n    p.prevZ = p.prev;\n    p.nextZ = p.next;\n    p = p.next;\n  } while (p !== start);\n\n  p.prevZ.nextZ = null;\n  p.prevZ = null;\n\n  sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n  let i,\n    p,\n    q,\n    e,\n    tail,\n    numMerges,\n    pSize,\n    qSize,\n    inSize = 1;\n\n  do {\n    p = list;\n    list = null;\n    tail = null;\n    numMerges = 0;\n\n    while (p) {\n      numMerges++;\n      q = p;\n      pSize = 0;\n      for (i = 0; i < inSize; i++) {\n        pSize++;\n        q = q.nextZ;\n        if (!q) break;\n      }\n\n      qSize = inSize;\n\n      while (pSize > 0 || (qSize > 0 && q)) {\n        if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n          e = p;\n          p = p.nextZ;\n          pSize--;\n        } else {\n          e = q;\n          q = q.nextZ;\n          qSize--;\n        }\n\n        if (tail) tail.nextZ = e;\n        else list = e;\n\n        e.prevZ = tail;\n        tail = e;\n      }\n\n      p = q;\n    }\n\n    tail.nextZ = null;\n    inSize *= 2;\n  } while (numMerges > 1);\n\n  return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n  // coords are transformed into non-negative 15-bit integer range\n  x = 32767 * (x - minX) * invSize;\n  y = 32767 * (y - minY) * invSize;\n\n  x = (x | (x << 8)) & 0x00ff00ff;\n  x = (x | (x << 4)) & 0x0f0f0f0f;\n  x = (x | (x << 2)) & 0x33333333;\n  x = (x | (x << 1)) & 0x55555555;\n\n  y = (y | (y << 8)) & 0x00ff00ff;\n  y = (y | (y << 4)) & 0x0f0f0f0f;\n  y = (y | (y << 2)) & 0x33333333;\n  y = (y | (y << 1)) & 0x55555555;\n\n  return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n  let p = start,\n    leftmost = start;\n  do {\n    if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y))\n      leftmost = p;\n    p = p.next;\n  } while (p !== start);\n\n  return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n  return (\n    (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 &&\n    (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 &&\n    (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0\n  );\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n  return (\n    a.next.i !== b.i &&\n    a.prev.i !== b.i &&\n    !intersectsPolygon(a, b) && // dones't intersect other edges\n    ((locallyInside(a, b) &&\n      locallyInside(b, a) &&\n      middleInside(a, b) && // locally visible\n      (area(a.prev, a, b.prev) || area(a, b.prev, b))) || // does not create opposite-facing sectors\n      (equals(a, b) &&\n        area(a.prev, a, a.next) > 0 &&\n        area(b.prev, b, b.next) > 0))\n  ); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n  return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n  return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n  const o1 = sign(area(p1, q1, p2));\n  const o2 = sign(area(p1, q1, q2));\n  const o3 = sign(area(p2, q2, p1));\n  const o4 = sign(area(p2, q2, q1));\n\n  if (o1 !== o2 && o3 !== o4) return true; // general case\n\n  if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n  if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n  if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n  if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n  return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n  return (\n    q.x <= Math.max(p.x, r.x) &&\n    q.x >= Math.min(p.x, r.x) &&\n    q.y <= Math.max(p.y, r.y) &&\n    q.y >= Math.min(p.y, r.y)\n  );\n}\n\nfunction sign(num) {\n  return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n  let p = a;\n  do {\n    if (\n      p.i !== a.i &&\n      p.next.i !== a.i &&\n      p.i !== b.i &&\n      p.next.i !== b.i &&\n      intersects(p, p.next, a, b)\n    )\n      return true;\n    p = p.next;\n  } while (p !== a);\n\n  return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n  return area(a.prev, a, a.next) < 0\n    ? area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0\n    : area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n  let p = a,\n    inside = false;\n  const px = (a.x + b.x) / 2,\n    py = (a.y + b.y) / 2;\n  do {\n    if (\n      p.y > py !== p.next.y > py &&\n      p.next.y !== p.y &&\n      px < ((p.next.x - p.x) * (py - p.y)) / (p.next.y - p.y) + p.x\n    )\n      inside = !inside;\n    p = p.next;\n  } while (p !== a);\n\n  return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n  const a2 = new Node(a.i, a.x, a.y),\n    b2 = new Node(b.i, b.x, b.y),\n    an = a.next,\n    bp = b.prev;\n\n  a.next = b;\n  b.prev = a;\n\n  a2.next = an;\n  an.prev = a2;\n\n  b2.next = a2;\n  a2.prev = b2;\n\n  bp.next = b2;\n  b2.prev = bp;\n\n  return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n  const p = new Node(i, x, y);\n\n  if (!last) {\n    p.prev = p;\n    p.next = p;\n  } else {\n    p.next = last.next;\n    p.prev = last;\n    last.next.prev = p;\n    last.next = p;\n  }\n\n  return p;\n}\n\nfunction removeNode(p) {\n  p.next.prev = p.prev;\n  p.prev.next = p.next;\n\n  if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n  if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n  // vertex index in coordinates array\n  this.i = i;\n\n  // vertex coordinates\n  this.x = x;\n  this.y = y;\n\n  // previous and next vertex nodes in a polygon ring\n  this.prev = null;\n  this.next = null;\n\n  // z-order curve value\n  this.z = null;\n\n  // previous and next nodes in z-order\n  this.prevZ = null;\n  this.nextZ = null;\n\n  // indicates whether this is a steiner point\n  this.steiner = false;\n}\n\nfunction signedArea(data, start, end, dim) {\n  let sum = 0;\n  for (let i = start, j = end - dim; i < end; i += dim) {\n    sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n    j = i;\n  }\n\n  return sum;\n}\n\nclass ShapeUtils {\n  // calculate area of the contour polygon\n\n  static area(contour) {\n    const n = contour.length;\n    let a = 0.0;\n\n    for (let p = n - 1, q = 0; q < n; p = q++) {\n      a += contour[p].x * contour[q].y - contour[q].x * contour[p].y;\n    }\n\n    return a * 0.5;\n  }\n\n  static isClockWise(pts) {\n    return ShapeUtils.area(pts) < 0;\n  }\n\n  static triangulateShape(contour, holes) {\n    const vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n    const holeIndices = []; // array of hole indices\n    const faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n    removeDupEndPts(contour);\n    addContour(vertices, contour);\n\n    //\n\n    let holeIndex = contour.length;\n\n    holes.forEach(removeDupEndPts);\n\n    for (let i = 0; i < holes.length; i++) {\n      holeIndices.push(holeIndex);\n      holeIndex += holes[i].length;\n      addContour(vertices, holes[i]);\n    }\n\n    //\n\n    const triangles = Earcut.triangulate(vertices, holeIndices);\n\n    //\n\n    for (let i = 0; i < triangles.length; i += 3) {\n      faces.push(triangles.slice(i, i + 3));\n    }\n\n    return faces;\n  }\n}\n\nfunction removeDupEndPts(points) {\n  const l = points.length;\n\n  if (l > 2 && points[l - 1].equals(points[0])) {\n    points.pop();\n  }\n}\n\nfunction addContour(vertices, contour) {\n  for (let i = 0; i < contour.length; i++) {\n    vertices.push(contour[i].x);\n    vertices.push(contour[i].y);\n  }\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\nclass ExtrudeGeometry extends BufferGeometry {\n  constructor(\n    shapes = new Shape([\n      new Vector2(0.5, 0.5),\n      new Vector2(-0.5, 0.5),\n      new Vector2(-0.5, -0.5),\n      new Vector2(0.5, -0.5),\n    ]),\n    options = {}\n  ) {\n    super();\n\n    this.type = \"ExtrudeGeometry\";\n\n    this.parameters = {\n      shapes: shapes,\n      options: options,\n    };\n\n    shapes = Array.isArray(shapes) ? shapes : [shapes];\n\n    const scope = this;\n\n    const verticesArray = [];\n    const uvArray = [];\n\n    for (let i = 0, l = shapes.length; i < l; i++) {\n      const shape = shapes[i];\n      addShape(shape);\n    }\n\n    // build geometry\n\n    this.setAttribute(\"position\", new Float32BufferAttribute(verticesArray, 3));\n    this.setAttribute(\"uv\", new Float32BufferAttribute(uvArray, 2));\n\n    this.computeVertexNormals();\n\n    // functions\n\n    function addShape(shape) {\n      const placeholder = [];\n\n      // options\n\n      const curveSegments =\n        options.curveSegments !== undefined ? options.curveSegments : 12;\n      const steps = options.steps !== undefined ? options.steps : 1;\n      let depth = options.depth !== undefined ? options.depth : 1;\n\n      let bevelEnabled =\n        options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n      let bevelThickness =\n        options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n      let bevelSize =\n        options.bevelSize !== undefined\n          ? options.bevelSize\n          : bevelThickness - 0.1;\n      let bevelOffset =\n        options.bevelOffset !== undefined ? options.bevelOffset : 0;\n      let bevelSegments =\n        options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n      const extrudePath = options.extrudePath;\n\n      const uvgen =\n        options.UVGenerator !== undefined\n          ? options.UVGenerator\n          : WorldUVGenerator;\n\n      // deprecated options\n\n      if (options.amount !== undefined) {\n        console.warn(\n          \"THREE.ExtrudeBufferGeometry: amount has been renamed to depth.\"\n        );\n        depth = options.amount;\n      }\n\n      //\n\n      let extrudePts,\n        extrudeByPath = false;\n      let splineTube, binormal, normal, position2;\n\n      if (extrudePath) {\n        extrudePts = extrudePath.getSpacedPoints(steps);\n\n        extrudeByPath = true;\n        bevelEnabled = false; // bevels not supported for path extrusion\n\n        // SETUP TNB variables\n\n        // TODO1 - have a .isClosed in spline?\n\n        splineTube = extrudePath.computeFrenetFrames(steps, false);\n\n        // console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n        binormal = new Vector3();\n        normal = new Vector3();\n        position2 = new Vector3();\n      }\n\n      // Safeguards if bevels are not enabled\n\n      if (!bevelEnabled) {\n        bevelSegments = 0;\n        bevelThickness = 0;\n        bevelSize = 0;\n        bevelOffset = 0;\n      }\n\n      // Variables initialization\n\n      const shapePoints = shape.extractPoints(curveSegments);\n\n      let vertices = shapePoints.shape;\n      const holes = shapePoints.holes;\n\n      const reverse = !ShapeUtils.isClockWise(vertices);\n\n      if (reverse) {\n        vertices = vertices.reverse();\n\n        // Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n        for (let h = 0, hl = holes.length; h < hl; h++) {\n          const ahole = holes[h];\n\n          if (ShapeUtils.isClockWise(ahole)) {\n            holes[h] = ahole.reverse();\n          }\n        }\n      }\n\n      const faces = ShapeUtils.triangulateShape(vertices, holes);\n\n      /* Vertices */\n\n      const contour = vertices; // vertices has all points but contour has only points of circumference\n\n      for (let h = 0, hl = holes.length; h < hl; h++) {\n        const ahole = holes[h];\n\n        vertices = vertices.concat(ahole);\n      }\n\n      function scalePt2(pt, vec, size) {\n        if (!vec) console.error(\"THREE.ExtrudeGeometry: vec does not exist\");\n\n        return vec.clone().multiplyScalar(size).add(pt);\n      }\n\n      const vlen = vertices.length,\n        flen = faces.length;\n\n      // Find directions for point movement\n\n      function getBevelVec(inPt, inPrev, inNext) {\n        // computes for inPt the corresponding point inPt' on a new contour\n        //   shifted by 1 unit (length of normalized vector) to the left\n        // if we walk along contour clockwise, this new contour is outside the old one\n        //\n        // inPt' is the intersection of the two lines parallel to the two\n        //  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n        let v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n        // good reading for geometry algorithms (here: line-line intersection)\n        // http://geomalgorithms.com/a05-_intersect-1.html\n\n        const v_prev_x = inPt.x - inPrev.x,\n          v_prev_y = inPt.y - inPrev.y;\n        const v_next_x = inNext.x - inPt.x,\n          v_next_y = inNext.y - inPt.y;\n\n        const v_prev_lensq = v_prev_x * v_prev_x + v_prev_y * v_prev_y;\n\n        // check for collinear edges\n        const collinear0 = v_prev_x * v_next_y - v_prev_y * v_next_x;\n\n        if (Math.abs(collinear0) > Number.EPSILON) {\n          // not collinear\n\n          // length of vectors for normalizing\n\n          const v_prev_len = Math.sqrt(v_prev_lensq);\n          const v_next_len = Math.sqrt(\n            v_next_x * v_next_x + v_next_y * v_next_y\n          );\n\n          // shift adjacent points by unit vectors to the left\n\n          const ptPrevShift_x = inPrev.x - v_prev_y / v_prev_len;\n          const ptPrevShift_y = inPrev.y + v_prev_x / v_prev_len;\n\n          const ptNextShift_x = inNext.x - v_next_y / v_next_len;\n          const ptNextShift_y = inNext.y + v_next_x / v_next_len;\n\n          // scaling factor for v_prev to intersection point\n\n          const sf =\n            ((ptNextShift_x - ptPrevShift_x) * v_next_y -\n              (ptNextShift_y - ptPrevShift_y) * v_next_x) /\n            (v_prev_x * v_next_y - v_prev_y * v_next_x);\n\n          // vector from inPt to intersection point\n\n          v_trans_x = ptPrevShift_x + v_prev_x * sf - inPt.x;\n          v_trans_y = ptPrevShift_y + v_prev_y * sf - inPt.y;\n\n          // Don't normalize!, otherwise sharp corners become ugly\n          //  but prevent crazy spikes\n          const v_trans_lensq = v_trans_x * v_trans_x + v_trans_y * v_trans_y;\n          if (v_trans_lensq <= 2) {\n            return new Vector2(v_trans_x, v_trans_y);\n          } else {\n            shrink_by = Math.sqrt(v_trans_lensq / 2);\n          }\n        } else {\n          // handle special case of collinear edges\n\n          let direction_eq = false; // assumes: opposite\n\n          if (v_prev_x > Number.EPSILON) {\n            if (v_next_x > Number.EPSILON) {\n              direction_eq = true;\n            }\n          } else {\n            if (v_prev_x < -Number.EPSILON) {\n              if (v_next_x < -Number.EPSILON) {\n                direction_eq = true;\n              }\n            } else {\n              if (Math.sign(v_prev_y) === Math.sign(v_next_y)) {\n                direction_eq = true;\n              }\n            }\n          }\n\n          if (direction_eq) {\n            // console.log(\"Warning: lines are a straight sequence\");\n            v_trans_x = -v_prev_y;\n            v_trans_y = v_prev_x;\n            shrink_by = Math.sqrt(v_prev_lensq);\n          } else {\n            // console.log(\"Warning: lines are a straight spike\");\n            v_trans_x = v_prev_x;\n            v_trans_y = v_prev_y;\n            shrink_by = Math.sqrt(v_prev_lensq / 2);\n          }\n        }\n\n        return new Vector2(v_trans_x / shrink_by, v_trans_y / shrink_by);\n      }\n\n      const contourMovements = [];\n\n      for (\n        let i = 0, il = contour.length, j = il - 1, k = i + 1;\n        i < il;\n        i++, j++, k++\n      ) {\n        if (j === il) j = 0;\n        if (k === il) k = 0;\n\n        //  (j)---(i)---(k)\n        // console.log('i,j,k', i, j , k)\n\n        contourMovements[i] = getBevelVec(contour[i], contour[j], contour[k]);\n      }\n\n      const holesMovements = [];\n      let oneHoleMovements,\n        verticesMovements = contourMovements.concat();\n\n      for (let h = 0, hl = holes.length; h < hl; h++) {\n        const ahole = holes[h];\n\n        oneHoleMovements = [];\n\n        for (\n          let i = 0, il = ahole.length, j = il - 1, k = i + 1;\n          i < il;\n          i++, j++, k++\n        ) {\n          if (j === il) j = 0;\n          if (k === il) k = 0;\n\n          //  (j)---(i)---(k)\n          oneHoleMovements[i] = getBevelVec(ahole[i], ahole[j], ahole[k]);\n        }\n\n        holesMovements.push(oneHoleMovements);\n        verticesMovements = verticesMovements.concat(oneHoleMovements);\n      }\n\n      // Loop bevelSegments, 1 for the front, 1 for the back\n\n      for (let b = 0; b < bevelSegments; b++) {\n        //for ( b = bevelSegments; b > 0; b -- ) {\n\n        const t = b / bevelSegments;\n        const z = bevelThickness * Math.cos((t * Math.PI) / 2);\n        const bs = bevelSize * Math.sin((t * Math.PI) / 2) + bevelOffset;\n\n        // contract shape\n\n        for (let i = 0, il = contour.length; i < il; i++) {\n          const vert = scalePt2(contour[i], contourMovements[i], bs);\n\n          v(vert.x, vert.y, -z);\n        }\n\n        // expand holes\n\n        for (let h = 0, hl = holes.length; h < hl; h++) {\n          const ahole = holes[h];\n          oneHoleMovements = holesMovements[h];\n\n          for (let i = 0, il = ahole.length; i < il; i++) {\n            const vert = scalePt2(ahole[i], oneHoleMovements[i], bs);\n\n            v(vert.x, vert.y, -z);\n          }\n        }\n      }\n\n      const bs = bevelSize + bevelOffset;\n\n      // Back facing vertices\n\n      for (let i = 0; i < vlen; i++) {\n        const vert = bevelEnabled\n          ? scalePt2(vertices[i], verticesMovements[i], bs)\n          : vertices[i];\n\n        if (!extrudeByPath) {\n          v(vert.x, vert.y, 0);\n        } else {\n          // v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n          normal.copy(splineTube.normals[0]).multiplyScalar(vert.x);\n          binormal.copy(splineTube.binormals[0]).multiplyScalar(vert.y);\n\n          position2.copy(extrudePts[0]).add(normal).add(binormal);\n\n          v(position2.x, position2.y, position2.z);\n        }\n      }\n\n      // Add stepped vertices...\n      // Including front facing vertices\n\n      for (let s = 1; s <= steps; s++) {\n        for (let i = 0; i < vlen; i++) {\n          const vert = bevelEnabled\n            ? scalePt2(vertices[i], verticesMovements[i], bs)\n            : vertices[i];\n\n          if (!extrudeByPath) {\n            v(vert.x, vert.y, (depth / steps) * s);\n          } else {\n            // v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n            normal.copy(splineTube.normals[s]).multiplyScalar(vert.x);\n            binormal.copy(splineTube.binormals[s]).multiplyScalar(vert.y);\n\n            position2.copy(extrudePts[s]).add(normal).add(binormal);\n\n            v(position2.x, position2.y, position2.z);\n          }\n        }\n      }\n\n      // Add bevel segments planes\n\n      //for ( b = 1; b <= bevelSegments; b ++ ) {\n      for (let b = bevelSegments - 1; b >= 0; b--) {\n        const t = b / bevelSegments;\n        const z = bevelThickness * Math.cos((t * Math.PI) / 2);\n        const bs = bevelSize * Math.sin((t * Math.PI) / 2) + bevelOffset;\n\n        // contract shape\n\n        for (let i = 0, il = contour.length; i < il; i++) {\n          const vert = scalePt2(contour[i], contourMovements[i], bs);\n          v(vert.x, vert.y, depth + z);\n        }\n\n        // expand holes\n\n        for (let h = 0, hl = holes.length; h < hl; h++) {\n          const ahole = holes[h];\n          oneHoleMovements = holesMovements[h];\n\n          for (let i = 0, il = ahole.length; i < il; i++) {\n            const vert = scalePt2(ahole[i], oneHoleMovements[i], bs);\n\n            if (!extrudeByPath) {\n              v(vert.x, vert.y, depth + z);\n            } else {\n              v(\n                vert.x,\n                vert.y + extrudePts[steps - 1].y,\n                extrudePts[steps - 1].x + z\n              );\n            }\n          }\n        }\n      }\n\n      /* Faces */\n\n      // Top and bottom faces\n\n      buildLidFaces();\n\n      // Sides faces\n\n      buildSideFaces();\n\n      /////  Internal functions\n\n      function buildLidFaces() {\n        const start = verticesArray.length / 3;\n\n        if (bevelEnabled) {\n          let layer = 0; // steps + 1\n          let offset = vlen * layer;\n\n          // Bottom faces\n\n          for (let i = 0; i < flen; i++) {\n            const face = faces[i];\n            f3(face[2] + offset, face[1] + offset, face[0] + offset);\n          }\n\n          layer = steps + bevelSegments * 2;\n          offset = vlen * layer;\n\n          // Top faces\n\n          for (let i = 0; i < flen; i++) {\n            const face = faces[i];\n            f3(face[0] + offset, face[1] + offset, face[2] + offset);\n          }\n        } else {\n          // Bottom faces\n\n          for (let i = 0; i < flen; i++) {\n            const face = faces[i];\n            f3(face[2], face[1], face[0]);\n          }\n\n          // Top faces\n\n          for (let i = 0; i < flen; i++) {\n            const face = faces[i];\n            f3(\n              face[0] + vlen * steps,\n              face[1] + vlen * steps,\n              face[2] + vlen * steps\n            );\n          }\n        }\n\n        scope.addGroup(start, verticesArray.length / 3 - start, 0);\n      }\n\n      // Create faces for the z-sides of the shape\n\n      function buildSideFaces() {\n        const start = verticesArray.length / 3;\n        let layeroffset = 0;\n        sidewalls(contour, layeroffset);\n        layeroffset += contour.length;\n\n        for (let h = 0, hl = holes.length; h < hl; h++) {\n          const ahole = holes[h];\n          sidewalls(ahole, layeroffset);\n\n          //, true\n          layeroffset += ahole.length;\n        }\n\n        scope.addGroup(start, verticesArray.length / 3 - start, 1);\n      }\n\n      function sidewalls(contour, layeroffset) {\n        let i = contour.length;\n\n        while (--i >= 0) {\n          const j = i;\n          let k = i - 1;\n          if (k < 0) k = contour.length - 1;\n\n          //console.log('b', i,j, i-1, k,vertices.length);\n\n          for (let s = 0, sl = steps + bevelSegments * 2; s < sl; s++) {\n            const slen1 = vlen * s;\n            const slen2 = vlen * (s + 1);\n\n            const a = layeroffset + j + slen1,\n              b = layeroffset + k + slen1,\n              c = layeroffset + k + slen2,\n              d = layeroffset + j + slen2;\n\n            f4(a, b, c, d);\n          }\n        }\n      }\n\n      function v(x, y, z) {\n        placeholder.push(x);\n        placeholder.push(y);\n        placeholder.push(z);\n      }\n\n      function f3(a, b, c) {\n        addVertex(a);\n        addVertex(b);\n        addVertex(c);\n\n        const nextIndex = verticesArray.length / 3;\n        const uvs = uvgen.generateTopUV(\n          scope,\n          verticesArray,\n          nextIndex - 3,\n          nextIndex - 2,\n          nextIndex - 1\n        );\n\n        addUV(uvs[0]);\n        addUV(uvs[1]);\n        addUV(uvs[2]);\n      }\n\n      function f4(a, b, c, d) {\n        addVertex(a);\n        addVertex(b);\n        addVertex(d);\n\n        addVertex(b);\n        addVertex(c);\n        addVertex(d);\n\n        const nextIndex = verticesArray.length / 3;\n        const uvs = uvgen.generateSideWallUV(\n          scope,\n          verticesArray,\n          nextIndex - 6,\n          nextIndex - 3,\n          nextIndex - 2,\n          nextIndex - 1\n        );\n\n        addUV(uvs[0]);\n        addUV(uvs[1]);\n        addUV(uvs[3]);\n\n        addUV(uvs[1]);\n        addUV(uvs[2]);\n        addUV(uvs[3]);\n      }\n\n      function addVertex(index) {\n        verticesArray.push(placeholder[index * 3 + 0]);\n        verticesArray.push(placeholder[index * 3 + 1]);\n        verticesArray.push(placeholder[index * 3 + 2]);\n      }\n\n      function addUV(vector2) {\n        uvArray.push(vector2.x);\n        uvArray.push(vector2.y);\n      }\n    }\n  }\n\n  toJSON() {\n    const data = super.toJSON();\n\n    const shapes = this.parameters.shapes;\n    const options = this.parameters.options;\n\n    return toJSON$1(shapes, options, data);\n  }\n\n  static fromJSON(data, shapes) {\n    const geometryShapes = [];\n\n    for (let j = 0, jl = data.shapes.length; j < jl; j++) {\n      const shape = shapes[data.shapes[j]];\n\n      geometryShapes.push(shape);\n    }\n\n    const extrudePath = data.options.extrudePath;\n\n    if (extrudePath !== undefined) {\n      data.options.extrudePath = new Curves[extrudePath.type]().fromJSON(\n        extrudePath\n      );\n    }\n\n    return new ExtrudeGeometry(geometryShapes, data.options);\n  }\n}\n\nconst WorldUVGenerator = {\n  generateTopUV: function (geometry, vertices, indexA, indexB, indexC) {\n    const a_x = vertices[indexA * 3];\n    const a_y = vertices[indexA * 3 + 1];\n    const b_x = vertices[indexB * 3];\n    const b_y = vertices[indexB * 3 + 1];\n    const c_x = vertices[indexC * 3];\n    const c_y = vertices[indexC * 3 + 1];\n\n    return [\n      new Vector2(a_x, a_y),\n      new Vector2(b_x, b_y),\n      new Vector2(c_x, c_y),\n    ];\n  },\n\n  generateSideWallUV: function (\n    geometry,\n    vertices,\n    indexA,\n    indexB,\n    indexC,\n    indexD\n  ) {\n    const a_x = vertices[indexA * 3];\n    const a_y = vertices[indexA * 3 + 1];\n    const a_z = vertices[indexA * 3 + 2];\n    const b_x = vertices[indexB * 3];\n    const b_y = vertices[indexB * 3 + 1];\n    const b_z = vertices[indexB * 3 + 2];\n    const c_x = vertices[indexC * 3];\n    const c_y = vertices[indexC * 3 + 1];\n    const c_z = vertices[indexC * 3 + 2];\n    const d_x = vertices[indexD * 3];\n    const d_y = vertices[indexD * 3 + 1];\n    const d_z = vertices[indexD * 3 + 2];\n\n    if (Math.abs(a_y - b_y) < Math.abs(a_x - b_x)) {\n      return [\n        new Vector2(a_x, 1 - a_z),\n        new Vector2(b_x, 1 - b_z),\n        new Vector2(c_x, 1 - c_z),\n        new Vector2(d_x, 1 - d_z),\n      ];\n    } else {\n      return [\n        new Vector2(a_y, 1 - a_z),\n        new Vector2(b_y, 1 - b_z),\n        new Vector2(c_y, 1 - c_z),\n        new Vector2(d_y, 1 - d_z),\n      ];\n    }\n  },\n};\n\nfunction toJSON$1(shapes, options, data) {\n  data.shapes = [];\n\n  if (Array.isArray(shapes)) {\n    for (let i = 0, l = shapes.length; i < l; i++) {\n      const shape = shapes[i];\n\n      data.shapes.push(shape.uuid);\n    }\n  } else {\n    data.shapes.push(shapes.uuid);\n  }\n\n  if (options.extrudePath !== undefined)\n    data.options.extrudePath = options.extrudePath.toJSON();\n\n  return data;\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n  constructor(radius = 1, detail = 0) {\n    const t = (1 + Math.sqrt(5)) / 2;\n\n    const vertices = [\n      -1,\n      t,\n      0,\n      1,\n      t,\n      0,\n      -1,\n      -t,\n      0,\n      1,\n      -t,\n      0,\n      0,\n      -1,\n      t,\n      0,\n      1,\n      t,\n      0,\n      -1,\n      -t,\n      0,\n      1,\n      -t,\n      t,\n      0,\n      -1,\n      t,\n      0,\n      1,\n      -t,\n      0,\n      -1,\n      -t,\n      0,\n      1,\n    ];\n\n    const indices = [\n      0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11,\n      10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4,\n      9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1,\n    ];\n\n    super(vertices, indices, radius, detail);\n\n    this.type = \"IcosahedronGeometry\";\n\n    this.parameters = {\n      radius: radius,\n      detail: detail,\n    };\n  }\n\n  static fromJSON(data) {\n    return new IcosahedronGeometry(data.radius, data.detail);\n  }\n}\n\nclass LatheGeometry extends BufferGeometry {\n  constructor(\n    points = [new Vector2(0, 0.5), new Vector2(0.5, 0), new Vector2(0, -0.5)],\n    segments = 12,\n    phiStart = 0,\n    phiLength = Math.PI * 2\n  ) {\n    super();\n\n    this.type = \"LatheGeometry\";\n\n    this.parameters = {\n      points: points,\n      segments: segments,\n      phiStart: phiStart,\n      phiLength: phiLength,\n    };\n\n    segments = Math.floor(segments);\n\n    // clamp phiLength so it's in range of [ 0, 2PI ]\n\n    phiLength = clamp(phiLength, 0, Math.PI * 2);\n\n    // buffers\n\n    const indices = [];\n    const vertices = [];\n    const uvs = [];\n\n    // helper variables\n\n    const inverseSegments = 1.0 / segments;\n    const vertex = new Vector3();\n    const uv = new Vector2();\n\n    // generate vertices and uvs\n\n    for (let i = 0; i <= segments; i++) {\n      const phi = phiStart + i * inverseSegments * phiLength;\n\n      const sin = Math.sin(phi);\n      const cos = Math.cos(phi);\n\n      for (let j = 0; j <= points.length - 1; j++) {\n        // vertex\n\n        vertex.x = points[j].x * sin;\n        vertex.y = points[j].y;\n        vertex.z = points[j].x * cos;\n\n        vertices.push(vertex.x, vertex.y, vertex.z);\n\n        // uv\n\n        uv.x = i / segments;\n        uv.y = j / (points.length - 1);\n\n        uvs.push(uv.x, uv.y);\n      }\n    }\n\n    // indices\n\n    for (let i = 0; i < segments; i++) {\n      for (let j = 0; j < points.length - 1; j++) {\n        const base = j + i * points.length;\n\n        const a = base;\n        const b = base + points.length;\n        const c = base + points.length + 1;\n        const d = base + 1;\n\n        // faces\n\n        indices.push(a, b, d);\n        indices.push(b, c, d);\n      }\n    }\n\n    // build geometry\n\n    this.setIndex(indices);\n    this.setAttribute(\"position\", new Float32BufferAttribute(vertices, 3));\n    this.setAttribute(\"uv\", new Float32BufferAttribute(uvs, 2));\n\n    // generate normals\n\n    this.computeVertexNormals();\n\n    // if the geometry is closed, we need to average the normals along the seam.\n    // because the corresponding vertices are identical (but still have different UVs).\n\n    if (phiLength === Math.PI * 2) {\n      const normals = this.attributes.normal.array;\n      const n1 = new Vector3();\n      const n2 = new Vector3();\n      const n = new Vector3();\n\n      // this is the buffer offset for the last line of vertices\n\n      const base = segments * points.length * 3;\n\n      for (let i = 0, j = 0; i < points.length; i++, j += 3) {\n        // select the normal of the vertex in the first line\n\n        n1.x = normals[j + 0];\n        n1.y = normals[j + 1];\n        n1.z = normals[j + 2];\n\n        // select the normal of the vertex in the last line\n\n        n2.x = normals[base + j + 0];\n        n2.y = normals[base + j + 1];\n        n2.z = normals[base + j + 2];\n\n        // average normals\n\n        n.addVectors(n1, n2).normalize();\n\n        // assign the new values to both normals\n\n        normals[j + 0] = normals[base + j + 0] = n.x;\n        normals[j + 1] = normals[base + j + 1] = n.y;\n        normals[j + 2] = normals[base + j + 2] = n.z;\n      }\n    }\n  }\n\n  static fromJSON(data) {\n    return new LatheGeometry(\n      data.points,\n      data.segments,\n      data.phiStart,\n      data.phiLength\n    );\n  }\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n  constructor(radius = 1, detail = 0) {\n    const vertices = [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1];\n\n    const indices = [\n      0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2,\n    ];\n\n    super(vertices, indices, radius, detail);\n\n    this.type = \"OctahedronGeometry\";\n\n    this.parameters = {\n      radius: radius,\n      detail: detail,\n    };\n  }\n\n  static fromJSON(data) {\n    return new OctahedronGeometry(data.radius, data.detail);\n  }\n}\n\nclass RingGeometry extends BufferGeometry {\n  constructor(\n    innerRadius = 0.5,\n    outerRadius = 1,\n    thetaSegments = 8,\n    phiSegments = 1,\n    thetaStart = 0,\n    thetaLength = Math.PI * 2\n  ) {\n    super();\n\n    this.type = \"RingGeometry\";\n\n    this.parameters = {\n      innerRadius: innerRadius,\n      outerRadius: outerRadius,\n      thetaSegments: thetaSegments,\n      phiSegments: phiSegments,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength,\n    };\n\n    thetaSegments = Math.max(3, thetaSegments);\n    phiSegments = Math.max(1, phiSegments);\n\n    // buffers\n\n    const indices = [];\n    const vertices = [];\n    const normals = [];\n    const uvs = [];\n\n    // some helper variables\n\n    let radius = innerRadius;\n    const radiusStep = (outerRadius - innerRadius) / phiSegments;\n    const vertex = new Vector3();\n    const uv = new Vector2();\n\n    // generate vertices, normals and uvs\n\n    for (let j = 0; j <= phiSegments; j++) {\n      for (let i = 0; i <= thetaSegments; i++) {\n        // values are generate from the inside of the ring to the outside\n\n        const segment = thetaStart + (i / thetaSegments) * thetaLength;\n\n        // vertex\n\n        vertex.x = radius * Math.cos(segment);\n        vertex.y = radius * Math.sin(segment);\n\n        vertices.push(vertex.x, vertex.y, vertex.z);\n\n        // normal\n\n        normals.push(0, 0, 1);\n\n        // uv\n\n        uv.x = (vertex.x / outerRadius + 1) / 2;\n        uv.y = (vertex.y / outerRadius + 1) / 2;\n\n        uvs.push(uv.x, uv.y);\n      }\n\n      // increase the radius for next row of vertices\n\n      radius += radiusStep;\n    }\n\n    // indices\n\n    for (let j = 0; j < phiSegments; j++) {\n      const thetaSegmentLevel = j * (thetaSegments + 1);\n\n      for (let i = 0; i < thetaSegments; i++) {\n        const segment = i + thetaSegmentLevel;\n\n        const a = segment;\n        const b = segment + thetaSegments + 1;\n        const c = segment + thetaSegments + 2;\n        const d = segment + 1;\n\n        // faces\n\n        indices.push(a, b, d);\n        indices.push(b, c, d);\n      }\n    }\n\n    // build geometry\n\n    this.setIndex(indices);\n    this.setAttribute(\"position\", new Float32BufferAttribute(vertices, 3));\n    this.setAttribute(\"normal\", new Float32BufferAttribute(normals, 3));\n    this.setAttribute(\"uv\", new Float32BufferAttribute(uvs, 2));\n  }\n\n  static fromJSON(data) {\n    return new RingGeometry(\n      data.innerRadius,\n      data.outerRadius,\n      data.thetaSegments,\n      data.phiSegments,\n      data.thetaStart,\n      data.thetaLength\n    );\n  }\n}\n\nclass ShapeGeometry extends BufferGeometry {\n  constructor(\n    shapes = new Shape([\n      new Vector2(0, 0.5),\n      new Vector2(-0.5, -0.5),\n      new Vector2(0.5, -0.5),\n    ]),\n    curveSegments = 12\n  ) {\n    super();\n    this.type = \"ShapeGeometry\";\n\n    this.parameters = {\n      shapes: shapes,\n      curveSegments: curveSegments,\n    };\n\n    // buffers\n\n    const indices = [];\n    const vertices = [];\n    const normals = [];\n    const uvs = [];\n\n    // helper variables\n\n    let groupStart = 0;\n    let groupCount = 0;\n\n    // allow single and array values for \"shapes\" parameter\n\n    if (Array.isArray(shapes) === false) {\n      addShape(shapes);\n    } else {\n      for (let i = 0; i < shapes.length; i++) {\n        addShape(shapes[i]);\n\n        this.addGroup(groupStart, groupCount, i); // enables MultiMaterial support\n\n        groupStart += groupCount;\n        groupCount = 0;\n      }\n    }\n\n    // build geometry\n\n    this.setIndex(indices);\n    this.setAttribute(\"position\", new Float32BufferAttribute(vertices, 3));\n    this.setAttribute(\"normal\", new Float32BufferAttribute(normals, 3));\n    this.setAttribute(\"uv\", new Float32BufferAttribute(uvs, 2));\n\n    // helper functions\n\n    function addShape(shape) {\n      const indexOffset = vertices.length / 3;\n      const points = shape.extractPoints(curveSegments);\n\n      let shapeVertices = points.shape;\n      const shapeHoles = points.holes;\n\n      // check direction of vertices\n\n      if (ShapeUtils.isClockWise(shapeVertices) === false) {\n        shapeVertices = shapeVertices.reverse();\n      }\n\n      for (let i = 0, l = shapeHoles.length; i < l; i++) {\n        const shapeHole = shapeHoles[i];\n\n        if (ShapeUtils.isClockWise(shapeHole) === true) {\n          shapeHoles[i] = shapeHole.reverse();\n        }\n      }\n\n      const faces = ShapeUtils.triangulateShape(shapeVertices, shapeHoles);\n\n      // join vertices of inner and outer paths to a single array\n\n      for (let i = 0, l = shapeHoles.length; i < l; i++) {\n        const shapeHole = shapeHoles[i];\n        shapeVertices = shapeVertices.concat(shapeHole);\n      }\n\n      // vertices, normals, uvs\n\n      for (let i = 0, l = shapeVertices.length; i < l; i++) {\n        const vertex = shapeVertices[i];\n\n        vertices.push(vertex.x, vertex.y, 0);\n        normals.push(0, 0, 1);\n        uvs.push(vertex.x, vertex.y); // world uvs\n      }\n\n      // incides\n\n      for (let i = 0, l = faces.length; i < l; i++) {\n        const face = faces[i];\n\n        const a = face[0] + indexOffset;\n        const b = face[1] + indexOffset;\n        const c = face[2] + indexOffset;\n\n        indices.push(a, b, c);\n        groupCount += 3;\n      }\n    }\n  }\n\n  toJSON() {\n    const data = super.toJSON();\n\n    const shapes = this.parameters.shapes;\n\n    return toJSON(shapes, data);\n  }\n\n  static fromJSON(data, shapes) {\n    const geometryShapes = [];\n\n    for (let j = 0, jl = data.shapes.length; j < jl; j++) {\n      const shape = shapes[data.shapes[j]];\n\n      geometryShapes.push(shape);\n    }\n\n    return new ShapeGeometry(geometryShapes, data.curveSegments);\n  }\n}\n\nfunction toJSON(shapes, data) {\n  data.shapes = [];\n\n  if (Array.isArray(shapes)) {\n    for (let i = 0, l = shapes.length; i < l; i++) {\n      const shape = shapes[i];\n\n      data.shapes.push(shape.uuid);\n    }\n  } else {\n    data.shapes.push(shapes.uuid);\n  }\n\n  return data;\n}\n\nclass SphereGeometry extends BufferGeometry {\n  constructor(\n    radius = 1,\n    widthSegments = 32,\n    heightSegments = 16,\n    phiStart = 0,\n    phiLength = Math.PI * 2,\n    thetaStart = 0,\n    thetaLength = Math.PI\n  ) {\n    super();\n    this.type = \"SphereGeometry\";\n\n    this.parameters = {\n      radius: radius,\n      widthSegments: widthSegments,\n      heightSegments: heightSegments,\n      phiStart: phiStart,\n      phiLength: phiLength,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength,\n    };\n\n    widthSegments = Math.max(3, Math.floor(widthSegments));\n    heightSegments = Math.max(2, Math.floor(heightSegments));\n\n    const thetaEnd = Math.min(thetaStart + thetaLength, Math.PI);\n\n    let index = 0;\n    const grid = [];\n\n    const vertex = new Vector3();\n    const normal = new Vector3();\n\n    // buffers\n\n    const indices = [];\n    const vertices = [];\n    const normals = [];\n    const uvs = [];\n\n    // generate vertices, normals and uvs\n\n    for (let iy = 0; iy <= heightSegments; iy++) {\n      const verticesRow = [];\n\n      const v = iy / heightSegments;\n\n      // special case for the poles\n\n      let uOffset = 0;\n\n      if (iy == 0 && thetaStart == 0) {\n        uOffset = 0.5 / widthSegments;\n      } else if (iy == heightSegments && thetaEnd == Math.PI) {\n        uOffset = -0.5 / widthSegments;\n      }\n\n      for (let ix = 0; ix <= widthSegments; ix++) {\n        const u = ix / widthSegments;\n\n        // vertex\n\n        vertex.x =\n          -radius *\n          Math.cos(phiStart + u * phiLength) *\n          Math.sin(thetaStart + v * thetaLength);\n        vertex.y = radius * Math.cos(thetaStart + v * thetaLength);\n        vertex.z =\n          radius *\n          Math.sin(phiStart + u * phiLength) *\n          Math.sin(thetaStart + v * thetaLength);\n\n        vertices.push(vertex.x, vertex.y, vertex.z);\n\n        // normal\n\n        normal.copy(vertex).normalize();\n        normals.push(normal.x, normal.y, normal.z);\n\n        // uv\n\n        uvs.push(u + uOffset, 1 - v);\n\n        verticesRow.push(index++);\n      }\n\n      grid.push(verticesRow);\n    }\n\n    // indices\n\n    for (let iy = 0; iy < heightSegments; iy++) {\n      for (let ix = 0; ix < widthSegments; ix++) {\n        const a = grid[iy][ix + 1];\n        const b = grid[iy][ix];\n        const c = grid[iy + 1][ix];\n        const d = grid[iy + 1][ix + 1];\n\n        if (iy !== 0 || thetaStart > 0) indices.push(a, b, d);\n        if (iy !== heightSegments - 1 || thetaEnd < Math.PI)\n          indices.push(b, c, d);\n      }\n    }\n\n    // build geometry\n\n    this.setIndex(indices);\n    this.setAttribute(\"position\", new Float32BufferAttribute(vertices, 3));\n    this.setAttribute(\"normal\", new Float32BufferAttribute(normals, 3));\n    this.setAttribute(\"uv\", new Float32BufferAttribute(uvs, 2));\n  }\n\n  static fromJSON(data) {\n    return new SphereGeometry(\n      data.radius,\n      data.widthSegments,\n      data.heightSegments,\n      data.phiStart,\n      data.phiLength,\n      data.thetaStart,\n      data.thetaLength\n    );\n  }\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n  constructor(radius = 1, detail = 0) {\n    const vertices = [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1];\n\n    const indices = [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1];\n\n    super(vertices, indices, radius, detail);\n\n    this.type = \"TetrahedronGeometry\";\n\n    this.parameters = {\n      radius: radius,\n      detail: detail,\n    };\n  }\n\n  static fromJSON(data) {\n    return new TetrahedronGeometry(data.radius, data.detail);\n  }\n}\n\nclass TorusGeometry extends BufferGeometry {\n  constructor(\n    radius = 1,\n    tube = 0.4,\n    radialSegments = 8,\n    tubularSegments = 6,\n    arc = Math.PI * 2\n  ) {\n    super();\n    this.type = \"TorusGeometry\";\n\n    this.parameters = {\n      radius: radius,\n      tube: tube,\n      radialSegments: radialSegments,\n      tubularSegments: tubularSegments,\n      arc: arc,\n    };\n\n    radialSegments = Math.floor(radialSegments);\n    tubularSegments = Math.floor(tubularSegments);\n\n    // buffers\n\n    const indices = [];\n    const vertices = [];\n    const normals = [];\n    const uvs = [];\n\n    // helper variables\n\n    const center = new Vector3();\n    const vertex = new Vector3();\n    const normal = new Vector3();\n\n    // generate vertices, normals and uvs\n\n    for (let j = 0; j <= radialSegments; j++) {\n      for (let i = 0; i <= tubularSegments; i++) {\n        const u = (i / tubularSegments) * arc;\n        const v = (j / radialSegments) * Math.PI * 2;\n\n        // vertex\n\n        vertex.x = (radius + tube * Math.cos(v)) * Math.cos(u);\n        vertex.y = (radius + tube * Math.cos(v)) * Math.sin(u);\n        vertex.z = tube * Math.sin(v);\n\n        vertices.push(vertex.x, vertex.y, vertex.z);\n\n        // normal\n\n        center.x = radius * Math.cos(u);\n        center.y = radius * Math.sin(u);\n        normal.subVectors(vertex, center).normalize();\n\n        normals.push(normal.x, normal.y, normal.z);\n\n        // uv\n\n        uvs.push(i / tubularSegments);\n        uvs.push(j / radialSegments);\n      }\n    }\n\n    // generate indices\n\n    for (let j = 1; j <= radialSegments; j++) {\n      for (let i = 1; i <= tubularSegments; i++) {\n        // indices\n\n        const a = (tubularSegments + 1) * j + i - 1;\n        const b = (tubularSegments + 1) * (j - 1) + i - 1;\n        const c = (tubularSegments + 1) * (j - 1) + i;\n        const d = (tubularSegments + 1) * j + i;\n\n        // faces\n\n        indices.push(a, b, d);\n        indices.push(b, c, d);\n      }\n    }\n\n    // build geometry\n\n    this.setIndex(indices);\n    this.setAttribute(\"position\", new Float32BufferAttribute(vertices, 3));\n    this.setAttribute(\"normal\", new Float32BufferAttribute(normals, 3));\n    this.setAttribute(\"uv\", new Float32BufferAttribute(uvs, 2));\n  }\n\n  static fromJSON(data) {\n    return new TorusGeometry(\n      data.radius,\n      data.tube,\n      data.radialSegments,\n      data.tubularSegments,\n      data.arc\n    );\n  }\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n  constructor(\n    radius = 1,\n    tube = 0.4,\n    tubularSegments = 64,\n    radialSegments = 8,\n    p = 2,\n    q = 3\n  ) {\n    super();\n    this.type = \"TorusKnotGeometry\";\n\n    this.parameters = {\n      radius: radius,\n      tube: tube,\n      tubularSegments: tubularSegments,\n      radialSegments: radialSegments,\n      p: p,\n      q: q,\n    };\n\n    tubularSegments = Math.floor(tubularSegments);\n    radialSegments = Math.floor(radialSegments);\n\n    // buffers\n\n    const indices = [];\n    const vertices = [];\n    const normals = [];\n    const uvs = [];\n\n    // helper variables\n\n    const vertex = new Vector3();\n    const normal = new Vector3();\n\n    const P1 = new Vector3();\n    const P2 = new Vector3();\n\n    const B = new Vector3();\n    const T = new Vector3();\n    const N = new Vector3();\n\n    // generate vertices, normals and uvs\n\n    for (let i = 0; i <= tubularSegments; ++i) {\n      // the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\n      const u = (i / tubularSegments) * p * Math.PI * 2;\n\n      // now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n      // these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n      calculatePositionOnCurve(u, p, q, radius, P1);\n      calculatePositionOnCurve(u + 0.01, p, q, radius, P2);\n\n      // calculate orthonormal basis\n\n      T.subVectors(P2, P1);\n      N.addVectors(P2, P1);\n      B.crossVectors(T, N);\n      N.crossVectors(B, T);\n\n      // normalize B, N. T can be ignored, we don't use it\n\n      B.normalize();\n      N.normalize();\n\n      for (let j = 0; j <= radialSegments; ++j) {\n        // now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n        // because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n        const v = (j / radialSegments) * Math.PI * 2;\n        const cx = -tube * Math.cos(v);\n        const cy = tube * Math.sin(v);\n\n        // now calculate the final vertex position.\n        // first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n        vertex.x = P1.x + (cx * N.x + cy * B.x);\n        vertex.y = P1.y + (cx * N.y + cy * B.y);\n        vertex.z = P1.z + (cx * N.z + cy * B.z);\n\n        vertices.push(vertex.x, vertex.y, vertex.z);\n\n        // normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n        normal.subVectors(vertex, P1).normalize();\n\n        normals.push(normal.x, normal.y, normal.z);\n\n        // uv\n\n        uvs.push(i / tubularSegments);\n        uvs.push(j / radialSegments);\n      }\n    }\n\n    // generate indices\n\n    for (let j = 1; j <= tubularSegments; j++) {\n      for (let i = 1; i <= radialSegments; i++) {\n        // indices\n\n        const a = (radialSegments + 1) * (j - 1) + (i - 1);\n        const b = (radialSegments + 1) * j + (i - 1);\n        const c = (radialSegments + 1) * j + i;\n        const d = (radialSegments + 1) * (j - 1) + i;\n\n        // faces\n\n        indices.push(a, b, d);\n        indices.push(b, c, d);\n      }\n    }\n\n    // build geometry\n\n    this.setIndex(indices);\n    this.setAttribute(\"position\", new Float32BufferAttribute(vertices, 3));\n    this.setAttribute(\"normal\", new Float32BufferAttribute(normals, 3));\n    this.setAttribute(\"uv\", new Float32BufferAttribute(uvs, 2));\n\n    // this function calculates the current position on the torus curve\n\n    function calculatePositionOnCurve(u, p, q, radius, position) {\n      const cu = Math.cos(u);\n      const su = Math.sin(u);\n      const quOverP = (q / p) * u;\n      const cs = Math.cos(quOverP);\n\n      position.x = radius * (2 + cs) * 0.5 * cu;\n      position.y = radius * (2 + cs) * su * 0.5;\n      position.z = radius * Math.sin(quOverP) * 0.5;\n    }\n  }\n\n  static fromJSON(data) {\n    return new TorusKnotGeometry(\n      data.radius,\n      data.tube,\n      data.tubularSegments,\n      data.radialSegments,\n      data.p,\n      data.q\n    );\n  }\n}\n\nclass TubeGeometry extends BufferGeometry {\n  constructor(\n    path = new QuadraticBezierCurve3(\n      new Vector3(-1, -1, 0),\n      new Vector3(-1, 1, 0),\n      new Vector3(1, 1, 0)\n    ),\n    tubularSegments = 64,\n    radius = 1,\n    radialSegments = 8,\n    closed = false\n  ) {\n    super();\n    this.type = \"TubeGeometry\";\n\n    this.parameters = {\n      path: path,\n      tubularSegments: tubularSegments,\n      radius: radius,\n      radialSegments: radialSegments,\n      closed: closed,\n    };\n\n    const frames = path.computeFrenetFrames(tubularSegments, closed);\n\n    // expose internals\n\n    this.tangents = frames.tangents;\n    this.normals = frames.normals;\n    this.binormals = frames.binormals;\n\n    // helper variables\n\n    const vertex = new Vector3();\n    const normal = new Vector3();\n    const uv = new Vector2();\n    let P = new Vector3();\n\n    // buffer\n\n    const vertices = [];\n    const normals = [];\n    const uvs = [];\n    const indices = [];\n\n    // create buffer data\n\n    generateBufferData();\n\n    // build geometry\n\n    this.setIndex(indices);\n    this.setAttribute(\"position\", new Float32BufferAttribute(vertices, 3));\n    this.setAttribute(\"normal\", new Float32BufferAttribute(normals, 3));\n    this.setAttribute(\"uv\", new Float32BufferAttribute(uvs, 2));\n\n    // functions\n\n    function generateBufferData() {\n      for (let i = 0; i < tubularSegments; i++) {\n        generateSegment(i);\n      }\n\n      // if the geometry is not closed, generate the last row of vertices and normals\n      // at the regular position on the given path\n      //\n      // if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n      generateSegment(closed === false ? tubularSegments : 0);\n\n      // uvs are generated in a separate function.\n      // this makes it easy compute correct values for closed geometries\n\n      generateUVs();\n\n      // finally create faces\n\n      generateIndices();\n    }\n\n    function generateSegment(i) {\n      // we use getPointAt to sample evenly distributed points from the given path\n\n      P = path.getPointAt(i / tubularSegments, P);\n\n      // retrieve corresponding normal and binormal\n\n      const N = frames.normals[i];\n      const B = frames.binormals[i];\n\n      // generate normals and vertices for the current segment\n\n      for (let j = 0; j <= radialSegments; j++) {\n        const v = (j / radialSegments) * Math.PI * 2;\n\n        const sin = Math.sin(v);\n        const cos = -Math.cos(v);\n\n        // normal\n\n        normal.x = cos * N.x + sin * B.x;\n        normal.y = cos * N.y + sin * B.y;\n        normal.z = cos * N.z + sin * B.z;\n        normal.normalize();\n\n        normals.push(normal.x, normal.y, normal.z);\n\n        // vertex\n\n        vertex.x = P.x + radius * normal.x;\n        vertex.y = P.y + radius * normal.y;\n        vertex.z = P.z + radius * normal.z;\n\n        vertices.push(vertex.x, vertex.y, vertex.z);\n      }\n    }\n\n    function generateIndices() {\n      for (let j = 1; j <= tubularSegments; j++) {\n        for (let i = 1; i <= radialSegments; i++) {\n          const a = (radialSegments + 1) * (j - 1) + (i - 1);\n          const b = (radialSegments + 1) * j + (i - 1);\n          const c = (radialSegments + 1) * j + i;\n          const d = (radialSegments + 1) * (j - 1) + i;\n\n          // faces\n\n          indices.push(a, b, d);\n          indices.push(b, c, d);\n        }\n      }\n    }\n\n    function generateUVs() {\n      for (let i = 0; i <= tubularSegments; i++) {\n        for (let j = 0; j <= radialSegments; j++) {\n          uv.x = i / tubularSegments;\n          uv.y = j / radialSegments;\n\n          uvs.push(uv.x, uv.y);\n        }\n      }\n    }\n  }\n\n  toJSON() {\n    const data = super.toJSON();\n\n    data.path = this.parameters.path.toJSON();\n\n    return data;\n  }\n\n  static fromJSON(data) {\n    // This only works for built-in curves (e.g. CatmullRomCurve3).\n    // User defined curves or instances of CurvePath will not be deserialized.\n    return new TubeGeometry(\n      new Curves[data.path.type]().fromJSON(data.path),\n      data.tubularSegments,\n      data.radius,\n      data.radialSegments,\n      data.closed\n    );\n  }\n}\n\nclass WireframeGeometry extends BufferGeometry {\n  constructor(geometry = null) {\n    super();\n    this.type = \"WireframeGeometry\";\n\n    this.parameters = {\n      geometry: geometry,\n    };\n\n    if (geometry !== null) {\n      // buffer\n\n      const vertices = [];\n      const edges = new Set();\n\n      // helper variables\n\n      const start = new Vector3();\n      const end = new Vector3();\n\n      if (geometry.index !== null) {\n        // indexed BufferGeometry\n\n        const position = geometry.attributes.position;\n        const indices = geometry.index;\n        let groups = geometry.groups;\n\n        if (groups.length === 0) {\n          groups = [{ start: 0, count: indices.count, materialIndex: 0 }];\n        }\n\n        // create a data structure that contains all eges without duplicates\n\n        for (let o = 0, ol = groups.length; o < ol; ++o) {\n          const group = groups[o];\n\n          const groupStart = group.start;\n          const groupCount = group.count;\n\n          for (let i = groupStart, l = groupStart + groupCount; i < l; i += 3) {\n            for (let j = 0; j < 3; j++) {\n              const index1 = indices.getX(i + j);\n              const index2 = indices.getX(i + ((j + 1) % 3));\n\n              start.fromBufferAttribute(position, index1);\n              end.fromBufferAttribute(position, index2);\n\n              if (isUniqueEdge(start, end, edges) === true) {\n                vertices.push(start.x, start.y, start.z);\n                vertices.push(end.x, end.y, end.z);\n              }\n            }\n          }\n        }\n      } else {\n        // non-indexed BufferGeometry\n\n        const position = geometry.attributes.position;\n\n        for (let i = 0, l = position.count / 3; i < l; i++) {\n          for (let j = 0; j < 3; j++) {\n            // three edges per triangle, an edge is represented as (index1, index2)\n            // e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n            const index1 = 3 * i + j;\n            const index2 = 3 * i + ((j + 1) % 3);\n\n            start.fromBufferAttribute(position, index1);\n            end.fromBufferAttribute(position, index2);\n\n            if (isUniqueEdge(start, end, edges) === true) {\n              vertices.push(start.x, start.y, start.z);\n              vertices.push(end.x, end.y, end.z);\n            }\n          }\n        }\n      }\n\n      // build geometry\n\n      this.setAttribute(\"position\", new Float32BufferAttribute(vertices, 3));\n    }\n  }\n}\n\nfunction isUniqueEdge(start, end, edges) {\n  const hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n  const hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n  if (edges.has(hash1) === true || edges.has(hash2) === true) {\n    return false;\n  } else {\n    edges.add(hash1, hash2);\n    return true;\n  }\n}\n\nvar Geometries = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  BoxGeometry: BoxGeometry,\n  BoxBufferGeometry: BoxGeometry,\n  CircleGeometry: CircleGeometry,\n  CircleBufferGeometry: CircleGeometry,\n  ConeGeometry: ConeGeometry,\n  ConeBufferGeometry: ConeGeometry,\n  CylinderGeometry: CylinderGeometry,\n  CylinderBufferGeometry: CylinderGeometry,\n  DodecahedronGeometry: DodecahedronGeometry,\n  DodecahedronBufferGeometry: DodecahedronGeometry,\n  EdgesGeometry: EdgesGeometry,\n  ExtrudeGeometry: ExtrudeGeometry,\n  ExtrudeBufferGeometry: ExtrudeGeometry,\n  IcosahedronGeometry: IcosahedronGeometry,\n  IcosahedronBufferGeometry: IcosahedronGeometry,\n  LatheGeometry: LatheGeometry,\n  LatheBufferGeometry: LatheGeometry,\n  OctahedronGeometry: OctahedronGeometry,\n  OctahedronBufferGeometry: OctahedronGeometry,\n  PlaneGeometry: PlaneGeometry,\n  PlaneBufferGeometry: PlaneGeometry,\n  PolyhedronGeometry: PolyhedronGeometry,\n  PolyhedronBufferGeometry: PolyhedronGeometry,\n  RingGeometry: RingGeometry,\n  RingBufferGeometry: RingGeometry,\n  ShapeGeometry: ShapeGeometry,\n  ShapeBufferGeometry: ShapeGeometry,\n  SphereGeometry: SphereGeometry,\n  SphereBufferGeometry: SphereGeometry,\n  TetrahedronGeometry: TetrahedronGeometry,\n  TetrahedronBufferGeometry: TetrahedronGeometry,\n  TorusGeometry: TorusGeometry,\n  TorusBufferGeometry: TorusGeometry,\n  TorusKnotGeometry: TorusKnotGeometry,\n  TorusKnotBufferGeometry: TorusKnotGeometry,\n  TubeGeometry: TubeGeometry,\n  TubeBufferGeometry: TubeGeometry,\n  WireframeGeometry: WireframeGeometry,\n});\n\n/**\n * parameters = {\n *  color: <THREE.Color>\n * }\n */\n\nclass ShadowMaterial extends Material {\n  constructor(parameters) {\n    super();\n\n    this.type = \"ShadowMaterial\";\n\n    this.color = new Color(0x000000);\n    this.transparent = true;\n\n    this.setValues(parameters);\n  }\n\n  copy(source) {\n    super.copy(source);\n\n    this.color.copy(source.color);\n\n    return this;\n  }\n}\n\nShadowMaterial.prototype.isShadowMaterial = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  roughness: <float>,\n *  metalness: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  roughnessMap: new THREE.Texture( <Image> ),\n *\n *  metalnessMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  envMapIntensity: <float>\n *\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  flatShading: <bool>\n * }\n */\n\nclass MeshStandardMaterial extends Material {\n  constructor(parameters) {\n    super();\n\n    this.defines = { STANDARD: \"\" };\n\n    this.type = \"MeshStandardMaterial\";\n\n    this.color = new Color(0xffffff); // diffuse\n    this.roughness = 1.0;\n    this.metalness = 0.0;\n\n    this.map = null;\n\n    this.lightMap = null;\n    this.lightMapIntensity = 1.0;\n\n    this.aoMap = null;\n    this.aoMapIntensity = 1.0;\n\n    this.emissive = new Color(0x000000);\n    this.emissiveIntensity = 1.0;\n    this.emissiveMap = null;\n\n    this.bumpMap = null;\n    this.bumpScale = 1;\n\n    this.normalMap = null;\n    this.normalMapType = TangentSpaceNormalMap;\n    this.normalScale = new Vector2(1, 1);\n\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n\n    this.roughnessMap = null;\n\n    this.metalnessMap = null;\n\n    this.alphaMap = null;\n\n    this.envMap = null;\n    this.envMapIntensity = 1.0;\n\n    this.refractionRatio = 0.98;\n\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.wireframeLinecap = \"round\";\n    this.wireframeLinejoin = \"round\";\n\n    this.flatShading = false;\n\n    this.setValues(parameters);\n  }\n\n  copy(source) {\n    super.copy(source);\n\n    this.defines = { STANDARD: \"\" };\n\n    this.color.copy(source.color);\n    this.roughness = source.roughness;\n    this.metalness = source.metalness;\n\n    this.map = source.map;\n\n    this.lightMap = source.lightMap;\n    this.lightMapIntensity = source.lightMapIntensity;\n\n    this.aoMap = source.aoMap;\n    this.aoMapIntensity = source.aoMapIntensity;\n\n    this.emissive.copy(source.emissive);\n    this.emissiveMap = source.emissiveMap;\n    this.emissiveIntensity = source.emissiveIntensity;\n\n    this.bumpMap = source.bumpMap;\n    this.bumpScale = source.bumpScale;\n\n    this.normalMap = source.normalMap;\n    this.normalMapType = source.normalMapType;\n    this.normalScale.copy(source.normalScale);\n\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n\n    this.roughnessMap = source.roughnessMap;\n\n    this.metalnessMap = source.metalnessMap;\n\n    this.alphaMap = source.alphaMap;\n\n    this.envMap = source.envMap;\n    this.envMapIntensity = source.envMapIntensity;\n\n    this.refractionRatio = source.refractionRatio;\n\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.wireframeLinecap = source.wireframeLinecap;\n    this.wireframeLinejoin = source.wireframeLinejoin;\n\n    this.flatShading = source.flatShading;\n\n    return this;\n  }\n}\n\nMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\n/**\n * parameters = {\n *  clearcoat: <float>,\n *  clearcoatMap: new THREE.Texture( <Image> ),\n *  clearcoatRoughness: <float>,\n *  clearcoatRoughnessMap: new THREE.Texture( <Image> ),\n *  clearcoatNormalScale: <Vector2>,\n *  clearcoatNormalMap: new THREE.Texture( <Image> ),\n *\n *  ior: <float>,\n *  reflectivity: <float>,\n *\n *  sheen: <float>,\n *  sheenColor: <Color>,\n *  sheenColorMap: new THREE.Texture( <Image> ),\n *  sheenRoughness: <float>,\n *  sheenRoughnessMap: new THREE.Texture( <Image> ),\n *\n *  transmission: <float>,\n *  transmissionMap: new THREE.Texture( <Image> ),\n *\n *  thickness: <float>,\n *  thicknessMap: new THREE.Texture( <Image> ),\n *  attenuationDistance: <float>,\n *  attenuationColor: <Color>,\n *\n *  specularIntensity: <float>,\n *  specularIntensityMap: new THREE.Texture( <Image> ),\n *  specularColor: <Color>,\n *  specularColorMap: new THREE.Texture( <Image> )\n * }\n */\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n  constructor(parameters) {\n    super();\n\n    this.defines = {\n      STANDARD: \"\",\n      PHYSICAL: \"\",\n    };\n\n    this.type = \"MeshPhysicalMaterial\";\n\n    this.clearcoatMap = null;\n    this.clearcoatRoughness = 0.0;\n    this.clearcoatRoughnessMap = null;\n    this.clearcoatNormalScale = new Vector2(1, 1);\n    this.clearcoatNormalMap = null;\n\n    this.ior = 1.5;\n\n    Object.defineProperty(this, \"reflectivity\", {\n      get: function () {\n        return clamp((2.5 * (this.ior - 1)) / (this.ior + 1), 0, 1);\n      },\n      set: function (reflectivity) {\n        this.ior = (1 + 0.4 * reflectivity) / (1 - 0.4 * reflectivity);\n      },\n    });\n\n    this.sheenColor = new Color(0x000000);\n    this.sheenColorMap = null;\n    this.sheenRoughness = 1.0;\n    this.sheenRoughnessMap = null;\n\n    this.transmissionMap = null;\n\n    this.thickness = 0;\n    this.thicknessMap = null;\n    this.attenuationDistance = 0.0;\n    this.attenuationColor = new Color(1, 1, 1);\n\n    this.specularIntensity = 1.0;\n    this.specularIntensityMap = null;\n    this.specularColor = new Color(1, 1, 1);\n    this.specularColorMap = null;\n\n    this._sheen = 0.0;\n    this._clearcoat = 0;\n    this._transmission = 0;\n\n    this.setValues(parameters);\n  }\n\n  get sheen() {\n    return this._sheen;\n  }\n\n  set sheen(value) {\n    if (this._sheen > 0 !== value > 0) {\n      this.version++;\n    }\n\n    this._sheen = value;\n  }\n\n  get clearcoat() {\n    return this._clearcoat;\n  }\n\n  set clearcoat(value) {\n    if (this._clearcoat > 0 !== value > 0) {\n      this.version++;\n    }\n\n    this._clearcoat = value;\n  }\n\n  get transmission() {\n    return this._transmission;\n  }\n\n  set transmission(value) {\n    if (this._transmission > 0 !== value > 0) {\n      this.version++;\n    }\n\n    this._transmission = value;\n  }\n\n  copy(source) {\n    super.copy(source);\n\n    this.defines = {\n      STANDARD: \"\",\n      PHYSICAL: \"\",\n    };\n\n    this.clearcoat = source.clearcoat;\n    this.clearcoatMap = source.clearcoatMap;\n    this.clearcoatRoughness = source.clearcoatRoughness;\n    this.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n    this.clearcoatNormalMap = source.clearcoatNormalMap;\n    this.clearcoatNormalScale.copy(source.clearcoatNormalScale);\n\n    this.ior = source.ior;\n\n    this.sheen = source.sheen;\n    this.sheenColor.copy(source.sheenColor);\n    this.sheenColorMap = source.sheenColorMap;\n    this.sheenRoughness = source.sheenRoughness;\n    this.sheenRoughnessMap = source.sheenRoughnessMap;\n\n    this.transmission = source.transmission;\n    this.transmissionMap = source.transmissionMap;\n\n    this.thickness = source.thickness;\n    this.thicknessMap = source.thicknessMap;\n    this.attenuationDistance = source.attenuationDistance;\n    this.attenuationColor.copy(source.attenuationColor);\n\n    this.specularIntensity = source.specularIntensity;\n    this.specularIntensityMap = source.specularIntensityMap;\n    this.specularColor.copy(source.specularColor);\n    this.specularColorMap = source.specularColorMap;\n\n    return this;\n  }\n}\n\nMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  specular: <hex>,\n *  shininess: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.MultiplyOperation,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  flatShading: <bool>\n * }\n */\n\nclass MeshPhongMaterial extends Material {\n  constructor(parameters) {\n    super();\n\n    this.type = \"MeshPhongMaterial\";\n\n    this.color = new Color(0xffffff); // diffuse\n    this.specular = new Color(0x111111);\n    this.shininess = 30;\n\n    this.map = null;\n\n    this.lightMap = null;\n    this.lightMapIntensity = 1.0;\n\n    this.aoMap = null;\n    this.aoMapIntensity = 1.0;\n\n    this.emissive = new Color(0x000000);\n    this.emissiveIntensity = 1.0;\n    this.emissiveMap = null;\n\n    this.bumpMap = null;\n    this.bumpScale = 1;\n\n    this.normalMap = null;\n    this.normalMapType = TangentSpaceNormalMap;\n    this.normalScale = new Vector2(1, 1);\n\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n\n    this.specularMap = null;\n\n    this.alphaMap = null;\n\n    this.envMap = null;\n    this.combine = MultiplyOperation;\n    this.reflectivity = 1;\n    this.refractionRatio = 0.98;\n\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.wireframeLinecap = \"round\";\n    this.wireframeLinejoin = \"round\";\n\n    this.flatShading = false;\n\n    this.setValues(parameters);\n  }\n\n  copy(source) {\n    super.copy(source);\n\n    this.color.copy(source.color);\n    this.specular.copy(source.specular);\n    this.shininess = source.shininess;\n\n    this.map = source.map;\n\n    this.lightMap = source.lightMap;\n    this.lightMapIntensity = source.lightMapIntensity;\n\n    this.aoMap = source.aoMap;\n    this.aoMapIntensity = source.aoMapIntensity;\n\n    this.emissive.copy(source.emissive);\n    this.emissiveMap = source.emissiveMap;\n    this.emissiveIntensity = source.emissiveIntensity;\n\n    this.bumpMap = source.bumpMap;\n    this.bumpScale = source.bumpScale;\n\n    this.normalMap = source.normalMap;\n    this.normalMapType = source.normalMapType;\n    this.normalScale.copy(source.normalScale);\n\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n\n    this.specularMap = source.specularMap;\n\n    this.alphaMap = source.alphaMap;\n\n    this.envMap = source.envMap;\n    this.combine = source.combine;\n    this.reflectivity = source.reflectivity;\n    this.refractionRatio = source.refractionRatio;\n\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.wireframeLinecap = source.wireframeLinecap;\n    this.wireframeLinejoin = source.wireframeLinejoin;\n\n    this.flatShading = source.flatShading;\n\n    return this;\n  }\n}\n\nMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *\n *  map: new THREE.Texture( <Image> ),\n *  gradientMap: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n * }\n */\n\nclass MeshToonMaterial extends Material {\n  constructor(parameters) {\n    super();\n\n    this.defines = { TOON: \"\" };\n\n    this.type = \"MeshToonMaterial\";\n\n    this.color = new Color(0xffffff);\n\n    this.map = null;\n    this.gradientMap = null;\n\n    this.lightMap = null;\n    this.lightMapIntensity = 1.0;\n\n    this.aoMap = null;\n    this.aoMapIntensity = 1.0;\n\n    this.emissive = new Color(0x000000);\n    this.emissiveIntensity = 1.0;\n    this.emissiveMap = null;\n\n    this.bumpMap = null;\n    this.bumpScale = 1;\n\n    this.normalMap = null;\n    this.normalMapType = TangentSpaceNormalMap;\n    this.normalScale = new Vector2(1, 1);\n\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n\n    this.alphaMap = null;\n\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.wireframeLinecap = \"round\";\n    this.wireframeLinejoin = \"round\";\n\n    this.setValues(parameters);\n  }\n\n  copy(source) {\n    super.copy(source);\n\n    this.color.copy(source.color);\n\n    this.map = source.map;\n    this.gradientMap = source.gradientMap;\n\n    this.lightMap = source.lightMap;\n    this.lightMapIntensity = source.lightMapIntensity;\n\n    this.aoMap = source.aoMap;\n    this.aoMapIntensity = source.aoMapIntensity;\n\n    this.emissive.copy(source.emissive);\n    this.emissiveMap = source.emissiveMap;\n    this.emissiveIntensity = source.emissiveIntensity;\n\n    this.bumpMap = source.bumpMap;\n    this.bumpScale = source.bumpScale;\n\n    this.normalMap = source.normalMap;\n    this.normalMapType = source.normalMapType;\n    this.normalScale.copy(source.normalScale);\n\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n\n    this.alphaMap = source.alphaMap;\n\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.wireframeLinecap = source.wireframeLinecap;\n    this.wireframeLinejoin = source.wireframeLinejoin;\n\n    return this;\n  }\n}\n\nMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\n/**\n * parameters = {\n *  opacity: <float>,\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n *\n *  flatShading: <bool>\n * }\n */\n\nclass MeshNormalMaterial extends Material {\n  constructor(parameters) {\n    super();\n\n    this.type = \"MeshNormalMaterial\";\n\n    this.bumpMap = null;\n    this.bumpScale = 1;\n\n    this.normalMap = null;\n    this.normalMapType = TangentSpaceNormalMap;\n    this.normalScale = new Vector2(1, 1);\n\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n\n    this.fog = false;\n\n    this.flatShading = false;\n\n    this.setValues(parameters);\n  }\n\n  copy(source) {\n    super.copy(source);\n\n    this.bumpMap = source.bumpMap;\n    this.bumpScale = source.bumpScale;\n\n    this.normalMap = source.normalMap;\n    this.normalMapType = source.normalMapType;\n    this.normalScale.copy(source.normalScale);\n\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n\n    this.flatShading = source.flatShading;\n\n    return this;\n  }\n}\n\nMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n * }\n */\n\nclass MeshLambertMaterial extends Material {\n  constructor(parameters) {\n    super();\n\n    this.type = \"MeshLambertMaterial\";\n\n    this.color = new Color(0xffffff); // diffuse\n\n    this.map = null;\n\n    this.lightMap = null;\n    this.lightMapIntensity = 1.0;\n\n    this.aoMap = null;\n    this.aoMapIntensity = 1.0;\n\n    this.emissive = new Color(0x000000);\n    this.emissiveIntensity = 1.0;\n    this.emissiveMap = null;\n\n    this.specularMap = null;\n\n    this.alphaMap = null;\n\n    this.envMap = null;\n    this.combine = MultiplyOperation;\n    this.reflectivity = 1;\n    this.refractionRatio = 0.98;\n\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.wireframeLinecap = \"round\";\n    this.wireframeLinejoin = \"round\";\n\n    this.setValues(parameters);\n  }\n\n  copy(source) {\n    super.copy(source);\n\n    this.color.copy(source.color);\n\n    this.map = source.map;\n\n    this.lightMap = source.lightMap;\n    this.lightMapIntensity = source.lightMapIntensity;\n\n    this.aoMap = source.aoMap;\n    this.aoMapIntensity = source.aoMapIntensity;\n\n    this.emissive.copy(source.emissive);\n    this.emissiveMap = source.emissiveMap;\n    this.emissiveIntensity = source.emissiveIntensity;\n\n    this.specularMap = source.specularMap;\n\n    this.alphaMap = source.alphaMap;\n\n    this.envMap = source.envMap;\n    this.combine = source.combine;\n    this.reflectivity = source.reflectivity;\n    this.refractionRatio = source.refractionRatio;\n\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.wireframeLinecap = source.wireframeLinecap;\n    this.wireframeLinejoin = source.wireframeLinejoin;\n\n    return this;\n  }\n}\n\nMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  matcap: new THREE.Texture( <Image> ),\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  flatShading: <bool>\n * }\n */\n\nclass MeshMatcapMaterial extends Material {\n  constructor(parameters) {\n    super();\n\n    this.defines = { MATCAP: \"\" };\n\n    this.type = \"MeshMatcapMaterial\";\n\n    this.color = new Color(0xffffff); // diffuse\n\n    this.matcap = null;\n\n    this.map = null;\n\n    this.bumpMap = null;\n    this.bumpScale = 1;\n\n    this.normalMap = null;\n    this.normalMapType = TangentSpaceNormalMap;\n    this.normalScale = new Vector2(1, 1);\n\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n\n    this.alphaMap = null;\n\n    this.flatShading = false;\n\n    this.setValues(parameters);\n  }\n\n  copy(source) {\n    super.copy(source);\n\n    this.defines = { MATCAP: \"\" };\n\n    this.color.copy(source.color);\n\n    this.matcap = source.matcap;\n\n    this.map = source.map;\n\n    this.bumpMap = source.bumpMap;\n    this.bumpScale = source.bumpScale;\n\n    this.normalMap = source.normalMap;\n    this.normalMapType = source.normalMapType;\n    this.normalScale.copy(source.normalScale);\n\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n\n    this.alphaMap = source.alphaMap;\n\n    this.flatShading = source.flatShading;\n\n    return this;\n  }\n}\n\nMeshMatcapMaterial.prototype.isMeshMatcapMaterial = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *\n *  scale: <float>,\n *  dashSize: <float>,\n *  gapSize: <float>\n * }\n */\n\nclass LineDashedMaterial extends LineBasicMaterial {\n  constructor(parameters) {\n    super();\n\n    this.type = \"LineDashedMaterial\";\n\n    this.scale = 1;\n    this.dashSize = 3;\n    this.gapSize = 1;\n\n    this.setValues(parameters);\n  }\n\n  copy(source) {\n    super.copy(source);\n\n    this.scale = source.scale;\n    this.dashSize = source.dashSize;\n    this.gapSize = source.gapSize;\n\n    return this;\n  }\n}\n\nLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\nvar Materials = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  ShadowMaterial: ShadowMaterial,\n  SpriteMaterial: SpriteMaterial,\n  RawShaderMaterial: RawShaderMaterial,\n  ShaderMaterial: ShaderMaterial,\n  PointsMaterial: PointsMaterial,\n  MeshPhysicalMaterial: MeshPhysicalMaterial,\n  MeshStandardMaterial: MeshStandardMaterial,\n  MeshPhongMaterial: MeshPhongMaterial,\n  MeshToonMaterial: MeshToonMaterial,\n  MeshNormalMaterial: MeshNormalMaterial,\n  MeshLambertMaterial: MeshLambertMaterial,\n  MeshDepthMaterial: MeshDepthMaterial,\n  MeshDistanceMaterial: MeshDistanceMaterial,\n  MeshBasicMaterial: MeshBasicMaterial,\n  MeshMatcapMaterial: MeshMatcapMaterial,\n  LineDashedMaterial: LineDashedMaterial,\n  LineBasicMaterial: LineBasicMaterial,\n  Material: Material,\n});\n\nconst AnimationUtils = {\n  // same as Array.prototype.slice, but also works on typed arrays\n  arraySlice: function (array, from, to) {\n    if (AnimationUtils.isTypedArray(array)) {\n      // in ios9 array.subarray(from, undefined) will return empty array\n      // but array.subarray(from) or array.subarray(from, len) is correct\n      return new array.constructor(\n        array.subarray(from, to !== undefined ? to : array.length)\n      );\n    }\n\n    return array.slice(from, to);\n  },\n\n  // converts an array to a specific type\n  convertArray: function (array, type, forceClone) {\n    if (\n      !array || // let 'undefined' and 'null' pass\n      (!forceClone && array.constructor === type)\n    )\n      return array;\n\n    if (typeof type.BYTES_PER_ELEMENT === \"number\") {\n      return new type(array); // create typed array\n    }\n\n    return Array.prototype.slice.call(array); // create Array\n  },\n\n  isTypedArray: function (object) {\n    return ArrayBuffer.isView(object) && !(object instanceof DataView);\n  },\n\n  // returns an array by which times and values can be sorted\n  getKeyframeOrder: function (times) {\n    function compareTime(i, j) {\n      return times[i] - times[j];\n    }\n\n    const n = times.length;\n    const result = new Array(n);\n    for (let i = 0; i !== n; ++i) result[i] = i;\n\n    result.sort(compareTime);\n\n    return result;\n  },\n\n  // uses the array previously returned by 'getKeyframeOrder' to sort data\n  sortedArray: function (values, stride, order) {\n    const nValues = values.length;\n    const result = new values.constructor(nValues);\n\n    for (let i = 0, dstOffset = 0; dstOffset !== nValues; ++i) {\n      const srcOffset = order[i] * stride;\n\n      for (let j = 0; j !== stride; ++j) {\n        result[dstOffset++] = values[srcOffset + j];\n      }\n    }\n\n    return result;\n  },\n\n  // function for parsing AOS keyframe formats\n  flattenJSON: function (jsonKeys, times, values, valuePropertyName) {\n    let i = 1,\n      key = jsonKeys[0];\n\n    while (key !== undefined && key[valuePropertyName] === undefined) {\n      key = jsonKeys[i++];\n    }\n\n    if (key === undefined) return; // no data\n\n    let value = key[valuePropertyName];\n    if (value === undefined) return; // no data\n\n    if (Array.isArray(value)) {\n      do {\n        value = key[valuePropertyName];\n\n        if (value !== undefined) {\n          times.push(key.time);\n          values.push.apply(values, value); // push all elements\n        }\n\n        key = jsonKeys[i++];\n      } while (key !== undefined);\n    } else if (value.toArray !== undefined) {\n      // ...assume THREE.Math-ish\n\n      do {\n        value = key[valuePropertyName];\n\n        if (value !== undefined) {\n          times.push(key.time);\n          value.toArray(values, values.length);\n        }\n\n        key = jsonKeys[i++];\n      } while (key !== undefined);\n    } else {\n      // otherwise push as-is\n\n      do {\n        value = key[valuePropertyName];\n\n        if (value !== undefined) {\n          times.push(key.time);\n          values.push(value);\n        }\n\n        key = jsonKeys[i++];\n      } while (key !== undefined);\n    }\n  },\n\n  subclip: function (sourceClip, name, startFrame, endFrame, fps = 30) {\n    const clip = sourceClip.clone();\n\n    clip.name = name;\n\n    const tracks = [];\n\n    for (let i = 0; i < clip.tracks.length; ++i) {\n      const track = clip.tracks[i];\n      const valueSize = track.getValueSize();\n\n      const times = [];\n      const values = [];\n\n      for (let j = 0; j < track.times.length; ++j) {\n        const frame = track.times[j] * fps;\n\n        if (frame < startFrame || frame >= endFrame) continue;\n\n        times.push(track.times[j]);\n\n        for (let k = 0; k < valueSize; ++k) {\n          values.push(track.values[j * valueSize + k]);\n        }\n      }\n\n      if (times.length === 0) continue;\n\n      track.times = AnimationUtils.convertArray(times, track.times.constructor);\n      track.values = AnimationUtils.convertArray(\n        values,\n        track.values.constructor\n      );\n\n      tracks.push(track);\n    }\n\n    clip.tracks = tracks;\n\n    // find minimum .times value across all tracks in the trimmed clip\n\n    let minStartTime = Infinity;\n\n    for (let i = 0; i < clip.tracks.length; ++i) {\n      if (minStartTime > clip.tracks[i].times[0]) {\n        minStartTime = clip.tracks[i].times[0];\n      }\n    }\n\n    // shift all tracks such that clip begins at t=0\n\n    for (let i = 0; i < clip.tracks.length; ++i) {\n      clip.tracks[i].shift(-1 * minStartTime);\n    }\n\n    clip.resetDuration();\n\n    return clip;\n  },\n\n  makeClipAdditive: function (\n    targetClip,\n    referenceFrame = 0,\n    referenceClip = targetClip,\n    fps = 30\n  ) {\n    if (fps <= 0) fps = 30;\n\n    const numTracks = referenceClip.tracks.length;\n    const referenceTime = referenceFrame / fps;\n\n    // Make each track's values relative to the values at the reference frame\n    for (let i = 0; i < numTracks; ++i) {\n      const referenceTrack = referenceClip.tracks[i];\n      const referenceTrackType = referenceTrack.ValueTypeName;\n\n      // Skip this track if it's non-numeric\n      if (referenceTrackType === \"bool\" || referenceTrackType === \"string\")\n        continue;\n\n      // Find the track in the target clip whose name and type matches the reference track\n      const targetTrack = targetClip.tracks.find(function (track) {\n        return (\n          track.name === referenceTrack.name &&\n          track.ValueTypeName === referenceTrackType\n        );\n      });\n\n      if (targetTrack === undefined) continue;\n\n      let referenceOffset = 0;\n      const referenceValueSize = referenceTrack.getValueSize();\n\n      if (\n        referenceTrack.createInterpolant\n          .isInterpolantFactoryMethodGLTFCubicSpline\n      ) {\n        referenceOffset = referenceValueSize / 3;\n      }\n\n      let targetOffset = 0;\n      const targetValueSize = targetTrack.getValueSize();\n\n      if (\n        targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline\n      ) {\n        targetOffset = targetValueSize / 3;\n      }\n\n      const lastIndex = referenceTrack.times.length - 1;\n      let referenceValue;\n\n      // Find the value to subtract out of the track\n      if (referenceTime <= referenceTrack.times[0]) {\n        // Reference frame is earlier than the first keyframe, so just use the first keyframe\n        const startIndex = referenceOffset;\n        const endIndex = referenceValueSize - referenceOffset;\n        referenceValue = AnimationUtils.arraySlice(\n          referenceTrack.values,\n          startIndex,\n          endIndex\n        );\n      } else if (referenceTime >= referenceTrack.times[lastIndex]) {\n        // Reference frame is after the last keyframe, so just use the last keyframe\n        const startIndex = lastIndex * referenceValueSize + referenceOffset;\n        const endIndex = startIndex + referenceValueSize - referenceOffset;\n        referenceValue = AnimationUtils.arraySlice(\n          referenceTrack.values,\n          startIndex,\n          endIndex\n        );\n      } else {\n        // Interpolate to the reference value\n        const interpolant = referenceTrack.createInterpolant();\n        const startIndex = referenceOffset;\n        const endIndex = referenceValueSize - referenceOffset;\n        interpolant.evaluate(referenceTime);\n        referenceValue = AnimationUtils.arraySlice(\n          interpolant.resultBuffer,\n          startIndex,\n          endIndex\n        );\n      }\n\n      // Conjugate the quaternion\n      if (referenceTrackType === \"quaternion\") {\n        const referenceQuat = new Quaternion()\n          .fromArray(referenceValue)\n          .normalize()\n          .conjugate();\n        referenceQuat.toArray(referenceValue);\n      }\n\n      // Subtract the reference value from all of the track values\n\n      const numTimes = targetTrack.times.length;\n      for (let j = 0; j < numTimes; ++j) {\n        const valueStart = j * targetValueSize + targetOffset;\n\n        if (referenceTrackType === \"quaternion\") {\n          // Multiply the conjugate for quaternion track types\n          Quaternion.multiplyQuaternionsFlat(\n            targetTrack.values,\n            valueStart,\n            referenceValue,\n            0,\n            targetTrack.values,\n            valueStart\n          );\n        } else {\n          const valueEnd = targetValueSize - targetOffset * 2;\n\n          // Subtract each value for all other numeric track types\n          for (let k = 0; k < valueEnd; ++k) {\n            targetTrack.values[valueStart + k] -= referenceValue[k];\n          }\n        }\n      }\n    }\n\n    targetClip.blendMode = AdditiveAnimationBlendMode;\n\n    return targetClip;\n  },\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n  constructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    this.parameterPositions = parameterPositions;\n    this._cachedIndex = 0;\n\n    this.resultBuffer =\n      resultBuffer !== undefined\n        ? resultBuffer\n        : new sampleValues.constructor(sampleSize);\n    this.sampleValues = sampleValues;\n    this.valueSize = sampleSize;\n\n    this.settings = null;\n    this.DefaultSettings_ = {};\n  }\n\n  evaluate(t) {\n    const pp = this.parameterPositions;\n    let i1 = this._cachedIndex,\n      t1 = pp[i1],\n      t0 = pp[i1 - 1];\n\n    validate_interval: {\n      seek: {\n        let right;\n\n        linear_scan: {\n          //- See http://jsperf.com/comparison-to-undefined/3\n          //- slower code:\n          //-\n          //- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n          forward_scan: if (!(t < t1)) {\n            for (let giveUpAt = i1 + 2; ; ) {\n              if (t1 === undefined) {\n                if (t < t0) break forward_scan;\n\n                // after end\n\n                i1 = pp.length;\n                this._cachedIndex = i1;\n                return this.afterEnd_(i1 - 1, t, t0);\n              }\n\n              if (i1 === giveUpAt) break; // this loop\n\n              t0 = t1;\n              t1 = pp[++i1];\n\n              if (t < t1) {\n                // we have arrived at the sought interval\n                break seek;\n              }\n            }\n\n            // prepare binary search on the right side of the index\n            right = pp.length;\n            break linear_scan;\n          }\n\n          //- slower code:\n          //-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n          if (!(t >= t0)) {\n            // looping?\n\n            const t1global = pp[1];\n\n            if (t < t1global) {\n              i1 = 2; // + 1, using the scan for the details\n              t0 = t1global;\n            }\n\n            // linear reverse scan\n\n            for (let giveUpAt = i1 - 2; ; ) {\n              if (t0 === undefined) {\n                // before start\n\n                this._cachedIndex = 0;\n                return this.beforeStart_(0, t, t1);\n              }\n\n              if (i1 === giveUpAt) break; // this loop\n\n              t1 = t0;\n              t0 = pp[--i1 - 1];\n\n              if (t >= t0) {\n                // we have arrived at the sought interval\n                break seek;\n              }\n            }\n\n            // prepare binary search on the left side of the index\n            right = i1;\n            i1 = 0;\n            break linear_scan;\n          }\n\n          // the interval is valid\n\n          break validate_interval;\n        } // linear scan\n\n        // binary search\n\n        while (i1 < right) {\n          const mid = (i1 + right) >>> 1;\n\n          if (t < pp[mid]) {\n            right = mid;\n          } else {\n            i1 = mid + 1;\n          }\n        }\n\n        t1 = pp[i1];\n        t0 = pp[i1 - 1];\n\n        // check boundary cases, again\n\n        if (t0 === undefined) {\n          this._cachedIndex = 0;\n          return this.beforeStart_(0, t, t1);\n        }\n\n        if (t1 === undefined) {\n          i1 = pp.length;\n          this._cachedIndex = i1;\n          return this.afterEnd_(i1 - 1, t0, t);\n        }\n      } // seek\n\n      this._cachedIndex = i1;\n\n      this.intervalChanged_(i1, t0, t1);\n    } // validate_interval\n\n    return this.interpolate_(i1, t0, t, t1);\n  }\n\n  getSettings_() {\n    return this.settings || this.DefaultSettings_;\n  }\n\n  copySampleValue_(index) {\n    // copies a sample value to the result buffer\n\n    const result = this.resultBuffer,\n      values = this.sampleValues,\n      stride = this.valueSize,\n      offset = index * stride;\n\n    for (let i = 0; i !== stride; ++i) {\n      result[i] = values[offset + i];\n    }\n\n    return result;\n  }\n\n  // Template methods for derived classes:\n\n  interpolate_(/* i1, t0, t, t1 */) {\n    throw new Error(\"call to abstract method\");\n    // implementations shall return this.resultBuffer\n  }\n\n  intervalChanged_(/* i1, t0, t1 */) {\n    // empty\n  }\n}\n\n// ALIAS DEFINITIONS\n\nInterpolant.prototype.beforeStart_ = Interpolant.prototype.copySampleValue_;\nInterpolant.prototype.afterEnd_ = Interpolant.prototype.copySampleValue_;\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n  constructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    super(parameterPositions, sampleValues, sampleSize, resultBuffer);\n\n    this._weightPrev = -0;\n    this._offsetPrev = -0;\n    this._weightNext = -0;\n    this._offsetNext = -0;\n\n    this.DefaultSettings_ = {\n      endingStart: ZeroCurvatureEnding,\n      endingEnd: ZeroCurvatureEnding,\n    };\n  }\n\n  intervalChanged_(i1, t0, t1) {\n    const pp = this.parameterPositions;\n    let iPrev = i1 - 2,\n      iNext = i1 + 1,\n      tPrev = pp[iPrev],\n      tNext = pp[iNext];\n\n    if (tPrev === undefined) {\n      switch (this.getSettings_().endingStart) {\n        case ZeroSlopeEnding:\n          // f'(t0) = 0\n          iPrev = i1;\n          tPrev = 2 * t0 - t1;\n\n          break;\n\n        case WrapAroundEnding:\n          // use the other end of the curve\n          iPrev = pp.length - 2;\n          tPrev = t0 + pp[iPrev] - pp[iPrev + 1];\n\n          break;\n\n        default:\n          // ZeroCurvatureEnding\n\n          // f''(t0) = 0 a.k.a. Natural Spline\n          iPrev = i1;\n          tPrev = t1;\n      }\n    }\n\n    if (tNext === undefined) {\n      switch (this.getSettings_().endingEnd) {\n        case ZeroSlopeEnding:\n          // f'(tN) = 0\n          iNext = i1;\n          tNext = 2 * t1 - t0;\n\n          break;\n\n        case WrapAroundEnding:\n          // use the other end of the curve\n          iNext = 1;\n          tNext = t1 + pp[1] - pp[0];\n\n          break;\n\n        default:\n          // ZeroCurvatureEnding\n\n          // f''(tN) = 0, a.k.a. Natural Spline\n          iNext = i1 - 1;\n          tNext = t0;\n      }\n    }\n\n    const halfDt = (t1 - t0) * 0.5,\n      stride = this.valueSize;\n\n    this._weightPrev = halfDt / (t0 - tPrev);\n    this._weightNext = halfDt / (tNext - t1);\n    this._offsetPrev = iPrev * stride;\n    this._offsetNext = iNext * stride;\n  }\n\n  interpolate_(i1, t0, t, t1) {\n    const result = this.resultBuffer,\n      values = this.sampleValues,\n      stride = this.valueSize,\n      o1 = i1 * stride,\n      o0 = o1 - stride,\n      oP = this._offsetPrev,\n      oN = this._offsetNext,\n      wP = this._weightPrev,\n      wN = this._weightNext,\n      p = (t - t0) / (t1 - t0),\n      pp = p * p,\n      ppp = pp * p;\n\n    // evaluate polynomials\n\n    const sP = -wP * ppp + 2 * wP * pp - wP * p;\n    const s0 = (1 + wP) * ppp + (-1.5 - 2 * wP) * pp + (-0.5 + wP) * p + 1;\n    const s1 = (-1 - wN) * ppp + (1.5 + wN) * pp + 0.5 * p;\n    const sN = wN * ppp - wN * pp;\n\n    // combine data linearly\n\n    for (let i = 0; i !== stride; ++i) {\n      result[i] =\n        sP * values[oP + i] +\n        s0 * values[o0 + i] +\n        s1 * values[o1 + i] +\n        sN * values[oN + i];\n    }\n\n    return result;\n  }\n}\n\nclass LinearInterpolant extends Interpolant {\n  constructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    super(parameterPositions, sampleValues, sampleSize, resultBuffer);\n  }\n\n  interpolate_(i1, t0, t, t1) {\n    const result = this.resultBuffer,\n      values = this.sampleValues,\n      stride = this.valueSize,\n      offset1 = i1 * stride,\n      offset0 = offset1 - stride,\n      weight1 = (t - t0) / (t1 - t0),\n      weight0 = 1 - weight1;\n\n    for (let i = 0; i !== stride; ++i) {\n      result[i] = values[offset0 + i] * weight0 + values[offset1 + i] * weight1;\n    }\n\n    return result;\n  }\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceeding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n  constructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    super(parameterPositions, sampleValues, sampleSize, resultBuffer);\n  }\n\n  interpolate_(i1 /*, t0, t, t1 */) {\n    return this.copySampleValue_(i1 - 1);\n  }\n}\n\nclass KeyframeTrack {\n  constructor(name, times, values, interpolation) {\n    if (name === undefined)\n      throw new Error(\"THREE.KeyframeTrack: track name is undefined\");\n    if (times === undefined || times.length === 0)\n      throw new Error(\n        \"THREE.KeyframeTrack: no keyframes in track named \" + name\n      );\n\n    this.name = name;\n\n    this.times = AnimationUtils.convertArray(times, this.TimeBufferType);\n    this.values = AnimationUtils.convertArray(values, this.ValueBufferType);\n\n    this.setInterpolation(interpolation || this.DefaultInterpolation);\n  }\n\n  // Serialization (in static context, because of constructor invocation\n  // and automatic invocation of .toJSON):\n\n  static toJSON(track) {\n    const trackType = track.constructor;\n\n    let json;\n\n    // derived classes can define a static toJSON method\n    if (trackType.toJSON !== this.toJSON) {\n      json = trackType.toJSON(track);\n    } else {\n      // by default, we assume the data can be serialized as-is\n      json = {\n        name: track.name,\n        times: AnimationUtils.convertArray(track.times, Array),\n        values: AnimationUtils.convertArray(track.values, Array),\n      };\n\n      const interpolation = track.getInterpolation();\n\n      if (interpolation !== track.DefaultInterpolation) {\n        json.interpolation = interpolation;\n      }\n    }\n\n    json.type = track.ValueTypeName; // mandatory\n\n    return json;\n  }\n\n  InterpolantFactoryMethodDiscrete(result) {\n    return new DiscreteInterpolant(\n      this.times,\n      this.values,\n      this.getValueSize(),\n      result\n    );\n  }\n\n  InterpolantFactoryMethodLinear(result) {\n    return new LinearInterpolant(\n      this.times,\n      this.values,\n      this.getValueSize(),\n      result\n    );\n  }\n\n  InterpolantFactoryMethodSmooth(result) {\n    return new CubicInterpolant(\n      this.times,\n      this.values,\n      this.getValueSize(),\n      result\n    );\n  }\n\n  setInterpolation(interpolation) {\n    let factoryMethod;\n\n    switch (interpolation) {\n      case InterpolateDiscrete:\n        factoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n        break;\n\n      case InterpolateLinear:\n        factoryMethod = this.InterpolantFactoryMethodLinear;\n\n        break;\n\n      case InterpolateSmooth:\n        factoryMethod = this.InterpolantFactoryMethodSmooth;\n\n        break;\n    }\n\n    if (factoryMethod === undefined) {\n      const message =\n        \"unsupported interpolation for \" +\n        this.ValueTypeName +\n        \" keyframe track named \" +\n        this.name;\n\n      if (this.createInterpolant === undefined) {\n        // fall back to default, unless the default itself is messed up\n        if (interpolation !== this.DefaultInterpolation) {\n          this.setInterpolation(this.DefaultInterpolation);\n        } else {\n          throw new Error(message); // fatal, in this case\n        }\n      }\n\n      console.warn(\"THREE.KeyframeTrack:\", message);\n      return this;\n    }\n\n    this.createInterpolant = factoryMethod;\n\n    return this;\n  }\n\n  getInterpolation() {\n    switch (this.createInterpolant) {\n      case this.InterpolantFactoryMethodDiscrete:\n        return InterpolateDiscrete;\n\n      case this.InterpolantFactoryMethodLinear:\n        return InterpolateLinear;\n\n      case this.InterpolantFactoryMethodSmooth:\n        return InterpolateSmooth;\n    }\n  }\n\n  getValueSize() {\n    return this.values.length / this.times.length;\n  }\n\n  // move all keyframes either forwards or backwards in time\n  shift(timeOffset) {\n    if (timeOffset !== 0.0) {\n      const times = this.times;\n\n      for (let i = 0, n = times.length; i !== n; ++i) {\n        times[i] += timeOffset;\n      }\n    }\n\n    return this;\n  }\n\n  // scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n  scale(timeScale) {\n    if (timeScale !== 1.0) {\n      const times = this.times;\n\n      for (let i = 0, n = times.length; i !== n; ++i) {\n        times[i] *= timeScale;\n      }\n    }\n\n    return this;\n  }\n\n  // removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n  // IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n  trim(startTime, endTime) {\n    const times = this.times,\n      nKeys = times.length;\n\n    let from = 0,\n      to = nKeys - 1;\n\n    while (from !== nKeys && times[from] < startTime) {\n      ++from;\n    }\n\n    while (to !== -1 && times[to] > endTime) {\n      --to;\n    }\n\n    ++to; // inclusive -> exclusive bound\n\n    if (from !== 0 || to !== nKeys) {\n      // empty tracks are forbidden, so keep at least one keyframe\n      if (from >= to) {\n        to = Math.max(to, 1);\n        from = to - 1;\n      }\n\n      const stride = this.getValueSize();\n      this.times = AnimationUtils.arraySlice(times, from, to);\n      this.values = AnimationUtils.arraySlice(\n        this.values,\n        from * stride,\n        to * stride\n      );\n    }\n\n    return this;\n  }\n\n  // ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n  validate() {\n    let valid = true;\n\n    const valueSize = this.getValueSize();\n    if (valueSize - Math.floor(valueSize) !== 0) {\n      console.error(\"THREE.KeyframeTrack: Invalid value size in track.\", this);\n      valid = false;\n    }\n\n    const times = this.times,\n      values = this.values,\n      nKeys = times.length;\n\n    if (nKeys === 0) {\n      console.error(\"THREE.KeyframeTrack: Track is empty.\", this);\n      valid = false;\n    }\n\n    let prevTime = null;\n\n    for (let i = 0; i !== nKeys; i++) {\n      const currTime = times[i];\n\n      if (typeof currTime === \"number\" && isNaN(currTime)) {\n        console.error(\n          \"THREE.KeyframeTrack: Time is not a valid number.\",\n          this,\n          i,\n          currTime\n        );\n        valid = false;\n        break;\n      }\n\n      if (prevTime !== null && prevTime > currTime) {\n        console.error(\n          \"THREE.KeyframeTrack: Out of order keys.\",\n          this,\n          i,\n          currTime,\n          prevTime\n        );\n        valid = false;\n        break;\n      }\n\n      prevTime = currTime;\n    }\n\n    if (values !== undefined) {\n      if (AnimationUtils.isTypedArray(values)) {\n        for (let i = 0, n = values.length; i !== n; ++i) {\n          const value = values[i];\n\n          if (isNaN(value)) {\n            console.error(\n              \"THREE.KeyframeTrack: Value is not a valid number.\",\n              this,\n              i,\n              value\n            );\n            valid = false;\n            break;\n          }\n        }\n      }\n    }\n\n    return valid;\n  }\n\n  // removes equivalent sequential keys as common in morph target sequences\n  // (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n  optimize() {\n    // times or values may be shared with other tracks, so overwriting is unsafe\n    const times = AnimationUtils.arraySlice(this.times),\n      values = AnimationUtils.arraySlice(this.values),\n      stride = this.getValueSize(),\n      smoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n      lastIndex = times.length - 1;\n\n    let writeIndex = 1;\n\n    for (let i = 1; i < lastIndex; ++i) {\n      let keep = false;\n\n      const time = times[i];\n      const timeNext = times[i + 1];\n\n      // remove adjacent keyframes scheduled at the same time\n\n      if (time !== timeNext && (i !== 1 || time !== times[0])) {\n        if (!smoothInterpolation) {\n          // remove unnecessary keyframes same as their neighbors\n\n          const offset = i * stride,\n            offsetP = offset - stride,\n            offsetN = offset + stride;\n\n          for (let j = 0; j !== stride; ++j) {\n            const value = values[offset + j];\n\n            if (\n              value !== values[offsetP + j] ||\n              value !== values[offsetN + j]\n            ) {\n              keep = true;\n              break;\n            }\n          }\n        } else {\n          keep = true;\n        }\n      }\n\n      // in-place compaction\n\n      if (keep) {\n        if (i !== writeIndex) {\n          times[writeIndex] = times[i];\n\n          const readOffset = i * stride,\n            writeOffset = writeIndex * stride;\n\n          for (let j = 0; j !== stride; ++j) {\n            values[writeOffset + j] = values[readOffset + j];\n          }\n        }\n\n        ++writeIndex;\n      }\n    }\n\n    // flush last keyframe (compaction looks ahead)\n\n    if (lastIndex > 0) {\n      times[writeIndex] = times[lastIndex];\n\n      for (\n        let readOffset = lastIndex * stride,\n          writeOffset = writeIndex * stride,\n          j = 0;\n        j !== stride;\n        ++j\n      ) {\n        values[writeOffset + j] = values[readOffset + j];\n      }\n\n      ++writeIndex;\n    }\n\n    if (writeIndex !== times.length) {\n      this.times = AnimationUtils.arraySlice(times, 0, writeIndex);\n      this.values = AnimationUtils.arraySlice(values, 0, writeIndex * stride);\n    } else {\n      this.times = times;\n      this.values = values;\n    }\n\n    return this;\n  }\n\n  clone() {\n    const times = AnimationUtils.arraySlice(this.times, 0);\n    const values = AnimationUtils.arraySlice(this.values, 0);\n\n    const TypedKeyframeTrack = this.constructor;\n    const track = new TypedKeyframeTrack(this.name, times, values);\n\n    // Interpolant argument to constructor is not saved, so copy the factory method directly.\n    track.createInterpolant = this.createInterpolant;\n\n    return track;\n  }\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = \"bool\";\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = \"color\";\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = \"number\";\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n  constructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    super(parameterPositions, sampleValues, sampleSize, resultBuffer);\n  }\n\n  interpolate_(i1, t0, t, t1) {\n    const result = this.resultBuffer,\n      values = this.sampleValues,\n      stride = this.valueSize,\n      alpha = (t - t0) / (t1 - t0);\n\n    let offset = i1 * stride;\n\n    for (let end = offset + stride; offset !== end; offset += 4) {\n      Quaternion.slerpFlat(\n        result,\n        0,\n        values,\n        offset - stride,\n        values,\n        offset,\n        alpha\n      );\n    }\n\n    return result;\n  }\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n  InterpolantFactoryMethodLinear(result) {\n    return new QuaternionLinearInterpolant(\n      this.times,\n      this.values,\n      this.getValueSize(),\n      result\n    );\n  }\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = \"quaternion\";\n// ValueBufferType is inherited\nQuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {}\n\nStringKeyframeTrack.prototype.ValueTypeName = \"string\";\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = \"vector\";\n\nclass AnimationClip {\n  constructor(\n    name,\n    duration = -1,\n    tracks,\n    blendMode = NormalAnimationBlendMode\n  ) {\n    this.name = name;\n    this.tracks = tracks;\n    this.duration = duration;\n    this.blendMode = blendMode;\n\n    this.uuid = generateUUID();\n\n    // this means it should figure out its duration by scanning the tracks\n    if (this.duration < 0) {\n      this.resetDuration();\n    }\n  }\n\n  static parse(json) {\n    const tracks = [],\n      jsonTracks = json.tracks,\n      frameTime = 1.0 / (json.fps || 1.0);\n\n    for (let i = 0, n = jsonTracks.length; i !== n; ++i) {\n      tracks.push(parseKeyframeTrack(jsonTracks[i]).scale(frameTime));\n    }\n\n    const clip = new this(json.name, json.duration, tracks, json.blendMode);\n    clip.uuid = json.uuid;\n\n    return clip;\n  }\n\n  static toJSON(clip) {\n    const tracks = [],\n      clipTracks = clip.tracks;\n\n    const json = {\n      name: clip.name,\n      duration: clip.duration,\n      tracks: tracks,\n      uuid: clip.uuid,\n      blendMode: clip.blendMode,\n    };\n\n    for (let i = 0, n = clipTracks.length; i !== n; ++i) {\n      tracks.push(KeyframeTrack.toJSON(clipTracks[i]));\n    }\n\n    return json;\n  }\n\n  static CreateFromMorphTargetSequence(name, morphTargetSequence, fps, noLoop) {\n    const numMorphTargets = morphTargetSequence.length;\n    const tracks = [];\n\n    for (let i = 0; i < numMorphTargets; i++) {\n      let times = [];\n      let values = [];\n\n      times.push(\n        (i + numMorphTargets - 1) % numMorphTargets,\n        i,\n        (i + 1) % numMorphTargets\n      );\n\n      values.push(0, 1, 0);\n\n      const order = AnimationUtils.getKeyframeOrder(times);\n      times = AnimationUtils.sortedArray(times, 1, order);\n      values = AnimationUtils.sortedArray(values, 1, order);\n\n      // if there is a key at the first frame, duplicate it as the\n      // last frame as well for perfect loop.\n      if (!noLoop && times[0] === 0) {\n        times.push(numMorphTargets);\n        values.push(values[0]);\n      }\n\n      tracks.push(\n        new NumberKeyframeTrack(\n          \".morphTargetInfluences[\" + morphTargetSequence[i].name + \"]\",\n          times,\n          values\n        ).scale(1.0 / fps)\n      );\n    }\n\n    return new this(name, -1, tracks);\n  }\n\n  static findByName(objectOrClipArray, name) {\n    let clipArray = objectOrClipArray;\n\n    if (!Array.isArray(objectOrClipArray)) {\n      const o = objectOrClipArray;\n      clipArray = (o.geometry && o.geometry.animations) || o.animations;\n    }\n\n    for (let i = 0; i < clipArray.length; i++) {\n      if (clipArray[i].name === name) {\n        return clipArray[i];\n      }\n    }\n\n    return null;\n  }\n\n  static CreateClipsFromMorphTargetSequences(morphTargets, fps, noLoop) {\n    const animationToMorphTargets = {};\n\n    // tested with https://regex101.com/ on trick sequences\n    // such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n    const pattern = /^([\\w-]*?)([\\d]+)$/;\n\n    // sort morph target names into animation groups based\n    // patterns like Walk_001, Walk_002, Run_001, Run_002\n    for (let i = 0, il = morphTargets.length; i < il; i++) {\n      const morphTarget = morphTargets[i];\n      const parts = morphTarget.name.match(pattern);\n\n      if (parts && parts.length > 1) {\n        const name = parts[1];\n\n        let animationMorphTargets = animationToMorphTargets[name];\n\n        if (!animationMorphTargets) {\n          animationToMorphTargets[name] = animationMorphTargets = [];\n        }\n\n        animationMorphTargets.push(morphTarget);\n      }\n    }\n\n    const clips = [];\n\n    for (const name in animationToMorphTargets) {\n      clips.push(\n        this.CreateFromMorphTargetSequence(\n          name,\n          animationToMorphTargets[name],\n          fps,\n          noLoop\n        )\n      );\n    }\n\n    return clips;\n  }\n\n  // parse the animation.hierarchy format\n  static parseAnimation(animation, bones) {\n    if (!animation) {\n      console.error(\"THREE.AnimationClip: No animation in JSONLoader data.\");\n      return null;\n    }\n\n    const addNonemptyTrack = function (\n      trackType,\n      trackName,\n      animationKeys,\n      propertyName,\n      destTracks\n    ) {\n      // only return track if there are actually keys.\n      if (animationKeys.length !== 0) {\n        const times = [];\n        const values = [];\n\n        AnimationUtils.flattenJSON(animationKeys, times, values, propertyName);\n\n        // empty keys are filtered out, so check again\n        if (times.length !== 0) {\n          destTracks.push(new trackType(trackName, times, values));\n        }\n      }\n    };\n\n    const tracks = [];\n\n    const clipName = animation.name || \"default\";\n    const fps = animation.fps || 30;\n    const blendMode = animation.blendMode;\n\n    // automatic length determination in AnimationClip.\n    let duration = animation.length || -1;\n\n    const hierarchyTracks = animation.hierarchy || [];\n\n    for (let h = 0; h < hierarchyTracks.length; h++) {\n      const animationKeys = hierarchyTracks[h].keys;\n\n      // skip empty tracks\n      if (!animationKeys || animationKeys.length === 0) continue;\n\n      // process morph targets\n      if (animationKeys[0].morphTargets) {\n        // figure out all morph targets used in this track\n        const morphTargetNames = {};\n\n        let k;\n\n        for (k = 0; k < animationKeys.length; k++) {\n          if (animationKeys[k].morphTargets) {\n            for (let m = 0; m < animationKeys[k].morphTargets.length; m++) {\n              morphTargetNames[animationKeys[k].morphTargets[m]] = -1;\n            }\n          }\n        }\n\n        // create a track for each morph target with all zero\n        // morphTargetInfluences except for the keys in which\n        // the morphTarget is named.\n        for (const morphTargetName in morphTargetNames) {\n          const times = [];\n          const values = [];\n\n          for (let m = 0; m !== animationKeys[k].morphTargets.length; ++m) {\n            const animationKey = animationKeys[k];\n\n            times.push(animationKey.time);\n            values.push(animationKey.morphTarget === morphTargetName ? 1 : 0);\n          }\n\n          tracks.push(\n            new NumberKeyframeTrack(\n              \".morphTargetInfluence[\" + morphTargetName + \"]\",\n              times,\n              values\n            )\n          );\n        }\n\n        duration = morphTargetNames.length * (fps || 1.0);\n      } else {\n        // ...assume skeletal animation\n\n        const boneName = \".bones[\" + bones[h].name + \"]\";\n\n        addNonemptyTrack(\n          VectorKeyframeTrack,\n          boneName + \".position\",\n          animationKeys,\n          \"pos\",\n          tracks\n        );\n\n        addNonemptyTrack(\n          QuaternionKeyframeTrack,\n          boneName + \".quaternion\",\n          animationKeys,\n          \"rot\",\n          tracks\n        );\n\n        addNonemptyTrack(\n          VectorKeyframeTrack,\n          boneName + \".scale\",\n          animationKeys,\n          \"scl\",\n          tracks\n        );\n      }\n    }\n\n    if (tracks.length === 0) {\n      return null;\n    }\n\n    const clip = new this(clipName, duration, tracks, blendMode);\n\n    return clip;\n  }\n\n  resetDuration() {\n    const tracks = this.tracks;\n    let duration = 0;\n\n    for (let i = 0, n = tracks.length; i !== n; ++i) {\n      const track = this.tracks[i];\n\n      duration = Math.max(duration, track.times[track.times.length - 1]);\n    }\n\n    this.duration = duration;\n\n    return this;\n  }\n\n  trim() {\n    for (let i = 0; i < this.tracks.length; i++) {\n      this.tracks[i].trim(0, this.duration);\n    }\n\n    return this;\n  }\n\n  validate() {\n    let valid = true;\n\n    for (let i = 0; i < this.tracks.length; i++) {\n      valid = valid && this.tracks[i].validate();\n    }\n\n    return valid;\n  }\n\n  optimize() {\n    for (let i = 0; i < this.tracks.length; i++) {\n      this.tracks[i].optimize();\n    }\n\n    return this;\n  }\n\n  clone() {\n    const tracks = [];\n\n    for (let i = 0; i < this.tracks.length; i++) {\n      tracks.push(this.tracks[i].clone());\n    }\n\n    return new this.constructor(\n      this.name,\n      this.duration,\n      tracks,\n      this.blendMode\n    );\n  }\n\n  toJSON() {\n    return this.constructor.toJSON(this);\n  }\n}\n\nfunction getTrackTypeForValueTypeName(typeName) {\n  switch (typeName.toLowerCase()) {\n    case \"scalar\":\n    case \"double\":\n    case \"float\":\n    case \"number\":\n    case \"integer\":\n      return NumberKeyframeTrack;\n\n    case \"vector\":\n    case \"vector2\":\n    case \"vector3\":\n    case \"vector4\":\n      return VectorKeyframeTrack;\n\n    case \"color\":\n      return ColorKeyframeTrack;\n\n    case \"quaternion\":\n      return QuaternionKeyframeTrack;\n\n    case \"bool\":\n    case \"boolean\":\n      return BooleanKeyframeTrack;\n\n    case \"string\":\n      return StringKeyframeTrack;\n  }\n\n  throw new Error(\"THREE.KeyframeTrack: Unsupported typeName: \" + typeName);\n}\n\nfunction parseKeyframeTrack(json) {\n  if (json.type === undefined) {\n    throw new Error(\"THREE.KeyframeTrack: track type undefined, can not parse\");\n  }\n\n  const trackType = getTrackTypeForValueTypeName(json.type);\n\n  if (json.times === undefined) {\n    const times = [],\n      values = [];\n\n    AnimationUtils.flattenJSON(json.keys, times, values, \"value\");\n\n    json.times = times;\n    json.values = values;\n  }\n\n  // derived classes can define a static parse method\n  if (trackType.parse !== undefined) {\n    return trackType.parse(json);\n  } else {\n    // by default, we assume a constructor compatible with the base\n    return new trackType(\n      json.name,\n      json.times,\n      json.values,\n      json.interpolation\n    );\n  }\n}\n\nconst Cache = {\n  enabled: false,\n\n  files: {},\n\n  add: function (key, file) {\n    if (this.enabled === false) return;\n\n    // console.log( 'THREE.Cache', 'Adding key:', key );\n\n    this.files[key] = file;\n  },\n\n  get: function (key) {\n    if (this.enabled === false) return;\n\n    // console.log( 'THREE.Cache', 'Checking key:', key );\n\n    return this.files[key];\n  },\n\n  remove: function (key) {\n    delete this.files[key];\n  },\n\n  clear: function () {\n    this.files = {};\n  },\n};\n\nclass LoadingManager {\n  constructor(onLoad, onProgress, onError) {\n    const scope = this;\n\n    let isLoading = false;\n    let itemsLoaded = 0;\n    let itemsTotal = 0;\n    let urlModifier = undefined;\n    const handlers = [];\n\n    // Refer to #5689 for the reason why we don't set .onStart\n    // in the constructor\n\n    this.onStart = undefined;\n    this.onLoad = onLoad;\n    this.onProgress = onProgress;\n    this.onError = onError;\n\n    this.itemStart = function (url) {\n      itemsTotal++;\n\n      if (isLoading === false) {\n        if (scope.onStart !== undefined) {\n          scope.onStart(url, itemsLoaded, itemsTotal);\n        }\n      }\n\n      isLoading = true;\n    };\n\n    this.itemEnd = function (url) {\n      itemsLoaded++;\n\n      if (scope.onProgress !== undefined) {\n        scope.onProgress(url, itemsLoaded, itemsTotal);\n      }\n\n      if (itemsLoaded === itemsTotal) {\n        isLoading = false;\n\n        if (scope.onLoad !== undefined) {\n          scope.onLoad();\n        }\n      }\n    };\n\n    this.itemError = function (url) {\n      if (scope.onError !== undefined) {\n        scope.onError(url);\n      }\n    };\n\n    this.resolveURL = function (url) {\n      if (urlModifier) {\n        return urlModifier(url);\n      }\n\n      return url;\n    };\n\n    this.setURLModifier = function (transform) {\n      urlModifier = transform;\n\n      return this;\n    };\n\n    this.addHandler = function (regex, loader) {\n      handlers.push(regex, loader);\n\n      return this;\n    };\n\n    this.removeHandler = function (regex) {\n      const index = handlers.indexOf(regex);\n\n      if (index !== -1) {\n        handlers.splice(index, 2);\n      }\n\n      return this;\n    };\n\n    this.getHandler = function (file) {\n      for (let i = 0, l = handlers.length; i < l; i += 2) {\n        const regex = handlers[i];\n        const loader = handlers[i + 1];\n\n        if (regex.global) regex.lastIndex = 0; // see #17920\n\n        if (regex.test(file)) {\n          return loader;\n        }\n      }\n\n      return null;\n    };\n  }\n}\n\nconst DefaultLoadingManager = new LoadingManager();\n\nclass Loader {\n  constructor(manager) {\n    this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n\n    this.crossOrigin = \"anonymous\";\n    this.withCredentials = false;\n    this.path = \"\";\n    this.resourcePath = \"\";\n    this.requestHeader = {};\n  }\n\n  load(/* url, onLoad, onProgress, onError */) {}\n\n  loadAsync(url, onProgress) {\n    const scope = this;\n\n    return new Promise(function (resolve, reject) {\n      scope.load(url, resolve, onProgress, reject);\n    });\n  }\n\n  parse(/* data */) {}\n\n  setCrossOrigin(crossOrigin) {\n    this.crossOrigin = crossOrigin;\n    return this;\n  }\n\n  setWithCredentials(value) {\n    this.withCredentials = value;\n    return this;\n  }\n\n  setPath(path) {\n    this.path = path;\n    return this;\n  }\n\n  setResourcePath(resourcePath) {\n    this.resourcePath = resourcePath;\n    return this;\n  }\n\n  setRequestHeader(requestHeader) {\n    this.requestHeader = requestHeader;\n    return this;\n  }\n}\n\nconst loading = {};\n\nclass FileLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n  }\n\n  load(url, onLoad, onProgress, onError) {\n    if (url === undefined) url = \"\";\n\n    if (this.path !== undefined) url = this.path + url;\n\n    url = this.manager.resolveURL(url);\n\n    const cached = Cache.get(url);\n\n    if (cached !== undefined) {\n      this.manager.itemStart(url);\n\n      setTimeout(() => {\n        if (onLoad) onLoad(cached);\n\n        this.manager.itemEnd(url);\n      }, 0);\n\n      return cached;\n    }\n\n    // Check if request is duplicate\n\n    if (loading[url] !== undefined) {\n      loading[url].push({\n        onLoad: onLoad,\n        onProgress: onProgress,\n        onError: onError,\n      });\n\n      return;\n    }\n\n    // Initialise array for duplicate requests\n    loading[url] = [];\n\n    loading[url].push({\n      onLoad: onLoad,\n      onProgress: onProgress,\n      onError: onError,\n    });\n\n    // create request\n    const req = new Request(url, {\n      headers: new Headers(this.requestHeader),\n      credentials: this.withCredentials ? \"include\" : \"same-origin\",\n      // An abort controller could be added within a future PR\n    });\n\n    // start the fetch\n    fetch(req)\n      .then((response) => {\n        if (response.status === 200 || response.status === 0) {\n          // Some browsers return HTTP Status 0 when using non-http protocol\n          // e.g. 'file://' or 'data://'. Handle as success.\n\n          if (response.status === 0) {\n            console.warn(\"THREE.FileLoader: HTTP Status 0 received.\");\n          }\n\n          const callbacks = loading[url];\n          const reader = response.body.getReader();\n          const contentLength = response.headers.get(\"Content-Length\");\n          const total = contentLength ? parseInt(contentLength) : 0;\n          const lengthComputable = total !== 0;\n          let loaded = 0;\n\n          // periodically read data into the new stream tracking while download progress\n          return new ReadableStream({\n            start(controller) {\n              readData();\n\n              function readData() {\n                reader.read().then(({ done, value }) => {\n                  if (done) {\n                    controller.close();\n                  } else {\n                    loaded += value.byteLength;\n\n                    const event = new ProgressEvent(\"progress\", {\n                      lengthComputable,\n                      loaded,\n                      total,\n                    });\n                    for (let i = 0, il = callbacks.length; i < il; i++) {\n                      const callback = callbacks[i];\n                      if (callback.onProgress) callback.onProgress(event);\n                    }\n\n                    controller.enqueue(value);\n                    readData();\n                  }\n                });\n              }\n            },\n          });\n        } else {\n          throw Error(\n            `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`\n          );\n        }\n      })\n      .then((stream) => {\n        const response = new Response(stream);\n\n        switch (this.responseType) {\n          case \"arraybuffer\":\n            return response.arrayBuffer();\n\n          case \"blob\":\n            return response.blob();\n\n          case \"document\":\n            return response.text().then((text) => {\n              const parser = new DOMParser();\n              return parser.parseFromString(text, this.mimeType);\n            });\n\n          case \"json\":\n            return response.json();\n\n          default:\n            return response.text();\n        }\n      })\n      .then((data) => {\n        // Add to cache only on HTTP success, so that we do not cache\n        // error response bodies as proper responses to requests.\n        Cache.add(url, data);\n\n        const callbacks = loading[url];\n        delete loading[url];\n\n        for (let i = 0, il = callbacks.length; i < il; i++) {\n          const callback = callbacks[i];\n          if (callback.onLoad) callback.onLoad(data);\n        }\n\n        this.manager.itemEnd(url);\n      })\n      .catch((err) => {\n        // Abort errors and other errors are handled the same\n\n        const callbacks = loading[url];\n        delete loading[url];\n\n        for (let i = 0, il = callbacks.length; i < il; i++) {\n          const callback = callbacks[i];\n          if (callback.onError) callback.onError(err);\n        }\n\n        this.manager.itemError(url);\n        this.manager.itemEnd(url);\n      });\n\n    this.manager.itemStart(url);\n  }\n\n  setResponseType(value) {\n    this.responseType = value;\n    return this;\n  }\n\n  setMimeType(value) {\n    this.mimeType = value;\n    return this;\n  }\n}\n\nclass AnimationLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n  }\n\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n\n    const loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setRequestHeader(this.requestHeader);\n    loader.setWithCredentials(this.withCredentials);\n    loader.load(\n      url,\n      function (text) {\n        try {\n          onLoad(scope.parse(JSON.parse(text)));\n        } catch (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n\n          scope.manager.itemError(url);\n        }\n      },\n      onProgress,\n      onError\n    );\n  }\n\n  parse(json) {\n    const animations = [];\n\n    for (let i = 0; i < json.length; i++) {\n      const clip = AnimationClip.parse(json[i]);\n\n      animations.push(clip);\n    }\n\n    return animations;\n  }\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n  }\n\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n\n    const images = [];\n\n    const texture = new CompressedTexture();\n\n    const loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setResponseType(\"arraybuffer\");\n    loader.setRequestHeader(this.requestHeader);\n    loader.setWithCredentials(scope.withCredentials);\n\n    let loaded = 0;\n\n    function loadTexture(i) {\n      loader.load(\n        url[i],\n        function (buffer) {\n          const texDatas = scope.parse(buffer, true);\n\n          images[i] = {\n            width: texDatas.width,\n            height: texDatas.height,\n            format: texDatas.format,\n            mipmaps: texDatas.mipmaps,\n          };\n\n          loaded += 1;\n\n          if (loaded === 6) {\n            if (texDatas.mipmapCount === 1) texture.minFilter = LinearFilter;\n\n            texture.image = images;\n            texture.format = texDatas.format;\n            texture.needsUpdate = true;\n\n            if (onLoad) onLoad(texture);\n          }\n        },\n        onProgress,\n        onError\n      );\n    }\n\n    if (Array.isArray(url)) {\n      for (let i = 0, il = url.length; i < il; ++i) {\n        loadTexture(i);\n      }\n    } else {\n      // compressed cubemap texture stored in a single DDS file\n\n      loader.load(\n        url,\n        function (buffer) {\n          const texDatas = scope.parse(buffer, true);\n\n          if (texDatas.isCubemap) {\n            const faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n            for (let f = 0; f < faces; f++) {\n              images[f] = { mipmaps: [] };\n\n              for (let i = 0; i < texDatas.mipmapCount; i++) {\n                images[f].mipmaps.push(\n                  texDatas.mipmaps[f * texDatas.mipmapCount + i]\n                );\n                images[f].format = texDatas.format;\n                images[f].width = texDatas.width;\n                images[f].height = texDatas.height;\n              }\n            }\n\n            texture.image = images;\n          } else {\n            texture.image.width = texDatas.width;\n            texture.image.height = texDatas.height;\n            texture.mipmaps = texDatas.mipmaps;\n          }\n\n          if (texDatas.mipmapCount === 1) {\n            texture.minFilter = LinearFilter;\n          }\n\n          texture.format = texDatas.format;\n          texture.needsUpdate = true;\n\n          if (onLoad) onLoad(texture);\n        },\n        onProgress,\n        onError\n      );\n    }\n\n    return texture;\n  }\n}\n\nclass ImageLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n  }\n\n  load(url, onLoad, onProgress, onError) {\n    if (this.path !== undefined) url = this.path + url;\n\n    url = this.manager.resolveURL(url);\n\n    const scope = this;\n\n    const cached = Cache.get(url);\n\n    if (cached !== undefined) {\n      scope.manager.itemStart(url);\n\n      setTimeout(function () {\n        if (onLoad) onLoad(cached);\n\n        scope.manager.itemEnd(url);\n      }, 0);\n\n      return cached;\n    }\n\n    const image = createElementNS(\"img\");\n\n    function onImageLoad() {\n      removeEventListeners();\n\n      Cache.add(url, this);\n\n      if (onLoad) onLoad(this);\n\n      scope.manager.itemEnd(url);\n    }\n\n    function onImageError(event) {\n      removeEventListeners();\n\n      if (onError) onError(event);\n\n      scope.manager.itemError(url);\n      scope.manager.itemEnd(url);\n    }\n\n    function removeEventListeners() {\n      image.removeEventListener(\"load\", onImageLoad, false);\n      image.removeEventListener(\"error\", onImageError, false);\n    }\n\n    image.addEventListener(\"load\", onImageLoad, false);\n    image.addEventListener(\"error\", onImageError, false);\n\n    if (url.substr(0, 5) !== \"data:\") {\n      if (this.crossOrigin !== undefined) image.crossOrigin = this.crossOrigin;\n    }\n\n    scope.manager.itemStart(url);\n\n    image.src = url;\n\n    return image;\n  }\n}\n\nclass CubeTextureLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n  }\n\n  load(urls, onLoad, onProgress, onError) {\n    const texture = new CubeTexture();\n\n    const loader = new ImageLoader(this.manager);\n    loader.setCrossOrigin(this.crossOrigin);\n    loader.setPath(this.path);\n\n    let loaded = 0;\n\n    function loadTexture(i) {\n      loader.load(\n        urls[i],\n        function (image) {\n          texture.images[i] = image;\n\n          loaded++;\n\n          if (loaded === 6) {\n            texture.needsUpdate = true;\n\n            if (onLoad) onLoad(texture);\n          }\n        },\n        undefined,\n        onError\n      );\n    }\n\n    for (let i = 0; i < urls.length; ++i) {\n      loadTexture(i);\n    }\n\n    return texture;\n  }\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n  }\n\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n\n    const texture = new DataTexture();\n\n    const loader = new FileLoader(this.manager);\n    loader.setResponseType(\"arraybuffer\");\n    loader.setRequestHeader(this.requestHeader);\n    loader.setPath(this.path);\n    loader.setWithCredentials(scope.withCredentials);\n    loader.load(\n      url,\n      function (buffer) {\n        const texData = scope.parse(buffer);\n\n        if (!texData) return;\n\n        if (texData.image !== undefined) {\n          texture.image = texData.image;\n        } else if (texData.data !== undefined) {\n          texture.image.width = texData.width;\n          texture.image.height = texData.height;\n          texture.image.data = texData.data;\n        }\n\n        texture.wrapS =\n          texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n        texture.wrapT =\n          texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n        texture.magFilter =\n          texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n        texture.minFilter =\n          texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n        texture.anisotropy =\n          texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n        if (texData.encoding !== undefined) {\n          texture.encoding = texData.encoding;\n        }\n\n        if (texData.flipY !== undefined) {\n          texture.flipY = texData.flipY;\n        }\n\n        if (texData.format !== undefined) {\n          texture.format = texData.format;\n        }\n\n        if (texData.type !== undefined) {\n          texture.type = texData.type;\n        }\n\n        if (texData.mipmaps !== undefined) {\n          texture.mipmaps = texData.mipmaps;\n          texture.minFilter = LinearMipmapLinearFilter; // presumably...\n        }\n\n        if (texData.mipmapCount === 1) {\n          texture.minFilter = LinearFilter;\n        }\n\n        if (texData.generateMipmaps !== undefined) {\n          texture.generateMipmaps = texData.generateMipmaps;\n        }\n\n        texture.needsUpdate = true;\n\n        if (onLoad) onLoad(texture, texData);\n      },\n      onProgress,\n      onError\n    );\n\n    return texture;\n  }\n}\n\nclass TextureLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n  }\n\n  load(url, onLoad, onProgress, onError) {\n    const texture = new Texture();\n\n    const loader = new ImageLoader(this.manager);\n    loader.setCrossOrigin(this.crossOrigin);\n    loader.setPath(this.path);\n\n    loader.load(\n      url,\n      function (image) {\n        texture.image = image;\n        texture.needsUpdate = true;\n\n        if (onLoad !== undefined) {\n          onLoad(texture);\n        }\n      },\n      onProgress,\n      onError\n    );\n\n    return texture;\n  }\n}\n\nclass Light extends Object3D {\n  constructor(color, intensity = 1) {\n    super();\n\n    this.type = \"Light\";\n\n    this.color = new Color(color);\n    this.intensity = intensity;\n  }\n\n  dispose() {\n    // Empty here in base class; some subclasses override.\n  }\n\n  copy(source) {\n    super.copy(source);\n\n    this.color.copy(source.color);\n    this.intensity = source.intensity;\n\n    return this;\n  }\n\n  toJSON(meta) {\n    const data = super.toJSON(meta);\n\n    data.object.color = this.color.getHex();\n    data.object.intensity = this.intensity;\n\n    if (this.groundColor !== undefined)\n      data.object.groundColor = this.groundColor.getHex();\n\n    if (this.distance !== undefined) data.object.distance = this.distance;\n    if (this.angle !== undefined) data.object.angle = this.angle;\n    if (this.decay !== undefined) data.object.decay = this.decay;\n    if (this.penumbra !== undefined) data.object.penumbra = this.penumbra;\n\n    if (this.shadow !== undefined) data.object.shadow = this.shadow.toJSON();\n\n    return data;\n  }\n}\n\nLight.prototype.isLight = true;\n\nclass HemisphereLight extends Light {\n  constructor(skyColor, groundColor, intensity) {\n    super(skyColor, intensity);\n\n    this.type = \"HemisphereLight\";\n\n    this.position.copy(Object3D.DefaultUp);\n    this.updateMatrix();\n\n    this.groundColor = new Color(groundColor);\n  }\n\n  copy(source) {\n    Light.prototype.copy.call(this, source);\n\n    this.groundColor.copy(source.groundColor);\n\n    return this;\n  }\n}\n\nHemisphereLight.prototype.isHemisphereLight = true;\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n  constructor(camera) {\n    this.camera = camera;\n\n    this.bias = 0;\n    this.normalBias = 0;\n    this.radius = 1;\n    this.blurSamples = 8;\n\n    this.mapSize = new Vector2(512, 512);\n\n    this.map = null;\n    this.mapPass = null;\n    this.matrix = new Matrix4();\n\n    this.autoUpdate = true;\n    this.needsUpdate = false;\n\n    this._frustum = new Frustum();\n    this._frameExtents = new Vector2(1, 1);\n\n    this._viewportCount = 1;\n\n    this._viewports = [new Vector4(0, 0, 1, 1)];\n  }\n\n  getViewportCount() {\n    return this._viewportCount;\n  }\n\n  getFrustum() {\n    return this._frustum;\n  }\n\n  updateMatrices(light) {\n    const shadowCamera = this.camera;\n    const shadowMatrix = this.matrix;\n\n    _lightPositionWorld$1.setFromMatrixPosition(light.matrixWorld);\n    shadowCamera.position.copy(_lightPositionWorld$1);\n\n    _lookTarget$1.setFromMatrixPosition(light.target.matrixWorld);\n    shadowCamera.lookAt(_lookTarget$1);\n    shadowCamera.updateMatrixWorld();\n\n    _projScreenMatrix$1.multiplyMatrices(\n      shadowCamera.projectionMatrix,\n      shadowCamera.matrixWorldInverse\n    );\n    this._frustum.setFromProjectionMatrix(_projScreenMatrix$1);\n\n    shadowMatrix.set(\n      0.5,\n      0.0,\n      0.0,\n      0.5,\n      0.0,\n      0.5,\n      0.0,\n      0.5,\n      0.0,\n      0.0,\n      0.5,\n      0.5,\n      0.0,\n      0.0,\n      0.0,\n      1.0\n    );\n\n    shadowMatrix.multiply(shadowCamera.projectionMatrix);\n    shadowMatrix.multiply(shadowCamera.matrixWorldInverse);\n  }\n\n  getViewport(viewportIndex) {\n    return this._viewports[viewportIndex];\n  }\n\n  getFrameExtents() {\n    return this._frameExtents;\n  }\n\n  dispose() {\n    if (this.map) {\n      this.map.dispose();\n    }\n\n    if (this.mapPass) {\n      this.mapPass.dispose();\n    }\n  }\n\n  copy(source) {\n    this.camera = source.camera.clone();\n\n    this.bias = source.bias;\n    this.radius = source.radius;\n\n    this.mapSize.copy(source.mapSize);\n\n    return this;\n  }\n\n  clone() {\n    return new this.constructor().copy(this);\n  }\n\n  toJSON() {\n    const object = {};\n\n    if (this.bias !== 0) object.bias = this.bias;\n    if (this.normalBias !== 0) object.normalBias = this.normalBias;\n    if (this.radius !== 1) object.radius = this.radius;\n    if (this.mapSize.x !== 512 || this.mapSize.y !== 512)\n      object.mapSize = this.mapSize.toArray();\n\n    object.camera = this.camera.toJSON(false).object;\n    delete object.camera.matrix;\n\n    return object;\n  }\n}\n\nclass SpotLightShadow extends LightShadow {\n  constructor() {\n    super(new PerspectiveCamera(50, 1, 0.5, 500));\n\n    this.focus = 1;\n  }\n\n  updateMatrices(light) {\n    const camera = this.camera;\n\n    const fov = RAD2DEG * 2 * light.angle * this.focus;\n    const aspect = this.mapSize.width / this.mapSize.height;\n    const far = light.distance || camera.far;\n\n    if (fov !== camera.fov || aspect !== camera.aspect || far !== camera.far) {\n      camera.fov = fov;\n      camera.aspect = aspect;\n      camera.far = far;\n      camera.updateProjectionMatrix();\n    }\n\n    super.updateMatrices(light);\n  }\n\n  copy(source) {\n    super.copy(source);\n\n    this.focus = source.focus;\n\n    return this;\n  }\n}\n\nSpotLightShadow.prototype.isSpotLightShadow = true;\n\nclass SpotLight extends Light {\n  constructor(\n    color,\n    intensity,\n    distance = 0,\n    angle = Math.PI / 3,\n    penumbra = 0,\n    decay = 1\n  ) {\n    super(color, intensity);\n\n    this.type = \"SpotLight\";\n\n    this.position.copy(Object3D.DefaultUp);\n    this.updateMatrix();\n\n    this.target = new Object3D();\n\n    this.distance = distance;\n    this.angle = angle;\n    this.penumbra = penumbra;\n    this.decay = decay; // for physically correct lights, should be 2.\n\n    this.shadow = new SpotLightShadow();\n  }\n\n  get power() {\n    // compute the light's luminous power (in lumens) from its intensity (in candela)\n    // by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n    return this.intensity * Math.PI;\n  }\n\n  set power(power) {\n    // set the light's intensity (in candela) from the desired luminous power (in lumens)\n    this.intensity = power / Math.PI;\n  }\n\n  dispose() {\n    this.shadow.dispose();\n  }\n\n  copy(source) {\n    super.copy(source);\n\n    this.distance = source.distance;\n    this.angle = source.angle;\n    this.penumbra = source.penumbra;\n    this.decay = source.decay;\n\n    this.target = source.target.clone();\n\n    this.shadow = source.shadow.clone();\n\n    return this;\n  }\n}\n\nSpotLight.prototype.isSpotLight = true;\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n  constructor() {\n    super(new PerspectiveCamera(90, 1, 0.5, 500));\n\n    this._frameExtents = new Vector2(4, 2);\n\n    this._viewportCount = 6;\n\n    this._viewports = [\n      // These viewports map a cube-map onto a 2D texture with the\n      // following orientation:\n      //\n      //  xzXZ\n      //   y Y\n      //\n      // X - Positive x direction\n      // x - Negative x direction\n      // Y - Positive y direction\n      // y - Negative y direction\n      // Z - Positive z direction\n      // z - Negative z direction\n\n      // positive X\n      new Vector4(2, 1, 1, 1),\n      // negative X\n      new Vector4(0, 1, 1, 1),\n      // positive Z\n      new Vector4(3, 1, 1, 1),\n      // negative Z\n      new Vector4(1, 1, 1, 1),\n      // positive Y\n      new Vector4(3, 0, 1, 1),\n      // negative Y\n      new Vector4(1, 0, 1, 1),\n    ];\n\n    this._cubeDirections = [\n      new Vector3(1, 0, 0),\n      new Vector3(-1, 0, 0),\n      new Vector3(0, 0, 1),\n      new Vector3(0, 0, -1),\n      new Vector3(0, 1, 0),\n      new Vector3(0, -1, 0),\n    ];\n\n    this._cubeUps = [\n      new Vector3(0, 1, 0),\n      new Vector3(0, 1, 0),\n      new Vector3(0, 1, 0),\n      new Vector3(0, 1, 0),\n      new Vector3(0, 0, 1),\n      new Vector3(0, 0, -1),\n    ];\n  }\n\n  updateMatrices(light, viewportIndex = 0) {\n    const camera = this.camera;\n    const shadowMatrix = this.matrix;\n\n    const far = light.distance || camera.far;\n\n    if (far !== camera.far) {\n      camera.far = far;\n      camera.updateProjectionMatrix();\n    }\n\n    _lightPositionWorld.setFromMatrixPosition(light.matrixWorld);\n    camera.position.copy(_lightPositionWorld);\n\n    _lookTarget.copy(camera.position);\n    _lookTarget.add(this._cubeDirections[viewportIndex]);\n    camera.up.copy(this._cubeUps[viewportIndex]);\n    camera.lookAt(_lookTarget);\n    camera.updateMatrixWorld();\n\n    shadowMatrix.makeTranslation(\n      -_lightPositionWorld.x,\n      -_lightPositionWorld.y,\n      -_lightPositionWorld.z\n    );\n\n    _projScreenMatrix.multiplyMatrices(\n      camera.projectionMatrix,\n      camera.matrixWorldInverse\n    );\n    this._frustum.setFromProjectionMatrix(_projScreenMatrix);\n  }\n}\n\nPointLightShadow.prototype.isPointLightShadow = true;\n\nclass PointLight extends Light {\n  constructor(color, intensity, distance = 0, decay = 1) {\n    super(color, intensity);\n\n    this.type = \"PointLight\";\n\n    this.distance = distance;\n    this.decay = decay; // for physically correct lights, should be 2.\n\n    this.shadow = new PointLightShadow();\n  }\n\n  get power() {\n    // compute the light's luminous power (in lumens) from its intensity (in candela)\n    // for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n    return this.intensity * 4 * Math.PI;\n  }\n\n  set power(power) {\n    // set the light's intensity (in candela) from the desired luminous power (in lumens)\n    this.intensity = power / (4 * Math.PI);\n  }\n\n  dispose() {\n    this.shadow.dispose();\n  }\n\n  copy(source) {\n    super.copy(source);\n\n    this.distance = source.distance;\n    this.decay = source.decay;\n\n    this.shadow = source.shadow.clone();\n\n    return this;\n  }\n}\n\nPointLight.prototype.isPointLight = true;\n\nclass DirectionalLightShadow extends LightShadow {\n  constructor() {\n    super(new OrthographicCamera(-5, 5, 5, -5, 0.5, 500));\n  }\n}\n\nDirectionalLightShadow.prototype.isDirectionalLightShadow = true;\n\nclass DirectionalLight extends Light {\n  constructor(color, intensity) {\n    super(color, intensity);\n\n    this.type = \"DirectionalLight\";\n\n    this.position.copy(Object3D.DefaultUp);\n    this.updateMatrix();\n\n    this.target = new Object3D();\n\n    this.shadow = new DirectionalLightShadow();\n  }\n\n  dispose() {\n    this.shadow.dispose();\n  }\n\n  copy(source) {\n    super.copy(source);\n\n    this.target = source.target.clone();\n    this.shadow = source.shadow.clone();\n\n    return this;\n  }\n}\n\nDirectionalLight.prototype.isDirectionalLight = true;\n\nclass AmbientLight extends Light {\n  constructor(color, intensity) {\n    super(color, intensity);\n\n    this.type = \"AmbientLight\";\n  }\n}\n\nAmbientLight.prototype.isAmbientLight = true;\n\nclass RectAreaLight extends Light {\n  constructor(color, intensity, width = 10, height = 10) {\n    super(color, intensity);\n\n    this.type = \"RectAreaLight\";\n\n    this.width = width;\n    this.height = height;\n  }\n\n  get power() {\n    // compute the light's luminous power (in lumens) from its intensity (in nits)\n    return this.intensity * this.width * this.height * Math.PI;\n  }\n\n  set power(power) {\n    // set the light's intensity (in nits) from the desired luminous power (in lumens)\n    this.intensity = power / (this.width * this.height * Math.PI);\n  }\n\n  copy(source) {\n    super.copy(source);\n\n    this.width = source.width;\n    this.height = source.height;\n\n    return this;\n  }\n\n  toJSON(meta) {\n    const data = super.toJSON(meta);\n\n    data.object.width = this.width;\n    data.object.height = this.height;\n\n    return data;\n  }\n}\n\nRectAreaLight.prototype.isRectAreaLight = true;\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n  constructor() {\n    this.coefficients = [];\n\n    for (let i = 0; i < 9; i++) {\n      this.coefficients.push(new Vector3());\n    }\n  }\n\n  set(coefficients) {\n    for (let i = 0; i < 9; i++) {\n      this.coefficients[i].copy(coefficients[i]);\n    }\n\n    return this;\n  }\n\n  zero() {\n    for (let i = 0; i < 9; i++) {\n      this.coefficients[i].set(0, 0, 0);\n    }\n\n    return this;\n  }\n\n  // get the radiance in the direction of the normal\n  // target is a Vector3\n  getAt(normal, target) {\n    // normal is assumed to be unit length\n\n    const x = normal.x,\n      y = normal.y,\n      z = normal.z;\n\n    const coeff = this.coefficients;\n\n    // band 0\n    target.copy(coeff[0]).multiplyScalar(0.282095);\n\n    // band 1\n    target.addScaledVector(coeff[1], 0.488603 * y);\n    target.addScaledVector(coeff[2], 0.488603 * z);\n    target.addScaledVector(coeff[3], 0.488603 * x);\n\n    // band 2\n    target.addScaledVector(coeff[4], 1.092548 * (x * y));\n    target.addScaledVector(coeff[5], 1.092548 * (y * z));\n    target.addScaledVector(coeff[6], 0.315392 * (3.0 * z * z - 1.0));\n    target.addScaledVector(coeff[7], 1.092548 * (x * z));\n    target.addScaledVector(coeff[8], 0.546274 * (x * x - y * y));\n\n    return target;\n  }\n\n  // get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n  // target is a Vector3\n  // https://graphics.stanford.edu/papers/envmap/envmap.pdf\n  getIrradianceAt(normal, target) {\n    // normal is assumed to be unit length\n\n    const x = normal.x,\n      y = normal.y,\n      z = normal.z;\n\n    const coeff = this.coefficients;\n\n    // band 0\n    target.copy(coeff[0]).multiplyScalar(0.886227); // π * 0.282095\n\n    // band 1\n    target.addScaledVector(coeff[1], 2.0 * 0.511664 * y); // ( 2 * π / 3 ) * 0.488603\n    target.addScaledVector(coeff[2], 2.0 * 0.511664 * z);\n    target.addScaledVector(coeff[3], 2.0 * 0.511664 * x);\n\n    // band 2\n    target.addScaledVector(coeff[4], 2.0 * 0.429043 * x * y); // ( π / 4 ) * 1.092548\n    target.addScaledVector(coeff[5], 2.0 * 0.429043 * y * z);\n    target.addScaledVector(coeff[6], 0.743125 * z * z - 0.247708); // ( π / 4 ) * 0.315392 * 3\n    target.addScaledVector(coeff[7], 2.0 * 0.429043 * x * z);\n    target.addScaledVector(coeff[8], 0.429043 * (x * x - y * y)); // ( π / 4 ) * 0.546274\n\n    return target;\n  }\n\n  add(sh) {\n    for (let i = 0; i < 9; i++) {\n      this.coefficients[i].add(sh.coefficients[i]);\n    }\n\n    return this;\n  }\n\n  addScaledSH(sh, s) {\n    for (let i = 0; i < 9; i++) {\n      this.coefficients[i].addScaledVector(sh.coefficients[i], s);\n    }\n\n    return this;\n  }\n\n  scale(s) {\n    for (let i = 0; i < 9; i++) {\n      this.coefficients[i].multiplyScalar(s);\n    }\n\n    return this;\n  }\n\n  lerp(sh, alpha) {\n    for (let i = 0; i < 9; i++) {\n      this.coefficients[i].lerp(sh.coefficients[i], alpha);\n    }\n\n    return this;\n  }\n\n  equals(sh) {\n    for (let i = 0; i < 9; i++) {\n      if (!this.coefficients[i].equals(sh.coefficients[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  copy(sh) {\n    return this.set(sh.coefficients);\n  }\n\n  clone() {\n    return new this.constructor().copy(this);\n  }\n\n  fromArray(array, offset = 0) {\n    const coefficients = this.coefficients;\n\n    for (let i = 0; i < 9; i++) {\n      coefficients[i].fromArray(array, offset + i * 3);\n    }\n\n    return this;\n  }\n\n  toArray(array = [], offset = 0) {\n    const coefficients = this.coefficients;\n\n    for (let i = 0; i < 9; i++) {\n      coefficients[i].toArray(array, offset + i * 3);\n    }\n\n    return array;\n  }\n\n  // evaluate the basis functions\n  // shBasis is an Array[ 9 ]\n  static getBasisAt(normal, shBasis) {\n    // normal is assumed to be unit length\n\n    const x = normal.x,\n      y = normal.y,\n      z = normal.z;\n\n    // band 0\n    shBasis[0] = 0.282095;\n\n    // band 1\n    shBasis[1] = 0.488603 * y;\n    shBasis[2] = 0.488603 * z;\n    shBasis[3] = 0.488603 * x;\n\n    // band 2\n    shBasis[4] = 1.092548 * x * y;\n    shBasis[5] = 1.092548 * y * z;\n    shBasis[6] = 0.315392 * (3 * z * z - 1);\n    shBasis[7] = 1.092548 * x * z;\n    shBasis[8] = 0.546274 * (x * x - y * y);\n  }\n}\n\nSphericalHarmonics3.prototype.isSphericalHarmonics3 = true;\n\nclass LightProbe extends Light {\n  constructor(sh = new SphericalHarmonics3(), intensity = 1) {\n    super(undefined, intensity);\n\n    this.sh = sh;\n  }\n\n  copy(source) {\n    super.copy(source);\n\n    this.sh.copy(source.sh);\n\n    return this;\n  }\n\n  fromJSON(json) {\n    this.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n    this.sh.fromArray(json.sh);\n\n    return this;\n  }\n\n  toJSON(meta) {\n    const data = super.toJSON(meta);\n\n    data.object.sh = this.sh.toArray();\n\n    return data;\n  }\n}\n\nLightProbe.prototype.isLightProbe = true;\n\nclass MaterialLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n    this.textures = {};\n  }\n\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n\n    const loader = new FileLoader(scope.manager);\n    loader.setPath(scope.path);\n    loader.setRequestHeader(scope.requestHeader);\n    loader.setWithCredentials(scope.withCredentials);\n    loader.load(\n      url,\n      function (text) {\n        try {\n          onLoad(scope.parse(JSON.parse(text)));\n        } catch (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n\n          scope.manager.itemError(url);\n        }\n      },\n      onProgress,\n      onError\n    );\n  }\n\n  parse(json) {\n    const textures = this.textures;\n\n    function getTexture(name) {\n      if (textures[name] === undefined) {\n        console.warn(\"THREE.MaterialLoader: Undefined texture\", name);\n      }\n\n      return textures[name];\n    }\n\n    const material = new Materials[json.type]();\n\n    if (json.uuid !== undefined) material.uuid = json.uuid;\n    if (json.name !== undefined) material.name = json.name;\n    if (json.color !== undefined && material.color !== undefined)\n      material.color.setHex(json.color);\n    if (json.roughness !== undefined) material.roughness = json.roughness;\n    if (json.metalness !== undefined) material.metalness = json.metalness;\n    if (json.sheen !== undefined) material.sheen = json.sheen;\n    if (json.sheenColor !== undefined)\n      material.sheenColor = new Color().setHex(json.sheenColor);\n    if (json.sheenRoughness !== undefined)\n      material.sheenRoughness = json.sheenRoughness;\n    if (json.emissive !== undefined && material.emissive !== undefined)\n      material.emissive.setHex(json.emissive);\n    if (json.specular !== undefined && material.specular !== undefined)\n      material.specular.setHex(json.specular);\n    if (json.specularIntensity !== undefined)\n      material.specularIntensity = json.specularIntensity;\n    if (\n      json.specularColor !== undefined &&\n      material.specularColor !== undefined\n    )\n      material.specularColor.setHex(json.specularColor);\n    if (json.shininess !== undefined) material.shininess = json.shininess;\n    if (json.clearcoat !== undefined) material.clearcoat = json.clearcoat;\n    if (json.clearcoatRoughness !== undefined)\n      material.clearcoatRoughness = json.clearcoatRoughness;\n    if (json.transmission !== undefined)\n      material.transmission = json.transmission;\n    if (json.thickness !== undefined) material.thickness = json.thickness;\n    if (json.attenuationDistance !== undefined)\n      material.attenuationDistance = json.attenuationDistance;\n    if (\n      json.attenuationColor !== undefined &&\n      material.attenuationColor !== undefined\n    )\n      material.attenuationColor.setHex(json.attenuationColor);\n    if (json.fog !== undefined) material.fog = json.fog;\n    if (json.flatShading !== undefined) material.flatShading = json.flatShading;\n    if (json.blending !== undefined) material.blending = json.blending;\n    if (json.combine !== undefined) material.combine = json.combine;\n    if (json.side !== undefined) material.side = json.side;\n    if (json.shadowSide !== undefined) material.shadowSide = json.shadowSide;\n    if (json.opacity !== undefined) material.opacity = json.opacity;\n    if (json.format !== undefined) material.format = json.format;\n    if (json.transparent !== undefined) material.transparent = json.transparent;\n    if (json.alphaTest !== undefined) material.alphaTest = json.alphaTest;\n    if (json.depthTest !== undefined) material.depthTest = json.depthTest;\n    if (json.depthWrite !== undefined) material.depthWrite = json.depthWrite;\n    if (json.colorWrite !== undefined) material.colorWrite = json.colorWrite;\n\n    if (json.stencilWrite !== undefined)\n      material.stencilWrite = json.stencilWrite;\n    if (json.stencilWriteMask !== undefined)\n      material.stencilWriteMask = json.stencilWriteMask;\n    if (json.stencilFunc !== undefined) material.stencilFunc = json.stencilFunc;\n    if (json.stencilRef !== undefined) material.stencilRef = json.stencilRef;\n    if (json.stencilFuncMask !== undefined)\n      material.stencilFuncMask = json.stencilFuncMask;\n    if (json.stencilFail !== undefined) material.stencilFail = json.stencilFail;\n    if (json.stencilZFail !== undefined)\n      material.stencilZFail = json.stencilZFail;\n    if (json.stencilZPass !== undefined)\n      material.stencilZPass = json.stencilZPass;\n\n    if (json.wireframe !== undefined) material.wireframe = json.wireframe;\n    if (json.wireframeLinewidth !== undefined)\n      material.wireframeLinewidth = json.wireframeLinewidth;\n    if (json.wireframeLinecap !== undefined)\n      material.wireframeLinecap = json.wireframeLinecap;\n    if (json.wireframeLinejoin !== undefined)\n      material.wireframeLinejoin = json.wireframeLinejoin;\n\n    if (json.rotation !== undefined) material.rotation = json.rotation;\n\n    if (json.linewidth !== 1) material.linewidth = json.linewidth;\n    if (json.dashSize !== undefined) material.dashSize = json.dashSize;\n    if (json.gapSize !== undefined) material.gapSize = json.gapSize;\n    if (json.scale !== undefined) material.scale = json.scale;\n\n    if (json.polygonOffset !== undefined)\n      material.polygonOffset = json.polygonOffset;\n    if (json.polygonOffsetFactor !== undefined)\n      material.polygonOffsetFactor = json.polygonOffsetFactor;\n    if (json.polygonOffsetUnits !== undefined)\n      material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n    if (json.dithering !== undefined) material.dithering = json.dithering;\n\n    if (json.alphaToCoverage !== undefined)\n      material.alphaToCoverage = json.alphaToCoverage;\n    if (json.premultipliedAlpha !== undefined)\n      material.premultipliedAlpha = json.premultipliedAlpha;\n\n    if (json.visible !== undefined) material.visible = json.visible;\n\n    if (json.toneMapped !== undefined) material.toneMapped = json.toneMapped;\n\n    if (json.userData !== undefined) material.userData = json.userData;\n\n    if (json.vertexColors !== undefined) {\n      if (typeof json.vertexColors === \"number\") {\n        material.vertexColors = json.vertexColors > 0 ? true : false;\n      } else {\n        material.vertexColors = json.vertexColors;\n      }\n    }\n\n    // Shader Material\n\n    if (json.uniforms !== undefined) {\n      for (const name in json.uniforms) {\n        const uniform = json.uniforms[name];\n\n        material.uniforms[name] = {};\n\n        switch (uniform.type) {\n          case \"t\":\n            material.uniforms[name].value = getTexture(uniform.value);\n            break;\n\n          case \"c\":\n            material.uniforms[name].value = new Color().setHex(uniform.value);\n            break;\n\n          case \"v2\":\n            material.uniforms[name].value = new Vector2().fromArray(\n              uniform.value\n            );\n            break;\n\n          case \"v3\":\n            material.uniforms[name].value = new Vector3().fromArray(\n              uniform.value\n            );\n            break;\n\n          case \"v4\":\n            material.uniforms[name].value = new Vector4().fromArray(\n              uniform.value\n            );\n            break;\n\n          case \"m3\":\n            material.uniforms[name].value = new Matrix3().fromArray(\n              uniform.value\n            );\n            break;\n\n          case \"m4\":\n            material.uniforms[name].value = new Matrix4().fromArray(\n              uniform.value\n            );\n            break;\n\n          default:\n            material.uniforms[name].value = uniform.value;\n        }\n      }\n    }\n\n    if (json.defines !== undefined) material.defines = json.defines;\n    if (json.vertexShader !== undefined)\n      material.vertexShader = json.vertexShader;\n    if (json.fragmentShader !== undefined)\n      material.fragmentShader = json.fragmentShader;\n\n    if (json.extensions !== undefined) {\n      for (const key in json.extensions) {\n        material.extensions[key] = json.extensions[key];\n      }\n    }\n\n    // Deprecated\n\n    if (json.shading !== undefined) material.flatShading = json.shading === 1; // THREE.FlatShading\n\n    // for PointsMaterial\n\n    if (json.size !== undefined) material.size = json.size;\n    if (json.sizeAttenuation !== undefined)\n      material.sizeAttenuation = json.sizeAttenuation;\n\n    // maps\n\n    if (json.map !== undefined) material.map = getTexture(json.map);\n    if (json.matcap !== undefined) material.matcap = getTexture(json.matcap);\n\n    if (json.alphaMap !== undefined)\n      material.alphaMap = getTexture(json.alphaMap);\n\n    if (json.bumpMap !== undefined) material.bumpMap = getTexture(json.bumpMap);\n    if (json.bumpScale !== undefined) material.bumpScale = json.bumpScale;\n\n    if (json.normalMap !== undefined)\n      material.normalMap = getTexture(json.normalMap);\n    if (json.normalMapType !== undefined)\n      material.normalMapType = json.normalMapType;\n    if (json.normalScale !== undefined) {\n      let normalScale = json.normalScale;\n\n      if (Array.isArray(normalScale) === false) {\n        // Blender exporter used to export a scalar. See #7459\n\n        normalScale = [normalScale, normalScale];\n      }\n\n      material.normalScale = new Vector2().fromArray(normalScale);\n    }\n\n    if (json.displacementMap !== undefined)\n      material.displacementMap = getTexture(json.displacementMap);\n    if (json.displacementScale !== undefined)\n      material.displacementScale = json.displacementScale;\n    if (json.displacementBias !== undefined)\n      material.displacementBias = json.displacementBias;\n\n    if (json.roughnessMap !== undefined)\n      material.roughnessMap = getTexture(json.roughnessMap);\n    if (json.metalnessMap !== undefined)\n      material.metalnessMap = getTexture(json.metalnessMap);\n\n    if (json.emissiveMap !== undefined)\n      material.emissiveMap = getTexture(json.emissiveMap);\n    if (json.emissiveIntensity !== undefined)\n      material.emissiveIntensity = json.emissiveIntensity;\n\n    if (json.specularMap !== undefined)\n      material.specularMap = getTexture(json.specularMap);\n    if (json.specularIntensityMap !== undefined)\n      material.specularIntensityMap = getTexture(json.specularIntensityMap);\n    if (json.specularColorMap !== undefined)\n      material.specularColorMap = getTexture(json.specularColorMap);\n\n    if (json.envMap !== undefined) material.envMap = getTexture(json.envMap);\n    if (json.envMapIntensity !== undefined)\n      material.envMapIntensity = json.envMapIntensity;\n\n    if (json.reflectivity !== undefined)\n      material.reflectivity = json.reflectivity;\n    if (json.refractionRatio !== undefined)\n      material.refractionRatio = json.refractionRatio;\n\n    if (json.lightMap !== undefined)\n      material.lightMap = getTexture(json.lightMap);\n    if (json.lightMapIntensity !== undefined)\n      material.lightMapIntensity = json.lightMapIntensity;\n\n    if (json.aoMap !== undefined) material.aoMap = getTexture(json.aoMap);\n    if (json.aoMapIntensity !== undefined)\n      material.aoMapIntensity = json.aoMapIntensity;\n\n    if (json.gradientMap !== undefined)\n      material.gradientMap = getTexture(json.gradientMap);\n\n    if (json.clearcoatMap !== undefined)\n      material.clearcoatMap = getTexture(json.clearcoatMap);\n    if (json.clearcoatRoughnessMap !== undefined)\n      material.clearcoatRoughnessMap = getTexture(json.clearcoatRoughnessMap);\n    if (json.clearcoatNormalMap !== undefined)\n      material.clearcoatNormalMap = getTexture(json.clearcoatNormalMap);\n    if (json.clearcoatNormalScale !== undefined)\n      material.clearcoatNormalScale = new Vector2().fromArray(\n        json.clearcoatNormalScale\n      );\n\n    if (json.transmissionMap !== undefined)\n      material.transmissionMap = getTexture(json.transmissionMap);\n    if (json.thicknessMap !== undefined)\n      material.thicknessMap = getTexture(json.thicknessMap);\n\n    if (json.sheenColorMap !== undefined)\n      material.sheenColorMap = getTexture(json.sheenColorMap);\n    if (json.sheenRoughnessMap !== undefined)\n      material.sheenRoughnessMap = getTexture(json.sheenRoughnessMap);\n\n    return material;\n  }\n\n  setTextures(value) {\n    this.textures = value;\n    return this;\n  }\n}\n\nclass LoaderUtils {\n  static decodeText(array) {\n    if (typeof TextDecoder !== \"undefined\") {\n      return new TextDecoder().decode(array);\n    }\n\n    // Avoid the String.fromCharCode.apply(null, array) shortcut, which\n    // throws a \"maximum call stack size exceeded\" error for large arrays.\n\n    let s = \"\";\n\n    for (let i = 0, il = array.length; i < il; i++) {\n      // Implicitly assumes little-endian.\n      s += String.fromCharCode(array[i]);\n    }\n\n    try {\n      // merges multi-byte utf-8 characters.\n\n      return decodeURIComponent(escape(s));\n    } catch (e) {\n      // see #16358\n\n      return s;\n    }\n  }\n\n  static extractUrlBase(url) {\n    const index = url.lastIndexOf(\"/\");\n\n    if (index === -1) return \"./\";\n\n    return url.substr(0, index + 1);\n  }\n\n  static resolveURL(url, path) {\n    // Invalid URL\n    if (typeof url !== \"string\" || url === \"\") return \"\";\n\n    // Host Relative URL\n    if (/^https?:\\/\\//i.test(path) && /^\\//.test(url)) {\n      path = path.replace(/(^https?:\\/\\/[^\\/]+).*/i, \"$1\");\n    }\n\n    // Absolute URL http://,https://,//\n    if (/^(https?:)?\\/\\//i.test(url)) return url;\n\n    // Data URI\n    if (/^data:.*,.*$/i.test(url)) return url;\n\n    // Blob URL\n    if (/^blob:.*$/i.test(url)) return url;\n\n    // Relative URL\n    return path + url;\n  }\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n  constructor() {\n    super();\n\n    this.type = \"InstancedBufferGeometry\";\n    this.instanceCount = Infinity;\n  }\n\n  copy(source) {\n    super.copy(source);\n\n    this.instanceCount = source.instanceCount;\n\n    return this;\n  }\n\n  clone() {\n    return new this.constructor().copy(this);\n  }\n\n  toJSON() {\n    const data = super.toJSON(this);\n\n    data.instanceCount = this.instanceCount;\n\n    data.isInstancedBufferGeometry = true;\n\n    return data;\n  }\n}\n\nInstancedBufferGeometry.prototype.isInstancedBufferGeometry = true;\n\nclass BufferGeometryLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n  }\n\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n\n    const loader = new FileLoader(scope.manager);\n    loader.setPath(scope.path);\n    loader.setRequestHeader(scope.requestHeader);\n    loader.setWithCredentials(scope.withCredentials);\n    loader.load(\n      url,\n      function (text) {\n        try {\n          onLoad(scope.parse(JSON.parse(text)));\n        } catch (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n\n          scope.manager.itemError(url);\n        }\n      },\n      onProgress,\n      onError\n    );\n  }\n\n  parse(json) {\n    const interleavedBufferMap = {};\n    const arrayBufferMap = {};\n\n    function getInterleavedBuffer(json, uuid) {\n      if (interleavedBufferMap[uuid] !== undefined)\n        return interleavedBufferMap[uuid];\n\n      const interleavedBuffers = json.interleavedBuffers;\n      const interleavedBuffer = interleavedBuffers[uuid];\n\n      const buffer = getArrayBuffer(json, interleavedBuffer.buffer);\n\n      const array = getTypedArray(interleavedBuffer.type, buffer);\n      const ib = new InterleavedBuffer(array, interleavedBuffer.stride);\n      ib.uuid = interleavedBuffer.uuid;\n\n      interleavedBufferMap[uuid] = ib;\n\n      return ib;\n    }\n\n    function getArrayBuffer(json, uuid) {\n      if (arrayBufferMap[uuid] !== undefined) return arrayBufferMap[uuid];\n\n      const arrayBuffers = json.arrayBuffers;\n      const arrayBuffer = arrayBuffers[uuid];\n\n      const ab = new Uint32Array(arrayBuffer).buffer;\n\n      arrayBufferMap[uuid] = ab;\n\n      return ab;\n    }\n\n    const geometry = json.isInstancedBufferGeometry\n      ? new InstancedBufferGeometry()\n      : new BufferGeometry();\n\n    const index = json.data.index;\n\n    if (index !== undefined) {\n      const typedArray = getTypedArray(index.type, index.array);\n      geometry.setIndex(new BufferAttribute(typedArray, 1));\n    }\n\n    const attributes = json.data.attributes;\n\n    for (const key in attributes) {\n      const attribute = attributes[key];\n      let bufferAttribute;\n\n      if (attribute.isInterleavedBufferAttribute) {\n        const interleavedBuffer = getInterleavedBuffer(\n          json.data,\n          attribute.data\n        );\n        bufferAttribute = new InterleavedBufferAttribute(\n          interleavedBuffer,\n          attribute.itemSize,\n          attribute.offset,\n          attribute.normalized\n        );\n      } else {\n        const typedArray = getTypedArray(attribute.type, attribute.array);\n        const bufferAttributeConstr = attribute.isInstancedBufferAttribute\n          ? InstancedBufferAttribute\n          : BufferAttribute;\n        bufferAttribute = new bufferAttributeConstr(\n          typedArray,\n          attribute.itemSize,\n          attribute.normalized\n        );\n      }\n\n      if (attribute.name !== undefined) bufferAttribute.name = attribute.name;\n      if (attribute.usage !== undefined)\n        bufferAttribute.setUsage(attribute.usage);\n\n      if (attribute.updateRange !== undefined) {\n        bufferAttribute.updateRange.offset = attribute.updateRange.offset;\n        bufferAttribute.updateRange.count = attribute.updateRange.count;\n      }\n\n      geometry.setAttribute(key, bufferAttribute);\n    }\n\n    const morphAttributes = json.data.morphAttributes;\n\n    if (morphAttributes) {\n      for (const key in morphAttributes) {\n        const attributeArray = morphAttributes[key];\n\n        const array = [];\n\n        for (let i = 0, il = attributeArray.length; i < il; i++) {\n          const attribute = attributeArray[i];\n          let bufferAttribute;\n\n          if (attribute.isInterleavedBufferAttribute) {\n            const interleavedBuffer = getInterleavedBuffer(\n              json.data,\n              attribute.data\n            );\n            bufferAttribute = new InterleavedBufferAttribute(\n              interleavedBuffer,\n              attribute.itemSize,\n              attribute.offset,\n              attribute.normalized\n            );\n          } else {\n            const typedArray = getTypedArray(attribute.type, attribute.array);\n            bufferAttribute = new BufferAttribute(\n              typedArray,\n              attribute.itemSize,\n              attribute.normalized\n            );\n          }\n\n          if (attribute.name !== undefined)\n            bufferAttribute.name = attribute.name;\n          array.push(bufferAttribute);\n        }\n\n        geometry.morphAttributes[key] = array;\n      }\n    }\n\n    const morphTargetsRelative = json.data.morphTargetsRelative;\n\n    if (morphTargetsRelative) {\n      geometry.morphTargetsRelative = true;\n    }\n\n    const groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n    if (groups !== undefined) {\n      for (let i = 0, n = groups.length; i !== n; ++i) {\n        const group = groups[i];\n\n        geometry.addGroup(group.start, group.count, group.materialIndex);\n      }\n    }\n\n    const boundingSphere = json.data.boundingSphere;\n\n    if (boundingSphere !== undefined) {\n      const center = new Vector3();\n\n      if (boundingSphere.center !== undefined) {\n        center.fromArray(boundingSphere.center);\n      }\n\n      geometry.boundingSphere = new Sphere(center, boundingSphere.radius);\n    }\n\n    if (json.name) geometry.name = json.name;\n    if (json.userData) geometry.userData = json.userData;\n\n    return geometry;\n  }\n}\n\nclass ObjectLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n  }\n\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n\n    const path = this.path === \"\" ? LoaderUtils.extractUrlBase(url) : this.path;\n    this.resourcePath = this.resourcePath || path;\n\n    const loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setRequestHeader(this.requestHeader);\n    loader.setWithCredentials(this.withCredentials);\n    loader.load(\n      url,\n      function (text) {\n        let json = null;\n\n        try {\n          json = JSON.parse(text);\n        } catch (error) {\n          if (onError !== undefined) onError(error);\n\n          console.error(\n            \"THREE:ObjectLoader: Can't parse \" + url + \".\",\n            error.message\n          );\n\n          return;\n        }\n\n        const metadata = json.metadata;\n\n        if (\n          metadata === undefined ||\n          metadata.type === undefined ||\n          metadata.type.toLowerCase() === \"geometry\"\n        ) {\n          console.error(\"THREE.ObjectLoader: Can't load \" + url);\n          return;\n        }\n\n        scope.parse(json, onLoad);\n      },\n      onProgress,\n      onError\n    );\n  }\n\n  async loadAsync(url, onProgress) {\n    const scope = this;\n\n    const path = this.path === \"\" ? LoaderUtils.extractUrlBase(url) : this.path;\n    this.resourcePath = this.resourcePath || path;\n\n    const loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setRequestHeader(this.requestHeader);\n    loader.setWithCredentials(this.withCredentials);\n\n    const text = await loader.loadAsync(url, onProgress);\n\n    const json = JSON.parse(text);\n\n    const metadata = json.metadata;\n\n    if (\n      metadata === undefined ||\n      metadata.type === undefined ||\n      metadata.type.toLowerCase() === \"geometry\"\n    ) {\n      throw new Error(\"THREE.ObjectLoader: Can't load \" + url);\n    }\n\n    return await scope.parseAsync(json);\n  }\n\n  parse(json, onLoad) {\n    const animations = this.parseAnimations(json.animations);\n    const shapes = this.parseShapes(json.shapes);\n    const geometries = this.parseGeometries(json.geometries, shapes);\n\n    const images = this.parseImages(json.images, function () {\n      if (onLoad !== undefined) onLoad(object);\n    });\n\n    const textures = this.parseTextures(json.textures, images);\n    const materials = this.parseMaterials(json.materials, textures);\n\n    const object = this.parseObject(\n      json.object,\n      geometries,\n      materials,\n      textures,\n      animations\n    );\n    const skeletons = this.parseSkeletons(json.skeletons, object);\n\n    this.bindSkeletons(object, skeletons);\n\n    //\n\n    if (onLoad !== undefined) {\n      let hasImages = false;\n\n      for (const uuid in images) {\n        if (images[uuid] instanceof HTMLImageElement) {\n          hasImages = true;\n          break;\n        }\n      }\n\n      if (hasImages === false) onLoad(object);\n    }\n\n    return object;\n  }\n\n  async parseAsync(json) {\n    const animations = this.parseAnimations(json.animations);\n    const shapes = this.parseShapes(json.shapes);\n    const geometries = this.parseGeometries(json.geometries, shapes);\n\n    const images = await this.parseImagesAsync(json.images);\n\n    const textures = this.parseTextures(json.textures, images);\n    const materials = this.parseMaterials(json.materials, textures);\n\n    const object = this.parseObject(\n      json.object,\n      geometries,\n      materials,\n      textures,\n      animations\n    );\n    const skeletons = this.parseSkeletons(json.skeletons, object);\n\n    this.bindSkeletons(object, skeletons);\n\n    return object;\n  }\n\n  parseShapes(json) {\n    const shapes = {};\n\n    if (json !== undefined) {\n      for (let i = 0, l = json.length; i < l; i++) {\n        const shape = new Shape().fromJSON(json[i]);\n\n        shapes[shape.uuid] = shape;\n      }\n    }\n\n    return shapes;\n  }\n\n  parseSkeletons(json, object) {\n    const skeletons = {};\n    const bones = {};\n\n    // generate bone lookup table\n\n    object.traverse(function (child) {\n      if (child.isBone) bones[child.uuid] = child;\n    });\n\n    // create skeletons\n\n    if (json !== undefined) {\n      for (let i = 0, l = json.length; i < l; i++) {\n        const skeleton = new Skeleton().fromJSON(json[i], bones);\n\n        skeletons[skeleton.uuid] = skeleton;\n      }\n    }\n\n    return skeletons;\n  }\n\n  parseGeometries(json, shapes) {\n    const geometries = {};\n\n    if (json !== undefined) {\n      const bufferGeometryLoader = new BufferGeometryLoader();\n\n      for (let i = 0, l = json.length; i < l; i++) {\n        let geometry;\n        const data = json[i];\n\n        switch (data.type) {\n          case \"BufferGeometry\":\n          case \"InstancedBufferGeometry\":\n            geometry = bufferGeometryLoader.parse(data);\n\n            break;\n\n          case \"Geometry\":\n            console.error(\n              \"THREE.ObjectLoader: The legacy Geometry type is no longer supported.\"\n            );\n\n            break;\n\n          default:\n            if (data.type in Geometries) {\n              geometry = Geometries[data.type].fromJSON(data, shapes);\n            } else {\n              console.warn(\n                `THREE.ObjectLoader: Unsupported geometry type \"${data.type}\"`\n              );\n            }\n        }\n\n        geometry.uuid = data.uuid;\n\n        if (data.name !== undefined) geometry.name = data.name;\n        if (geometry.isBufferGeometry === true && data.userData !== undefined)\n          geometry.userData = data.userData;\n\n        geometries[data.uuid] = geometry;\n      }\n    }\n\n    return geometries;\n  }\n\n  parseMaterials(json, textures) {\n    const cache = {}; // MultiMaterial\n    const materials = {};\n\n    if (json !== undefined) {\n      const loader = new MaterialLoader();\n      loader.setTextures(textures);\n\n      for (let i = 0, l = json.length; i < l; i++) {\n        const data = json[i];\n\n        if (data.type === \"MultiMaterial\") {\n          // Deprecated\n\n          const array = [];\n\n          for (let j = 0; j < data.materials.length; j++) {\n            const material = data.materials[j];\n\n            if (cache[material.uuid] === undefined) {\n              cache[material.uuid] = loader.parse(material);\n            }\n\n            array.push(cache[material.uuid]);\n          }\n\n          materials[data.uuid] = array;\n        } else {\n          if (cache[data.uuid] === undefined) {\n            cache[data.uuid] = loader.parse(data);\n          }\n\n          materials[data.uuid] = cache[data.uuid];\n        }\n      }\n    }\n\n    return materials;\n  }\n\n  parseAnimations(json) {\n    const animations = {};\n\n    if (json !== undefined) {\n      for (let i = 0; i < json.length; i++) {\n        const data = json[i];\n\n        const clip = AnimationClip.parse(data);\n\n        animations[clip.uuid] = clip;\n      }\n    }\n\n    return animations;\n  }\n\n  parseImages(json, onLoad) {\n    const scope = this;\n    const images = {};\n\n    let loader;\n\n    function loadImage(url) {\n      scope.manager.itemStart(url);\n\n      return loader.load(\n        url,\n        function () {\n          scope.manager.itemEnd(url);\n        },\n        undefined,\n        function () {\n          scope.manager.itemError(url);\n          scope.manager.itemEnd(url);\n        }\n      );\n    }\n\n    function deserializeImage(image) {\n      if (typeof image === \"string\") {\n        const url = image;\n\n        const path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(url)\n          ? url\n          : scope.resourcePath + url;\n\n        return loadImage(path);\n      } else {\n        if (image.data) {\n          return {\n            data: getTypedArray(image.type, image.data),\n            width: image.width,\n            height: image.height,\n          };\n        } else {\n          return null;\n        }\n      }\n    }\n\n    if (json !== undefined && json.length > 0) {\n      const manager = new LoadingManager(onLoad);\n\n      loader = new ImageLoader(manager);\n      loader.setCrossOrigin(this.crossOrigin);\n\n      for (let i = 0, il = json.length; i < il; i++) {\n        const image = json[i];\n        const url = image.url;\n\n        if (Array.isArray(url)) {\n          // load array of images e.g CubeTexture\n\n          images[image.uuid] = [];\n\n          for (let j = 0, jl = url.length; j < jl; j++) {\n            const currentUrl = url[j];\n\n            const deserializedImage = deserializeImage(currentUrl);\n\n            if (deserializedImage !== null) {\n              if (deserializedImage instanceof HTMLImageElement) {\n                images[image.uuid].push(deserializedImage);\n              } else {\n                // special case: handle array of data textures for cube textures\n\n                images[image.uuid].push(\n                  new DataTexture(\n                    deserializedImage.data,\n                    deserializedImage.width,\n                    deserializedImage.height\n                  )\n                );\n              }\n            }\n          }\n        } else {\n          // load single image\n\n          const deserializedImage = deserializeImage(image.url);\n\n          if (deserializedImage !== null) {\n            images[image.uuid] = deserializedImage;\n          }\n        }\n      }\n    }\n\n    return images;\n  }\n\n  async parseImagesAsync(json) {\n    const scope = this;\n    const images = {};\n\n    let loader;\n\n    async function deserializeImage(image) {\n      if (typeof image === \"string\") {\n        const url = image;\n\n        const path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(url)\n          ? url\n          : scope.resourcePath + url;\n\n        return await loader.loadAsync(path);\n      } else {\n        if (image.data) {\n          return {\n            data: getTypedArray(image.type, image.data),\n            width: image.width,\n            height: image.height,\n          };\n        } else {\n          return null;\n        }\n      }\n    }\n\n    if (json !== undefined && json.length > 0) {\n      loader = new ImageLoader(this.manager);\n      loader.setCrossOrigin(this.crossOrigin);\n\n      for (let i = 0, il = json.length; i < il; i++) {\n        const image = json[i];\n        const url = image.url;\n\n        if (Array.isArray(url)) {\n          // load array of images e.g CubeTexture\n\n          images[image.uuid] = [];\n\n          for (let j = 0, jl = url.length; j < jl; j++) {\n            const currentUrl = url[j];\n\n            const deserializedImage = await deserializeImage(currentUrl);\n\n            if (deserializedImage !== null) {\n              if (deserializedImage instanceof HTMLImageElement) {\n                images[image.uuid].push(deserializedImage);\n              } else {\n                // special case: handle array of data textures for cube textures\n\n                images[image.uuid].push(\n                  new DataTexture(\n                    deserializedImage.data,\n                    deserializedImage.width,\n                    deserializedImage.height\n                  )\n                );\n              }\n            }\n          }\n        } else {\n          // load single image\n\n          const deserializedImage = await deserializeImage(image.url);\n\n          if (deserializedImage !== null) {\n            images[image.uuid] = deserializedImage;\n          }\n        }\n      }\n    }\n\n    return images;\n  }\n\n  parseTextures(json, images) {\n    function parseConstant(value, type) {\n      if (typeof value === \"number\") return value;\n\n      console.warn(\n        \"THREE.ObjectLoader.parseTexture: Constant should be in numeric form.\",\n        value\n      );\n\n      return type[value];\n    }\n\n    const textures = {};\n\n    if (json !== undefined) {\n      for (let i = 0, l = json.length; i < l; i++) {\n        const data = json[i];\n\n        if (data.image === undefined) {\n          console.warn(\n            'THREE.ObjectLoader: No \"image\" specified for',\n            data.uuid\n          );\n        }\n\n        if (images[data.image] === undefined) {\n          console.warn(\"THREE.ObjectLoader: Undefined image\", data.image);\n        }\n\n        let texture;\n        const image = images[data.image];\n\n        if (Array.isArray(image)) {\n          texture = new CubeTexture(image);\n\n          if (image.length === 6) texture.needsUpdate = true;\n        } else {\n          if (image && image.data) {\n            texture = new DataTexture(image.data, image.width, image.height);\n          } else {\n            texture = new Texture(image);\n          }\n\n          if (image) texture.needsUpdate = true; // textures can have undefined image data\n        }\n\n        texture.uuid = data.uuid;\n\n        if (data.name !== undefined) texture.name = data.name;\n\n        if (data.mapping !== undefined)\n          texture.mapping = parseConstant(data.mapping, TEXTURE_MAPPING);\n\n        if (data.offset !== undefined) texture.offset.fromArray(data.offset);\n        if (data.repeat !== undefined) texture.repeat.fromArray(data.repeat);\n        if (data.center !== undefined) texture.center.fromArray(data.center);\n        if (data.rotation !== undefined) texture.rotation = data.rotation;\n\n        if (data.wrap !== undefined) {\n          texture.wrapS = parseConstant(data.wrap[0], TEXTURE_WRAPPING);\n          texture.wrapT = parseConstant(data.wrap[1], TEXTURE_WRAPPING);\n        }\n\n        if (data.format !== undefined) texture.format = data.format;\n        if (data.type !== undefined) texture.type = data.type;\n        if (data.encoding !== undefined) texture.encoding = data.encoding;\n\n        if (data.minFilter !== undefined)\n          texture.minFilter = parseConstant(data.minFilter, TEXTURE_FILTER);\n        if (data.magFilter !== undefined)\n          texture.magFilter = parseConstant(data.magFilter, TEXTURE_FILTER);\n        if (data.anisotropy !== undefined) texture.anisotropy = data.anisotropy;\n\n        if (data.flipY !== undefined) texture.flipY = data.flipY;\n\n        if (data.premultiplyAlpha !== undefined)\n          texture.premultiplyAlpha = data.premultiplyAlpha;\n        if (data.unpackAlignment !== undefined)\n          texture.unpackAlignment = data.unpackAlignment;\n\n        if (data.userData !== undefined) texture.userData = data.userData;\n\n        textures[data.uuid] = texture;\n      }\n    }\n\n    return textures;\n  }\n\n  parseObject(data, geometries, materials, textures, animations) {\n    let object;\n\n    function getGeometry(name) {\n      if (geometries[name] === undefined) {\n        console.warn(\"THREE.ObjectLoader: Undefined geometry\", name);\n      }\n\n      return geometries[name];\n    }\n\n    function getMaterial(name) {\n      if (name === undefined) return undefined;\n\n      if (Array.isArray(name)) {\n        const array = [];\n\n        for (let i = 0, l = name.length; i < l; i++) {\n          const uuid = name[i];\n\n          if (materials[uuid] === undefined) {\n            console.warn(\"THREE.ObjectLoader: Undefined material\", uuid);\n          }\n\n          array.push(materials[uuid]);\n        }\n\n        return array;\n      }\n\n      if (materials[name] === undefined) {\n        console.warn(\"THREE.ObjectLoader: Undefined material\", name);\n      }\n\n      return materials[name];\n    }\n\n    function getTexture(uuid) {\n      if (textures[uuid] === undefined) {\n        console.warn(\"THREE.ObjectLoader: Undefined texture\", uuid);\n      }\n\n      return textures[uuid];\n    }\n\n    let geometry, material;\n\n    switch (data.type) {\n      case \"Scene\":\n        object = new Scene();\n\n        if (data.background !== undefined) {\n          if (Number.isInteger(data.background)) {\n            object.background = new Color(data.background);\n          } else {\n            object.background = getTexture(data.background);\n          }\n        }\n\n        if (data.environment !== undefined) {\n          object.environment = getTexture(data.environment);\n        }\n\n        if (data.fog !== undefined) {\n          if (data.fog.type === \"Fog\") {\n            object.fog = new Fog(data.fog.color, data.fog.near, data.fog.far);\n          } else if (data.fog.type === \"FogExp2\") {\n            object.fog = new FogExp2(data.fog.color, data.fog.density);\n          }\n        }\n\n        break;\n\n      case \"PerspectiveCamera\":\n        object = new PerspectiveCamera(\n          data.fov,\n          data.aspect,\n          data.near,\n          data.far\n        );\n\n        if (data.focus !== undefined) object.focus = data.focus;\n        if (data.zoom !== undefined) object.zoom = data.zoom;\n        if (data.filmGauge !== undefined) object.filmGauge = data.filmGauge;\n        if (data.filmOffset !== undefined) object.filmOffset = data.filmOffset;\n        if (data.view !== undefined) object.view = Object.assign({}, data.view);\n\n        break;\n\n      case \"OrthographicCamera\":\n        object = new OrthographicCamera(\n          data.left,\n          data.right,\n          data.top,\n          data.bottom,\n          data.near,\n          data.far\n        );\n\n        if (data.zoom !== undefined) object.zoom = data.zoom;\n        if (data.view !== undefined) object.view = Object.assign({}, data.view);\n\n        break;\n\n      case \"AmbientLight\":\n        object = new AmbientLight(data.color, data.intensity);\n\n        break;\n\n      case \"DirectionalLight\":\n        object = new DirectionalLight(data.color, data.intensity);\n\n        break;\n\n      case \"PointLight\":\n        object = new PointLight(\n          data.color,\n          data.intensity,\n          data.distance,\n          data.decay\n        );\n\n        break;\n\n      case \"RectAreaLight\":\n        object = new RectAreaLight(\n          data.color,\n          data.intensity,\n          data.width,\n          data.height\n        );\n\n        break;\n\n      case \"SpotLight\":\n        object = new SpotLight(\n          data.color,\n          data.intensity,\n          data.distance,\n          data.angle,\n          data.penumbra,\n          data.decay\n        );\n\n        break;\n\n      case \"HemisphereLight\":\n        object = new HemisphereLight(\n          data.color,\n          data.groundColor,\n          data.intensity\n        );\n\n        break;\n\n      case \"LightProbe\":\n        object = new LightProbe().fromJSON(data);\n\n        break;\n\n      case \"SkinnedMesh\":\n        geometry = getGeometry(data.geometry);\n        material = getMaterial(data.material);\n\n        object = new SkinnedMesh(geometry, material);\n\n        if (data.bindMode !== undefined) object.bindMode = data.bindMode;\n        if (data.bindMatrix !== undefined)\n          object.bindMatrix.fromArray(data.bindMatrix);\n        if (data.skeleton !== undefined) object.skeleton = data.skeleton;\n\n        break;\n\n      case \"Mesh\":\n        geometry = getGeometry(data.geometry);\n        material = getMaterial(data.material);\n\n        object = new Mesh(geometry, material);\n\n        break;\n\n      case \"InstancedMesh\":\n        geometry = getGeometry(data.geometry);\n        material = getMaterial(data.material);\n        const count = data.count;\n        const instanceMatrix = data.instanceMatrix;\n        const instanceColor = data.instanceColor;\n\n        object = new InstancedMesh(geometry, material, count);\n        object.instanceMatrix = new InstancedBufferAttribute(\n          new Float32Array(instanceMatrix.array),\n          16\n        );\n        if (instanceColor !== undefined)\n          object.instanceColor = new InstancedBufferAttribute(\n            new Float32Array(instanceColor.array),\n            instanceColor.itemSize\n          );\n\n        break;\n\n      case \"LOD\":\n        object = new LOD();\n\n        break;\n\n      case \"Line\":\n        object = new Line(\n          getGeometry(data.geometry),\n          getMaterial(data.material)\n        );\n\n        break;\n\n      case \"LineLoop\":\n        object = new LineLoop(\n          getGeometry(data.geometry),\n          getMaterial(data.material)\n        );\n\n        break;\n\n      case \"LineSegments\":\n        object = new LineSegments(\n          getGeometry(data.geometry),\n          getMaterial(data.material)\n        );\n\n        break;\n\n      case \"PointCloud\":\n      case \"Points\":\n        object = new Points(\n          getGeometry(data.geometry),\n          getMaterial(data.material)\n        );\n\n        break;\n\n      case \"Sprite\":\n        object = new Sprite(getMaterial(data.material));\n\n        break;\n\n      case \"Group\":\n        object = new Group();\n\n        break;\n\n      case \"Bone\":\n        object = new Bone();\n\n        break;\n\n      default:\n        object = new Object3D();\n    }\n\n    object.uuid = data.uuid;\n\n    if (data.name !== undefined) object.name = data.name;\n\n    if (data.matrix !== undefined) {\n      object.matrix.fromArray(data.matrix);\n\n      if (data.matrixAutoUpdate !== undefined)\n        object.matrixAutoUpdate = data.matrixAutoUpdate;\n      if (object.matrixAutoUpdate)\n        object.matrix.decompose(\n          object.position,\n          object.quaternion,\n          object.scale\n        );\n    } else {\n      if (data.position !== undefined) object.position.fromArray(data.position);\n      if (data.rotation !== undefined) object.rotation.fromArray(data.rotation);\n      if (data.quaternion !== undefined)\n        object.quaternion.fromArray(data.quaternion);\n      if (data.scale !== undefined) object.scale.fromArray(data.scale);\n    }\n\n    if (data.castShadow !== undefined) object.castShadow = data.castShadow;\n    if (data.receiveShadow !== undefined)\n      object.receiveShadow = data.receiveShadow;\n\n    if (data.shadow) {\n      if (data.shadow.bias !== undefined) object.shadow.bias = data.shadow.bias;\n      if (data.shadow.normalBias !== undefined)\n        object.shadow.normalBias = data.shadow.normalBias;\n      if (data.shadow.radius !== undefined)\n        object.shadow.radius = data.shadow.radius;\n      if (data.shadow.mapSize !== undefined)\n        object.shadow.mapSize.fromArray(data.shadow.mapSize);\n      if (data.shadow.camera !== undefined)\n        object.shadow.camera = this.parseObject(data.shadow.camera);\n    }\n\n    if (data.visible !== undefined) object.visible = data.visible;\n    if (data.frustumCulled !== undefined)\n      object.frustumCulled = data.frustumCulled;\n    if (data.renderOrder !== undefined) object.renderOrder = data.renderOrder;\n    if (data.userData !== undefined) object.userData = data.userData;\n    if (data.layers !== undefined) object.layers.mask = data.layers;\n\n    if (data.children !== undefined) {\n      const children = data.children;\n\n      for (let i = 0; i < children.length; i++) {\n        object.add(\n          this.parseObject(\n            children[i],\n            geometries,\n            materials,\n            textures,\n            animations\n          )\n        );\n      }\n    }\n\n    if (data.animations !== undefined) {\n      const objectAnimations = data.animations;\n\n      for (let i = 0; i < objectAnimations.length; i++) {\n        const uuid = objectAnimations[i];\n\n        object.animations.push(animations[uuid]);\n      }\n    }\n\n    if (data.type === \"LOD\") {\n      if (data.autoUpdate !== undefined) object.autoUpdate = data.autoUpdate;\n\n      const levels = data.levels;\n\n      for (let l = 0; l < levels.length; l++) {\n        const level = levels[l];\n        const child = object.getObjectByProperty(\"uuid\", level.object);\n\n        if (child !== undefined) {\n          object.addLevel(child, level.distance);\n        }\n      }\n    }\n\n    return object;\n  }\n\n  bindSkeletons(object, skeletons) {\n    if (Object.keys(skeletons).length === 0) return;\n\n    object.traverse(function (child) {\n      if (child.isSkinnedMesh === true && child.skeleton !== undefined) {\n        const skeleton = skeletons[child.skeleton];\n\n        if (skeleton === undefined) {\n          console.warn(\n            \"THREE.ObjectLoader: No skeleton found with UUID:\",\n            child.skeleton\n          );\n        } else {\n          child.bind(skeleton, child.bindMatrix);\n        }\n      }\n    });\n  }\n\n  /* DEPRECATED */\n\n  setTexturePath(value) {\n    console.warn(\n      \"THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().\"\n    );\n    return this.setResourcePath(value);\n  }\n}\n\nconst TEXTURE_MAPPING = {\n  UVMapping: UVMapping,\n  CubeReflectionMapping: CubeReflectionMapping,\n  CubeRefractionMapping: CubeRefractionMapping,\n  EquirectangularReflectionMapping: EquirectangularReflectionMapping,\n  EquirectangularRefractionMapping: EquirectangularRefractionMapping,\n  CubeUVReflectionMapping: CubeUVReflectionMapping,\n  CubeUVRefractionMapping: CubeUVRefractionMapping,\n};\n\nconst TEXTURE_WRAPPING = {\n  RepeatWrapping: RepeatWrapping,\n  ClampToEdgeWrapping: ClampToEdgeWrapping,\n  MirroredRepeatWrapping: MirroredRepeatWrapping,\n};\n\nconst TEXTURE_FILTER = {\n  NearestFilter: NearestFilter,\n  NearestMipmapNearestFilter: NearestMipmapNearestFilter,\n  NearestMipmapLinearFilter: NearestMipmapLinearFilter,\n  LinearFilter: LinearFilter,\n  LinearMipmapNearestFilter: LinearMipmapNearestFilter,\n  LinearMipmapLinearFilter: LinearMipmapLinearFilter,\n};\n\nclass ImageBitmapLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n\n    if (typeof createImageBitmap === \"undefined\") {\n      console.warn(\n        \"THREE.ImageBitmapLoader: createImageBitmap() not supported.\"\n      );\n    }\n\n    if (typeof fetch === \"undefined\") {\n      console.warn(\"THREE.ImageBitmapLoader: fetch() not supported.\");\n    }\n\n    this.options = { premultiplyAlpha: \"none\" };\n  }\n\n  setOptions(options) {\n    this.options = options;\n\n    return this;\n  }\n\n  load(url, onLoad, onProgress, onError) {\n    if (url === undefined) url = \"\";\n\n    if (this.path !== undefined) url = this.path + url;\n\n    url = this.manager.resolveURL(url);\n\n    const scope = this;\n\n    const cached = Cache.get(url);\n\n    if (cached !== undefined) {\n      scope.manager.itemStart(url);\n\n      setTimeout(function () {\n        if (onLoad) onLoad(cached);\n\n        scope.manager.itemEnd(url);\n      }, 0);\n\n      return cached;\n    }\n\n    const fetchOptions = {};\n    fetchOptions.credentials =\n      this.crossOrigin === \"anonymous\" ? \"same-origin\" : \"include\";\n    fetchOptions.headers = this.requestHeader;\n\n    fetch(url, fetchOptions)\n      .then(function (res) {\n        return res.blob();\n      })\n      .then(function (blob) {\n        return createImageBitmap(\n          blob,\n          Object.assign(scope.options, { colorSpaceConversion: \"none\" })\n        );\n      })\n      .then(function (imageBitmap) {\n        Cache.add(url, imageBitmap);\n\n        if (onLoad) onLoad(imageBitmap);\n\n        scope.manager.itemEnd(url);\n      })\n      .catch(function (e) {\n        if (onError) onError(e);\n\n        scope.manager.itemError(url);\n        scope.manager.itemEnd(url);\n      });\n\n    scope.manager.itemStart(url);\n  }\n}\n\nImageBitmapLoader.prototype.isImageBitmapLoader = true;\n\nlet _context;\n\nconst AudioContext = {\n  getContext: function () {\n    if (_context === undefined) {\n      _context = new (window.AudioContext || window.webkitAudioContext)();\n    }\n\n    return _context;\n  },\n\n  setContext: function (value) {\n    _context = value;\n  },\n};\n\nclass AudioLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n  }\n\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n\n    const loader = new FileLoader(this.manager);\n    loader.setResponseType(\"arraybuffer\");\n    loader.setPath(this.path);\n    loader.setRequestHeader(this.requestHeader);\n    loader.setWithCredentials(this.withCredentials);\n    loader.load(\n      url,\n      function (buffer) {\n        try {\n          // Create a copy of the buffer. The `decodeAudioData` method\n          // detaches the buffer when complete, preventing reuse.\n          const bufferCopy = buffer.slice(0);\n\n          const context = AudioContext.getContext();\n          context.decodeAudioData(bufferCopy, function (audioBuffer) {\n            onLoad(audioBuffer);\n          });\n        } catch (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n\n          scope.manager.itemError(url);\n        }\n      },\n      onProgress,\n      onError\n    );\n  }\n}\n\nclass HemisphereLightProbe extends LightProbe {\n  constructor(skyColor, groundColor, intensity = 1) {\n    super(undefined, intensity);\n\n    const color1 = new Color().set(skyColor);\n    const color2 = new Color().set(groundColor);\n\n    const sky = new Vector3(color1.r, color1.g, color1.b);\n    const ground = new Vector3(color2.r, color2.g, color2.b);\n\n    // without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n    const c0 = Math.sqrt(Math.PI);\n    const c1 = c0 * Math.sqrt(0.75);\n\n    this.sh.coefficients[0].copy(sky).add(ground).multiplyScalar(c0);\n    this.sh.coefficients[1].copy(sky).sub(ground).multiplyScalar(c1);\n  }\n}\n\nHemisphereLightProbe.prototype.isHemisphereLightProbe = true;\n\nclass AmbientLightProbe extends LightProbe {\n  constructor(color, intensity = 1) {\n    super(undefined, intensity);\n\n    const color1 = new Color().set(color);\n\n    // without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n    this.sh.coefficients[0]\n      .set(color1.r, color1.g, color1.b)\n      .multiplyScalar(2 * Math.sqrt(Math.PI));\n  }\n}\n\nAmbientLightProbe.prototype.isAmbientLightProbe = true;\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n  constructor() {\n    this.type = \"StereoCamera\";\n\n    this.aspect = 1;\n\n    this.eyeSep = 0.064;\n\n    this.cameraL = new PerspectiveCamera();\n    this.cameraL.layers.enable(1);\n    this.cameraL.matrixAutoUpdate = false;\n\n    this.cameraR = new PerspectiveCamera();\n    this.cameraR.layers.enable(2);\n    this.cameraR.matrixAutoUpdate = false;\n\n    this._cache = {\n      focus: null,\n      fov: null,\n      aspect: null,\n      near: null,\n      far: null,\n      zoom: null,\n      eyeSep: null,\n    };\n  }\n\n  update(camera) {\n    const cache = this._cache;\n\n    const needsUpdate =\n      cache.focus !== camera.focus ||\n      cache.fov !== camera.fov ||\n      cache.aspect !== camera.aspect * this.aspect ||\n      cache.near !== camera.near ||\n      cache.far !== camera.far ||\n      cache.zoom !== camera.zoom ||\n      cache.eyeSep !== this.eyeSep;\n\n    if (needsUpdate) {\n      cache.focus = camera.focus;\n      cache.fov = camera.fov;\n      cache.aspect = camera.aspect * this.aspect;\n      cache.near = camera.near;\n      cache.far = camera.far;\n      cache.zoom = camera.zoom;\n      cache.eyeSep = this.eyeSep;\n\n      // Off-axis stereoscopic effect based on\n      // http://paulbourke.net/stereographics/stereorender/\n\n      const projectionMatrix = camera.projectionMatrix.clone();\n      const eyeSepHalf = cache.eyeSep / 2;\n      const eyeSepOnProjection = (eyeSepHalf * cache.near) / cache.focus;\n      const ymax =\n        (cache.near * Math.tan(DEG2RAD * cache.fov * 0.5)) / cache.zoom;\n      let xmin, xmax;\n\n      // translate xOffset\n\n      _eyeLeft.elements[12] = -eyeSepHalf;\n      _eyeRight.elements[12] = eyeSepHalf;\n\n      // for left eye\n\n      xmin = -ymax * cache.aspect + eyeSepOnProjection;\n      xmax = ymax * cache.aspect + eyeSepOnProjection;\n\n      projectionMatrix.elements[0] = (2 * cache.near) / (xmax - xmin);\n      projectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\n\n      this.cameraL.projectionMatrix.copy(projectionMatrix);\n\n      // for right eye\n\n      xmin = -ymax * cache.aspect - eyeSepOnProjection;\n      xmax = ymax * cache.aspect - eyeSepOnProjection;\n\n      projectionMatrix.elements[0] = (2 * cache.near) / (xmax - xmin);\n      projectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\n\n      this.cameraR.projectionMatrix.copy(projectionMatrix);\n    }\n\n    this.cameraL.matrixWorld.copy(camera.matrixWorld).multiply(_eyeLeft);\n    this.cameraR.matrixWorld.copy(camera.matrixWorld).multiply(_eyeRight);\n  }\n}\n\nclass Clock {\n  constructor(autoStart = true) {\n    this.autoStart = autoStart;\n\n    this.startTime = 0;\n    this.oldTime = 0;\n    this.elapsedTime = 0;\n\n    this.running = false;\n  }\n\n  start() {\n    this.startTime = now();\n\n    this.oldTime = this.startTime;\n    this.elapsedTime = 0;\n    this.running = true;\n  }\n\n  stop() {\n    this.getElapsedTime();\n    this.running = false;\n    this.autoStart = false;\n  }\n\n  getElapsedTime() {\n    this.getDelta();\n    return this.elapsedTime;\n  }\n\n  getDelta() {\n    let diff = 0;\n\n    if (this.autoStart && !this.running) {\n      this.start();\n      return 0;\n    }\n\n    if (this.running) {\n      const newTime = now();\n\n      diff = (newTime - this.oldTime) / 1000;\n      this.oldTime = newTime;\n\n      this.elapsedTime += diff;\n    }\n\n    return diff;\n  }\n}\n\nfunction now() {\n  return (typeof performance === \"undefined\" ? Date : performance).now(); // see #10732\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n  constructor() {\n    super();\n\n    this.type = \"AudioListener\";\n\n    this.context = AudioContext.getContext();\n\n    this.gain = this.context.createGain();\n    this.gain.connect(this.context.destination);\n\n    this.filter = null;\n\n    this.timeDelta = 0;\n\n    // private\n\n    this._clock = new Clock();\n  }\n\n  getInput() {\n    return this.gain;\n  }\n\n  removeFilter() {\n    if (this.filter !== null) {\n      this.gain.disconnect(this.filter);\n      this.filter.disconnect(this.context.destination);\n      this.gain.connect(this.context.destination);\n      this.filter = null;\n    }\n\n    return this;\n  }\n\n  getFilter() {\n    return this.filter;\n  }\n\n  setFilter(value) {\n    if (this.filter !== null) {\n      this.gain.disconnect(this.filter);\n      this.filter.disconnect(this.context.destination);\n    } else {\n      this.gain.disconnect(this.context.destination);\n    }\n\n    this.filter = value;\n    this.gain.connect(this.filter);\n    this.filter.connect(this.context.destination);\n\n    return this;\n  }\n\n  getMasterVolume() {\n    return this.gain.gain.value;\n  }\n\n  setMasterVolume(value) {\n    this.gain.gain.setTargetAtTime(value, this.context.currentTime, 0.01);\n\n    return this;\n  }\n\n  updateMatrixWorld(force) {\n    super.updateMatrixWorld(force);\n\n    const listener = this.context.listener;\n    const up = this.up;\n\n    this.timeDelta = this._clock.getDelta();\n\n    this.matrixWorld.decompose(_position$1, _quaternion$1, _scale$1);\n\n    _orientation$1.set(0, 0, -1).applyQuaternion(_quaternion$1);\n\n    if (listener.positionX) {\n      // code path for Chrome (see #14393)\n\n      const endTime = this.context.currentTime + this.timeDelta;\n\n      listener.positionX.linearRampToValueAtTime(_position$1.x, endTime);\n      listener.positionY.linearRampToValueAtTime(_position$1.y, endTime);\n      listener.positionZ.linearRampToValueAtTime(_position$1.z, endTime);\n      listener.forwardX.linearRampToValueAtTime(_orientation$1.x, endTime);\n      listener.forwardY.linearRampToValueAtTime(_orientation$1.y, endTime);\n      listener.forwardZ.linearRampToValueAtTime(_orientation$1.z, endTime);\n      listener.upX.linearRampToValueAtTime(up.x, endTime);\n      listener.upY.linearRampToValueAtTime(up.y, endTime);\n      listener.upZ.linearRampToValueAtTime(up.z, endTime);\n    } else {\n      listener.setPosition(_position$1.x, _position$1.y, _position$1.z);\n      listener.setOrientation(\n        _orientation$1.x,\n        _orientation$1.y,\n        _orientation$1.z,\n        up.x,\n        up.y,\n        up.z\n      );\n    }\n  }\n}\n\nclass Audio extends Object3D {\n  constructor(listener) {\n    super();\n\n    this.type = \"Audio\";\n\n    this.listener = listener;\n    this.context = listener.context;\n\n    this.gain = this.context.createGain();\n    this.gain.connect(listener.getInput());\n\n    this.autoplay = false;\n\n    this.buffer = null;\n    this.detune = 0;\n    this.loop = false;\n    this.loopStart = 0;\n    this.loopEnd = 0;\n    this.offset = 0;\n    this.duration = undefined;\n    this.playbackRate = 1;\n    this.isPlaying = false;\n    this.hasPlaybackControl = true;\n    this.source = null;\n    this.sourceType = \"empty\";\n\n    this._startedAt = 0;\n    this._progress = 0;\n    this._connected = false;\n\n    this.filters = [];\n  }\n\n  getOutput() {\n    return this.gain;\n  }\n\n  setNodeSource(audioNode) {\n    this.hasPlaybackControl = false;\n    this.sourceType = \"audioNode\";\n    this.source = audioNode;\n    this.connect();\n\n    return this;\n  }\n\n  setMediaElementSource(mediaElement) {\n    this.hasPlaybackControl = false;\n    this.sourceType = \"mediaNode\";\n    this.source = this.context.createMediaElementSource(mediaElement);\n    this.connect();\n\n    return this;\n  }\n\n  setMediaStreamSource(mediaStream) {\n    this.hasPlaybackControl = false;\n    this.sourceType = \"mediaStreamNode\";\n    this.source = this.context.createMediaStreamSource(mediaStream);\n    this.connect();\n\n    return this;\n  }\n\n  setBuffer(audioBuffer) {\n    this.buffer = audioBuffer;\n    this.sourceType = \"buffer\";\n\n    if (this.autoplay) this.play();\n\n    return this;\n  }\n\n  play(delay = 0) {\n    if (this.isPlaying === true) {\n      console.warn(\"THREE.Audio: Audio is already playing.\");\n      return;\n    }\n\n    if (this.hasPlaybackControl === false) {\n      console.warn(\"THREE.Audio: this Audio has no playback control.\");\n      return;\n    }\n\n    this._startedAt = this.context.currentTime + delay;\n\n    const source = this.context.createBufferSource();\n    source.buffer = this.buffer;\n    source.loop = this.loop;\n    source.loopStart = this.loopStart;\n    source.loopEnd = this.loopEnd;\n    source.onended = this.onEnded.bind(this);\n    source.start(this._startedAt, this._progress + this.offset, this.duration);\n\n    this.isPlaying = true;\n\n    this.source = source;\n\n    this.setDetune(this.detune);\n    this.setPlaybackRate(this.playbackRate);\n\n    return this.connect();\n  }\n\n  pause() {\n    if (this.hasPlaybackControl === false) {\n      console.warn(\"THREE.Audio: this Audio has no playback control.\");\n      return;\n    }\n\n    if (this.isPlaying === true) {\n      // update current progress\n\n      this._progress +=\n        Math.max(this.context.currentTime - this._startedAt, 0) *\n        this.playbackRate;\n\n      if (this.loop === true) {\n        // ensure _progress does not exceed duration with looped audios\n\n        this._progress =\n          this._progress % (this.duration || this.buffer.duration);\n      }\n\n      this.source.stop();\n      this.source.onended = null;\n\n      this.isPlaying = false;\n    }\n\n    return this;\n  }\n\n  stop() {\n    if (this.hasPlaybackControl === false) {\n      console.warn(\"THREE.Audio: this Audio has no playback control.\");\n      return;\n    }\n\n    this._progress = 0;\n\n    this.source.stop();\n    this.source.onended = null;\n    this.isPlaying = false;\n\n    return this;\n  }\n\n  connect() {\n    if (this.filters.length > 0) {\n      this.source.connect(this.filters[0]);\n\n      for (let i = 1, l = this.filters.length; i < l; i++) {\n        this.filters[i - 1].connect(this.filters[i]);\n      }\n\n      this.filters[this.filters.length - 1].connect(this.getOutput());\n    } else {\n      this.source.connect(this.getOutput());\n    }\n\n    this._connected = true;\n\n    return this;\n  }\n\n  disconnect() {\n    if (this.filters.length > 0) {\n      this.source.disconnect(this.filters[0]);\n\n      for (let i = 1, l = this.filters.length; i < l; i++) {\n        this.filters[i - 1].disconnect(this.filters[i]);\n      }\n\n      this.filters[this.filters.length - 1].disconnect(this.getOutput());\n    } else {\n      this.source.disconnect(this.getOutput());\n    }\n\n    this._connected = false;\n\n    return this;\n  }\n\n  getFilters() {\n    return this.filters;\n  }\n\n  setFilters(value) {\n    if (!value) value = [];\n\n    if (this._connected === true) {\n      this.disconnect();\n      this.filters = value.slice();\n      this.connect();\n    } else {\n      this.filters = value.slice();\n    }\n\n    return this;\n  }\n\n  setDetune(value) {\n    this.detune = value;\n\n    if (this.source.detune === undefined) return; // only set detune when available\n\n    if (this.isPlaying === true) {\n      this.source.detune.setTargetAtTime(\n        this.detune,\n        this.context.currentTime,\n        0.01\n      );\n    }\n\n    return this;\n  }\n\n  getDetune() {\n    return this.detune;\n  }\n\n  getFilter() {\n    return this.getFilters()[0];\n  }\n\n  setFilter(filter) {\n    return this.setFilters(filter ? [filter] : []);\n  }\n\n  setPlaybackRate(value) {\n    if (this.hasPlaybackControl === false) {\n      console.warn(\"THREE.Audio: this Audio has no playback control.\");\n      return;\n    }\n\n    this.playbackRate = value;\n\n    if (this.isPlaying === true) {\n      this.source.playbackRate.setTargetAtTime(\n        this.playbackRate,\n        this.context.currentTime,\n        0.01\n      );\n    }\n\n    return this;\n  }\n\n  getPlaybackRate() {\n    return this.playbackRate;\n  }\n\n  onEnded() {\n    this.isPlaying = false;\n  }\n\n  getLoop() {\n    if (this.hasPlaybackControl === false) {\n      console.warn(\"THREE.Audio: this Audio has no playback control.\");\n      return false;\n    }\n\n    return this.loop;\n  }\n\n  setLoop(value) {\n    if (this.hasPlaybackControl === false) {\n      console.warn(\"THREE.Audio: this Audio has no playback control.\");\n      return;\n    }\n\n    this.loop = value;\n\n    if (this.isPlaying === true) {\n      this.source.loop = this.loop;\n    }\n\n    return this;\n  }\n\n  setLoopStart(value) {\n    this.loopStart = value;\n\n    return this;\n  }\n\n  setLoopEnd(value) {\n    this.loopEnd = value;\n\n    return this;\n  }\n\n  getVolume() {\n    return this.gain.gain.value;\n  }\n\n  setVolume(value) {\n    this.gain.gain.setTargetAtTime(value, this.context.currentTime, 0.01);\n\n    return this;\n  }\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n  constructor(listener) {\n    super(listener);\n\n    this.panner = this.context.createPanner();\n    this.panner.panningModel = \"HRTF\";\n    this.panner.connect(this.gain);\n  }\n\n  getOutput() {\n    return this.panner;\n  }\n\n  getRefDistance() {\n    return this.panner.refDistance;\n  }\n\n  setRefDistance(value) {\n    this.panner.refDistance = value;\n\n    return this;\n  }\n\n  getRolloffFactor() {\n    return this.panner.rolloffFactor;\n  }\n\n  setRolloffFactor(value) {\n    this.panner.rolloffFactor = value;\n\n    return this;\n  }\n\n  getDistanceModel() {\n    return this.panner.distanceModel;\n  }\n\n  setDistanceModel(value) {\n    this.panner.distanceModel = value;\n\n    return this;\n  }\n\n  getMaxDistance() {\n    return this.panner.maxDistance;\n  }\n\n  setMaxDistance(value) {\n    this.panner.maxDistance = value;\n\n    return this;\n  }\n\n  setDirectionalCone(coneInnerAngle, coneOuterAngle, coneOuterGain) {\n    this.panner.coneInnerAngle = coneInnerAngle;\n    this.panner.coneOuterAngle = coneOuterAngle;\n    this.panner.coneOuterGain = coneOuterGain;\n\n    return this;\n  }\n\n  updateMatrixWorld(force) {\n    super.updateMatrixWorld(force);\n\n    if (this.hasPlaybackControl === true && this.isPlaying === false) return;\n\n    this.matrixWorld.decompose(_position, _quaternion, _scale);\n\n    _orientation.set(0, 0, 1).applyQuaternion(_quaternion);\n\n    const panner = this.panner;\n\n    if (panner.positionX) {\n      // code path for Chrome and Firefox (see #14393)\n\n      const endTime = this.context.currentTime + this.listener.timeDelta;\n\n      panner.positionX.linearRampToValueAtTime(_position.x, endTime);\n      panner.positionY.linearRampToValueAtTime(_position.y, endTime);\n      panner.positionZ.linearRampToValueAtTime(_position.z, endTime);\n      panner.orientationX.linearRampToValueAtTime(_orientation.x, endTime);\n      panner.orientationY.linearRampToValueAtTime(_orientation.y, endTime);\n      panner.orientationZ.linearRampToValueAtTime(_orientation.z, endTime);\n    } else {\n      panner.setPosition(_position.x, _position.y, _position.z);\n      panner.setOrientation(_orientation.x, _orientation.y, _orientation.z);\n    }\n  }\n}\n\nclass AudioAnalyser {\n  constructor(audio, fftSize = 2048) {\n    this.analyser = audio.context.createAnalyser();\n    this.analyser.fftSize = fftSize;\n\n    this.data = new Uint8Array(this.analyser.frequencyBinCount);\n\n    audio.getOutput().connect(this.analyser);\n  }\n\n  getFrequencyData() {\n    this.analyser.getByteFrequencyData(this.data);\n\n    return this.data;\n  }\n\n  getAverageFrequency() {\n    let value = 0;\n    const data = this.getFrequencyData();\n\n    for (let i = 0; i < data.length; i++) {\n      value += data[i];\n    }\n\n    return value / data.length;\n  }\n}\n\nclass PropertyMixer {\n  constructor(binding, typeName, valueSize) {\n    this.binding = binding;\n    this.valueSize = valueSize;\n\n    let mixFunction, mixFunctionAdditive, setIdentity;\n\n    // buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n    //\n    // interpolators can use .buffer as their .result\n    // the data then goes to 'incoming'\n    //\n    // 'accu0' and 'accu1' are used frame-interleaved for\n    // the cumulative result and are compared to detect\n    // changes\n    //\n    // 'orig' stores the original state of the property\n    //\n    // 'add' is used for additive cumulative results\n    //\n    // 'work' is optional and is only present for quaternion types. It is used\n    // to store intermediate quaternion multiplication results\n\n    switch (typeName) {\n      case \"quaternion\":\n        mixFunction = this._slerp;\n        mixFunctionAdditive = this._slerpAdditive;\n        setIdentity = this._setAdditiveIdentityQuaternion;\n\n        this.buffer = new Float64Array(valueSize * 6);\n        this._workIndex = 5;\n        break;\n\n      case \"string\":\n      case \"bool\":\n        mixFunction = this._select;\n\n        // Use the regular mix function and for additive on these types,\n        // additive is not relevant for non-numeric types\n        mixFunctionAdditive = this._select;\n\n        setIdentity = this._setAdditiveIdentityOther;\n\n        this.buffer = new Array(valueSize * 5);\n        break;\n\n      default:\n        mixFunction = this._lerp;\n        mixFunctionAdditive = this._lerpAdditive;\n        setIdentity = this._setAdditiveIdentityNumeric;\n\n        this.buffer = new Float64Array(valueSize * 5);\n    }\n\n    this._mixBufferRegion = mixFunction;\n    this._mixBufferRegionAdditive = mixFunctionAdditive;\n    this._setIdentity = setIdentity;\n    this._origIndex = 3;\n    this._addIndex = 4;\n\n    this.cumulativeWeight = 0;\n    this.cumulativeWeightAdditive = 0;\n\n    this.useCount = 0;\n    this.referenceCount = 0;\n  }\n\n  // accumulate data in the 'incoming' region into 'accu<i>'\n  accumulate(accuIndex, weight) {\n    // note: happily accumulating nothing when weight = 0, the caller knows\n    // the weight and shouldn't have made the call in the first place\n\n    const buffer = this.buffer,\n      stride = this.valueSize,\n      offset = accuIndex * stride + stride;\n\n    let currentWeight = this.cumulativeWeight;\n\n    if (currentWeight === 0) {\n      // accuN := incoming * weight\n\n      for (let i = 0; i !== stride; ++i) {\n        buffer[offset + i] = buffer[i];\n      }\n\n      currentWeight = weight;\n    } else {\n      // accuN := accuN + incoming * weight\n\n      currentWeight += weight;\n      const mix = weight / currentWeight;\n      this._mixBufferRegion(buffer, offset, 0, mix, stride);\n    }\n\n    this.cumulativeWeight = currentWeight;\n  }\n\n  // accumulate data in the 'incoming' region into 'add'\n  accumulateAdditive(weight) {\n    const buffer = this.buffer,\n      stride = this.valueSize,\n      offset = stride * this._addIndex;\n\n    if (this.cumulativeWeightAdditive === 0) {\n      // add = identity\n\n      this._setIdentity();\n    }\n\n    // add := add + incoming * weight\n\n    this._mixBufferRegionAdditive(buffer, offset, 0, weight, stride);\n    this.cumulativeWeightAdditive += weight;\n  }\n\n  // apply the state of 'accu<i>' to the binding when accus differ\n  apply(accuIndex) {\n    const stride = this.valueSize,\n      buffer = this.buffer,\n      offset = accuIndex * stride + stride,\n      weight = this.cumulativeWeight,\n      weightAdditive = this.cumulativeWeightAdditive,\n      binding = this.binding;\n\n    this.cumulativeWeight = 0;\n    this.cumulativeWeightAdditive = 0;\n\n    if (weight < 1) {\n      // accuN := accuN + original * ( 1 - cumulativeWeight )\n\n      const originalValueOffset = stride * this._origIndex;\n\n      this._mixBufferRegion(\n        buffer,\n        offset,\n        originalValueOffset,\n        1 - weight,\n        stride\n      );\n    }\n\n    if (weightAdditive > 0) {\n      // accuN := accuN + additive accuN\n\n      this._mixBufferRegionAdditive(\n        buffer,\n        offset,\n        this._addIndex * stride,\n        1,\n        stride\n      );\n    }\n\n    for (let i = stride, e = stride + stride; i !== e; ++i) {\n      if (buffer[i] !== buffer[i + stride]) {\n        // value has changed -> update scene graph\n\n        binding.setValue(buffer, offset);\n        break;\n      }\n    }\n  }\n\n  // remember the state of the bound property and copy it to both accus\n  saveOriginalState() {\n    const binding = this.binding;\n\n    const buffer = this.buffer,\n      stride = this.valueSize,\n      originalValueOffset = stride * this._origIndex;\n\n    binding.getValue(buffer, originalValueOffset);\n\n    // accu[0..1] := orig -- initially detect changes against the original\n    for (let i = stride, e = originalValueOffset; i !== e; ++i) {\n      buffer[i] = buffer[originalValueOffset + (i % stride)];\n    }\n\n    // Add to identity for additive\n    this._setIdentity();\n\n    this.cumulativeWeight = 0;\n    this.cumulativeWeightAdditive = 0;\n  }\n\n  // apply the state previously taken via 'saveOriginalState' to the binding\n  restoreOriginalState() {\n    const originalValueOffset = this.valueSize * 3;\n    this.binding.setValue(this.buffer, originalValueOffset);\n  }\n\n  _setAdditiveIdentityNumeric() {\n    const startIndex = this._addIndex * this.valueSize;\n    const endIndex = startIndex + this.valueSize;\n\n    for (let i = startIndex; i < endIndex; i++) {\n      this.buffer[i] = 0;\n    }\n  }\n\n  _setAdditiveIdentityQuaternion() {\n    this._setAdditiveIdentityNumeric();\n    this.buffer[this._addIndex * this.valueSize + 3] = 1;\n  }\n\n  _setAdditiveIdentityOther() {\n    const startIndex = this._origIndex * this.valueSize;\n    const targetIndex = this._addIndex * this.valueSize;\n\n    for (let i = 0; i < this.valueSize; i++) {\n      this.buffer[targetIndex + i] = this.buffer[startIndex + i];\n    }\n  }\n\n  // mix functions\n\n  _select(buffer, dstOffset, srcOffset, t, stride) {\n    if (t >= 0.5) {\n      for (let i = 0; i !== stride; ++i) {\n        buffer[dstOffset + i] = buffer[srcOffset + i];\n      }\n    }\n  }\n\n  _slerp(buffer, dstOffset, srcOffset, t) {\n    Quaternion.slerpFlat(\n      buffer,\n      dstOffset,\n      buffer,\n      dstOffset,\n      buffer,\n      srcOffset,\n      t\n    );\n  }\n\n  _slerpAdditive(buffer, dstOffset, srcOffset, t, stride) {\n    const workOffset = this._workIndex * stride;\n\n    // Store result in intermediate buffer offset\n    Quaternion.multiplyQuaternionsFlat(\n      buffer,\n      workOffset,\n      buffer,\n      dstOffset,\n      buffer,\n      srcOffset\n    );\n\n    // Slerp to the intermediate result\n    Quaternion.slerpFlat(\n      buffer,\n      dstOffset,\n      buffer,\n      dstOffset,\n      buffer,\n      workOffset,\n      t\n    );\n  }\n\n  _lerp(buffer, dstOffset, srcOffset, t, stride) {\n    const s = 1 - t;\n\n    for (let i = 0; i !== stride; ++i) {\n      const j = dstOffset + i;\n\n      buffer[j] = buffer[j] * s + buffer[srcOffset + i] * t;\n    }\n  }\n\n  _lerpAdditive(buffer, dstOffset, srcOffset, t, stride) {\n    for (let i = 0; i !== stride; ++i) {\n      const j = dstOffset + i;\n\n      buffer[j] = buffer[j] + buffer[srcOffset + i] * t;\n    }\n  }\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = \"\\\\[\\\\]\\\\.:\\\\/\";\nconst _reservedRe = new RegExp(\"[\" + _RESERVED_CHARS_RE + \"]\", \"g\");\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = \"[^\" + _RESERVED_CHARS_RE + \"]\";\nconst _wordCharOrDot = \"[^\" + _RESERVED_CHARS_RE.replace(\"\\\\.\", \"\") + \"]\";\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /((?:WC+[\\/:])*)/.source.replace(\"WC\", _wordChar);\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /(WCOD+)?/.source.replace(\"WCOD\", _wordCharOrDot);\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace(\"WC\", _wordChar);\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace(\"WC\", _wordChar);\n\nconst _trackRe = new RegExp(\n  \"\" + \"^\" + _directoryRe + _nodeRe + _objectRe + _propertyRe + \"$\"\n);\n\nconst _supportedObjectNames = [\"material\", \"materials\", \"bones\"];\n\nclass Composite {\n  constructor(targetGroup, path, optionalParsedPath) {\n    const parsedPath =\n      optionalParsedPath || PropertyBinding.parseTrackName(path);\n\n    this._targetGroup = targetGroup;\n    this._bindings = targetGroup.subscribe_(path, parsedPath);\n  }\n\n  getValue(array, offset) {\n    this.bind(); // bind all binding\n\n    const firstValidIndex = this._targetGroup.nCachedObjects_,\n      binding = this._bindings[firstValidIndex];\n\n    // and only call .getValue on the first\n    if (binding !== undefined) binding.getValue(array, offset);\n  }\n\n  setValue(array, offset) {\n    const bindings = this._bindings;\n\n    for (\n      let i = this._targetGroup.nCachedObjects_, n = bindings.length;\n      i !== n;\n      ++i\n    ) {\n      bindings[i].setValue(array, offset);\n    }\n  }\n\n  bind() {\n    const bindings = this._bindings;\n\n    for (\n      let i = this._targetGroup.nCachedObjects_, n = bindings.length;\n      i !== n;\n      ++i\n    ) {\n      bindings[i].bind();\n    }\n  }\n\n  unbind() {\n    const bindings = this._bindings;\n\n    for (\n      let i = this._targetGroup.nCachedObjects_, n = bindings.length;\n      i !== n;\n      ++i\n    ) {\n      bindings[i].unbind();\n    }\n  }\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n  constructor(rootNode, path, parsedPath) {\n    this.path = path;\n    this.parsedPath = parsedPath || PropertyBinding.parseTrackName(path);\n\n    this.node =\n      PropertyBinding.findNode(rootNode, this.parsedPath.nodeName) || rootNode;\n\n    this.rootNode = rootNode;\n\n    // initial state of these methods that calls 'bind'\n    this.getValue = this._getValue_unbound;\n    this.setValue = this._setValue_unbound;\n  }\n\n  static create(root, path, parsedPath) {\n    if (!(root && root.isAnimationObjectGroup)) {\n      return new PropertyBinding(root, path, parsedPath);\n    } else {\n      return new PropertyBinding.Composite(root, path, parsedPath);\n    }\n  }\n\n  /**\n   * Replaces spaces with underscores and removes unsupported characters from\n   * node names, to ensure compatibility with parseTrackName().\n   *\n   * @param {string} name Node name to be sanitized.\n   * @return {string}\n   */\n  static sanitizeNodeName(name) {\n    return name.replace(/\\s/g, \"_\").replace(_reservedRe, \"\");\n  }\n\n  static parseTrackName(trackName) {\n    const matches = _trackRe.exec(trackName);\n\n    if (!matches) {\n      throw new Error(\"PropertyBinding: Cannot parse trackName: \" + trackName);\n    }\n\n    const results = {\n      // directoryName: matches[ 1 ], // (tschw) currently unused\n      nodeName: matches[2],\n      objectName: matches[3],\n      objectIndex: matches[4],\n      propertyName: matches[5], // required\n      propertyIndex: matches[6],\n    };\n\n    const lastDot = results.nodeName && results.nodeName.lastIndexOf(\".\");\n\n    if (lastDot !== undefined && lastDot !== -1) {\n      const objectName = results.nodeName.substring(lastDot + 1);\n\n      // Object names must be checked against an allowlist. Otherwise, there\n      // is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n      // 'bar' could be the objectName, or part of a nodeName (which can\n      // include '.' characters).\n      if (_supportedObjectNames.indexOf(objectName) !== -1) {\n        results.nodeName = results.nodeName.substring(0, lastDot);\n        results.objectName = objectName;\n      }\n    }\n\n    if (results.propertyName === null || results.propertyName.length === 0) {\n      throw new Error(\n        \"PropertyBinding: can not parse propertyName from trackName: \" +\n          trackName\n      );\n    }\n\n    return results;\n  }\n\n  static findNode(root, nodeName) {\n    if (\n      !nodeName ||\n      nodeName === \"\" ||\n      nodeName === \".\" ||\n      nodeName === -1 ||\n      nodeName === root.name ||\n      nodeName === root.uuid\n    ) {\n      return root;\n    }\n\n    // search into skeleton bones.\n    if (root.skeleton) {\n      const bone = root.skeleton.getBoneByName(nodeName);\n\n      if (bone !== undefined) {\n        return bone;\n      }\n    }\n\n    // search into node subtree.\n    if (root.children) {\n      const searchNodeSubtree = function (children) {\n        for (let i = 0; i < children.length; i++) {\n          const childNode = children[i];\n\n          if (childNode.name === nodeName || childNode.uuid === nodeName) {\n            return childNode;\n          }\n\n          const result = searchNodeSubtree(childNode.children);\n\n          if (result) return result;\n        }\n\n        return null;\n      };\n\n      const subTreeNode = searchNodeSubtree(root.children);\n\n      if (subTreeNode) {\n        return subTreeNode;\n      }\n    }\n\n    return null;\n  }\n\n  // these are used to \"bind\" a nonexistent property\n  _getValue_unavailable() {}\n  _setValue_unavailable() {}\n\n  // Getters\n\n  _getValue_direct(buffer, offset) {\n    buffer[offset] = this.targetObject[this.propertyName];\n  }\n\n  _getValue_array(buffer, offset) {\n    const source = this.resolvedProperty;\n\n    for (let i = 0, n = source.length; i !== n; ++i) {\n      buffer[offset++] = source[i];\n    }\n  }\n\n  _getValue_arrayElement(buffer, offset) {\n    buffer[offset] = this.resolvedProperty[this.propertyIndex];\n  }\n\n  _getValue_toArray(buffer, offset) {\n    this.resolvedProperty.toArray(buffer, offset);\n  }\n\n  // Direct\n\n  _setValue_direct(buffer, offset) {\n    this.targetObject[this.propertyName] = buffer[offset];\n  }\n\n  _setValue_direct_setNeedsUpdate(buffer, offset) {\n    this.targetObject[this.propertyName] = buffer[offset];\n    this.targetObject.needsUpdate = true;\n  }\n\n  _setValue_direct_setMatrixWorldNeedsUpdate(buffer, offset) {\n    this.targetObject[this.propertyName] = buffer[offset];\n    this.targetObject.matrixWorldNeedsUpdate = true;\n  }\n\n  // EntireArray\n\n  _setValue_array(buffer, offset) {\n    const dest = this.resolvedProperty;\n\n    for (let i = 0, n = dest.length; i !== n; ++i) {\n      dest[i] = buffer[offset++];\n    }\n  }\n\n  _setValue_array_setNeedsUpdate(buffer, offset) {\n    const dest = this.resolvedProperty;\n\n    for (let i = 0, n = dest.length; i !== n; ++i) {\n      dest[i] = buffer[offset++];\n    }\n\n    this.targetObject.needsUpdate = true;\n  }\n\n  _setValue_array_setMatrixWorldNeedsUpdate(buffer, offset) {\n    const dest = this.resolvedProperty;\n\n    for (let i = 0, n = dest.length; i !== n; ++i) {\n      dest[i] = buffer[offset++];\n    }\n\n    this.targetObject.matrixWorldNeedsUpdate = true;\n  }\n\n  // ArrayElement\n\n  _setValue_arrayElement(buffer, offset) {\n    this.resolvedProperty[this.propertyIndex] = buffer[offset];\n  }\n\n  _setValue_arrayElement_setNeedsUpdate(buffer, offset) {\n    this.resolvedProperty[this.propertyIndex] = buffer[offset];\n    this.targetObject.needsUpdate = true;\n  }\n\n  _setValue_arrayElement_setMatrixWorldNeedsUpdate(buffer, offset) {\n    this.resolvedProperty[this.propertyIndex] = buffer[offset];\n    this.targetObject.matrixWorldNeedsUpdate = true;\n  }\n\n  // HasToFromArray\n\n  _setValue_fromArray(buffer, offset) {\n    this.resolvedProperty.fromArray(buffer, offset);\n  }\n\n  _setValue_fromArray_setNeedsUpdate(buffer, offset) {\n    this.resolvedProperty.fromArray(buffer, offset);\n    this.targetObject.needsUpdate = true;\n  }\n\n  _setValue_fromArray_setMatrixWorldNeedsUpdate(buffer, offset) {\n    this.resolvedProperty.fromArray(buffer, offset);\n    this.targetObject.matrixWorldNeedsUpdate = true;\n  }\n\n  _getValue_unbound(targetArray, offset) {\n    this.bind();\n    this.getValue(targetArray, offset);\n  }\n\n  _setValue_unbound(sourceArray, offset) {\n    this.bind();\n    this.setValue(sourceArray, offset);\n  }\n\n  // create getter / setter pair for a property in the scene graph\n  bind() {\n    let targetObject = this.node;\n    const parsedPath = this.parsedPath;\n\n    const objectName = parsedPath.objectName;\n    const propertyName = parsedPath.propertyName;\n    let propertyIndex = parsedPath.propertyIndex;\n\n    if (!targetObject) {\n      targetObject =\n        PropertyBinding.findNode(this.rootNode, parsedPath.nodeName) ||\n        this.rootNode;\n\n      this.node = targetObject;\n    }\n\n    // set fail state so we can just 'return' on error\n    this.getValue = this._getValue_unavailable;\n    this.setValue = this._setValue_unavailable;\n\n    // ensure there is a value node\n    if (!targetObject) {\n      console.error(\n        \"THREE.PropertyBinding: Trying to update node for track: \" +\n          this.path +\n          \" but it wasn't found.\"\n      );\n      return;\n    }\n\n    if (objectName) {\n      let objectIndex = parsedPath.objectIndex;\n\n      // special cases were we need to reach deeper into the hierarchy to get the face materials....\n      switch (objectName) {\n        case \"materials\":\n          if (!targetObject.material) {\n            console.error(\n              \"THREE.PropertyBinding: Can not bind to material as node does not have a material.\",\n              this\n            );\n            return;\n          }\n\n          if (!targetObject.material.materials) {\n            console.error(\n              \"THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.\",\n              this\n            );\n            return;\n          }\n\n          targetObject = targetObject.material.materials;\n\n          break;\n\n        case \"bones\":\n          if (!targetObject.skeleton) {\n            console.error(\n              \"THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.\",\n              this\n            );\n            return;\n          }\n\n          // potential future optimization: skip this if propertyIndex is already an integer\n          // and convert the integer string to a true integer.\n\n          targetObject = targetObject.skeleton.bones;\n\n          // support resolving morphTarget names into indices.\n          for (let i = 0; i < targetObject.length; i++) {\n            if (targetObject[i].name === objectIndex) {\n              objectIndex = i;\n              break;\n            }\n          }\n\n          break;\n\n        default:\n          if (targetObject[objectName] === undefined) {\n            console.error(\n              \"THREE.PropertyBinding: Can not bind to objectName of node undefined.\",\n              this\n            );\n            return;\n          }\n\n          targetObject = targetObject[objectName];\n      }\n\n      if (objectIndex !== undefined) {\n        if (targetObject[objectIndex] === undefined) {\n          console.error(\n            \"THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.\",\n            this,\n            targetObject\n          );\n          return;\n        }\n\n        targetObject = targetObject[objectIndex];\n      }\n    }\n\n    // resolve property\n    const nodeProperty = targetObject[propertyName];\n\n    if (nodeProperty === undefined) {\n      const nodeName = parsedPath.nodeName;\n\n      console.error(\n        \"THREE.PropertyBinding: Trying to update property for track: \" +\n          nodeName +\n          \".\" +\n          propertyName +\n          \" but it wasn't found.\",\n        targetObject\n      );\n      return;\n    }\n\n    // determine versioning scheme\n    let versioning = this.Versioning.None;\n\n    this.targetObject = targetObject;\n\n    if (targetObject.needsUpdate !== undefined) {\n      // material\n\n      versioning = this.Versioning.NeedsUpdate;\n    } else if (targetObject.matrixWorldNeedsUpdate !== undefined) {\n      // node transform\n\n      versioning = this.Versioning.MatrixWorldNeedsUpdate;\n    }\n\n    // determine how the property gets bound\n    let bindingType = this.BindingType.Direct;\n\n    if (propertyIndex !== undefined) {\n      // access a sub element of the property array (only primitives are supported right now)\n\n      if (propertyName === \"morphTargetInfluences\") {\n        // potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n        // support resolving morphTarget names into indices.\n        if (!targetObject.geometry) {\n          console.error(\n            \"THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.\",\n            this\n          );\n          return;\n        }\n\n        if (targetObject.geometry.isBufferGeometry) {\n          if (!targetObject.geometry.morphAttributes) {\n            console.error(\n              \"THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.\",\n              this\n            );\n            return;\n          }\n\n          if (targetObject.morphTargetDictionary[propertyIndex] !== undefined) {\n            propertyIndex = targetObject.morphTargetDictionary[propertyIndex];\n          }\n        } else {\n          console.error(\n            \"THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.\",\n            this\n          );\n          return;\n        }\n      }\n\n      bindingType = this.BindingType.ArrayElement;\n\n      this.resolvedProperty = nodeProperty;\n      this.propertyIndex = propertyIndex;\n    } else if (\n      nodeProperty.fromArray !== undefined &&\n      nodeProperty.toArray !== undefined\n    ) {\n      // must use copy for Object3D.Euler/Quaternion\n\n      bindingType = this.BindingType.HasFromToArray;\n\n      this.resolvedProperty = nodeProperty;\n    } else if (Array.isArray(nodeProperty)) {\n      bindingType = this.BindingType.EntireArray;\n\n      this.resolvedProperty = nodeProperty;\n    } else {\n      this.propertyName = propertyName;\n    }\n\n    // select getter / setter\n    this.getValue = this.GetterByBindingType[bindingType];\n    this.setValue =\n      this.SetterByBindingTypeAndVersioning[bindingType][versioning];\n  }\n\n  unbind() {\n    this.node = null;\n\n    // back to the prototype version of getValue / setValue\n    // note: avoiding to mutate the shape of 'this' via 'delete'\n    this.getValue = this._getValue_unbound;\n    this.setValue = this._setValue_unbound;\n  }\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n  Direct: 0,\n  EntireArray: 1,\n  ArrayElement: 2,\n  HasFromToArray: 3,\n};\n\nPropertyBinding.prototype.Versioning = {\n  None: 0,\n  NeedsUpdate: 1,\n  MatrixWorldNeedsUpdate: 2,\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n  PropertyBinding.prototype._getValue_direct,\n  PropertyBinding.prototype._getValue_array,\n  PropertyBinding.prototype._getValue_arrayElement,\n  PropertyBinding.prototype._getValue_toArray,\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n  [\n    // Direct\n    PropertyBinding.prototype._setValue_direct,\n    PropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n    PropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n  ],\n  [\n    // EntireArray\n\n    PropertyBinding.prototype._setValue_array,\n    PropertyBinding.prototype._setValue_array_setNeedsUpdate,\n    PropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n  ],\n  [\n    // ArrayElement\n    PropertyBinding.prototype._setValue_arrayElement,\n    PropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n    PropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n  ],\n  [\n    // HasToFromArray\n    PropertyBinding.prototype._setValue_fromArray,\n    PropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n    PropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n  ],\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n  constructor() {\n    this.uuid = generateUUID();\n\n    // cached objects followed by the active ones\n    this._objects = Array.prototype.slice.call(arguments);\n\n    this.nCachedObjects_ = 0; // threshold\n    // note: read by PropertyBinding.Composite\n\n    const indices = {};\n    this._indicesByUUID = indices; // for bookkeeping\n\n    for (let i = 0, n = arguments.length; i !== n; ++i) {\n      indices[arguments[i].uuid] = i;\n    }\n\n    this._paths = []; // inside: string\n    this._parsedPaths = []; // inside: { we don't care, here }\n    this._bindings = []; // inside: Array< PropertyBinding >\n    this._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n    const scope = this;\n\n    this.stats = {\n      objects: {\n        get total() {\n          return scope._objects.length;\n        },\n        get inUse() {\n          return this.total - scope.nCachedObjects_;\n        },\n      },\n      get bindingsPerObject() {\n        return scope._bindings.length;\n      },\n    };\n  }\n\n  add() {\n    const objects = this._objects,\n      indicesByUUID = this._indicesByUUID,\n      paths = this._paths,\n      parsedPaths = this._parsedPaths,\n      bindings = this._bindings,\n      nBindings = bindings.length;\n\n    let knownObject = undefined,\n      nObjects = objects.length,\n      nCachedObjects = this.nCachedObjects_;\n\n    for (let i = 0, n = arguments.length; i !== n; ++i) {\n      const object = arguments[i],\n        uuid = object.uuid;\n      let index = indicesByUUID[uuid];\n\n      if (index === undefined) {\n        // unknown object -> add it to the ACTIVE region\n\n        index = nObjects++;\n        indicesByUUID[uuid] = index;\n        objects.push(object);\n\n        // accounting is done, now do the same for all bindings\n\n        for (let j = 0, m = nBindings; j !== m; ++j) {\n          bindings[j].push(\n            new PropertyBinding(object, paths[j], parsedPaths[j])\n          );\n        }\n      } else if (index < nCachedObjects) {\n        knownObject = objects[index];\n\n        // move existing object to the ACTIVE region\n\n        const firstActiveIndex = --nCachedObjects,\n          lastCachedObject = objects[firstActiveIndex];\n\n        indicesByUUID[lastCachedObject.uuid] = index;\n        objects[index] = lastCachedObject;\n\n        indicesByUUID[uuid] = firstActiveIndex;\n        objects[firstActiveIndex] = object;\n\n        // accounting is done, now do the same for all bindings\n\n        for (let j = 0, m = nBindings; j !== m; ++j) {\n          const bindingsForPath = bindings[j],\n            lastCached = bindingsForPath[firstActiveIndex];\n\n          let binding = bindingsForPath[index];\n\n          bindingsForPath[index] = lastCached;\n\n          if (binding === undefined) {\n            // since we do not bother to create new bindings\n            // for objects that are cached, the binding may\n            // or may not exist\n\n            binding = new PropertyBinding(object, paths[j], parsedPaths[j]);\n          }\n\n          bindingsForPath[firstActiveIndex] = binding;\n        }\n      } else if (objects[index] !== knownObject) {\n        console.error(\n          \"THREE.AnimationObjectGroup: Different objects with the same UUID \" +\n            \"detected. Clean the caches or recreate your infrastructure when reloading scenes.\"\n        );\n      } // else the object is already where we want it to be\n    } // for arguments\n\n    this.nCachedObjects_ = nCachedObjects;\n  }\n\n  remove() {\n    const objects = this._objects,\n      indicesByUUID = this._indicesByUUID,\n      bindings = this._bindings,\n      nBindings = bindings.length;\n\n    let nCachedObjects = this.nCachedObjects_;\n\n    for (let i = 0, n = arguments.length; i !== n; ++i) {\n      const object = arguments[i],\n        uuid = object.uuid,\n        index = indicesByUUID[uuid];\n\n      if (index !== undefined && index >= nCachedObjects) {\n        // move existing object into the CACHED region\n\n        const lastCachedIndex = nCachedObjects++,\n          firstActiveObject = objects[lastCachedIndex];\n\n        indicesByUUID[firstActiveObject.uuid] = index;\n        objects[index] = firstActiveObject;\n\n        indicesByUUID[uuid] = lastCachedIndex;\n        objects[lastCachedIndex] = object;\n\n        // accounting is done, now do the same for all bindings\n\n        for (let j = 0, m = nBindings; j !== m; ++j) {\n          const bindingsForPath = bindings[j],\n            firstActive = bindingsForPath[lastCachedIndex],\n            binding = bindingsForPath[index];\n\n          bindingsForPath[index] = firstActive;\n          bindingsForPath[lastCachedIndex] = binding;\n        }\n      }\n    } // for arguments\n\n    this.nCachedObjects_ = nCachedObjects;\n  }\n\n  // remove & forget\n  uncache() {\n    const objects = this._objects,\n      indicesByUUID = this._indicesByUUID,\n      bindings = this._bindings,\n      nBindings = bindings.length;\n\n    let nCachedObjects = this.nCachedObjects_,\n      nObjects = objects.length;\n\n    for (let i = 0, n = arguments.length; i !== n; ++i) {\n      const object = arguments[i],\n        uuid = object.uuid,\n        index = indicesByUUID[uuid];\n\n      if (index !== undefined) {\n        delete indicesByUUID[uuid];\n\n        if (index < nCachedObjects) {\n          // object is cached, shrink the CACHED region\n\n          const firstActiveIndex = --nCachedObjects,\n            lastCachedObject = objects[firstActiveIndex],\n            lastIndex = --nObjects,\n            lastObject = objects[lastIndex];\n\n          // last cached object takes this object's place\n          indicesByUUID[lastCachedObject.uuid] = index;\n          objects[index] = lastCachedObject;\n\n          // last object goes to the activated slot and pop\n          indicesByUUID[lastObject.uuid] = firstActiveIndex;\n          objects[firstActiveIndex] = lastObject;\n          objects.pop();\n\n          // accounting is done, now do the same for all bindings\n\n          for (let j = 0, m = nBindings; j !== m; ++j) {\n            const bindingsForPath = bindings[j],\n              lastCached = bindingsForPath[firstActiveIndex],\n              last = bindingsForPath[lastIndex];\n\n            bindingsForPath[index] = lastCached;\n            bindingsForPath[firstActiveIndex] = last;\n            bindingsForPath.pop();\n          }\n        } else {\n          // object is active, just swap with the last and pop\n\n          const lastIndex = --nObjects,\n            lastObject = objects[lastIndex];\n\n          if (lastIndex > 0) {\n            indicesByUUID[lastObject.uuid] = index;\n          }\n\n          objects[index] = lastObject;\n          objects.pop();\n\n          // accounting is done, now do the same for all bindings\n\n          for (let j = 0, m = nBindings; j !== m; ++j) {\n            const bindingsForPath = bindings[j];\n\n            bindingsForPath[index] = bindingsForPath[lastIndex];\n            bindingsForPath.pop();\n          }\n        } // cached or active\n      } // if object is known\n    } // for arguments\n\n    this.nCachedObjects_ = nCachedObjects;\n  }\n\n  // Internal interface used by befriended PropertyBinding.Composite:\n\n  subscribe_(path, parsedPath) {\n    // returns an array of bindings for the given path that is changed\n    // according to the contained objects in the group\n\n    const indicesByPath = this._bindingsIndicesByPath;\n    let index = indicesByPath[path];\n    const bindings = this._bindings;\n\n    if (index !== undefined) return bindings[index];\n\n    const paths = this._paths,\n      parsedPaths = this._parsedPaths,\n      objects = this._objects,\n      nObjects = objects.length,\n      nCachedObjects = this.nCachedObjects_,\n      bindingsForPath = new Array(nObjects);\n\n    index = bindings.length;\n\n    indicesByPath[path] = index;\n\n    paths.push(path);\n    parsedPaths.push(parsedPath);\n    bindings.push(bindingsForPath);\n\n    for (let i = nCachedObjects, n = objects.length; i !== n; ++i) {\n      const object = objects[i];\n      bindingsForPath[i] = new PropertyBinding(object, path, parsedPath);\n    }\n\n    return bindingsForPath;\n  }\n\n  unsubscribe_(path) {\n    // tells the group to forget about a property path and no longer\n    // update the array previously obtained with 'subscribe_'\n\n    const indicesByPath = this._bindingsIndicesByPath,\n      index = indicesByPath[path];\n\n    if (index !== undefined) {\n      const paths = this._paths,\n        parsedPaths = this._parsedPaths,\n        bindings = this._bindings,\n        lastBindingsIndex = bindings.length - 1,\n        lastBindings = bindings[lastBindingsIndex],\n        lastBindingsPath = path[lastBindingsIndex];\n\n      indicesByPath[lastBindingsPath] = index;\n\n      bindings[index] = lastBindings;\n      bindings.pop();\n\n      parsedPaths[index] = parsedPaths[lastBindingsIndex];\n      parsedPaths.pop();\n\n      paths[index] = paths[lastBindingsIndex];\n      paths.pop();\n    }\n  }\n}\n\nAnimationObjectGroup.prototype.isAnimationObjectGroup = true;\n\nclass AnimationAction {\n  constructor(mixer, clip, localRoot = null, blendMode = clip.blendMode) {\n    this._mixer = mixer;\n    this._clip = clip;\n    this._localRoot = localRoot;\n    this.blendMode = blendMode;\n\n    const tracks = clip.tracks,\n      nTracks = tracks.length,\n      interpolants = new Array(nTracks);\n\n    const interpolantSettings = {\n      endingStart: ZeroCurvatureEnding,\n      endingEnd: ZeroCurvatureEnding,\n    };\n\n    for (let i = 0; i !== nTracks; ++i) {\n      const interpolant = tracks[i].createInterpolant(null);\n      interpolants[i] = interpolant;\n      interpolant.settings = interpolantSettings;\n    }\n\n    this._interpolantSettings = interpolantSettings;\n\n    this._interpolants = interpolants; // bound by the mixer\n\n    // inside: PropertyMixer (managed by the mixer)\n    this._propertyBindings = new Array(nTracks);\n\n    this._cacheIndex = null; // for the memory manager\n    this._byClipCacheIndex = null; // for the memory manager\n\n    this._timeScaleInterpolant = null;\n    this._weightInterpolant = null;\n\n    this.loop = LoopRepeat;\n    this._loopCount = -1;\n\n    // global mixer time when the action is to be started\n    // it's set back to 'null' upon start of the action\n    this._startTime = null;\n\n    // scaled local time of the action\n    // gets clamped or wrapped to 0..clip.duration according to loop\n    this.time = 0;\n\n    this.timeScale = 1;\n    this._effectiveTimeScale = 1;\n\n    this.weight = 1;\n    this._effectiveWeight = 1;\n\n    this.repetitions = Infinity; // no. of repetitions when looping\n\n    this.paused = false; // true -> zero effective time scale\n    this.enabled = true; // false -> zero effective weight\n\n    this.clampWhenFinished = false; // keep feeding the last frame?\n\n    this.zeroSlopeAtStart = true; // for smooth interpolation w/o separate\n    this.zeroSlopeAtEnd = true; // clips for start, loop and end\n  }\n\n  // State & Scheduling\n\n  play() {\n    this._mixer._activateAction(this);\n\n    return this;\n  }\n\n  stop() {\n    this._mixer._deactivateAction(this);\n\n    return this.reset();\n  }\n\n  reset() {\n    this.paused = false;\n    this.enabled = true;\n\n    this.time = 0; // restart clip\n    this._loopCount = -1; // forget previous loops\n    this._startTime = null; // forget scheduling\n\n    return this.stopFading().stopWarping();\n  }\n\n  isRunning() {\n    return (\n      this.enabled &&\n      !this.paused &&\n      this.timeScale !== 0 &&\n      this._startTime === null &&\n      this._mixer._isActiveAction(this)\n    );\n  }\n\n  // return true when play has been called\n  isScheduled() {\n    return this._mixer._isActiveAction(this);\n  }\n\n  startAt(time) {\n    this._startTime = time;\n\n    return this;\n  }\n\n  setLoop(mode, repetitions) {\n    this.loop = mode;\n    this.repetitions = repetitions;\n\n    return this;\n  }\n\n  // Weight\n\n  // set the weight stopping any scheduled fading\n  // although .enabled = false yields an effective weight of zero, this\n  // method does *not* change .enabled, because it would be confusing\n  setEffectiveWeight(weight) {\n    this.weight = weight;\n\n    // note: same logic as when updated at runtime\n    this._effectiveWeight = this.enabled ? weight : 0;\n\n    return this.stopFading();\n  }\n\n  // return the weight considering fading and .enabled\n  getEffectiveWeight() {\n    return this._effectiveWeight;\n  }\n\n  fadeIn(duration) {\n    return this._scheduleFading(duration, 0, 1);\n  }\n\n  fadeOut(duration) {\n    return this._scheduleFading(duration, 1, 0);\n  }\n\n  crossFadeFrom(fadeOutAction, duration, warp) {\n    fadeOutAction.fadeOut(duration);\n    this.fadeIn(duration);\n\n    if (warp) {\n      const fadeInDuration = this._clip.duration,\n        fadeOutDuration = fadeOutAction._clip.duration,\n        startEndRatio = fadeOutDuration / fadeInDuration,\n        endStartRatio = fadeInDuration / fadeOutDuration;\n\n      fadeOutAction.warp(1.0, startEndRatio, duration);\n      this.warp(endStartRatio, 1.0, duration);\n    }\n\n    return this;\n  }\n\n  crossFadeTo(fadeInAction, duration, warp) {\n    return fadeInAction.crossFadeFrom(this, duration, warp);\n  }\n\n  stopFading() {\n    const weightInterpolant = this._weightInterpolant;\n\n    if (weightInterpolant !== null) {\n      this._weightInterpolant = null;\n      this._mixer._takeBackControlInterpolant(weightInterpolant);\n    }\n\n    return this;\n  }\n\n  // Time Scale Control\n\n  // set the time scale stopping any scheduled warping\n  // although .paused = true yields an effective time scale of zero, this\n  // method does *not* change .paused, because it would be confusing\n  setEffectiveTimeScale(timeScale) {\n    this.timeScale = timeScale;\n    this._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n    return this.stopWarping();\n  }\n\n  // return the time scale considering warping and .paused\n  getEffectiveTimeScale() {\n    return this._effectiveTimeScale;\n  }\n\n  setDuration(duration) {\n    this.timeScale = this._clip.duration / duration;\n\n    return this.stopWarping();\n  }\n\n  syncWith(action) {\n    this.time = action.time;\n    this.timeScale = action.timeScale;\n\n    return this.stopWarping();\n  }\n\n  halt(duration) {\n    return this.warp(this._effectiveTimeScale, 0, duration);\n  }\n\n  warp(startTimeScale, endTimeScale, duration) {\n    const mixer = this._mixer,\n      now = mixer.time,\n      timeScale = this.timeScale;\n\n    let interpolant = this._timeScaleInterpolant;\n\n    if (interpolant === null) {\n      interpolant = mixer._lendControlInterpolant();\n      this._timeScaleInterpolant = interpolant;\n    }\n\n    const times = interpolant.parameterPositions,\n      values = interpolant.sampleValues;\n\n    times[0] = now;\n    times[1] = now + duration;\n\n    values[0] = startTimeScale / timeScale;\n    values[1] = endTimeScale / timeScale;\n\n    return this;\n  }\n\n  stopWarping() {\n    const timeScaleInterpolant = this._timeScaleInterpolant;\n\n    if (timeScaleInterpolant !== null) {\n      this._timeScaleInterpolant = null;\n      this._mixer._takeBackControlInterpolant(timeScaleInterpolant);\n    }\n\n    return this;\n  }\n\n  // Object Accessors\n\n  getMixer() {\n    return this._mixer;\n  }\n\n  getClip() {\n    return this._clip;\n  }\n\n  getRoot() {\n    return this._localRoot || this._mixer._root;\n  }\n\n  // Interna\n\n  _update(time, deltaTime, timeDirection, accuIndex) {\n    // called by the mixer\n\n    if (!this.enabled) {\n      // call ._updateWeight() to update ._effectiveWeight\n\n      this._updateWeight(time);\n      return;\n    }\n\n    const startTime = this._startTime;\n\n    if (startTime !== null) {\n      // check for scheduled start of action\n\n      const timeRunning = (time - startTime) * timeDirection;\n      if (timeRunning < 0 || timeDirection === 0) {\n        return; // yet to come / don't decide when delta = 0\n      }\n\n      // start\n\n      this._startTime = null; // unschedule\n      deltaTime = timeDirection * timeRunning;\n    }\n\n    // apply time scale and advance time\n\n    deltaTime *= this._updateTimeScale(time);\n    const clipTime = this._updateTime(deltaTime);\n\n    // note: _updateTime may disable the action resulting in\n    // an effective weight of 0\n\n    const weight = this._updateWeight(time);\n\n    if (weight > 0) {\n      const interpolants = this._interpolants;\n      const propertyMixers = this._propertyBindings;\n\n      switch (this.blendMode) {\n        case AdditiveAnimationBlendMode:\n          for (let j = 0, m = interpolants.length; j !== m; ++j) {\n            interpolants[j].evaluate(clipTime);\n            propertyMixers[j].accumulateAdditive(weight);\n          }\n\n          break;\n\n        case NormalAnimationBlendMode:\n        default:\n          for (let j = 0, m = interpolants.length; j !== m; ++j) {\n            interpolants[j].evaluate(clipTime);\n            propertyMixers[j].accumulate(accuIndex, weight);\n          }\n      }\n    }\n  }\n\n  _updateWeight(time) {\n    let weight = 0;\n\n    if (this.enabled) {\n      weight = this.weight;\n      const interpolant = this._weightInterpolant;\n\n      if (interpolant !== null) {\n        const interpolantValue = interpolant.evaluate(time)[0];\n\n        weight *= interpolantValue;\n\n        if (time > interpolant.parameterPositions[1]) {\n          this.stopFading();\n\n          if (interpolantValue === 0) {\n            // faded out, disable\n            this.enabled = false;\n          }\n        }\n      }\n    }\n\n    this._effectiveWeight = weight;\n    return weight;\n  }\n\n  _updateTimeScale(time) {\n    let timeScale = 0;\n\n    if (!this.paused) {\n      timeScale = this.timeScale;\n\n      const interpolant = this._timeScaleInterpolant;\n\n      if (interpolant !== null) {\n        const interpolantValue = interpolant.evaluate(time)[0];\n\n        timeScale *= interpolantValue;\n\n        if (time > interpolant.parameterPositions[1]) {\n          this.stopWarping();\n\n          if (timeScale === 0) {\n            // motion has halted, pause\n            this.paused = true;\n          } else {\n            // warp done - apply final time scale\n            this.timeScale = timeScale;\n          }\n        }\n      }\n    }\n\n    this._effectiveTimeScale = timeScale;\n    return timeScale;\n  }\n\n  _updateTime(deltaTime) {\n    const duration = this._clip.duration;\n    const loop = this.loop;\n\n    let time = this.time + deltaTime;\n    let loopCount = this._loopCount;\n\n    const pingPong = loop === LoopPingPong;\n\n    if (deltaTime === 0) {\n      if (loopCount === -1) return time;\n\n      return pingPong && (loopCount & 1) === 1 ? duration - time : time;\n    }\n\n    if (loop === LoopOnce) {\n      if (loopCount === -1) {\n        // just started\n\n        this._loopCount = 0;\n        this._setEndings(true, true, false);\n      }\n\n      handle_stop: {\n        if (time >= duration) {\n          time = duration;\n        } else if (time < 0) {\n          time = 0;\n        } else {\n          this.time = time;\n\n          break handle_stop;\n        }\n\n        if (this.clampWhenFinished) this.paused = true;\n        else this.enabled = false;\n\n        this.time = time;\n\n        this._mixer.dispatchEvent({\n          type: \"finished\",\n          action: this,\n          direction: deltaTime < 0 ? -1 : 1,\n        });\n      }\n    } else {\n      // repetitive Repeat or PingPong\n\n      if (loopCount === -1) {\n        // just started\n\n        if (deltaTime >= 0) {\n          loopCount = 0;\n\n          this._setEndings(true, this.repetitions === 0, pingPong);\n        } else {\n          // when looping in reverse direction, the initial\n          // transition through zero counts as a repetition,\n          // so leave loopCount at -1\n\n          this._setEndings(this.repetitions === 0, true, pingPong);\n        }\n      }\n\n      if (time >= duration || time < 0) {\n        // wrap around\n\n        const loopDelta = Math.floor(time / duration); // signed\n        time -= duration * loopDelta;\n\n        loopCount += Math.abs(loopDelta);\n\n        const pending = this.repetitions - loopCount;\n\n        if (pending <= 0) {\n          // have to stop (switch state, clamp time, fire event)\n\n          if (this.clampWhenFinished) this.paused = true;\n          else this.enabled = false;\n\n          time = deltaTime > 0 ? duration : 0;\n\n          this.time = time;\n\n          this._mixer.dispatchEvent({\n            type: \"finished\",\n            action: this,\n            direction: deltaTime > 0 ? 1 : -1,\n          });\n        } else {\n          // keep running\n\n          if (pending === 1) {\n            // entering the last round\n\n            const atStart = deltaTime < 0;\n            this._setEndings(atStart, !atStart, pingPong);\n          } else {\n            this._setEndings(false, false, pingPong);\n          }\n\n          this._loopCount = loopCount;\n\n          this.time = time;\n\n          this._mixer.dispatchEvent({\n            type: \"loop\",\n            action: this,\n            loopDelta: loopDelta,\n          });\n        }\n      } else {\n        this.time = time;\n      }\n\n      if (pingPong && (loopCount & 1) === 1) {\n        // invert time for the \"pong round\"\n\n        return duration - time;\n      }\n    }\n\n    return time;\n  }\n\n  _setEndings(atStart, atEnd, pingPong) {\n    const settings = this._interpolantSettings;\n\n    if (pingPong) {\n      settings.endingStart = ZeroSlopeEnding;\n      settings.endingEnd = ZeroSlopeEnding;\n    } else {\n      // assuming for LoopOnce atStart == atEnd == true\n\n      if (atStart) {\n        settings.endingStart = this.zeroSlopeAtStart\n          ? ZeroSlopeEnding\n          : ZeroCurvatureEnding;\n      } else {\n        settings.endingStart = WrapAroundEnding;\n      }\n\n      if (atEnd) {\n        settings.endingEnd = this.zeroSlopeAtEnd\n          ? ZeroSlopeEnding\n          : ZeroCurvatureEnding;\n      } else {\n        settings.endingEnd = WrapAroundEnding;\n      }\n    }\n  }\n\n  _scheduleFading(duration, weightNow, weightThen) {\n    const mixer = this._mixer,\n      now = mixer.time;\n    let interpolant = this._weightInterpolant;\n\n    if (interpolant === null) {\n      interpolant = mixer._lendControlInterpolant();\n      this._weightInterpolant = interpolant;\n    }\n\n    const times = interpolant.parameterPositions,\n      values = interpolant.sampleValues;\n\n    times[0] = now;\n    values[0] = weightNow;\n    times[1] = now + duration;\n    values[1] = weightThen;\n\n    return this;\n  }\n}\n\nclass AnimationMixer extends EventDispatcher {\n  constructor(root) {\n    super();\n\n    this._root = root;\n    this._initMemoryManager();\n    this._accuIndex = 0;\n    this.time = 0;\n    this.timeScale = 1.0;\n  }\n\n  _bindAction(action, prototypeAction) {\n    const root = action._localRoot || this._root,\n      tracks = action._clip.tracks,\n      nTracks = tracks.length,\n      bindings = action._propertyBindings,\n      interpolants = action._interpolants,\n      rootUuid = root.uuid,\n      bindingsByRoot = this._bindingsByRootAndName;\n\n    let bindingsByName = bindingsByRoot[rootUuid];\n\n    if (bindingsByName === undefined) {\n      bindingsByName = {};\n      bindingsByRoot[rootUuid] = bindingsByName;\n    }\n\n    for (let i = 0; i !== nTracks; ++i) {\n      const track = tracks[i],\n        trackName = track.name;\n\n      let binding = bindingsByName[trackName];\n\n      if (binding !== undefined) {\n        bindings[i] = binding;\n      } else {\n        binding = bindings[i];\n\n        if (binding !== undefined) {\n          // existing binding, make sure the cache knows\n\n          if (binding._cacheIndex === null) {\n            ++binding.referenceCount;\n            this._addInactiveBinding(binding, rootUuid, trackName);\n          }\n\n          continue;\n        }\n\n        const path =\n          prototypeAction &&\n          prototypeAction._propertyBindings[i].binding.parsedPath;\n\n        binding = new PropertyMixer(\n          PropertyBinding.create(root, trackName, path),\n          track.ValueTypeName,\n          track.getValueSize()\n        );\n\n        ++binding.referenceCount;\n        this._addInactiveBinding(binding, rootUuid, trackName);\n\n        bindings[i] = binding;\n      }\n\n      interpolants[i].resultBuffer = binding.buffer;\n    }\n  }\n\n  _activateAction(action) {\n    if (!this._isActiveAction(action)) {\n      if (action._cacheIndex === null) {\n        // this action has been forgotten by the cache, but the user\n        // appears to be still using it -> rebind\n\n        const rootUuid = (action._localRoot || this._root).uuid,\n          clipUuid = action._clip.uuid,\n          actionsForClip = this._actionsByClip[clipUuid];\n\n        this._bindAction(\n          action,\n          actionsForClip && actionsForClip.knownActions[0]\n        );\n\n        this._addInactiveAction(action, clipUuid, rootUuid);\n      }\n\n      const bindings = action._propertyBindings;\n\n      // increment reference counts / sort out state\n      for (let i = 0, n = bindings.length; i !== n; ++i) {\n        const binding = bindings[i];\n\n        if (binding.useCount++ === 0) {\n          this._lendBinding(binding);\n          binding.saveOriginalState();\n        }\n      }\n\n      this._lendAction(action);\n    }\n  }\n\n  _deactivateAction(action) {\n    if (this._isActiveAction(action)) {\n      const bindings = action._propertyBindings;\n\n      // decrement reference counts / sort out state\n      for (let i = 0, n = bindings.length; i !== n; ++i) {\n        const binding = bindings[i];\n\n        if (--binding.useCount === 0) {\n          binding.restoreOriginalState();\n          this._takeBackBinding(binding);\n        }\n      }\n\n      this._takeBackAction(action);\n    }\n  }\n\n  // Memory manager\n\n  _initMemoryManager() {\n    this._actions = []; // 'nActiveActions' followed by inactive ones\n    this._nActiveActions = 0;\n\n    this._actionsByClip = {};\n    // inside:\n    // {\n    // \tknownActions: Array< AnimationAction > - used as prototypes\n    // \tactionByRoot: AnimationAction - lookup\n    // }\n\n    this._bindings = []; // 'nActiveBindings' followed by inactive ones\n    this._nActiveBindings = 0;\n\n    this._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n    this._controlInterpolants = []; // same game as above\n    this._nActiveControlInterpolants = 0;\n\n    const scope = this;\n\n    this.stats = {\n      actions: {\n        get total() {\n          return scope._actions.length;\n        },\n        get inUse() {\n          return scope._nActiveActions;\n        },\n      },\n      bindings: {\n        get total() {\n          return scope._bindings.length;\n        },\n        get inUse() {\n          return scope._nActiveBindings;\n        },\n      },\n      controlInterpolants: {\n        get total() {\n          return scope._controlInterpolants.length;\n        },\n        get inUse() {\n          return scope._nActiveControlInterpolants;\n        },\n      },\n    };\n  }\n\n  // Memory management for AnimationAction objects\n\n  _isActiveAction(action) {\n    const index = action._cacheIndex;\n    return index !== null && index < this._nActiveActions;\n  }\n\n  _addInactiveAction(action, clipUuid, rootUuid) {\n    const actions = this._actions,\n      actionsByClip = this._actionsByClip;\n\n    let actionsForClip = actionsByClip[clipUuid];\n\n    if (actionsForClip === undefined) {\n      actionsForClip = {\n        knownActions: [action],\n        actionByRoot: {},\n      };\n\n      action._byClipCacheIndex = 0;\n\n      actionsByClip[clipUuid] = actionsForClip;\n    } else {\n      const knownActions = actionsForClip.knownActions;\n\n      action._byClipCacheIndex = knownActions.length;\n      knownActions.push(action);\n    }\n\n    action._cacheIndex = actions.length;\n    actions.push(action);\n\n    actionsForClip.actionByRoot[rootUuid] = action;\n  }\n\n  _removeInactiveAction(action) {\n    const actions = this._actions,\n      lastInactiveAction = actions[actions.length - 1],\n      cacheIndex = action._cacheIndex;\n\n    lastInactiveAction._cacheIndex = cacheIndex;\n    actions[cacheIndex] = lastInactiveAction;\n    actions.pop();\n\n    action._cacheIndex = null;\n\n    const clipUuid = action._clip.uuid,\n      actionsByClip = this._actionsByClip,\n      actionsForClip = actionsByClip[clipUuid],\n      knownActionsForClip = actionsForClip.knownActions,\n      lastKnownAction = knownActionsForClip[knownActionsForClip.length - 1],\n      byClipCacheIndex = action._byClipCacheIndex;\n\n    lastKnownAction._byClipCacheIndex = byClipCacheIndex;\n    knownActionsForClip[byClipCacheIndex] = lastKnownAction;\n    knownActionsForClip.pop();\n\n    action._byClipCacheIndex = null;\n\n    const actionByRoot = actionsForClip.actionByRoot,\n      rootUuid = (action._localRoot || this._root).uuid;\n\n    delete actionByRoot[rootUuid];\n\n    if (knownActionsForClip.length === 0) {\n      delete actionsByClip[clipUuid];\n    }\n\n    this._removeInactiveBindingsForAction(action);\n  }\n\n  _removeInactiveBindingsForAction(action) {\n    const bindings = action._propertyBindings;\n\n    for (let i = 0, n = bindings.length; i !== n; ++i) {\n      const binding = bindings[i];\n\n      if (--binding.referenceCount === 0) {\n        this._removeInactiveBinding(binding);\n      }\n    }\n  }\n\n  _lendAction(action) {\n    // [ active actions |  inactive actions  ]\n    // [  active actions >| inactive actions ]\n    //                 s        a\n    //                  <-swap->\n    //                 a        s\n\n    const actions = this._actions,\n      prevIndex = action._cacheIndex,\n      lastActiveIndex = this._nActiveActions++,\n      firstInactiveAction = actions[lastActiveIndex];\n\n    action._cacheIndex = lastActiveIndex;\n    actions[lastActiveIndex] = action;\n\n    firstInactiveAction._cacheIndex = prevIndex;\n    actions[prevIndex] = firstInactiveAction;\n  }\n\n  _takeBackAction(action) {\n    // [  active actions  | inactive actions ]\n    // [ active actions |< inactive actions  ]\n    //        a        s\n    //         <-swap->\n    //        s        a\n\n    const actions = this._actions,\n      prevIndex = action._cacheIndex,\n      firstInactiveIndex = --this._nActiveActions,\n      lastActiveAction = actions[firstInactiveIndex];\n\n    action._cacheIndex = firstInactiveIndex;\n    actions[firstInactiveIndex] = action;\n\n    lastActiveAction._cacheIndex = prevIndex;\n    actions[prevIndex] = lastActiveAction;\n  }\n\n  // Memory management for PropertyMixer objects\n\n  _addInactiveBinding(binding, rootUuid, trackName) {\n    const bindingsByRoot = this._bindingsByRootAndName,\n      bindings = this._bindings;\n\n    let bindingByName = bindingsByRoot[rootUuid];\n\n    if (bindingByName === undefined) {\n      bindingByName = {};\n      bindingsByRoot[rootUuid] = bindingByName;\n    }\n\n    bindingByName[trackName] = binding;\n\n    binding._cacheIndex = bindings.length;\n    bindings.push(binding);\n  }\n\n  _removeInactiveBinding(binding) {\n    const bindings = this._bindings,\n      propBinding = binding.binding,\n      rootUuid = propBinding.rootNode.uuid,\n      trackName = propBinding.path,\n      bindingsByRoot = this._bindingsByRootAndName,\n      bindingByName = bindingsByRoot[rootUuid],\n      lastInactiveBinding = bindings[bindings.length - 1],\n      cacheIndex = binding._cacheIndex;\n\n    lastInactiveBinding._cacheIndex = cacheIndex;\n    bindings[cacheIndex] = lastInactiveBinding;\n    bindings.pop();\n\n    delete bindingByName[trackName];\n\n    if (Object.keys(bindingByName).length === 0) {\n      delete bindingsByRoot[rootUuid];\n    }\n  }\n\n  _lendBinding(binding) {\n    const bindings = this._bindings,\n      prevIndex = binding._cacheIndex,\n      lastActiveIndex = this._nActiveBindings++,\n      firstInactiveBinding = bindings[lastActiveIndex];\n\n    binding._cacheIndex = lastActiveIndex;\n    bindings[lastActiveIndex] = binding;\n\n    firstInactiveBinding._cacheIndex = prevIndex;\n    bindings[prevIndex] = firstInactiveBinding;\n  }\n\n  _takeBackBinding(binding) {\n    const bindings = this._bindings,\n      prevIndex = binding._cacheIndex,\n      firstInactiveIndex = --this._nActiveBindings,\n      lastActiveBinding = bindings[firstInactiveIndex];\n\n    binding._cacheIndex = firstInactiveIndex;\n    bindings[firstInactiveIndex] = binding;\n\n    lastActiveBinding._cacheIndex = prevIndex;\n    bindings[prevIndex] = lastActiveBinding;\n  }\n\n  // Memory management of Interpolants for weight and time scale\n\n  _lendControlInterpolant() {\n    const interpolants = this._controlInterpolants,\n      lastActiveIndex = this._nActiveControlInterpolants++;\n\n    let interpolant = interpolants[lastActiveIndex];\n\n    if (interpolant === undefined) {\n      interpolant = new LinearInterpolant(\n        new Float32Array(2),\n        new Float32Array(2),\n        1,\n        this._controlInterpolantsResultBuffer\n      );\n\n      interpolant.__cacheIndex = lastActiveIndex;\n      interpolants[lastActiveIndex] = interpolant;\n    }\n\n    return interpolant;\n  }\n\n  _takeBackControlInterpolant(interpolant) {\n    const interpolants = this._controlInterpolants,\n      prevIndex = interpolant.__cacheIndex,\n      firstInactiveIndex = --this._nActiveControlInterpolants,\n      lastActiveInterpolant = interpolants[firstInactiveIndex];\n\n    interpolant.__cacheIndex = firstInactiveIndex;\n    interpolants[firstInactiveIndex] = interpolant;\n\n    lastActiveInterpolant.__cacheIndex = prevIndex;\n    interpolants[prevIndex] = lastActiveInterpolant;\n  }\n\n  // return an action for a clip optionally using a custom root target\n  // object (this method allocates a lot of dynamic memory in case a\n  // previously unknown clip/root combination is specified)\n  clipAction(clip, optionalRoot, blendMode) {\n    const root = optionalRoot || this._root,\n      rootUuid = root.uuid;\n\n    let clipObject =\n      typeof clip === \"string\" ? AnimationClip.findByName(root, clip) : clip;\n\n    const clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n    const actionsForClip = this._actionsByClip[clipUuid];\n    let prototypeAction = null;\n\n    if (blendMode === undefined) {\n      if (clipObject !== null) {\n        blendMode = clipObject.blendMode;\n      } else {\n        blendMode = NormalAnimationBlendMode;\n      }\n    }\n\n    if (actionsForClip !== undefined) {\n      const existingAction = actionsForClip.actionByRoot[rootUuid];\n\n      if (\n        existingAction !== undefined &&\n        existingAction.blendMode === blendMode\n      ) {\n        return existingAction;\n      }\n\n      // we know the clip, so we don't have to parse all\n      // the bindings again but can just copy\n      prototypeAction = actionsForClip.knownActions[0];\n\n      // also, take the clip from the prototype action\n      if (clipObject === null) clipObject = prototypeAction._clip;\n    }\n\n    // clip must be known when specified via string\n    if (clipObject === null) return null;\n\n    // allocate all resources required to run it\n    const newAction = new AnimationAction(\n      this,\n      clipObject,\n      optionalRoot,\n      blendMode\n    );\n\n    this._bindAction(newAction, prototypeAction);\n\n    // and make the action known to the memory manager\n    this._addInactiveAction(newAction, clipUuid, rootUuid);\n\n    return newAction;\n  }\n\n  // get an existing action\n  existingAction(clip, optionalRoot) {\n    const root = optionalRoot || this._root,\n      rootUuid = root.uuid,\n      clipObject =\n        typeof clip === \"string\" ? AnimationClip.findByName(root, clip) : clip,\n      clipUuid = clipObject ? clipObject.uuid : clip,\n      actionsForClip = this._actionsByClip[clipUuid];\n\n    if (actionsForClip !== undefined) {\n      return actionsForClip.actionByRoot[rootUuid] || null;\n    }\n\n    return null;\n  }\n\n  // deactivates all previously scheduled actions\n  stopAllAction() {\n    const actions = this._actions,\n      nActions = this._nActiveActions;\n\n    for (let i = nActions - 1; i >= 0; --i) {\n      actions[i].stop();\n    }\n\n    return this;\n  }\n\n  // advance the time and update apply the animation\n  update(deltaTime) {\n    deltaTime *= this.timeScale;\n\n    const actions = this._actions,\n      nActions = this._nActiveActions,\n      time = (this.time += deltaTime),\n      timeDirection = Math.sign(deltaTime),\n      accuIndex = (this._accuIndex ^= 1);\n\n    // run active actions\n\n    for (let i = 0; i !== nActions; ++i) {\n      const action = actions[i];\n\n      action._update(time, deltaTime, timeDirection, accuIndex);\n    }\n\n    // update scene graph\n\n    const bindings = this._bindings,\n      nBindings = this._nActiveBindings;\n\n    for (let i = 0; i !== nBindings; ++i) {\n      bindings[i].apply(accuIndex);\n    }\n\n    return this;\n  }\n\n  // Allows you to seek to a specific time in an animation.\n  setTime(timeInSeconds) {\n    this.time = 0; // Zero out time attribute for AnimationMixer object;\n    for (let i = 0; i < this._actions.length; i++) {\n      this._actions[i].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n    }\n\n    return this.update(timeInSeconds); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n  }\n\n  // return this mixer's root target object\n  getRoot() {\n    return this._root;\n  }\n\n  // free all resources specific to a particular clip\n  uncacheClip(clip) {\n    const actions = this._actions,\n      clipUuid = clip.uuid,\n      actionsByClip = this._actionsByClip,\n      actionsForClip = actionsByClip[clipUuid];\n\n    if (actionsForClip !== undefined) {\n      // note: just calling _removeInactiveAction would mess up the\n      // iteration state and also require updating the state we can\n      // just throw away\n\n      const actionsToRemove = actionsForClip.knownActions;\n\n      for (let i = 0, n = actionsToRemove.length; i !== n; ++i) {\n        const action = actionsToRemove[i];\n\n        this._deactivateAction(action);\n\n        const cacheIndex = action._cacheIndex,\n          lastInactiveAction = actions[actions.length - 1];\n\n        action._cacheIndex = null;\n        action._byClipCacheIndex = null;\n\n        lastInactiveAction._cacheIndex = cacheIndex;\n        actions[cacheIndex] = lastInactiveAction;\n        actions.pop();\n\n        this._removeInactiveBindingsForAction(action);\n      }\n\n      delete actionsByClip[clipUuid];\n    }\n  }\n\n  // free all resources specific to a particular root target object\n  uncacheRoot(root) {\n    const rootUuid = root.uuid,\n      actionsByClip = this._actionsByClip;\n\n    for (const clipUuid in actionsByClip) {\n      const actionByRoot = actionsByClip[clipUuid].actionByRoot,\n        action = actionByRoot[rootUuid];\n\n      if (action !== undefined) {\n        this._deactivateAction(action);\n        this._removeInactiveAction(action);\n      }\n    }\n\n    const bindingsByRoot = this._bindingsByRootAndName,\n      bindingByName = bindingsByRoot[rootUuid];\n\n    if (bindingByName !== undefined) {\n      for (const trackName in bindingByName) {\n        const binding = bindingByName[trackName];\n        binding.restoreOriginalState();\n        this._removeInactiveBinding(binding);\n      }\n    }\n  }\n\n  // remove a targeted clip from the cache\n  uncacheAction(clip, optionalRoot) {\n    const action = this.existingAction(clip, optionalRoot);\n\n    if (action !== null) {\n      this._deactivateAction(action);\n      this._removeInactiveAction(action);\n    }\n  }\n}\n\nAnimationMixer.prototype._controlInterpolantsResultBuffer = new Float32Array(1);\n\nclass Uniform {\n  constructor(value) {\n    if (typeof value === \"string\") {\n      console.warn(\"THREE.Uniform: Type parameter is no longer needed.\");\n      value = arguments[1];\n    }\n\n    this.value = value;\n  }\n\n  clone() {\n    return new Uniform(\n      this.value.clone === undefined ? this.value : this.value.clone()\n    );\n  }\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n  constructor(array, stride, meshPerAttribute = 1) {\n    super(array, stride);\n\n    this.meshPerAttribute = meshPerAttribute;\n  }\n\n  copy(source) {\n    super.copy(source);\n\n    this.meshPerAttribute = source.meshPerAttribute;\n\n    return this;\n  }\n\n  clone(data) {\n    const ib = super.clone(data);\n\n    ib.meshPerAttribute = this.meshPerAttribute;\n\n    return ib;\n  }\n\n  toJSON(data) {\n    const json = super.toJSON(data);\n\n    json.isInstancedInterleavedBuffer = true;\n    json.meshPerAttribute = this.meshPerAttribute;\n\n    return json;\n  }\n}\n\nInstancedInterleavedBuffer.prototype.isInstancedInterleavedBuffer = true;\n\nclass GLBufferAttribute {\n  constructor(buffer, type, itemSize, elementSize, count) {\n    this.buffer = buffer;\n    this.type = type;\n    this.itemSize = itemSize;\n    this.elementSize = elementSize;\n    this.count = count;\n\n    this.version = 0;\n  }\n\n  set needsUpdate(value) {\n    if (value === true) this.version++;\n  }\n\n  setBuffer(buffer) {\n    this.buffer = buffer;\n\n    return this;\n  }\n\n  setType(type, elementSize) {\n    this.type = type;\n    this.elementSize = elementSize;\n\n    return this;\n  }\n\n  setItemSize(itemSize) {\n    this.itemSize = itemSize;\n\n    return this;\n  }\n\n  setCount(count) {\n    this.count = count;\n\n    return this;\n  }\n}\n\nGLBufferAttribute.prototype.isGLBufferAttribute = true;\n\nclass Raycaster {\n  constructor(origin, direction, near = 0, far = Infinity) {\n    this.ray = new Ray(origin, direction);\n    // direction is assumed to be normalized (for accurate distance calculations)\n\n    this.near = near;\n    this.far = far;\n    this.camera = null;\n    this.layers = new Layers();\n\n    this.params = {\n      Mesh: {},\n      Line: { threshold: 1 },\n      LOD: {},\n      Points: { threshold: 1 },\n      Sprite: {},\n    };\n  }\n\n  set(origin, direction) {\n    // direction is assumed to be normalized (for accurate distance calculations)\n\n    this.ray.set(origin, direction);\n  }\n\n  setFromCamera(coords, camera) {\n    if (camera && camera.isPerspectiveCamera) {\n      this.ray.origin.setFromMatrixPosition(camera.matrixWorld);\n      this.ray.direction\n        .set(coords.x, coords.y, 0.5)\n        .unproject(camera)\n        .sub(this.ray.origin)\n        .normalize();\n      this.camera = camera;\n    } else if (camera && camera.isOrthographicCamera) {\n      this.ray.origin\n        .set(\n          coords.x,\n          coords.y,\n          (camera.near + camera.far) / (camera.near - camera.far)\n        )\n        .unproject(camera); // set origin in plane of camera\n      this.ray.direction.set(0, 0, -1).transformDirection(camera.matrixWorld);\n      this.camera = camera;\n    } else {\n      console.error(\"THREE.Raycaster: Unsupported camera type: \" + camera.type);\n    }\n  }\n\n  intersectObject(object, recursive = true, intersects = []) {\n    intersectObject(object, this, intersects, recursive);\n\n    intersects.sort(ascSort);\n\n    return intersects;\n  }\n\n  intersectObjects(objects, recursive = true, intersects = []) {\n    for (let i = 0, l = objects.length; i < l; i++) {\n      intersectObject(objects[i], this, intersects, recursive);\n    }\n\n    intersects.sort(ascSort);\n\n    return intersects;\n  }\n}\n\nfunction ascSort(a, b) {\n  return a.distance - b.distance;\n}\n\nfunction intersectObject(object, raycaster, intersects, recursive) {\n  if (object.layers.test(raycaster.layers)) {\n    object.raycast(raycaster, intersects);\n  }\n\n  if (recursive === true) {\n    const children = object.children;\n\n    for (let i = 0, l = children.length; i < l; i++) {\n      intersectObject(children[i], raycaster, intersects, true);\n    }\n  }\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axis.\n */\n\nclass Spherical {\n  constructor(radius = 1, phi = 0, theta = 0) {\n    this.radius = radius;\n    this.phi = phi; // polar angle\n    this.theta = theta; // azimuthal angle\n\n    return this;\n  }\n\n  set(radius, phi, theta) {\n    this.radius = radius;\n    this.phi = phi;\n    this.theta = theta;\n\n    return this;\n  }\n\n  copy(other) {\n    this.radius = other.radius;\n    this.phi = other.phi;\n    this.theta = other.theta;\n\n    return this;\n  }\n\n  // restrict phi to be betwee EPS and PI-EPS\n  makeSafe() {\n    const EPS = 0.000001;\n    this.phi = Math.max(EPS, Math.min(Math.PI - EPS, this.phi));\n\n    return this;\n  }\n\n  setFromVector3(v) {\n    return this.setFromCartesianCoords(v.x, v.y, v.z);\n  }\n\n  setFromCartesianCoords(x, y, z) {\n    this.radius = Math.sqrt(x * x + y * y + z * z);\n\n    if (this.radius === 0) {\n      this.theta = 0;\n      this.phi = 0;\n    } else {\n      this.theta = Math.atan2(x, z);\n      this.phi = Math.acos(clamp(y / this.radius, -1, 1));\n    }\n\n    return this;\n  }\n\n  clone() {\n    return new this.constructor().copy(this);\n  }\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n  constructor(radius = 1, theta = 0, y = 0) {\n    this.radius = radius; // distance from the origin to a point in the x-z plane\n    this.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n    this.y = y; // height above the x-z plane\n\n    return this;\n  }\n\n  set(radius, theta, y) {\n    this.radius = radius;\n    this.theta = theta;\n    this.y = y;\n\n    return this;\n  }\n\n  copy(other) {\n    this.radius = other.radius;\n    this.theta = other.theta;\n    this.y = other.y;\n\n    return this;\n  }\n\n  setFromVector3(v) {\n    return this.setFromCartesianCoords(v.x, v.y, v.z);\n  }\n\n  setFromCartesianCoords(x, y, z) {\n    this.radius = Math.sqrt(x * x + z * z);\n    this.theta = Math.atan2(x, z);\n    this.y = y;\n\n    return this;\n  }\n\n  clone() {\n    return new this.constructor().copy(this);\n  }\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n  constructor(\n    min = new Vector2(+Infinity, +Infinity),\n    max = new Vector2(-Infinity, -Infinity)\n  ) {\n    this.min = min;\n    this.max = max;\n  }\n\n  set(min, max) {\n    this.min.copy(min);\n    this.max.copy(max);\n\n    return this;\n  }\n\n  setFromPoints(points) {\n    this.makeEmpty();\n\n    for (let i = 0, il = points.length; i < il; i++) {\n      this.expandByPoint(points[i]);\n    }\n\n    return this;\n  }\n\n  setFromCenterAndSize(center, size) {\n    const halfSize = _vector$4.copy(size).multiplyScalar(0.5);\n    this.min.copy(center).sub(halfSize);\n    this.max.copy(center).add(halfSize);\n\n    return this;\n  }\n\n  clone() {\n    return new this.constructor().copy(this);\n  }\n\n  copy(box) {\n    this.min.copy(box.min);\n    this.max.copy(box.max);\n\n    return this;\n  }\n\n  makeEmpty() {\n    this.min.x = this.min.y = +Infinity;\n    this.max.x = this.max.y = -Infinity;\n\n    return this;\n  }\n\n  isEmpty() {\n    // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n    return this.max.x < this.min.x || this.max.y < this.min.y;\n  }\n\n  getCenter(target) {\n    return this.isEmpty()\n      ? target.set(0, 0)\n      : target.addVectors(this.min, this.max).multiplyScalar(0.5);\n  }\n\n  getSize(target) {\n    return this.isEmpty()\n      ? target.set(0, 0)\n      : target.subVectors(this.max, this.min);\n  }\n\n  expandByPoint(point) {\n    this.min.min(point);\n    this.max.max(point);\n\n    return this;\n  }\n\n  expandByVector(vector) {\n    this.min.sub(vector);\n    this.max.add(vector);\n\n    return this;\n  }\n\n  expandByScalar(scalar) {\n    this.min.addScalar(-scalar);\n    this.max.addScalar(scalar);\n\n    return this;\n  }\n\n  containsPoint(point) {\n    return point.x < this.min.x ||\n      point.x > this.max.x ||\n      point.y < this.min.y ||\n      point.y > this.max.y\n      ? false\n      : true;\n  }\n\n  containsBox(box) {\n    return (\n      this.min.x <= box.min.x &&\n      box.max.x <= this.max.x &&\n      this.min.y <= box.min.y &&\n      box.max.y <= this.max.y\n    );\n  }\n\n  getParameter(point, target) {\n    // This can potentially have a divide by zero if the box\n    // has a size dimension of 0.\n\n    return target.set(\n      (point.x - this.min.x) / (this.max.x - this.min.x),\n      (point.y - this.min.y) / (this.max.y - this.min.y)\n    );\n  }\n\n  intersectsBox(box) {\n    // using 4 splitting planes to rule out intersections\n\n    return box.max.x < this.min.x ||\n      box.min.x > this.max.x ||\n      box.max.y < this.min.y ||\n      box.min.y > this.max.y\n      ? false\n      : true;\n  }\n\n  clampPoint(point, target) {\n    return target.copy(point).clamp(this.min, this.max);\n  }\n\n  distanceToPoint(point) {\n    const clampedPoint = _vector$4.copy(point).clamp(this.min, this.max);\n    return clampedPoint.sub(point).length();\n  }\n\n  intersect(box) {\n    this.min.max(box.min);\n    this.max.min(box.max);\n\n    return this;\n  }\n\n  union(box) {\n    this.min.min(box.min);\n    this.max.max(box.max);\n\n    return this;\n  }\n\n  translate(offset) {\n    this.min.add(offset);\n    this.max.add(offset);\n\n    return this;\n  }\n\n  equals(box) {\n    return box.min.equals(this.min) && box.max.equals(this.max);\n  }\n}\n\nBox2.prototype.isBox2 = true;\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n  constructor(start = new Vector3(), end = new Vector3()) {\n    this.start = start;\n    this.end = end;\n  }\n\n  set(start, end) {\n    this.start.copy(start);\n    this.end.copy(end);\n\n    return this;\n  }\n\n  copy(line) {\n    this.start.copy(line.start);\n    this.end.copy(line.end);\n\n    return this;\n  }\n\n  getCenter(target) {\n    return target.addVectors(this.start, this.end).multiplyScalar(0.5);\n  }\n\n  delta(target) {\n    return target.subVectors(this.end, this.start);\n  }\n\n  distanceSq() {\n    return this.start.distanceToSquared(this.end);\n  }\n\n  distance() {\n    return this.start.distanceTo(this.end);\n  }\n\n  at(t, target) {\n    return this.delta(target).multiplyScalar(t).add(this.start);\n  }\n\n  closestPointToPointParameter(point, clampToLine) {\n    _startP.subVectors(point, this.start);\n    _startEnd.subVectors(this.end, this.start);\n\n    const startEnd2 = _startEnd.dot(_startEnd);\n    const startEnd_startP = _startEnd.dot(_startP);\n\n    let t = startEnd_startP / startEnd2;\n\n    if (clampToLine) {\n      t = clamp(t, 0, 1);\n    }\n\n    return t;\n  }\n\n  closestPointToPoint(point, clampToLine, target) {\n    const t = this.closestPointToPointParameter(point, clampToLine);\n\n    return this.delta(target).multiplyScalar(t).add(this.start);\n  }\n\n  applyMatrix4(matrix) {\n    this.start.applyMatrix4(matrix);\n    this.end.applyMatrix4(matrix);\n\n    return this;\n  }\n\n  equals(line) {\n    return line.start.equals(this.start) && line.end.equals(this.end);\n  }\n\n  clone() {\n    return new this.constructor().copy(this);\n  }\n}\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n  constructor(light, color) {\n    super();\n    this.light = light;\n    this.light.updateMatrixWorld();\n\n    this.matrix = light.matrixWorld;\n    this.matrixAutoUpdate = false;\n\n    this.color = color;\n\n    const geometry = new BufferGeometry();\n\n    const positions = [\n      0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1,\n      0, 0, 0, 0, -1, 1,\n    ];\n\n    for (let i = 0, j = 1, l = 32; i < l; i++, j++) {\n      const p1 = (i / l) * Math.PI * 2;\n      const p2 = (j / l) * Math.PI * 2;\n\n      positions.push(\n        Math.cos(p1),\n        Math.sin(p1),\n        1,\n        Math.cos(p2),\n        Math.sin(p2),\n        1\n      );\n    }\n\n    geometry.setAttribute(\"position\", new Float32BufferAttribute(positions, 3));\n\n    const material = new LineBasicMaterial({ fog: false, toneMapped: false });\n\n    this.cone = new LineSegments(geometry, material);\n    this.add(this.cone);\n\n    this.update();\n  }\n\n  dispose() {\n    this.cone.geometry.dispose();\n    this.cone.material.dispose();\n  }\n\n  update() {\n    this.light.updateMatrixWorld();\n\n    const coneLength = this.light.distance ? this.light.distance : 1000;\n    const coneWidth = coneLength * Math.tan(this.light.angle);\n\n    this.cone.scale.set(coneWidth, coneWidth, coneLength);\n\n    _vector$3.setFromMatrixPosition(this.light.target.matrixWorld);\n\n    this.cone.lookAt(_vector$3);\n\n    if (this.color !== undefined) {\n      this.cone.material.color.set(this.color);\n    } else {\n      this.cone.material.color.copy(this.light.color);\n    }\n  }\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\nclass SkeletonHelper extends LineSegments {\n  constructor(object) {\n    const bones = getBoneList(object);\n\n    const geometry = new BufferGeometry();\n\n    const vertices = [];\n    const colors = [];\n\n    const color1 = new Color(0, 0, 1);\n    const color2 = new Color(0, 1, 0);\n\n    for (let i = 0; i < bones.length; i++) {\n      const bone = bones[i];\n\n      if (bone.parent && bone.parent.isBone) {\n        vertices.push(0, 0, 0);\n        vertices.push(0, 0, 0);\n        colors.push(color1.r, color1.g, color1.b);\n        colors.push(color2.r, color2.g, color2.b);\n      }\n    }\n\n    geometry.setAttribute(\"position\", new Float32BufferAttribute(vertices, 3));\n    geometry.setAttribute(\"color\", new Float32BufferAttribute(colors, 3));\n\n    const material = new LineBasicMaterial({\n      vertexColors: true,\n      depthTest: false,\n      depthWrite: false,\n      toneMapped: false,\n      transparent: true,\n    });\n\n    super(geometry, material);\n\n    this.type = \"SkeletonHelper\";\n    this.isSkeletonHelper = true;\n\n    this.root = object;\n    this.bones = bones;\n\n    this.matrix = object.matrixWorld;\n    this.matrixAutoUpdate = false;\n  }\n\n  updateMatrixWorld(force) {\n    const bones = this.bones;\n\n    const geometry = this.geometry;\n    const position = geometry.getAttribute(\"position\");\n\n    _matrixWorldInv.copy(this.root.matrixWorld).invert();\n\n    for (let i = 0, j = 0; i < bones.length; i++) {\n      const bone = bones[i];\n\n      if (bone.parent && bone.parent.isBone) {\n        _boneMatrix.multiplyMatrices(_matrixWorldInv, bone.matrixWorld);\n        _vector$2.setFromMatrixPosition(_boneMatrix);\n        position.setXYZ(j, _vector$2.x, _vector$2.y, _vector$2.z);\n\n        _boneMatrix.multiplyMatrices(_matrixWorldInv, bone.parent.matrixWorld);\n        _vector$2.setFromMatrixPosition(_boneMatrix);\n        position.setXYZ(j + 1, _vector$2.x, _vector$2.y, _vector$2.z);\n\n        j += 2;\n      }\n    }\n\n    geometry.getAttribute(\"position\").needsUpdate = true;\n\n    super.updateMatrixWorld(force);\n  }\n}\n\nfunction getBoneList(object) {\n  const boneList = [];\n\n  if (object && object.isBone) {\n    boneList.push(object);\n  }\n\n  for (let i = 0; i < object.children.length; i++) {\n    boneList.push.apply(boneList, getBoneList(object.children[i]));\n  }\n\n  return boneList;\n}\n\nclass PointLightHelper extends Mesh {\n  constructor(light, sphereSize, color) {\n    const geometry = new SphereGeometry(sphereSize, 4, 2);\n    const material = new MeshBasicMaterial({\n      wireframe: true,\n      fog: false,\n      toneMapped: false,\n    });\n\n    super(geometry, material);\n\n    this.light = light;\n    this.light.updateMatrixWorld();\n\n    this.color = color;\n\n    this.type = \"PointLightHelper\";\n\n    this.matrix = this.light.matrixWorld;\n    this.matrixAutoUpdate = false;\n\n    this.update();\n\n    /*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronBufferGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n  }\n\n  dispose() {\n    this.geometry.dispose();\n    this.material.dispose();\n  }\n\n  update() {\n    if (this.color !== undefined) {\n      this.material.color.set(this.color);\n    } else {\n      this.material.color.copy(this.light.color);\n    }\n\n    /*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n  }\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n  constructor(light, size, color) {\n    super();\n    this.light = light;\n    this.light.updateMatrixWorld();\n\n    this.matrix = light.matrixWorld;\n    this.matrixAutoUpdate = false;\n\n    this.color = color;\n\n    const geometry = new OctahedronGeometry(size);\n    geometry.rotateY(Math.PI * 0.5);\n\n    this.material = new MeshBasicMaterial({\n      wireframe: true,\n      fog: false,\n      toneMapped: false,\n    });\n    if (this.color === undefined) this.material.vertexColors = true;\n\n    const position = geometry.getAttribute(\"position\");\n    const colors = new Float32Array(position.count * 3);\n\n    geometry.setAttribute(\"color\", new BufferAttribute(colors, 3));\n\n    this.add(new Mesh(geometry, this.material));\n\n    this.update();\n  }\n\n  dispose() {\n    this.children[0].geometry.dispose();\n    this.children[0].material.dispose();\n  }\n\n  update() {\n    const mesh = this.children[0];\n\n    if (this.color !== undefined) {\n      this.material.color.set(this.color);\n    } else {\n      const colors = mesh.geometry.getAttribute(\"color\");\n\n      _color1.copy(this.light.color);\n      _color2.copy(this.light.groundColor);\n\n      for (let i = 0, l = colors.count; i < l; i++) {\n        const color = i < l / 2 ? _color1 : _color2;\n\n        colors.setXYZ(i, color.r, color.g, color.b);\n      }\n\n      colors.needsUpdate = true;\n    }\n\n    mesh.lookAt(\n      _vector$1.setFromMatrixPosition(this.light.matrixWorld).negate()\n    );\n  }\n}\n\nclass GridHelper extends LineSegments {\n  constructor(size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888) {\n    color1 = new Color(color1);\n    color2 = new Color(color2);\n\n    const center = divisions / 2;\n    const step = size / divisions;\n    const halfSize = size / 2;\n\n    const vertices = [],\n      colors = [];\n\n    for (let i = 0, j = 0, k = -halfSize; i <= divisions; i++, k += step) {\n      vertices.push(-halfSize, 0, k, halfSize, 0, k);\n      vertices.push(k, 0, -halfSize, k, 0, halfSize);\n\n      const color = i === center ? color1 : color2;\n\n      color.toArray(colors, j);\n      j += 3;\n      color.toArray(colors, j);\n      j += 3;\n      color.toArray(colors, j);\n      j += 3;\n      color.toArray(colors, j);\n      j += 3;\n    }\n\n    const geometry = new BufferGeometry();\n    geometry.setAttribute(\"position\", new Float32BufferAttribute(vertices, 3));\n    geometry.setAttribute(\"color\", new Float32BufferAttribute(colors, 3));\n\n    const material = new LineBasicMaterial({\n      vertexColors: true,\n      toneMapped: false,\n    });\n\n    super(geometry, material);\n\n    this.type = \"GridHelper\";\n  }\n}\n\nclass PolarGridHelper extends LineSegments {\n  constructor(\n    radius = 10,\n    radials = 16,\n    circles = 8,\n    divisions = 64,\n    color1 = 0x444444,\n    color2 = 0x888888\n  ) {\n    color1 = new Color(color1);\n    color2 = new Color(color2);\n\n    const vertices = [];\n    const colors = [];\n\n    // create the radials\n\n    for (let i = 0; i <= radials; i++) {\n      const v = (i / radials) * (Math.PI * 2);\n\n      const x = Math.sin(v) * radius;\n      const z = Math.cos(v) * radius;\n\n      vertices.push(0, 0, 0);\n      vertices.push(x, 0, z);\n\n      const color = i & 1 ? color1 : color2;\n\n      colors.push(color.r, color.g, color.b);\n      colors.push(color.r, color.g, color.b);\n    }\n\n    // create the circles\n\n    for (let i = 0; i <= circles; i++) {\n      const color = i & 1 ? color1 : color2;\n\n      const r = radius - (radius / circles) * i;\n\n      for (let j = 0; j < divisions; j++) {\n        // first vertex\n\n        let v = (j / divisions) * (Math.PI * 2);\n\n        let x = Math.sin(v) * r;\n        let z = Math.cos(v) * r;\n\n        vertices.push(x, 0, z);\n        colors.push(color.r, color.g, color.b);\n\n        // second vertex\n\n        v = ((j + 1) / divisions) * (Math.PI * 2);\n\n        x = Math.sin(v) * r;\n        z = Math.cos(v) * r;\n\n        vertices.push(x, 0, z);\n        colors.push(color.r, color.g, color.b);\n      }\n    }\n\n    const geometry = new BufferGeometry();\n    geometry.setAttribute(\"position\", new Float32BufferAttribute(vertices, 3));\n    geometry.setAttribute(\"color\", new Float32BufferAttribute(colors, 3));\n\n    const material = new LineBasicMaterial({\n      vertexColors: true,\n      toneMapped: false,\n    });\n\n    super(geometry, material);\n\n    this.type = \"PolarGridHelper\";\n  }\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n  constructor(light, size, color) {\n    super();\n    this.light = light;\n    this.light.updateMatrixWorld();\n\n    this.matrix = light.matrixWorld;\n    this.matrixAutoUpdate = false;\n\n    this.color = color;\n\n    if (size === undefined) size = 1;\n\n    let geometry = new BufferGeometry();\n    geometry.setAttribute(\n      \"position\",\n      new Float32BufferAttribute(\n        [\n          -size,\n          size,\n          0,\n          size,\n          size,\n          0,\n          size,\n          -size,\n          0,\n          -size,\n          -size,\n          0,\n          -size,\n          size,\n          0,\n        ],\n        3\n      )\n    );\n\n    const material = new LineBasicMaterial({ fog: false, toneMapped: false });\n\n    this.lightPlane = new Line(geometry, material);\n    this.add(this.lightPlane);\n\n    geometry = new BufferGeometry();\n    geometry.setAttribute(\n      \"position\",\n      new Float32BufferAttribute([0, 0, 0, 0, 0, 1], 3)\n    );\n\n    this.targetLine = new Line(geometry, material);\n    this.add(this.targetLine);\n\n    this.update();\n  }\n\n  dispose() {\n    this.lightPlane.geometry.dispose();\n    this.lightPlane.material.dispose();\n    this.targetLine.geometry.dispose();\n    this.targetLine.material.dispose();\n  }\n\n  update() {\n    _v1.setFromMatrixPosition(this.light.matrixWorld);\n    _v2.setFromMatrixPosition(this.light.target.matrixWorld);\n    _v3.subVectors(_v2, _v1);\n\n    this.lightPlane.lookAt(_v2);\n\n    if (this.color !== undefined) {\n      this.lightPlane.material.color.set(this.color);\n      this.targetLine.material.color.set(this.color);\n    } else {\n      this.lightPlane.material.color.copy(this.light.color);\n      this.targetLine.material.color.copy(this.light.color);\n    }\n\n    this.targetLine.lookAt(_v2);\n    this.targetLine.scale.z = _v3.length();\n  }\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n  constructor(camera) {\n    const geometry = new BufferGeometry();\n    const material = new LineBasicMaterial({\n      color: 0xffffff,\n      vertexColors: true,\n      toneMapped: false,\n    });\n\n    const vertices = [];\n    const colors = [];\n\n    const pointMap = {};\n\n    // colors\n\n    const colorFrustum = new Color(0xffaa00);\n    const colorCone = new Color(0xff0000);\n    const colorUp = new Color(0x00aaff);\n    const colorTarget = new Color(0xffffff);\n    const colorCross = new Color(0x333333);\n\n    // near\n\n    addLine(\"n1\", \"n2\", colorFrustum);\n    addLine(\"n2\", \"n4\", colorFrustum);\n    addLine(\"n4\", \"n3\", colorFrustum);\n    addLine(\"n3\", \"n1\", colorFrustum);\n\n    // far\n\n    addLine(\"f1\", \"f2\", colorFrustum);\n    addLine(\"f2\", \"f4\", colorFrustum);\n    addLine(\"f4\", \"f3\", colorFrustum);\n    addLine(\"f3\", \"f1\", colorFrustum);\n\n    // sides\n\n    addLine(\"n1\", \"f1\", colorFrustum);\n    addLine(\"n2\", \"f2\", colorFrustum);\n    addLine(\"n3\", \"f3\", colorFrustum);\n    addLine(\"n4\", \"f4\", colorFrustum);\n\n    // cone\n\n    addLine(\"p\", \"n1\", colorCone);\n    addLine(\"p\", \"n2\", colorCone);\n    addLine(\"p\", \"n3\", colorCone);\n    addLine(\"p\", \"n4\", colorCone);\n\n    // up\n\n    addLine(\"u1\", \"u2\", colorUp);\n    addLine(\"u2\", \"u3\", colorUp);\n    addLine(\"u3\", \"u1\", colorUp);\n\n    // target\n\n    addLine(\"c\", \"t\", colorTarget);\n    addLine(\"p\", \"c\", colorCross);\n\n    // cross\n\n    addLine(\"cn1\", \"cn2\", colorCross);\n    addLine(\"cn3\", \"cn4\", colorCross);\n\n    addLine(\"cf1\", \"cf2\", colorCross);\n    addLine(\"cf3\", \"cf4\", colorCross);\n\n    function addLine(a, b, color) {\n      addPoint(a, color);\n      addPoint(b, color);\n    }\n\n    function addPoint(id, color) {\n      vertices.push(0, 0, 0);\n      colors.push(color.r, color.g, color.b);\n\n      if (pointMap[id] === undefined) {\n        pointMap[id] = [];\n      }\n\n      pointMap[id].push(vertices.length / 3 - 1);\n    }\n\n    geometry.setAttribute(\"position\", new Float32BufferAttribute(vertices, 3));\n    geometry.setAttribute(\"color\", new Float32BufferAttribute(colors, 3));\n\n    super(geometry, material);\n\n    this.type = \"CameraHelper\";\n\n    this.camera = camera;\n    if (this.camera.updateProjectionMatrix)\n      this.camera.updateProjectionMatrix();\n\n    this.matrix = camera.matrixWorld;\n    this.matrixAutoUpdate = false;\n\n    this.pointMap = pointMap;\n\n    this.update();\n  }\n\n  update() {\n    const geometry = this.geometry;\n    const pointMap = this.pointMap;\n\n    const w = 1,\n      h = 1;\n\n    // we need just camera projection matrix inverse\n    // world matrix must be identity\n\n    _camera.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse);\n\n    // center / target\n\n    setPoint(\"c\", pointMap, geometry, _camera, 0, 0, -1);\n    setPoint(\"t\", pointMap, geometry, _camera, 0, 0, 1);\n\n    // near\n\n    setPoint(\"n1\", pointMap, geometry, _camera, -w, -h, -1);\n    setPoint(\"n2\", pointMap, geometry, _camera, w, -h, -1);\n    setPoint(\"n3\", pointMap, geometry, _camera, -w, h, -1);\n    setPoint(\"n4\", pointMap, geometry, _camera, w, h, -1);\n\n    // far\n\n    setPoint(\"f1\", pointMap, geometry, _camera, -w, -h, 1);\n    setPoint(\"f2\", pointMap, geometry, _camera, w, -h, 1);\n    setPoint(\"f3\", pointMap, geometry, _camera, -w, h, 1);\n    setPoint(\"f4\", pointMap, geometry, _camera, w, h, 1);\n\n    // up\n\n    setPoint(\"u1\", pointMap, geometry, _camera, w * 0.7, h * 1.1, -1);\n    setPoint(\"u2\", pointMap, geometry, _camera, -w * 0.7, h * 1.1, -1);\n    setPoint(\"u3\", pointMap, geometry, _camera, 0, h * 2, -1);\n\n    // cross\n\n    setPoint(\"cf1\", pointMap, geometry, _camera, -w, 0, 1);\n    setPoint(\"cf2\", pointMap, geometry, _camera, w, 0, 1);\n    setPoint(\"cf3\", pointMap, geometry, _camera, 0, -h, 1);\n    setPoint(\"cf4\", pointMap, geometry, _camera, 0, h, 1);\n\n    setPoint(\"cn1\", pointMap, geometry, _camera, -w, 0, -1);\n    setPoint(\"cn2\", pointMap, geometry, _camera, w, 0, -1);\n    setPoint(\"cn3\", pointMap, geometry, _camera, 0, -h, -1);\n    setPoint(\"cn4\", pointMap, geometry, _camera, 0, h, -1);\n\n    geometry.getAttribute(\"position\").needsUpdate = true;\n  }\n\n  dispose() {\n    this.geometry.dispose();\n    this.material.dispose();\n  }\n}\n\nfunction setPoint(point, pointMap, geometry, camera, x, y, z) {\n  _vector.set(x, y, z).unproject(camera);\n\n  const points = pointMap[point];\n\n  if (points !== undefined) {\n    const position = geometry.getAttribute(\"position\");\n\n    for (let i = 0, l = points.length; i < l; i++) {\n      position.setXYZ(points[i], _vector.x, _vector.y, _vector.z);\n    }\n  }\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n  constructor(object, color = 0xffff00) {\n    const indices = new Uint16Array([\n      0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7,\n    ]);\n    const positions = new Float32Array(8 * 3);\n\n    const geometry = new BufferGeometry();\n    geometry.setIndex(new BufferAttribute(indices, 1));\n    geometry.setAttribute(\"position\", new BufferAttribute(positions, 3));\n\n    super(geometry, new LineBasicMaterial({ color: color, toneMapped: false }));\n\n    this.object = object;\n    this.type = \"BoxHelper\";\n\n    this.matrixAutoUpdate = false;\n\n    this.update();\n  }\n\n  update(object) {\n    if (object !== undefined) {\n      console.warn(\"THREE.BoxHelper: .update() has no longer arguments.\");\n    }\n\n    if (this.object !== undefined) {\n      _box.setFromObject(this.object);\n    }\n\n    if (_box.isEmpty()) return;\n\n    const min = _box.min;\n    const max = _box.max;\n\n    /*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n    const position = this.geometry.attributes.position;\n    const array = position.array;\n\n    array[0] = max.x;\n    array[1] = max.y;\n    array[2] = max.z;\n    array[3] = min.x;\n    array[4] = max.y;\n    array[5] = max.z;\n    array[6] = min.x;\n    array[7] = min.y;\n    array[8] = max.z;\n    array[9] = max.x;\n    array[10] = min.y;\n    array[11] = max.z;\n    array[12] = max.x;\n    array[13] = max.y;\n    array[14] = min.z;\n    array[15] = min.x;\n    array[16] = max.y;\n    array[17] = min.z;\n    array[18] = min.x;\n    array[19] = min.y;\n    array[20] = min.z;\n    array[21] = max.x;\n    array[22] = min.y;\n    array[23] = min.z;\n\n    position.needsUpdate = true;\n\n    this.geometry.computeBoundingSphere();\n  }\n\n  setFromObject(object) {\n    this.object = object;\n    this.update();\n\n    return this;\n  }\n\n  copy(source) {\n    LineSegments.prototype.copy.call(this, source);\n\n    this.object = source.object;\n\n    return this;\n  }\n}\n\nclass Box3Helper extends LineSegments {\n  constructor(box, color = 0xffff00) {\n    const indices = new Uint16Array([\n      0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7,\n    ]);\n\n    const positions = [\n      1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1,\n      1, -1, -1,\n    ];\n\n    const geometry = new BufferGeometry();\n\n    geometry.setIndex(new BufferAttribute(indices, 1));\n\n    geometry.setAttribute(\"position\", new Float32BufferAttribute(positions, 3));\n\n    super(geometry, new LineBasicMaterial({ color: color, toneMapped: false }));\n\n    this.box = box;\n\n    this.type = \"Box3Helper\";\n\n    this.geometry.computeBoundingSphere();\n  }\n\n  updateMatrixWorld(force) {\n    const box = this.box;\n\n    if (box.isEmpty()) return;\n\n    box.getCenter(this.position);\n\n    box.getSize(this.scale);\n\n    this.scale.multiplyScalar(0.5);\n\n    super.updateMatrixWorld(force);\n  }\n}\n\nclass PlaneHelper extends Line {\n  constructor(plane, size = 1, hex = 0xffff00) {\n    const color = hex;\n\n    const positions = [\n      1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1,\n      1, 1, 0, 0, 1, 0, 0, 0,\n    ];\n\n    const geometry = new BufferGeometry();\n    geometry.setAttribute(\"position\", new Float32BufferAttribute(positions, 3));\n    geometry.computeBoundingSphere();\n\n    super(geometry, new LineBasicMaterial({ color: color, toneMapped: false }));\n\n    this.type = \"PlaneHelper\";\n\n    this.plane = plane;\n\n    this.size = size;\n\n    const positions2 = [\n      1, 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1,\n    ];\n\n    const geometry2 = new BufferGeometry();\n    geometry2.setAttribute(\n      \"position\",\n      new Float32BufferAttribute(positions2, 3)\n    );\n    geometry2.computeBoundingSphere();\n\n    this.add(\n      new Mesh(\n        geometry2,\n        new MeshBasicMaterial({\n          color: color,\n          opacity: 0.2,\n          transparent: true,\n          depthWrite: false,\n          toneMapped: false,\n        })\n      )\n    );\n  }\n\n  updateMatrixWorld(force) {\n    let scale = -this.plane.constant;\n\n    if (Math.abs(scale) < 1e-8) scale = 1e-8; // sign does not matter\n\n    this.scale.set(0.5 * this.size, 0.5 * this.size, scale);\n\n    this.children[0].material.side = scale < 0 ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n\n    this.lookAt(this.plane.normal);\n\n    super.updateMatrixWorld(force);\n  }\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n  // dir is assumed to be normalized\n\n  constructor(\n    dir = new Vector3(0, 0, 1),\n    origin = new Vector3(0, 0, 0),\n    length = 1,\n    color = 0xffff00,\n    headLength = length * 0.2,\n    headWidth = headLength * 0.2\n  ) {\n    super();\n\n    this.type = \"ArrowHelper\";\n\n    if (_lineGeometry === undefined) {\n      _lineGeometry = new BufferGeometry();\n      _lineGeometry.setAttribute(\n        \"position\",\n        new Float32BufferAttribute([0, 0, 0, 0, 1, 0], 3)\n      );\n\n      _coneGeometry = new CylinderGeometry(0, 0.5, 1, 5, 1);\n      _coneGeometry.translate(0, -0.5, 0);\n    }\n\n    this.position.copy(origin);\n\n    this.line = new Line(\n      _lineGeometry,\n      new LineBasicMaterial({ color: color, toneMapped: false })\n    );\n    this.line.matrixAutoUpdate = false;\n    this.add(this.line);\n\n    this.cone = new Mesh(\n      _coneGeometry,\n      new MeshBasicMaterial({ color: color, toneMapped: false })\n    );\n    this.cone.matrixAutoUpdate = false;\n    this.add(this.cone);\n\n    this.setDirection(dir);\n    this.setLength(length, headLength, headWidth);\n  }\n\n  setDirection(dir) {\n    // dir is assumed to be normalized\n\n    if (dir.y > 0.99999) {\n      this.quaternion.set(0, 0, 0, 1);\n    } else if (dir.y < -0.99999) {\n      this.quaternion.set(1, 0, 0, 0);\n    } else {\n      _axis.set(dir.z, 0, -dir.x).normalize();\n\n      const radians = Math.acos(dir.y);\n\n      this.quaternion.setFromAxisAngle(_axis, radians);\n    }\n  }\n\n  setLength(length, headLength = length * 0.2, headWidth = headLength * 0.2) {\n    this.line.scale.set(1, Math.max(0.0001, length - headLength), 1); // see #17458\n    this.line.updateMatrix();\n\n    this.cone.scale.set(headWidth, headLength, headWidth);\n    this.cone.position.y = length;\n    this.cone.updateMatrix();\n  }\n\n  setColor(color) {\n    this.line.material.color.set(color);\n    this.cone.material.color.set(color);\n  }\n\n  copy(source) {\n    super.copy(source, false);\n\n    this.line.copy(source.line);\n    this.cone.copy(source.cone);\n\n    return this;\n  }\n}\n\nclass AxesHelper extends LineSegments {\n  constructor(size = 1) {\n    const vertices = [\n      0,\n      0,\n      0,\n      size,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      size,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      size,\n    ];\n\n    const colors = [1, 0, 0, 1, 0.6, 0, 0, 1, 0, 0.6, 1, 0, 0, 0, 1, 0, 0.6, 1];\n\n    const geometry = new BufferGeometry();\n    geometry.setAttribute(\"position\", new Float32BufferAttribute(vertices, 3));\n    geometry.setAttribute(\"color\", new Float32BufferAttribute(colors, 3));\n\n    const material = new LineBasicMaterial({\n      vertexColors: true,\n      toneMapped: false,\n    });\n\n    super(geometry, material);\n\n    this.type = \"AxesHelper\";\n  }\n\n  setColors(xAxisColor, yAxisColor, zAxisColor) {\n    const color = new Color();\n    const array = this.geometry.attributes.color.array;\n\n    color.set(xAxisColor);\n    color.toArray(array, 0);\n    color.toArray(array, 3);\n\n    color.set(yAxisColor);\n    color.toArray(array, 6);\n    color.toArray(array, 9);\n\n    color.set(zAxisColor);\n    color.toArray(array, 12);\n    color.toArray(array, 15);\n\n    this.geometry.attributes.color.needsUpdate = true;\n\n    return this;\n  }\n\n  dispose() {\n    this.geometry.dispose();\n    this.material.dispose();\n  }\n}\n\nclass ShapePath {\n  constructor() {\n    this.type = \"ShapePath\";\n\n    this.color = new Color();\n\n    this.subPaths = [];\n    this.currentPath = null;\n  }\n\n  moveTo(x, y) {\n    this.currentPath = new Path();\n    this.subPaths.push(this.currentPath);\n    this.currentPath.moveTo(x, y);\n\n    return this;\n  }\n\n  lineTo(x, y) {\n    this.currentPath.lineTo(x, y);\n\n    return this;\n  }\n\n  quadraticCurveTo(aCPx, aCPy, aX, aY) {\n    this.currentPath.quadraticCurveTo(aCPx, aCPy, aX, aY);\n\n    return this;\n  }\n\n  bezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY) {\n    this.currentPath.bezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY);\n\n    return this;\n  }\n\n  splineThru(pts) {\n    this.currentPath.splineThru(pts);\n\n    return this;\n  }\n\n  toShapes(isCCW, noHoles) {\n    function toShapesNoHoles(inSubpaths) {\n      const shapes = [];\n\n      for (let i = 0, l = inSubpaths.length; i < l; i++) {\n        const tmpPath = inSubpaths[i];\n\n        const tmpShape = new Shape();\n        tmpShape.curves = tmpPath.curves;\n\n        shapes.push(tmpShape);\n      }\n\n      return shapes;\n    }\n\n    function isPointInsidePolygon(inPt, inPolygon) {\n      const polyLen = inPolygon.length;\n\n      // inPt on polygon contour => immediate success    or\n      // toggling of inside/outside at every single! intersection point of an edge\n      //  with the horizontal line through inPt, left of inPt\n      //  not counting lowerY endpoints of edges and whole edges on that line\n      let inside = false;\n      for (let p = polyLen - 1, q = 0; q < polyLen; p = q++) {\n        let edgeLowPt = inPolygon[p];\n        let edgeHighPt = inPolygon[q];\n\n        let edgeDx = edgeHighPt.x - edgeLowPt.x;\n        let edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n        if (Math.abs(edgeDy) > Number.EPSILON) {\n          // not parallel\n          if (edgeDy < 0) {\n            edgeLowPt = inPolygon[q];\n            edgeDx = -edgeDx;\n            edgeHighPt = inPolygon[p];\n            edgeDy = -edgeDy;\n          }\n\n          if (inPt.y < edgeLowPt.y || inPt.y > edgeHighPt.y) continue;\n\n          if (inPt.y === edgeLowPt.y) {\n            if (inPt.x === edgeLowPt.x) return true; // inPt is on contour ?\n            // continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n          } else {\n            const perpEdge =\n              edgeDy * (inPt.x - edgeLowPt.x) - edgeDx * (inPt.y - edgeLowPt.y);\n            if (perpEdge === 0) return true; // inPt is on contour ?\n            if (perpEdge < 0) continue;\n            inside = !inside; // true intersection left of inPt\n          }\n        } else {\n          // parallel or collinear\n          if (inPt.y !== edgeLowPt.y) continue; // parallel\n          // edge lies on the same horizontal line as inPt\n          if (\n            (edgeHighPt.x <= inPt.x && inPt.x <= edgeLowPt.x) ||\n            (edgeLowPt.x <= inPt.x && inPt.x <= edgeHighPt.x)\n          )\n            return true; // inPt: Point on contour !\n          // continue;\n        }\n      }\n\n      return inside;\n    }\n\n    const isClockWise = ShapeUtils.isClockWise;\n\n    const subPaths = this.subPaths;\n    if (subPaths.length === 0) return [];\n\n    if (noHoles === true) return toShapesNoHoles(subPaths);\n\n    let solid, tmpPath, tmpShape;\n    const shapes = [];\n\n    if (subPaths.length === 1) {\n      tmpPath = subPaths[0];\n      tmpShape = new Shape();\n      tmpShape.curves = tmpPath.curves;\n      shapes.push(tmpShape);\n      return shapes;\n    }\n\n    let holesFirst = !isClockWise(subPaths[0].getPoints());\n    holesFirst = isCCW ? !holesFirst : holesFirst;\n\n    // console.log(\"Holes first\", holesFirst);\n\n    const betterShapeHoles = [];\n    const newShapes = [];\n    let newShapeHoles = [];\n    let mainIdx = 0;\n    let tmpPoints;\n\n    newShapes[mainIdx] = undefined;\n    newShapeHoles[mainIdx] = [];\n\n    for (let i = 0, l = subPaths.length; i < l; i++) {\n      tmpPath = subPaths[i];\n      tmpPoints = tmpPath.getPoints();\n      solid = isClockWise(tmpPoints);\n      solid = isCCW ? !solid : solid;\n\n      if (solid) {\n        if (!holesFirst && newShapes[mainIdx]) mainIdx++;\n\n        newShapes[mainIdx] = { s: new Shape(), p: tmpPoints };\n        newShapes[mainIdx].s.curves = tmpPath.curves;\n\n        if (holesFirst) mainIdx++;\n        newShapeHoles[mainIdx] = [];\n\n        //console.log('cw', i);\n      } else {\n        newShapeHoles[mainIdx].push({ h: tmpPath, p: tmpPoints[0] });\n\n        //console.log('ccw', i);\n      }\n    }\n\n    // only Holes? -> probably all Shapes with wrong orientation\n    if (!newShapes[0]) return toShapesNoHoles(subPaths);\n\n    if (newShapes.length > 1) {\n      let ambiguous = false;\n      const toChange = [];\n\n      for (let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx++) {\n        betterShapeHoles[sIdx] = [];\n      }\n\n      for (let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx++) {\n        const sho = newShapeHoles[sIdx];\n\n        for (let hIdx = 0; hIdx < sho.length; hIdx++) {\n          const ho = sho[hIdx];\n          let hole_unassigned = true;\n\n          for (let s2Idx = 0; s2Idx < newShapes.length; s2Idx++) {\n            if (isPointInsidePolygon(ho.p, newShapes[s2Idx].p)) {\n              if (sIdx !== s2Idx)\n                toChange.push({ froms: sIdx, tos: s2Idx, hole: hIdx });\n              if (hole_unassigned) {\n                hole_unassigned = false;\n                betterShapeHoles[s2Idx].push(ho);\n              } else {\n                ambiguous = true;\n              }\n            }\n          }\n\n          if (hole_unassigned) {\n            betterShapeHoles[sIdx].push(ho);\n          }\n        }\n      }\n      // console.log(\"ambiguous: \", ambiguous);\n\n      if (toChange.length > 0) {\n        // console.log(\"to change: \", toChange);\n        if (!ambiguous) newShapeHoles = betterShapeHoles;\n      }\n    }\n\n    let tmpHoles;\n\n    for (let i = 0, il = newShapes.length; i < il; i++) {\n      tmpShape = newShapes[i].s;\n      shapes.push(tmpShape);\n      tmpHoles = newShapeHoles[i];\n\n      for (let j = 0, jl = tmpHoles.length; j < jl; j++) {\n        tmpShape.holes.push(tmpHoles[j].h);\n      }\n    }\n\n    //console.log(\"shape\", shapes);\n\n    return shapes;\n  }\n}\n\nconst _floatView = new Float32Array(1);\nconst _int32View = new Int32Array(_floatView.buffer);\n\nclass DataUtils {\n  // Converts float32 to float16 (stored as uint16 value).\n\n  static toHalfFloat(val) {\n    if (val > 65504) {\n      console.warn(\"THREE.DataUtils.toHalfFloat(): value exceeds 65504.\");\n\n      val = 65504; // maximum representable value in float16\n    }\n\n    // Source: http://gamedev.stackexchange.com/questions/17326/conversion-of-a-number-from-single-precision-floating-point-representation-to-a/17410#17410\n\n    /* This method is faster than the OpenEXR implementation (very often\n     * used, eg. in Ogre), with the additional benefit of rounding, inspired\n     * by James Tursa?s half-precision code. */\n\n    _floatView[0] = val;\n    const x = _int32View[0];\n\n    let bits = (x >> 16) & 0x8000; /* Get the sign */\n    let m = (x >> 12) & 0x07ff; /* Keep one extra bit for rounding */\n    const e = (x >> 23) & 0xff; /* Using int is faster here */\n\n    /* If zero, or denormal, or exponent underflows too much for a denormal\n     * half, return signed zero. */\n    if (e < 103) return bits;\n\n    /* If NaN, return NaN. If Inf or exponent overflow, return Inf. */\n    if (e > 142) {\n      bits |= 0x7c00;\n      /* If exponent was 0xff and one mantissa bit was set, it means NaN,\n       * not Inf, so make sure we set one mantissa bit too. */\n      bits |= (e == 255 ? 0 : 1) && x & 0x007fffff;\n      return bits;\n    }\n\n    /* If exponent underflows but not too much, return a denormal */\n    if (e < 113) {\n      m |= 0x0800;\n      /* Extra rounding may overflow and set mantissa to 0 and exponent\n       * to 1, which is OK. */\n      bits |= (m >> (114 - e)) + ((m >> (113 - e)) & 1);\n      return bits;\n    }\n\n    bits |= ((e - 112) << 10) | (m >> 1);\n    /* Extra rounding. An overflow will set mantissa to 0 and increment\n     * the exponent, which is OK. */\n    bits += m & 1;\n    return bits;\n  }\n}\n\nconst LineStrip = 0;\nconst LinePieces = 1;\nconst NoColors = 0;\nconst FaceColors = 1;\nconst VertexColors = 2;\n\nfunction MeshFaceMaterial(materials) {\n  console.warn(\n    \"THREE.MeshFaceMaterial has been removed. Use an Array instead.\"\n  );\n  return materials;\n}\n\nfunction MultiMaterial(materials = []) {\n  console.warn(\"THREE.MultiMaterial has been removed. Use an Array instead.\");\n  materials.isMultiMaterial = true;\n  materials.materials = materials;\n  materials.clone = function () {\n    return materials.slice();\n  };\n\n  return materials;\n}\n\nfunction PointCloud(geometry, material) {\n  console.warn(\"THREE.PointCloud has been renamed to THREE.Points.\");\n  return new Points(geometry, material);\n}\n\nfunction Particle(material) {\n  console.warn(\"THREE.Particle has been renamed to THREE.Sprite.\");\n  return new Sprite(material);\n}\n\nfunction ParticleSystem(geometry, material) {\n  console.warn(\"THREE.ParticleSystem has been renamed to THREE.Points.\");\n  return new Points(geometry, material);\n}\n\nfunction PointCloudMaterial(parameters) {\n  console.warn(\n    \"THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.\"\n  );\n  return new PointsMaterial(parameters);\n}\n\nfunction ParticleBasicMaterial(parameters) {\n  console.warn(\n    \"THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.\"\n  );\n  return new PointsMaterial(parameters);\n}\n\nfunction ParticleSystemMaterial(parameters) {\n  console.warn(\n    \"THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.\"\n  );\n  return new PointsMaterial(parameters);\n}\n\nfunction Vertex(x, y, z) {\n  console.warn(\"THREE.Vertex has been removed. Use THREE.Vector3 instead.\");\n  return new Vector3(x, y, z);\n}\n\n//\n\nfunction DynamicBufferAttribute(array, itemSize) {\n  console.warn(\n    \"THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead.\"\n  );\n  return new BufferAttribute(array, itemSize).setUsage(DynamicDrawUsage);\n}\n\nfunction Int8Attribute(array, itemSize) {\n  console.warn(\n    \"THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.\"\n  );\n  return new Int8BufferAttribute(array, itemSize);\n}\n\nfunction Uint8Attribute(array, itemSize) {\n  console.warn(\n    \"THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.\"\n  );\n  return new Uint8BufferAttribute(array, itemSize);\n}\n\nfunction Uint8ClampedAttribute(array, itemSize) {\n  console.warn(\n    \"THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.\"\n  );\n  return new Uint8ClampedBufferAttribute(array, itemSize);\n}\n\nfunction Int16Attribute(array, itemSize) {\n  console.warn(\n    \"THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.\"\n  );\n  return new Int16BufferAttribute(array, itemSize);\n}\n\nfunction Uint16Attribute(array, itemSize) {\n  console.warn(\n    \"THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.\"\n  );\n  return new Uint16BufferAttribute(array, itemSize);\n}\n\nfunction Int32Attribute(array, itemSize) {\n  console.warn(\n    \"THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.\"\n  );\n  return new Int32BufferAttribute(array, itemSize);\n}\n\nfunction Uint32Attribute(array, itemSize) {\n  console.warn(\n    \"THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.\"\n  );\n  return new Uint32BufferAttribute(array, itemSize);\n}\n\nfunction Float32Attribute(array, itemSize) {\n  console.warn(\n    \"THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.\"\n  );\n  return new Float32BufferAttribute(array, itemSize);\n}\n\nfunction Float64Attribute(array, itemSize) {\n  console.warn(\n    \"THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.\"\n  );\n  return new Float64BufferAttribute(array, itemSize);\n}\n\n//\n\nCurve.create = function (construct, getPoint) {\n  console.log(\"THREE.Curve.create() has been deprecated\");\n\n  construct.prototype = Object.create(Curve.prototype);\n  construct.prototype.constructor = construct;\n  construct.prototype.getPoint = getPoint;\n\n  return construct;\n};\n\n//\n\nPath.prototype.fromPoints = function (points) {\n  console.warn(\n    \"THREE.Path: .fromPoints() has been renamed to .setFromPoints().\"\n  );\n  return this.setFromPoints(points);\n};\n\n//\n\nfunction AxisHelper(size) {\n  console.warn(\"THREE.AxisHelper has been renamed to THREE.AxesHelper.\");\n  return new AxesHelper(size);\n}\n\nfunction BoundingBoxHelper(object, color) {\n  console.warn(\n    \"THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.\"\n  );\n  return new BoxHelper(object, color);\n}\n\nfunction EdgesHelper(object, hex) {\n  console.warn(\n    \"THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.\"\n  );\n  return new LineSegments(\n    new EdgesGeometry(object.geometry),\n    new LineBasicMaterial({ color: hex !== undefined ? hex : 0xffffff })\n  );\n}\n\nGridHelper.prototype.setColors = function () {\n  console.error(\n    \"THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.\"\n  );\n};\n\nSkeletonHelper.prototype.update = function () {\n  console.error(\"THREE.SkeletonHelper: update() no longer needs to be called.\");\n};\n\nfunction WireframeHelper(object, hex) {\n  console.warn(\n    \"THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.\"\n  );\n  return new LineSegments(\n    new WireframeGeometry(object.geometry),\n    new LineBasicMaterial({ color: hex !== undefined ? hex : 0xffffff })\n  );\n}\n\n//\n\nLoader.prototype.extractUrlBase = function (url) {\n  console.warn(\n    \"THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.\"\n  );\n  return LoaderUtils.extractUrlBase(url);\n};\n\nLoader.Handlers = {\n  add: function (/* regex, loader */) {\n    console.error(\n      \"THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.\"\n    );\n  },\n\n  get: function (/* file */) {\n    console.error(\n      \"THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.\"\n    );\n  },\n};\n\nfunction XHRLoader(manager) {\n  console.warn(\"THREE.XHRLoader has been renamed to THREE.FileLoader.\");\n  return new FileLoader(manager);\n}\n\nfunction BinaryTextureLoader(manager) {\n  console.warn(\n    \"THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.\"\n  );\n  return new DataTextureLoader(manager);\n}\n\n//\n\nBox2.prototype.center = function (optionalTarget) {\n  console.warn(\"THREE.Box2: .center() has been renamed to .getCenter().\");\n  return this.getCenter(optionalTarget);\n};\n\nBox2.prototype.empty = function () {\n  console.warn(\"THREE.Box2: .empty() has been renamed to .isEmpty().\");\n  return this.isEmpty();\n};\n\nBox2.prototype.isIntersectionBox = function (box) {\n  console.warn(\n    \"THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().\"\n  );\n  return this.intersectsBox(box);\n};\n\nBox2.prototype.size = function (optionalTarget) {\n  console.warn(\"THREE.Box2: .size() has been renamed to .getSize().\");\n  return this.getSize(optionalTarget);\n};\n\n//\n\nBox3.prototype.center = function (optionalTarget) {\n  console.warn(\"THREE.Box3: .center() has been renamed to .getCenter().\");\n  return this.getCenter(optionalTarget);\n};\n\nBox3.prototype.empty = function () {\n  console.warn(\"THREE.Box3: .empty() has been renamed to .isEmpty().\");\n  return this.isEmpty();\n};\n\nBox3.prototype.isIntersectionBox = function (box) {\n  console.warn(\n    \"THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().\"\n  );\n  return this.intersectsBox(box);\n};\n\nBox3.prototype.isIntersectionSphere = function (sphere) {\n  console.warn(\n    \"THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().\"\n  );\n  return this.intersectsSphere(sphere);\n};\n\nBox3.prototype.size = function (optionalTarget) {\n  console.warn(\"THREE.Box3: .size() has been renamed to .getSize().\");\n  return this.getSize(optionalTarget);\n};\n\n//\n\nSphere.prototype.empty = function () {\n  console.warn(\"THREE.Sphere: .empty() has been renamed to .isEmpty().\");\n  return this.isEmpty();\n};\n\n//\n\nFrustum.prototype.setFromMatrix = function (m) {\n  console.warn(\n    \"THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix().\"\n  );\n  return this.setFromProjectionMatrix(m);\n};\n\n//\n\nLine3.prototype.center = function (optionalTarget) {\n  console.warn(\"THREE.Line3: .center() has been renamed to .getCenter().\");\n  return this.getCenter(optionalTarget);\n};\n\n//\n\nMatrix3.prototype.flattenToArrayOffset = function (array, offset) {\n  console.warn(\n    \"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\"\n  );\n  return this.toArray(array, offset);\n};\n\nMatrix3.prototype.multiplyVector3 = function (vector) {\n  console.warn(\n    \"THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.\"\n  );\n  return vector.applyMatrix3(this);\n};\n\nMatrix3.prototype.multiplyVector3Array = function (/* a */) {\n  console.error(\"THREE.Matrix3: .multiplyVector3Array() has been removed.\");\n};\n\nMatrix3.prototype.applyToBufferAttribute = function (attribute) {\n  console.warn(\n    \"THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead.\"\n  );\n  return attribute.applyMatrix3(this);\n};\n\nMatrix3.prototype.applyToVector3Array = function (/* array, offset, length */) {\n  console.error(\"THREE.Matrix3: .applyToVector3Array() has been removed.\");\n};\n\nMatrix3.prototype.getInverse = function (matrix) {\n  console.warn(\n    \"THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.\"\n  );\n  return this.copy(matrix).invert();\n};\n\n//\n\nMatrix4.prototype.extractPosition = function (m) {\n  console.warn(\n    \"THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().\"\n  );\n  return this.copyPosition(m);\n};\n\nMatrix4.prototype.flattenToArrayOffset = function (array, offset) {\n  console.warn(\n    \"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\"\n  );\n  return this.toArray(array, offset);\n};\n\nMatrix4.prototype.getPosition = function () {\n  console.warn(\n    \"THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.\"\n  );\n  return new Vector3().setFromMatrixColumn(this, 3);\n};\n\nMatrix4.prototype.setRotationFromQuaternion = function (q) {\n  console.warn(\n    \"THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().\"\n  );\n  return this.makeRotationFromQuaternion(q);\n};\n\nMatrix4.prototype.multiplyToArray = function () {\n  console.warn(\"THREE.Matrix4: .multiplyToArray() has been removed.\");\n};\n\nMatrix4.prototype.multiplyVector3 = function (vector) {\n  console.warn(\n    \"THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.\"\n  );\n  return vector.applyMatrix4(this);\n};\n\nMatrix4.prototype.multiplyVector4 = function (vector) {\n  console.warn(\n    \"THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.\"\n  );\n  return vector.applyMatrix4(this);\n};\n\nMatrix4.prototype.multiplyVector3Array = function (/* a */) {\n  console.error(\"THREE.Matrix4: .multiplyVector3Array() has been removed.\");\n};\n\nMatrix4.prototype.rotateAxis = function (v) {\n  console.warn(\n    \"THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.\"\n  );\n  v.transformDirection(this);\n};\n\nMatrix4.prototype.crossVector = function (vector) {\n  console.warn(\n    \"THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.\"\n  );\n  return vector.applyMatrix4(this);\n};\n\nMatrix4.prototype.translate = function () {\n  console.error(\"THREE.Matrix4: .translate() has been removed.\");\n};\n\nMatrix4.prototype.rotateX = function () {\n  console.error(\"THREE.Matrix4: .rotateX() has been removed.\");\n};\n\nMatrix4.prototype.rotateY = function () {\n  console.error(\"THREE.Matrix4: .rotateY() has been removed.\");\n};\n\nMatrix4.prototype.rotateZ = function () {\n  console.error(\"THREE.Matrix4: .rotateZ() has been removed.\");\n};\n\nMatrix4.prototype.rotateByAxis = function () {\n  console.error(\"THREE.Matrix4: .rotateByAxis() has been removed.\");\n};\n\nMatrix4.prototype.applyToBufferAttribute = function (attribute) {\n  console.warn(\n    \"THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead.\"\n  );\n  return attribute.applyMatrix4(this);\n};\n\nMatrix4.prototype.applyToVector3Array = function (/* array, offset, length */) {\n  console.error(\"THREE.Matrix4: .applyToVector3Array() has been removed.\");\n};\n\nMatrix4.prototype.makeFrustum = function (left, right, bottom, top, near, far) {\n  console.warn(\n    \"THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.\"\n  );\n  return this.makePerspective(left, right, top, bottom, near, far);\n};\n\nMatrix4.prototype.getInverse = function (matrix) {\n  console.warn(\n    \"THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.\"\n  );\n  return this.copy(matrix).invert();\n};\n\n//\n\nPlane.prototype.isIntersectionLine = function (line) {\n  console.warn(\n    \"THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().\"\n  );\n  return this.intersectsLine(line);\n};\n\n//\n\nQuaternion.prototype.multiplyVector3 = function (vector) {\n  console.warn(\n    \"THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.\"\n  );\n  return vector.applyQuaternion(this);\n};\n\nQuaternion.prototype.inverse = function () {\n  console.warn(\"THREE.Quaternion: .inverse() has been renamed to invert().\");\n  return this.invert();\n};\n\n//\n\nRay.prototype.isIntersectionBox = function (box) {\n  console.warn(\n    \"THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().\"\n  );\n  return this.intersectsBox(box);\n};\n\nRay.prototype.isIntersectionPlane = function (plane) {\n  console.warn(\n    \"THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().\"\n  );\n  return this.intersectsPlane(plane);\n};\n\nRay.prototype.isIntersectionSphere = function (sphere) {\n  console.warn(\n    \"THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().\"\n  );\n  return this.intersectsSphere(sphere);\n};\n\n//\n\nTriangle.prototype.area = function () {\n  console.warn(\"THREE.Triangle: .area() has been renamed to .getArea().\");\n  return this.getArea();\n};\n\nTriangle.prototype.barycoordFromPoint = function (point, target) {\n  console.warn(\n    \"THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().\"\n  );\n  return this.getBarycoord(point, target);\n};\n\nTriangle.prototype.midpoint = function (target) {\n  console.warn(\n    \"THREE.Triangle: .midpoint() has been renamed to .getMidpoint().\"\n  );\n  return this.getMidpoint(target);\n};\n\nTriangle.prototypenormal = function (target) {\n  console.warn(\"THREE.Triangle: .normal() has been renamed to .getNormal().\");\n  return this.getNormal(target);\n};\n\nTriangle.prototype.plane = function (target) {\n  console.warn(\"THREE.Triangle: .plane() has been renamed to .getPlane().\");\n  return this.getPlane(target);\n};\n\nTriangle.barycoordFromPoint = function (point, a, b, c, target) {\n  console.warn(\n    \"THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().\"\n  );\n  return Triangle.getBarycoord(point, a, b, c, target);\n};\n\nTriangle.normal = function (a, b, c, target) {\n  console.warn(\"THREE.Triangle: .normal() has been renamed to .getNormal().\");\n  return Triangle.getNormal(a, b, c, target);\n};\n\n//\n\nShape.prototype.extractAllPoints = function (divisions) {\n  console.warn(\n    \"THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.\"\n  );\n  return this.extractPoints(divisions);\n};\n\nShape.prototype.extrude = function (options) {\n  console.warn(\n    \"THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.\"\n  );\n  return new ExtrudeGeometry(this, options);\n};\n\nShape.prototype.makeGeometry = function (options) {\n  console.warn(\n    \"THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.\"\n  );\n  return new ShapeGeometry(this, options);\n};\n\n//\n\nVector2.prototype.fromAttribute = function (attribute, index, offset) {\n  console.warn(\n    \"THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().\"\n  );\n  return this.fromBufferAttribute(attribute, index, offset);\n};\n\nVector2.prototype.distanceToManhattan = function (v) {\n  console.warn(\n    \"THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().\"\n  );\n  return this.manhattanDistanceTo(v);\n};\n\nVector2.prototype.lengthManhattan = function () {\n  console.warn(\n    \"THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().\"\n  );\n  return this.manhattanLength();\n};\n\n//\n\nVector3.prototype.setEulerFromRotationMatrix = function () {\n  console.error(\n    \"THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.\"\n  );\n};\n\nVector3.prototype.setEulerFromQuaternion = function () {\n  console.error(\n    \"THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.\"\n  );\n};\n\nVector3.prototype.getPositionFromMatrix = function (m) {\n  console.warn(\n    \"THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().\"\n  );\n  return this.setFromMatrixPosition(m);\n};\n\nVector3.prototype.getScaleFromMatrix = function (m) {\n  console.warn(\n    \"THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().\"\n  );\n  return this.setFromMatrixScale(m);\n};\n\nVector3.prototype.getColumnFromMatrix = function (index, matrix) {\n  console.warn(\n    \"THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().\"\n  );\n  return this.setFromMatrixColumn(matrix, index);\n};\n\nVector3.prototype.applyProjection = function (m) {\n  console.warn(\n    \"THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.\"\n  );\n  return this.applyMatrix4(m);\n};\n\nVector3.prototype.fromAttribute = function (attribute, index, offset) {\n  console.warn(\n    \"THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().\"\n  );\n  return this.fromBufferAttribute(attribute, index, offset);\n};\n\nVector3.prototype.distanceToManhattan = function (v) {\n  console.warn(\n    \"THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().\"\n  );\n  return this.manhattanDistanceTo(v);\n};\n\nVector3.prototype.lengthManhattan = function () {\n  console.warn(\n    \"THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().\"\n  );\n  return this.manhattanLength();\n};\n\n//\n\nVector4.prototype.fromAttribute = function (attribute, index, offset) {\n  console.warn(\n    \"THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().\"\n  );\n  return this.fromBufferAttribute(attribute, index, offset);\n};\n\nVector4.prototype.lengthManhattan = function () {\n  console.warn(\n    \"THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().\"\n  );\n  return this.manhattanLength();\n};\n\n//\n\nObject3D.prototype.getChildByName = function (name) {\n  console.warn(\n    \"THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().\"\n  );\n  return this.getObjectByName(name);\n};\n\nObject3D.prototype.renderDepth = function () {\n  console.warn(\n    \"THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.\"\n  );\n};\n\nObject3D.prototype.translate = function (distance, axis) {\n  console.warn(\n    \"THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.\"\n  );\n  return this.translateOnAxis(axis, distance);\n};\n\nObject3D.prototype.getWorldRotation = function () {\n  console.error(\n    \"THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.\"\n  );\n};\n\nObject3D.prototype.applyMatrix = function (matrix) {\n  console.warn(\n    \"THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4().\"\n  );\n  return this.applyMatrix4(matrix);\n};\n\nObject.defineProperties(Object3D.prototype, {\n  eulerOrder: {\n    get: function () {\n      console.warn(\"THREE.Object3D: .eulerOrder is now .rotation.order.\");\n      return this.rotation.order;\n    },\n    set: function (value) {\n      console.warn(\"THREE.Object3D: .eulerOrder is now .rotation.order.\");\n      this.rotation.order = value;\n    },\n  },\n  useQuaternion: {\n    get: function () {\n      console.warn(\n        \"THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.\"\n      );\n    },\n    set: function () {\n      console.warn(\n        \"THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.\"\n      );\n    },\n  },\n});\n\nMesh.prototype.setDrawMode = function () {\n  console.error(\n    \"THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.\"\n  );\n};\n\nObject.defineProperties(Mesh.prototype, {\n  drawMode: {\n    get: function () {\n      console.error(\n        \"THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode.\"\n      );\n      return TrianglesDrawMode;\n    },\n    set: function () {\n      console.error(\n        \"THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.\"\n      );\n    },\n  },\n});\n\nSkinnedMesh.prototype.initBones = function () {\n  console.error(\"THREE.SkinnedMesh: initBones() has been removed.\");\n};\n\n//\n\nPerspectiveCamera.prototype.setLens = function (focalLength, filmGauge) {\n  console.warn(\n    \"THREE.PerspectiveCamera.setLens is deprecated. \" +\n      \"Use .setFocalLength and .filmGauge for a photographic setup.\"\n  );\n\n  if (filmGauge !== undefined) this.filmGauge = filmGauge;\n  this.setFocalLength(focalLength);\n};\n\n//\n\nObject.defineProperties(Light.prototype, {\n  onlyShadow: {\n    set: function () {\n      console.warn(\"THREE.Light: .onlyShadow has been removed.\");\n    },\n  },\n  shadowCameraFov: {\n    set: function (value) {\n      console.warn(\"THREE.Light: .shadowCameraFov is now .shadow.camera.fov.\");\n      this.shadow.camera.fov = value;\n    },\n  },\n  shadowCameraLeft: {\n    set: function (value) {\n      console.warn(\n        \"THREE.Light: .shadowCameraLeft is now .shadow.camera.left.\"\n      );\n      this.shadow.camera.left = value;\n    },\n  },\n  shadowCameraRight: {\n    set: function (value) {\n      console.warn(\n        \"THREE.Light: .shadowCameraRight is now .shadow.camera.right.\"\n      );\n      this.shadow.camera.right = value;\n    },\n  },\n  shadowCameraTop: {\n    set: function (value) {\n      console.warn(\"THREE.Light: .shadowCameraTop is now .shadow.camera.top.\");\n      this.shadow.camera.top = value;\n    },\n  },\n  shadowCameraBottom: {\n    set: function (value) {\n      console.warn(\n        \"THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.\"\n      );\n      this.shadow.camera.bottom = value;\n    },\n  },\n  shadowCameraNear: {\n    set: function (value) {\n      console.warn(\n        \"THREE.Light: .shadowCameraNear is now .shadow.camera.near.\"\n      );\n      this.shadow.camera.near = value;\n    },\n  },\n  shadowCameraFar: {\n    set: function (value) {\n      console.warn(\"THREE.Light: .shadowCameraFar is now .shadow.camera.far.\");\n      this.shadow.camera.far = value;\n    },\n  },\n  shadowCameraVisible: {\n    set: function () {\n      console.warn(\n        \"THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.\"\n      );\n    },\n  },\n  shadowBias: {\n    set: function (value) {\n      console.warn(\"THREE.Light: .shadowBias is now .shadow.bias.\");\n      this.shadow.bias = value;\n    },\n  },\n  shadowDarkness: {\n    set: function () {\n      console.warn(\"THREE.Light: .shadowDarkness has been removed.\");\n    },\n  },\n  shadowMapWidth: {\n    set: function (value) {\n      console.warn(\n        \"THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.\"\n      );\n      this.shadow.mapSize.width = value;\n    },\n  },\n  shadowMapHeight: {\n    set: function (value) {\n      console.warn(\n        \"THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.\"\n      );\n      this.shadow.mapSize.height = value;\n    },\n  },\n});\n\n//\n\nObject.defineProperties(BufferAttribute.prototype, {\n  length: {\n    get: function () {\n      console.warn(\n        \"THREE.BufferAttribute: .length has been deprecated. Use .count instead.\"\n      );\n      return this.array.length;\n    },\n  },\n  dynamic: {\n    get: function () {\n      console.warn(\n        \"THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.\"\n      );\n      return this.usage === DynamicDrawUsage;\n    },\n    set: function (/* value */) {\n      console.warn(\n        \"THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.\"\n      );\n      this.setUsage(DynamicDrawUsage);\n    },\n  },\n});\n\nBufferAttribute.prototype.setDynamic = function (value) {\n  console.warn(\n    \"THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead.\"\n  );\n  this.setUsage(value === true ? DynamicDrawUsage : StaticDrawUsage);\n  return this;\n};\n\n(BufferAttribute.prototype.copyIndicesArray = function (/* indices */) {\n  console.error(\"THREE.BufferAttribute: .copyIndicesArray() has been removed.\");\n}),\n  (BufferAttribute.prototype.setArray = function (/* array */) {\n    console.error(\n      \"THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers\"\n    );\n  });\n\n//\n\nBufferGeometry.prototype.addIndex = function (index) {\n  console.warn(\n    \"THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().\"\n  );\n  this.setIndex(index);\n};\n\nBufferGeometry.prototype.addAttribute = function (name, attribute) {\n  console.warn(\n    \"THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute().\"\n  );\n\n  if (\n    !(attribute && attribute.isBufferAttribute) &&\n    !(attribute && attribute.isInterleavedBufferAttribute)\n  ) {\n    console.warn(\n      \"THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).\"\n    );\n\n    return this.setAttribute(\n      name,\n      new BufferAttribute(arguments[1], arguments[2])\n    );\n  }\n\n  if (name === \"index\") {\n    console.warn(\n      \"THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.\"\n    );\n    this.setIndex(attribute);\n\n    return this;\n  }\n\n  return this.setAttribute(name, attribute);\n};\n\nBufferGeometry.prototype.addDrawCall = function (start, count, indexOffset) {\n  if (indexOffset !== undefined) {\n    console.warn(\n      \"THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.\"\n    );\n  }\n\n  console.warn(\"THREE.BufferGeometry: .addDrawCall() is now .addGroup().\");\n  this.addGroup(start, count);\n};\n\nBufferGeometry.prototype.clearDrawCalls = function () {\n  console.warn(\n    \"THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().\"\n  );\n  this.clearGroups();\n};\n\nBufferGeometry.prototype.computeOffsets = function () {\n  console.warn(\"THREE.BufferGeometry: .computeOffsets() has been removed.\");\n};\n\nBufferGeometry.prototype.removeAttribute = function (name) {\n  console.warn(\n    \"THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute().\"\n  );\n\n  return this.deleteAttribute(name);\n};\n\nBufferGeometry.prototype.applyMatrix = function (matrix) {\n  console.warn(\n    \"THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4().\"\n  );\n  return this.applyMatrix4(matrix);\n};\n\nObject.defineProperties(BufferGeometry.prototype, {\n  drawcalls: {\n    get: function () {\n      console.error(\n        \"THREE.BufferGeometry: .drawcalls has been renamed to .groups.\"\n      );\n      return this.groups;\n    },\n  },\n  offsets: {\n    get: function () {\n      console.warn(\n        \"THREE.BufferGeometry: .offsets has been renamed to .groups.\"\n      );\n      return this.groups;\n    },\n  },\n});\n\nInterleavedBuffer.prototype.setDynamic = function (value) {\n  console.warn(\n    \"THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead.\"\n  );\n  this.setUsage(value === true ? DynamicDrawUsage : StaticDrawUsage);\n  return this;\n};\n\nInterleavedBuffer.prototype.setArray = function (/* array */) {\n  console.error(\n    \"THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers\"\n  );\n};\n\n//\n\nExtrudeGeometry.prototype.getArrays = function () {\n  console.error(\"THREE.ExtrudeGeometry: .getArrays() has been removed.\");\n};\n\nExtrudeGeometry.prototype.addShapeList = function () {\n  console.error(\"THREE.ExtrudeGeometry: .addShapeList() has been removed.\");\n};\n\nExtrudeGeometry.prototype.addShape = function () {\n  console.error(\"THREE.ExtrudeGeometry: .addShape() has been removed.\");\n};\n\n//\n\nScene.prototype.dispose = function () {\n  console.error(\"THREE.Scene: .dispose() has been removed.\");\n};\n\n//\n\nUniform.prototype.onUpdate = function () {\n  console.warn(\n    \"THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.\"\n  );\n  return this;\n};\n\n//\n\nObject.defineProperties(Material.prototype, {\n  wrapAround: {\n    get: function () {\n      console.warn(\"THREE.Material: .wrapAround has been removed.\");\n    },\n    set: function () {\n      console.warn(\"THREE.Material: .wrapAround has been removed.\");\n    },\n  },\n\n  overdraw: {\n    get: function () {\n      console.warn(\"THREE.Material: .overdraw has been removed.\");\n    },\n    set: function () {\n      console.warn(\"THREE.Material: .overdraw has been removed.\");\n    },\n  },\n\n  wrapRGB: {\n    get: function () {\n      console.warn(\"THREE.Material: .wrapRGB has been removed.\");\n      return new Color();\n    },\n  },\n\n  shading: {\n    get: function () {\n      console.error(\n        \"THREE.\" +\n          this.type +\n          \": .shading has been removed. Use the boolean .flatShading instead.\"\n      );\n    },\n    set: function (value) {\n      console.warn(\n        \"THREE.\" +\n          this.type +\n          \": .shading has been removed. Use the boolean .flatShading instead.\"\n      );\n      this.flatShading = value === FlatShading;\n    },\n  },\n\n  stencilMask: {\n    get: function () {\n      console.warn(\n        \"THREE.\" +\n          this.type +\n          \": .stencilMask has been removed. Use .stencilFuncMask instead.\"\n      );\n      return this.stencilFuncMask;\n    },\n    set: function (value) {\n      console.warn(\n        \"THREE.\" +\n          this.type +\n          \": .stencilMask has been removed. Use .stencilFuncMask instead.\"\n      );\n      this.stencilFuncMask = value;\n    },\n  },\n\n  vertexTangents: {\n    get: function () {\n      console.warn(\n        \"THREE.\" + this.type + \": .vertexTangents has been removed.\"\n      );\n    },\n    set: function () {\n      console.warn(\n        \"THREE.\" + this.type + \": .vertexTangents has been removed.\"\n      );\n    },\n  },\n});\n\nObject.defineProperties(ShaderMaterial.prototype, {\n  derivatives: {\n    get: function () {\n      console.warn(\n        \"THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.\"\n      );\n      return this.extensions.derivatives;\n    },\n    set: function (value) {\n      console.warn(\n        \"THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.\"\n      );\n      this.extensions.derivatives = value;\n    },\n  },\n});\n\n//\n\nWebGLRenderer.prototype.clearTarget = function (\n  renderTarget,\n  color,\n  depth,\n  stencil\n) {\n  console.warn(\n    \"THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.\"\n  );\n  this.setRenderTarget(renderTarget);\n  this.clear(color, depth, stencil);\n};\n\nWebGLRenderer.prototype.animate = function (callback) {\n  console.warn(\"THREE.WebGLRenderer: .animate() is now .setAnimationLoop().\");\n  this.setAnimationLoop(callback);\n};\n\nWebGLRenderer.prototype.getCurrentRenderTarget = function () {\n  console.warn(\n    \"THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().\"\n  );\n  return this.getRenderTarget();\n};\n\nWebGLRenderer.prototype.getMaxAnisotropy = function () {\n  console.warn(\n    \"THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().\"\n  );\n  return this.capabilities.getMaxAnisotropy();\n};\n\nWebGLRenderer.prototype.getPrecision = function () {\n  console.warn(\n    \"THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.\"\n  );\n  return this.capabilities.precision;\n};\n\nWebGLRenderer.prototype.resetGLState = function () {\n  console.warn(\"THREE.WebGLRenderer: .resetGLState() is now .state.reset().\");\n  return this.state.reset();\n};\n\nWebGLRenderer.prototype.supportsFloatTextures = function () {\n  console.warn(\n    \"THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' ).\"\n  );\n  return this.extensions.get(\"OES_texture_float\");\n};\n\nWebGLRenderer.prototype.supportsHalfFloatTextures = function () {\n  console.warn(\n    \"THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' ).\"\n  );\n  return this.extensions.get(\"OES_texture_half_float\");\n};\n\nWebGLRenderer.prototype.supportsStandardDerivatives = function () {\n  console.warn(\n    \"THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' ).\"\n  );\n  return this.extensions.get(\"OES_standard_derivatives\");\n};\n\nWebGLRenderer.prototype.supportsCompressedTextureS3TC = function () {\n  console.warn(\n    \"THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' ).\"\n  );\n  return this.extensions.get(\"WEBGL_compressed_texture_s3tc\");\n};\n\nWebGLRenderer.prototype.supportsCompressedTexturePVRTC = function () {\n  console.warn(\n    \"THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' ).\"\n  );\n  return this.extensions.get(\"WEBGL_compressed_texture_pvrtc\");\n};\n\nWebGLRenderer.prototype.supportsBlendMinMax = function () {\n  console.warn(\n    \"THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' ).\"\n  );\n  return this.extensions.get(\"EXT_blend_minmax\");\n};\n\nWebGLRenderer.prototype.supportsVertexTextures = function () {\n  console.warn(\n    \"THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.\"\n  );\n  return this.capabilities.vertexTextures;\n};\n\nWebGLRenderer.prototype.supportsInstancedArrays = function () {\n  console.warn(\n    \"THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' ).\"\n  );\n  return this.extensions.get(\"ANGLE_instanced_arrays\");\n};\n\nWebGLRenderer.prototype.enableScissorTest = function (boolean) {\n  console.warn(\n    \"THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().\"\n  );\n  this.setScissorTest(boolean);\n};\n\nWebGLRenderer.prototype.initMaterial = function () {\n  console.warn(\"THREE.WebGLRenderer: .initMaterial() has been removed.\");\n};\n\nWebGLRenderer.prototype.addPrePlugin = function () {\n  console.warn(\"THREE.WebGLRenderer: .addPrePlugin() has been removed.\");\n};\n\nWebGLRenderer.prototype.addPostPlugin = function () {\n  console.warn(\"THREE.WebGLRenderer: .addPostPlugin() has been removed.\");\n};\n\nWebGLRenderer.prototype.updateShadowMap = function () {\n  console.warn(\"THREE.WebGLRenderer: .updateShadowMap() has been removed.\");\n};\n\nWebGLRenderer.prototype.setFaceCulling = function () {\n  console.warn(\"THREE.WebGLRenderer: .setFaceCulling() has been removed.\");\n};\n\nWebGLRenderer.prototype.allocTextureUnit = function () {\n  console.warn(\"THREE.WebGLRenderer: .allocTextureUnit() has been removed.\");\n};\n\nWebGLRenderer.prototype.setTexture = function () {\n  console.warn(\"THREE.WebGLRenderer: .setTexture() has been removed.\");\n};\n\nWebGLRenderer.prototype.setTexture2D = function () {\n  console.warn(\"THREE.WebGLRenderer: .setTexture2D() has been removed.\");\n};\n\nWebGLRenderer.prototype.setTextureCube = function () {\n  console.warn(\"THREE.WebGLRenderer: .setTextureCube() has been removed.\");\n};\n\nWebGLRenderer.prototype.getActiveMipMapLevel = function () {\n  console.warn(\n    \"THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel().\"\n  );\n  return this.getActiveMipmapLevel();\n};\n\nObject.defineProperties(WebGLRenderer.prototype, {\n  shadowMapEnabled: {\n    get: function () {\n      return this.shadowMap.enabled;\n    },\n    set: function (value) {\n      console.warn(\n        \"THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.\"\n      );\n      this.shadowMap.enabled = value;\n    },\n  },\n  shadowMapType: {\n    get: function () {\n      return this.shadowMap.type;\n    },\n    set: function (value) {\n      console.warn(\n        \"THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.\"\n      );\n      this.shadowMap.type = value;\n    },\n  },\n  shadowMapCullFace: {\n    get: function () {\n      console.warn(\n        \"THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.\"\n      );\n      return undefined;\n    },\n    set: function (/* value */) {\n      console.warn(\n        \"THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.\"\n      );\n    },\n  },\n  context: {\n    get: function () {\n      console.warn(\n        \"THREE.WebGLRenderer: .context has been removed. Use .getContext() instead.\"\n      );\n      return this.getContext();\n    },\n  },\n  vr: {\n    get: function () {\n      console.warn(\"THREE.WebGLRenderer: .vr has been renamed to .xr\");\n      return this.xr;\n    },\n  },\n  gammaInput: {\n    get: function () {\n      console.warn(\n        \"THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.\"\n      );\n      return false;\n    },\n    set: function () {\n      console.warn(\n        \"THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.\"\n      );\n    },\n  },\n  gammaOutput: {\n    get: function () {\n      console.warn(\n        \"THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.\"\n      );\n      return false;\n    },\n    set: function (value) {\n      console.warn(\n        \"THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.\"\n      );\n      this.outputEncoding = value === true ? sRGBEncoding : LinearEncoding;\n    },\n  },\n  toneMappingWhitePoint: {\n    get: function () {\n      console.warn(\n        \"THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.\"\n      );\n      return 1.0;\n    },\n    set: function () {\n      console.warn(\n        \"THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.\"\n      );\n    },\n  },\n});\n\nObject.defineProperties(WebGLShadowMap.prototype, {\n  cullFace: {\n    get: function () {\n      console.warn(\n        \"THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.\"\n      );\n      return undefined;\n    },\n    set: function (/* cullFace */) {\n      console.warn(\n        \"THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.\"\n      );\n    },\n  },\n  renderReverseSided: {\n    get: function () {\n      console.warn(\n        \"THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.\"\n      );\n      return undefined;\n    },\n    set: function () {\n      console.warn(\n        \"THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.\"\n      );\n    },\n  },\n  renderSingleSided: {\n    get: function () {\n      console.warn(\n        \"THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.\"\n      );\n      return undefined;\n    },\n    set: function () {\n      console.warn(\n        \"THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.\"\n      );\n    },\n  },\n});\n\nfunction WebGLRenderTargetCube(width, height, options) {\n  console.warn(\n    \"THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options ).\"\n  );\n  return new WebGLCubeRenderTarget(width, options);\n}\n\n//\n\nObject.defineProperties(WebGLRenderTarget.prototype, {\n  wrapS: {\n    get: function () {\n      console.warn(\"THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.\");\n      return this.texture.wrapS;\n    },\n    set: function (value) {\n      console.warn(\"THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.\");\n      this.texture.wrapS = value;\n    },\n  },\n  wrapT: {\n    get: function () {\n      console.warn(\"THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.\");\n      return this.texture.wrapT;\n    },\n    set: function (value) {\n      console.warn(\"THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.\");\n      this.texture.wrapT = value;\n    },\n  },\n  magFilter: {\n    get: function () {\n      console.warn(\n        \"THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.\"\n      );\n      return this.texture.magFilter;\n    },\n    set: function (value) {\n      console.warn(\n        \"THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.\"\n      );\n      this.texture.magFilter = value;\n    },\n  },\n  minFilter: {\n    get: function () {\n      console.warn(\n        \"THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.\"\n      );\n      return this.texture.minFilter;\n    },\n    set: function (value) {\n      console.warn(\n        \"THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.\"\n      );\n      this.texture.minFilter = value;\n    },\n  },\n  anisotropy: {\n    get: function () {\n      console.warn(\n        \"THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.\"\n      );\n      return this.texture.anisotropy;\n    },\n    set: function (value) {\n      console.warn(\n        \"THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.\"\n      );\n      this.texture.anisotropy = value;\n    },\n  },\n  offset: {\n    get: function () {\n      console.warn(\"THREE.WebGLRenderTarget: .offset is now .texture.offset.\");\n      return this.texture.offset;\n    },\n    set: function (value) {\n      console.warn(\"THREE.WebGLRenderTarget: .offset is now .texture.offset.\");\n      this.texture.offset = value;\n    },\n  },\n  repeat: {\n    get: function () {\n      console.warn(\"THREE.WebGLRenderTarget: .repeat is now .texture.repeat.\");\n      return this.texture.repeat;\n    },\n    set: function (value) {\n      console.warn(\"THREE.WebGLRenderTarget: .repeat is now .texture.repeat.\");\n      this.texture.repeat = value;\n    },\n  },\n  format: {\n    get: function () {\n      console.warn(\"THREE.WebGLRenderTarget: .format is now .texture.format.\");\n      return this.texture.format;\n    },\n    set: function (value) {\n      console.warn(\"THREE.WebGLRenderTarget: .format is now .texture.format.\");\n      this.texture.format = value;\n    },\n  },\n  type: {\n    get: function () {\n      console.warn(\"THREE.WebGLRenderTarget: .type is now .texture.type.\");\n      return this.texture.type;\n    },\n    set: function (value) {\n      console.warn(\"THREE.WebGLRenderTarget: .type is now .texture.type.\");\n      this.texture.type = value;\n    },\n  },\n  generateMipmaps: {\n    get: function () {\n      console.warn(\n        \"THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.\"\n      );\n      return this.texture.generateMipmaps;\n    },\n    set: function (value) {\n      console.warn(\n        \"THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.\"\n      );\n      this.texture.generateMipmaps = value;\n    },\n  },\n});\n\n//\n\nAudio.prototype.load = function (file) {\n  console.warn(\n    \"THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.\"\n  );\n  const scope = this;\n  const audioLoader = new AudioLoader();\n  audioLoader.load(file, function (buffer) {\n    scope.setBuffer(buffer);\n  });\n  return this;\n};\n\nAudioAnalyser.prototype.getData = function () {\n  console.warn(\"THREE.AudioAnalyser: .getData() is now .getFrequencyData().\");\n  return this.getFrequencyData();\n};\n\n//\n\nCubeCamera.prototype.updateCubeMap = function (renderer, scene) {\n  console.warn(\"THREE.CubeCamera: .updateCubeMap() is now .update().\");\n  return this.update(renderer, scene);\n};\n\nCubeCamera.prototype.clear = function (renderer, color, depth, stencil) {\n  console.warn(\"THREE.CubeCamera: .clear() is now .renderTarget.clear().\");\n  return this.renderTarget.clear(renderer, color, depth, stencil);\n};\n\nImageUtils.crossOrigin = undefined;\n\nImageUtils.loadTexture = function (url, mapping, onLoad, onError) {\n  console.warn(\n    \"THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.\"\n  );\n\n  const loader = new TextureLoader();\n  loader.setCrossOrigin(this.crossOrigin);\n\n  const texture = loader.load(url, onLoad, undefined, onError);\n\n  if (mapping) texture.mapping = mapping;\n\n  return texture;\n};\n\nImageUtils.loadTextureCube = function (urls, mapping, onLoad, onError) {\n  console.warn(\n    \"THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.\"\n  );\n\n  const loader = new CubeTextureLoader();\n  loader.setCrossOrigin(this.crossOrigin);\n\n  const texture = loader.load(urls, onLoad, undefined, onError);\n\n  if (mapping) texture.mapping = mapping;\n\n  return texture;\n};\n\nImageUtils.loadCompressedTexture = function () {\n  console.error(\n    \"THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.\"\n  );\n};\n\nImageUtils.loadCompressedTextureCube = function () {\n  console.error(\n    \"THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.\"\n  );\n};\n\n//\n\nfunction CanvasRenderer() {\n  console.error(\"THREE.CanvasRenderer has been removed\");\n}\n\n//\n\nfunction JSONLoader() {\n  console.error(\"THREE.JSONLoader has been removed.\");\n}\n\n//\n\nconst SceneUtils = {\n  createMultiMaterialObject: function (/* geometry, materials */) {\n    console.error(\n      \"THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js\"\n    );\n  },\n\n  detach: function (/* child, parent, scene */) {\n    console.error(\n      \"THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js\"\n    );\n  },\n\n  attach: function (/* child, scene, parent */) {\n    console.error(\n      \"THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js\"\n    );\n  },\n};\n\n//\n\nfunction LensFlare() {\n  console.error(\n    \"THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js\"\n  );\n}\n\n//\n\nfunction ParametricGeometry() {\n  console.error(\n    \"THREE.ParametricGeometry has been moved to /examples/jsm/geometries/ParametricGeometry.js\"\n  );\n  return new BufferGeometry();\n}\n\nfunction TextGeometry() {\n  console.error(\n    \"THREE.TextGeometry has been moved to /examples/jsm/geometries/TextGeometry.js\"\n  );\n  return new BufferGeometry();\n}\n\nfunction FontLoader() {\n  console.error(\n    \"THREE.FontLoader has been moved to /examples/jsm/loaders/FontLoader.js\"\n  );\n}\n\nfunction Font() {\n  console.error(\n    \"THREE.Font has been moved to /examples/jsm/loaders/FontLoader.js\"\n  );\n}\n\nfunction ImmediateRenderObject() {\n  console.error(\"THREE.ImmediateRenderObject has been removed.\");\n}\n\nif (typeof __THREE_DEVTOOLS__ !== \"undefined\") {\n  /* eslint-disable no-undef */\n  __THREE_DEVTOOLS__.dispatchEvent(\n    new CustomEvent(\"register\", {\n      detail: {\n        revision: REVISION,\n      },\n    })\n  );\n  /* eslint-enable no-undef */\n}\n\nif (typeof window !== \"undefined\") {\n  if (window.__THREE__) {\n    console.warn(\"WARNING: Multiple instances of Three.js being imported.\");\n  } else {\n    window.__THREE__ = REVISION;\n  }\n}\n\nexport {\n  ACESFilmicToneMapping,\n  AddEquation,\n  AddOperation,\n  AdditiveAnimationBlendMode,\n  AdditiveBlending,\n  AlphaFormat,\n  AlwaysDepth,\n  AlwaysStencilFunc,\n  AmbientLight,\n  AmbientLightProbe,\n  AnimationClip,\n  AnimationLoader,\n  AnimationMixer,\n  AnimationObjectGroup,\n  AnimationUtils,\n  ArcCurve,\n  ArrayCamera,\n  ArrowHelper,\n  Audio,\n  AudioAnalyser,\n  AudioContext,\n  AudioListener,\n  AudioLoader,\n  AxesHelper,\n  AxisHelper,\n  BackSide,\n  BasicDepthPacking,\n  BasicShadowMap,\n  BinaryTextureLoader,\n  Bone,\n  BooleanKeyframeTrack,\n  BoundingBoxHelper,\n  Box2,\n  Box3,\n  Box3Helper,\n  BoxGeometry as BoxBufferGeometry,\n  BoxGeometry,\n  BoxHelper,\n  BufferAttribute,\n  BufferGeometry,\n  BufferGeometryLoader,\n  ByteType,\n  Cache,\n  Camera,\n  CameraHelper,\n  CanvasRenderer,\n  CanvasTexture,\n  CatmullRomCurve3,\n  CineonToneMapping,\n  CircleGeometry as CircleBufferGeometry,\n  CircleGeometry,\n  ClampToEdgeWrapping,\n  Clock,\n  Color,\n  ColorKeyframeTrack,\n  CompressedTexture,\n  CompressedTextureLoader,\n  ConeGeometry as ConeBufferGeometry,\n  ConeGeometry,\n  CubeCamera,\n  CubeReflectionMapping,\n  CubeRefractionMapping,\n  CubeTexture,\n  CubeTextureLoader,\n  CubeUVReflectionMapping,\n  CubeUVRefractionMapping,\n  CubicBezierCurve,\n  CubicBezierCurve3,\n  CubicInterpolant,\n  CullFaceBack,\n  CullFaceFront,\n  CullFaceFrontBack,\n  CullFaceNone,\n  Curve,\n  CurvePath,\n  CustomBlending,\n  CustomToneMapping,\n  CylinderGeometry as CylinderBufferGeometry,\n  CylinderGeometry,\n  Cylindrical,\n  DataTexture,\n  DataTexture2DArray,\n  DataTexture3D,\n  DataTextureLoader,\n  DataUtils,\n  DecrementStencilOp,\n  DecrementWrapStencilOp,\n  DefaultLoadingManager,\n  DepthFormat,\n  DepthStencilFormat,\n  DepthTexture,\n  DirectionalLight,\n  DirectionalLightHelper,\n  DiscreteInterpolant,\n  DodecahedronGeometry as DodecahedronBufferGeometry,\n  DodecahedronGeometry,\n  DoubleSide,\n  DstAlphaFactor,\n  DstColorFactor,\n  DynamicBufferAttribute,\n  DynamicCopyUsage,\n  DynamicDrawUsage,\n  DynamicReadUsage,\n  EdgesGeometry,\n  EdgesHelper,\n  EllipseCurve,\n  EqualDepth,\n  EqualStencilFunc,\n  EquirectangularReflectionMapping,\n  EquirectangularRefractionMapping,\n  Euler,\n  EventDispatcher,\n  ExtrudeGeometry as ExtrudeBufferGeometry,\n  ExtrudeGeometry,\n  FaceColors,\n  FileLoader,\n  FlatShading,\n  Float16BufferAttribute,\n  Float32Attribute,\n  Float32BufferAttribute,\n  Float64Attribute,\n  Float64BufferAttribute,\n  FloatType,\n  Fog,\n  FogExp2,\n  Font,\n  FontLoader,\n  FrontSide,\n  Frustum,\n  GLBufferAttribute,\n  GLSL1,\n  GLSL3,\n  GammaEncoding,\n  GreaterDepth,\n  GreaterEqualDepth,\n  GreaterEqualStencilFunc,\n  GreaterStencilFunc,\n  GridHelper,\n  Group,\n  HalfFloatType,\n  HemisphereLight,\n  HemisphereLightHelper,\n  HemisphereLightProbe,\n  IcosahedronGeometry as IcosahedronBufferGeometry,\n  IcosahedronGeometry,\n  ImageBitmapLoader,\n  ImageLoader,\n  ImageUtils,\n  ImmediateRenderObject,\n  IncrementStencilOp,\n  IncrementWrapStencilOp,\n  InstancedBufferAttribute,\n  InstancedBufferGeometry,\n  InstancedInterleavedBuffer,\n  InstancedMesh,\n  Int16Attribute,\n  Int16BufferAttribute,\n  Int32Attribute,\n  Int32BufferAttribute,\n  Int8Attribute,\n  Int8BufferAttribute,\n  IntType,\n  InterleavedBuffer,\n  InterleavedBufferAttribute,\n  Interpolant,\n  InterpolateDiscrete,\n  InterpolateLinear,\n  InterpolateSmooth,\n  InvertStencilOp,\n  JSONLoader,\n  KeepStencilOp,\n  KeyframeTrack,\n  LOD,\n  LatheGeometry as LatheBufferGeometry,\n  LatheGeometry,\n  Layers,\n  LensFlare,\n  LessDepth,\n  LessEqualDepth,\n  LessEqualStencilFunc,\n  LessStencilFunc,\n  Light,\n  LightProbe,\n  Line,\n  Line3,\n  LineBasicMaterial,\n  LineCurve,\n  LineCurve3,\n  LineDashedMaterial,\n  LineLoop,\n  LinePieces,\n  LineSegments,\n  LineStrip,\n  LinearEncoding,\n  LinearFilter,\n  LinearInterpolant,\n  LinearMipMapLinearFilter,\n  LinearMipMapNearestFilter,\n  LinearMipmapLinearFilter,\n  LinearMipmapNearestFilter,\n  LinearToneMapping,\n  Loader,\n  LoaderUtils,\n  LoadingManager,\n  LogLuvEncoding,\n  LoopOnce,\n  LoopPingPong,\n  LoopRepeat,\n  LuminanceAlphaFormat,\n  LuminanceFormat,\n  MOUSE,\n  Material,\n  MaterialLoader,\n  MathUtils as Math,\n  MathUtils,\n  Matrix3,\n  Matrix4,\n  MaxEquation,\n  Mesh,\n  MeshBasicMaterial,\n  MeshDepthMaterial,\n  MeshDistanceMaterial,\n  MeshFaceMaterial,\n  MeshLambertMaterial,\n  MeshMatcapMaterial,\n  MeshNormalMaterial,\n  MeshPhongMaterial,\n  MeshPhysicalMaterial,\n  MeshStandardMaterial,\n  MeshToonMaterial,\n  MinEquation,\n  MirroredRepeatWrapping,\n  MixOperation,\n  MultiMaterial,\n  MultiplyBlending,\n  MultiplyOperation,\n  NearestFilter,\n  NearestMipMapLinearFilter,\n  NearestMipMapNearestFilter,\n  NearestMipmapLinearFilter,\n  NearestMipmapNearestFilter,\n  NeverDepth,\n  NeverStencilFunc,\n  NoBlending,\n  NoColors,\n  NoToneMapping,\n  NormalAnimationBlendMode,\n  NormalBlending,\n  NotEqualDepth,\n  NotEqualStencilFunc,\n  NumberKeyframeTrack,\n  Object3D,\n  ObjectLoader,\n  ObjectSpaceNormalMap,\n  OctahedronGeometry as OctahedronBufferGeometry,\n  OctahedronGeometry,\n  OneFactor,\n  OneMinusDstAlphaFactor,\n  OneMinusDstColorFactor,\n  OneMinusSrcAlphaFactor,\n  OneMinusSrcColorFactor,\n  OrthographicCamera,\n  PCFShadowMap,\n  PCFSoftShadowMap,\n  PMREMGenerator,\n  ParametricGeometry,\n  Particle,\n  ParticleBasicMaterial,\n  ParticleSystem,\n  ParticleSystemMaterial,\n  Path,\n  PerspectiveCamera,\n  Plane,\n  PlaneGeometry as PlaneBufferGeometry,\n  PlaneGeometry,\n  PlaneHelper,\n  PointCloud,\n  PointCloudMaterial,\n  PointLight,\n  PointLightHelper,\n  Points,\n  PointsMaterial,\n  PolarGridHelper,\n  PolyhedronGeometry as PolyhedronBufferGeometry,\n  PolyhedronGeometry,\n  PositionalAudio,\n  PropertyBinding,\n  PropertyMixer,\n  QuadraticBezierCurve,\n  QuadraticBezierCurve3,\n  Quaternion,\n  QuaternionKeyframeTrack,\n  QuaternionLinearInterpolant,\n  REVISION,\n  RGBADepthPacking,\n  RGBAFormat,\n  RGBAIntegerFormat,\n  RGBA_ASTC_10x10_Format,\n  RGBA_ASTC_10x5_Format,\n  RGBA_ASTC_10x6_Format,\n  RGBA_ASTC_10x8_Format,\n  RGBA_ASTC_12x10_Format,\n  RGBA_ASTC_12x12_Format,\n  RGBA_ASTC_4x4_Format,\n  RGBA_ASTC_5x4_Format,\n  RGBA_ASTC_5x5_Format,\n  RGBA_ASTC_6x5_Format,\n  RGBA_ASTC_6x6_Format,\n  RGBA_ASTC_8x5_Format,\n  RGBA_ASTC_8x6_Format,\n  RGBA_ASTC_8x8_Format,\n  RGBA_BPTC_Format,\n  RGBA_ETC2_EAC_Format,\n  RGBA_PVRTC_2BPPV1_Format,\n  RGBA_PVRTC_4BPPV1_Format,\n  RGBA_S3TC_DXT1_Format,\n  RGBA_S3TC_DXT3_Format,\n  RGBA_S3TC_DXT5_Format,\n  RGBDEncoding,\n  RGBEEncoding,\n  RGBEFormat,\n  RGBFormat,\n  RGBIntegerFormat,\n  RGBM16Encoding,\n  RGBM7Encoding,\n  RGB_ETC1_Format,\n  RGB_ETC2_Format,\n  RGB_PVRTC_2BPPV1_Format,\n  RGB_PVRTC_4BPPV1_Format,\n  RGB_S3TC_DXT1_Format,\n  RGFormat,\n  RGIntegerFormat,\n  RawShaderMaterial,\n  Ray,\n  Raycaster,\n  RectAreaLight,\n  RedFormat,\n  RedIntegerFormat,\n  ReinhardToneMapping,\n  RepeatWrapping,\n  ReplaceStencilOp,\n  ReverseSubtractEquation,\n  RingGeometry as RingBufferGeometry,\n  RingGeometry,\n  SRGB8_ALPHA8_ASTC_10x10_Format,\n  SRGB8_ALPHA8_ASTC_10x5_Format,\n  SRGB8_ALPHA8_ASTC_10x6_Format,\n  SRGB8_ALPHA8_ASTC_10x8_Format,\n  SRGB8_ALPHA8_ASTC_12x10_Format,\n  SRGB8_ALPHA8_ASTC_12x12_Format,\n  SRGB8_ALPHA8_ASTC_4x4_Format,\n  SRGB8_ALPHA8_ASTC_5x4_Format,\n  SRGB8_ALPHA8_ASTC_5x5_Format,\n  SRGB8_ALPHA8_ASTC_6x5_Format,\n  SRGB8_ALPHA8_ASTC_6x6_Format,\n  SRGB8_ALPHA8_ASTC_8x5_Format,\n  SRGB8_ALPHA8_ASTC_8x6_Format,\n  SRGB8_ALPHA8_ASTC_8x8_Format,\n  Scene,\n  SceneUtils,\n  ShaderChunk,\n  ShaderLib,\n  ShaderMaterial,\n  ShadowMaterial,\n  Shape,\n  ShapeGeometry as ShapeBufferGeometry,\n  ShapeGeometry,\n  ShapePath,\n  ShapeUtils,\n  ShortType,\n  Skeleton,\n  SkeletonHelper,\n  SkinnedMesh,\n  SmoothShading,\n  Sphere,\n  SphereGeometry as SphereBufferGeometry,\n  SphereGeometry,\n  Spherical,\n  SphericalHarmonics3,\n  SplineCurve,\n  SpotLight,\n  SpotLightHelper,\n  Sprite,\n  SpriteMaterial,\n  SrcAlphaFactor,\n  SrcAlphaSaturateFactor,\n  SrcColorFactor,\n  StaticCopyUsage,\n  StaticDrawUsage,\n  StaticReadUsage,\n  StereoCamera,\n  StreamCopyUsage,\n  StreamDrawUsage,\n  StreamReadUsage,\n  StringKeyframeTrack,\n  SubtractEquation,\n  SubtractiveBlending,\n  TOUCH,\n  TangentSpaceNormalMap,\n  TetrahedronGeometry as TetrahedronBufferGeometry,\n  TetrahedronGeometry,\n  TextGeometry,\n  Texture,\n  TextureLoader,\n  TorusGeometry as TorusBufferGeometry,\n  TorusGeometry,\n  TorusKnotGeometry as TorusKnotBufferGeometry,\n  TorusKnotGeometry,\n  Triangle,\n  TriangleFanDrawMode,\n  TriangleStripDrawMode,\n  TrianglesDrawMode,\n  TubeGeometry as TubeBufferGeometry,\n  TubeGeometry,\n  UVMapping,\n  Uint16Attribute,\n  Uint16BufferAttribute,\n  Uint32Attribute,\n  Uint32BufferAttribute,\n  Uint8Attribute,\n  Uint8BufferAttribute,\n  Uint8ClampedAttribute,\n  Uint8ClampedBufferAttribute,\n  Uniform,\n  UniformsLib,\n  UniformsUtils,\n  UnsignedByteType,\n  UnsignedInt248Type,\n  UnsignedIntType,\n  UnsignedShort4444Type,\n  UnsignedShort5551Type,\n  UnsignedShort565Type,\n  UnsignedShortType,\n  VSMShadowMap,\n  Vector2,\n  Vector3,\n  Vector4,\n  VectorKeyframeTrack,\n  Vertex,\n  VertexColors,\n  VideoTexture,\n  WebGL1Renderer,\n  WebGLCubeRenderTarget,\n  WebGLMultipleRenderTargets,\n  WebGLMultisampleRenderTarget,\n  WebGLRenderTarget,\n  WebGLRenderTargetCube,\n  WebGLRenderer,\n  WebGLUtils,\n  WireframeGeometry,\n  WireframeHelper,\n  WrapAroundEnding,\n  XHRLoader,\n  ZeroCurvatureEnding,\n  ZeroFactor,\n  ZeroSlopeEnding,\n  ZeroStencilOp,\n  sRGBEncoding,\n};\n","import { Vector3 } from \"../third_party/three.module.js\";\nimport { simplex3 } from \"../third_party/perlin.js\";\nimport { randomInRange } from \"./Maf.js\";\n\nconst generateNoiseFunction = () => {\n  const a = randomInRange(-100, 100);\n  const b = randomInRange(-100, 100);\n  const c = randomInRange(-100, 100);\n  const d = randomInRange(-100, 100);\n  const e = randomInRange(-100, 100);\n  const f = randomInRange(-100, 100);\n  console.log(`const func = seedFunc(${a},${b},${c},${d},${e},${f});`);\n  return function (v) {\n    const s = simplex3(v.x, v.y, v.z);\n    const s1 = simplex3(v.y + a, v.z + b, v.x + c);\n    const s2 = simplex3(v.z + c, v.x + d, v.y + f);\n    return new Vector3(s, s1, s2);\n  };\n};\n\nconst seedFunc = (a, b, c, d, e, f) => {\n  return function (v) {\n    const s = simplex3(v.x, v.y, v.z);\n    const s1 = simplex3(v.y + a, v.z + b, v.x + c);\n    const s2 = simplex3(v.z + c, v.x + d, v.y + f);\n    return new Vector3(s, s1, s2);\n  };\n};\n\nconst noiseFunc0 = seedFunc(-19.1, 33.4, 47.2, 74.2, -124.5, 99.4);\n\nconst e = 0.1;\nconst dx = new Vector3(e, 0.0, 0.0);\nconst dy = new Vector3(0.0, e, 0.0);\nconst dz = new Vector3(0.0, 0.0, e);\nconst tmp = new Vector3();\nconst res = new Vector3();\n\nconst curl = (p, noiseFunc = noiseFunc0) => {\n  const p_x0 = noiseFunc(tmp.copy(p).sub(dx));\n  const p_x1 = noiseFunc(tmp.copy(p).add(dx));\n  const p_y0 = noiseFunc(tmp.copy(p).sub(dy));\n  const p_y1 = noiseFunc(tmp.copy(p).add(dy));\n  const p_z0 = noiseFunc(tmp.copy(p).sub(dz));\n  const p_z1 = noiseFunc(tmp.copy(p).add(dz));\n  const x = p_y1.z - p_y0.z - p_z1.y + p_z0.y;\n  const y = p_z1.x - p_z0.x - p_x1.z + p_x0.z;\n  const z = p_x1.y - p_x0.y - p_y1.x + p_y0.x;\n  const divisor = 1.0 / (2.0 * e);\n  res.set(x, y, z).multiplyScalar(divisor).normalize();\n  return res;\n};\n\nexport { curl, generateNoiseFunction, seedFunc };\n","/*\n * A speed-improved perlin and simplex noise algorithms for 2D.\n *\n * Based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n * Converted to Javascript by Joseph Gentle.\n *\n * Version 2012-03-09\n *\n * This code was placed in the public domain by its original author,\n * Stefan Gustavson. You may use it as you see fit, but\n * attribution is appreciated.\n *\n */\n\nvar module = {};\n\nfunction Grad(x, y, z) {\n  this.x = x;\n  this.y = y;\n  this.z = z;\n}\n\nGrad.prototype.dot2 = function (x, y) {\n  return this.x * x + this.y * y;\n};\n\nGrad.prototype.dot3 = function (x, y, z) {\n  return this.x * x + this.y * y + this.z * z;\n};\n\nvar grad3 = [\n  new Grad(1, 1, 0),\n  new Grad(-1, 1, 0),\n  new Grad(1, -1, 0),\n  new Grad(-1, -1, 0),\n  new Grad(1, 0, 1),\n  new Grad(-1, 0, 1),\n  new Grad(1, 0, -1),\n  new Grad(-1, 0, -1),\n  new Grad(0, 1, 1),\n  new Grad(0, -1, 1),\n  new Grad(0, 1, -1),\n  new Grad(0, -1, -1),\n];\n\nvar p = [\n  151, 160, 137, 91, 90, 15, 131, 13, 201, 95, 96, 53, 194, 233, 7, 225, 140,\n  36, 103, 30, 69, 142, 8, 99, 37, 240, 21, 10, 23, 190, 6, 148, 247, 120, 234,\n  75, 0, 26, 197, 62, 94, 252, 219, 203, 117, 35, 11, 32, 57, 177, 33, 88, 237,\n  149, 56, 87, 174, 20, 125, 136, 171, 168, 68, 175, 74, 165, 71, 134, 139, 48,\n  27, 166, 77, 146, 158, 231, 83, 111, 229, 122, 60, 211, 133, 230, 220, 105,\n  92, 41, 55, 46, 245, 40, 244, 102, 143, 54, 65, 25, 63, 161, 1, 216, 80, 73,\n  209, 76, 132, 187, 208, 89, 18, 169, 200, 196, 135, 130, 116, 188, 159, 86,\n  164, 100, 109, 198, 173, 186, 3, 64, 52, 217, 226, 250, 124, 123, 5, 202, 38,\n  147, 118, 126, 255, 82, 85, 212, 207, 206, 59, 227, 47, 16, 58, 17, 182, 189,\n  28, 42, 223, 183, 170, 213, 119, 248, 152, 2, 44, 154, 163, 70, 221, 153, 101,\n  155, 167, 43, 172, 9, 129, 22, 39, 253, 19, 98, 108, 110, 79, 113, 224, 232,\n  178, 185, 112, 104, 218, 246, 97, 228, 251, 34, 242, 193, 238, 210, 144, 12,\n  191, 179, 162, 241, 81, 51, 145, 235, 249, 14, 239, 107, 49, 192, 214, 31,\n  181, 199, 106, 157, 184, 84, 204, 176, 115, 121, 50, 45, 127, 4, 150, 254,\n  138, 236, 205, 93, 222, 114, 67, 29, 24, 72, 243, 141, 128, 195, 78, 66, 215,\n  61, 156, 180,\n];\n// To remove the need for index wrapping, double the permutation table length\nvar perm = new Array(512);\nvar gradP = new Array(512);\n\n// This isn't a very good seeding function, but it works ok. It supports 2^16\n// different seed values. Write something better if you need more seeds.\nfunction seed(seed) {\n  if (seed > 0 && seed < 1) {\n    // Scale the seed out\n    seed *= 65536;\n  }\n\n  seed = Math.floor(seed);\n  if (seed < 256) {\n    seed |= seed << 8;\n  }\n\n  for (var i = 0; i < 256; i++) {\n    var v;\n    if (i & 1) {\n      v = p[i] ^ (seed & 255);\n    } else {\n      v = p[i] ^ ((seed >> 8) & 255);\n    }\n\n    perm[i] = perm[i + 256] = v;\n    gradP[i] = gradP[i + 256] = grad3[v % 12];\n  }\n}\n\nseed(0);\n\n/*\nfor(var i=0; i<256; i++) {\n  perm[i] = perm[i + 256] = p[i];\n  gradP[i] = gradP[i + 256] = grad3[perm[i] % 12];\n}*/\n\n// Skewing and unskewing factors for 2, 3, and 4 dimensions\nvar F2 = 0.5 * (Math.sqrt(3) - 1);\nvar G2 = (3 - Math.sqrt(3)) / 6;\n\nvar F3 = 1 / 3;\nvar G3 = 1 / 6;\n\n// 2D simplex noise\nfunction simplex2(xin, yin) {\n  var n0, n1, n2; // Noise contributions from the three corners\n  // Skew the input space to determine which simplex cell we're in\n  var s = (xin + yin) * F2; // Hairy factor for 2D\n  var i = Math.floor(xin + s);\n  var j = Math.floor(yin + s);\n  var t = (i + j) * G2;\n  var x0 = xin - i + t; // The x,y distances from the cell origin, unskewed.\n  var y0 = yin - j + t;\n  // For the 2D case, the simplex shape is an equilateral triangle.\n  // Determine which simplex we are in.\n  var i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n  if (x0 > y0) {\n    // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n    i1 = 1;\n    j1 = 0;\n  } else {\n    // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n    i1 = 0;\n    j1 = 1;\n  }\n  // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n  // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n  // c = (3-sqrt(3))/6\n  var x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n  var y1 = y0 - j1 + G2;\n  var x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords\n  var y2 = y0 - 1 + 2 * G2;\n  // Work out the hashed gradient indices of the three simplex corners\n  i &= 255;\n  j &= 255;\n  var gi0 = gradP[i + perm[j]];\n  var gi1 = gradP[i + i1 + perm[j + j1]];\n  var gi2 = gradP[i + 1 + perm[j + 1]];\n  // Calculate the contribution from the three corners\n  var t0 = 0.5 - x0 * x0 - y0 * y0;\n  if (t0 < 0) {\n    n0 = 0;\n  } else {\n    t0 *= t0;\n    n0 = t0 * t0 * gi0.dot2(x0, y0); // (x,y) of grad3 used for 2D gradient\n  }\n  var t1 = 0.5 - x1 * x1 - y1 * y1;\n  if (t1 < 0) {\n    n1 = 0;\n  } else {\n    t1 *= t1;\n    n1 = t1 * t1 * gi1.dot2(x1, y1);\n  }\n  var t2 = 0.5 - x2 * x2 - y2 * y2;\n  if (t2 < 0) {\n    n2 = 0;\n  } else {\n    t2 *= t2;\n    n2 = t2 * t2 * gi2.dot2(x2, y2);\n  }\n  // Add contributions from each corner to get the final noise value.\n  // The result is scaled to return values in the interval [-1,1].\n  return 70 * (n0 + n1 + n2);\n}\n\n// 3D simplex noise\nfunction simplex3(xin, yin, zin) {\n  var n0, n1, n2, n3; // Noise contributions from the four corners\n\n  // Skew the input space to determine which simplex cell we're in\n  var s = (xin + yin + zin) * F3; // Hairy factor for 2D\n  var i = Math.floor(xin + s);\n  var j = Math.floor(yin + s);\n  var k = Math.floor(zin + s);\n\n  var t = (i + j + k) * G3;\n  var x0 = xin - i + t; // The x,y distances from the cell origin, unskewed.\n  var y0 = yin - j + t;\n  var z0 = zin - k + t;\n\n  // For the 3D case, the simplex shape is a slightly irregular tetrahedron.\n  // Determine which simplex we are in.\n  var i1, j1, k1; // Offsets for second corner of simplex in (i,j,k) coords\n  var i2, j2, k2; // Offsets for third corner of simplex in (i,j,k) coords\n  if (x0 >= y0) {\n    if (y0 >= z0) {\n      i1 = 1;\n      j1 = 0;\n      k1 = 0;\n      i2 = 1;\n      j2 = 1;\n      k2 = 0;\n    } else if (x0 >= z0) {\n      i1 = 1;\n      j1 = 0;\n      k1 = 0;\n      i2 = 1;\n      j2 = 0;\n      k2 = 1;\n    } else {\n      i1 = 0;\n      j1 = 0;\n      k1 = 1;\n      i2 = 1;\n      j2 = 0;\n      k2 = 1;\n    }\n  } else {\n    if (y0 < z0) {\n      i1 = 0;\n      j1 = 0;\n      k1 = 1;\n      i2 = 0;\n      j2 = 1;\n      k2 = 1;\n    } else if (x0 < z0) {\n      i1 = 0;\n      j1 = 1;\n      k1 = 0;\n      i2 = 0;\n      j2 = 1;\n      k2 = 1;\n    } else {\n      i1 = 0;\n      j1 = 1;\n      k1 = 0;\n      i2 = 1;\n      j2 = 1;\n      k2 = 0;\n    }\n  }\n  // A step of (1,0,0) in (i,j,k) means a step of (1-c,-c,-c) in (x,y,z),\n  // a step of (0,1,0) in (i,j,k) means a step of (-c,1-c,-c) in (x,y,z), and\n  // a step of (0,0,1) in (i,j,k) means a step of (-c,-c,1-c) in (x,y,z), where\n  // c = 1/6.\n  var x1 = x0 - i1 + G3; // Offsets for second corner\n  var y1 = y0 - j1 + G3;\n  var z1 = z0 - k1 + G3;\n\n  var x2 = x0 - i2 + 2 * G3; // Offsets for third corner\n  var y2 = y0 - j2 + 2 * G3;\n  var z2 = z0 - k2 + 2 * G3;\n\n  var x3 = x0 - 1 + 3 * G3; // Offsets for fourth corner\n  var y3 = y0 - 1 + 3 * G3;\n  var z3 = z0 - 1 + 3 * G3;\n\n  // Work out the hashed gradient indices of the four simplex corners\n  i &= 255;\n  j &= 255;\n  k &= 255;\n  var gi0 = gradP[i + perm[j + perm[k]]];\n  var gi1 = gradP[i + i1 + perm[j + j1 + perm[k + k1]]];\n  var gi2 = gradP[i + i2 + perm[j + j2 + perm[k + k2]]];\n  var gi3 = gradP[i + 1 + perm[j + 1 + perm[k + 1]]];\n\n  // Calculate the contribution from the four corners\n  var t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0;\n  if (t0 < 0) {\n    n0 = 0;\n  } else {\n    t0 *= t0;\n    n0 = t0 * t0 * gi0.dot3(x0, y0, z0); // (x,y) of grad3 used for 2D gradient\n  }\n  var t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1;\n  if (t1 < 0) {\n    n1 = 0;\n  } else {\n    t1 *= t1;\n    n1 = t1 * t1 * gi1.dot3(x1, y1, z1);\n  }\n  var t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2;\n  if (t2 < 0) {\n    n2 = 0;\n  } else {\n    t2 *= t2;\n    n2 = t2 * t2 * gi2.dot3(x2, y2, z2);\n  }\n  var t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3;\n  if (t3 < 0) {\n    n3 = 0;\n  } else {\n    t3 *= t3;\n    n3 = t3 * t3 * gi3.dot3(x3, y3, z3);\n  }\n  // Add contributions from each corner to get the final noise value.\n  // The result is scaled to return values in the interval [-1,1].\n  return 32 * (n0 + n1 + n2 + n3);\n}\n\n// ##### Perlin noise stuff\n\nfunction fade(t) {\n  return t * t * t * (t * (t * 6 - 15) + 10);\n}\n\nfunction lerp(a, b, t) {\n  return (1 - t) * a + t * b;\n}\n\n// 2D Perlin Noise\nfunction perlin2(x, y) {\n  // Find unit grid cell containing point\n  var X = Math.floor(x),\n    Y = Math.floor(y);\n  // Get relative xy coordinates of point within that cell\n  x = x - X;\n  y = y - Y;\n  // Wrap the integer cells at 255 (smaller integer period can be introduced here)\n  X = X & 255;\n  Y = Y & 255;\n\n  // Calculate noise contributions from each of the four corners\n  var n00 = gradP[X + perm[Y]].dot2(x, y);\n  var n01 = gradP[X + perm[Y + 1]].dot2(x, y - 1);\n  var n10 = gradP[X + 1 + perm[Y]].dot2(x - 1, y);\n  var n11 = gradP[X + 1 + perm[Y + 1]].dot2(x - 1, y - 1);\n\n  // Compute the fade curve value for x\n  var u = fade(x);\n\n  // Interpolate the four results\n  return lerp(lerp(n00, n10, u), lerp(n01, n11, u), fade(y));\n}\n\n// 3D Perlin Noise\nfunction perlin3(x, y, z) {\n  // Find unit grid cell containing point\n  var X = Math.floor(x),\n    Y = Math.floor(y),\n    Z = Math.floor(z);\n  // Get relative xyz coordinates of point within that cell\n  x = x - X;\n  y = y - Y;\n  z = z - Z;\n  // Wrap the integer cells at 255 (smaller integer period can be introduced here)\n  X = X & 255;\n  Y = Y & 255;\n  Z = Z & 255;\n\n  // Calculate noise contributions from each of the eight corners\n  var n000 = gradP[X + perm[Y + perm[Z]]].dot3(x, y, z);\n  var n001 = gradP[X + perm[Y + perm[Z + 1]]].dot3(x, y, z - 1);\n  var n010 = gradP[X + perm[Y + 1 + perm[Z]]].dot3(x, y - 1, z);\n  var n011 = gradP[X + perm[Y + 1 + perm[Z + 1]]].dot3(x, y - 1, z - 1);\n  var n100 = gradP[X + 1 + perm[Y + perm[Z]]].dot3(x - 1, y, z);\n  var n101 = gradP[X + 1 + perm[Y + perm[Z + 1]]].dot3(x - 1, y, z - 1);\n  var n110 = gradP[X + 1 + perm[Y + 1 + perm[Z]]].dot3(x - 1, y - 1, z);\n  var n111 = gradP[X + 1 + perm[Y + 1 + perm[Z + 1]]].dot3(x - 1, y - 1, z - 1);\n\n  // Compute the fade curve value for x, y, z\n  var u = fade(x);\n  var v = fade(y);\n  var w = fade(z);\n\n  // Interpolate\n  return lerp(\n    lerp(lerp(n000, n100, u), lerp(n001, n101, u), w),\n    lerp(lerp(n010, n110, u), lerp(n011, n111, u), w),\n    v\n  );\n}\n\nexport { simplex2, simplex3, perlin2, perlin3 };\n","// Current version.\nconst VERSION = \"1.0.0\";\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\n\n// https://www.opengl.org/sdk/docs/man/html/clamp.xhtml\n\nfunction clamp(v, minVal, maxVal) {\n  return Math.min(maxVal, Math.max(minVal, v));\n}\n\n// https://www.opengl.org/sdk/docs/man/html/step.xhtml\n\nfunction step(edge, v) {\n  return v < edge ? 0 : 1;\n}\n\n// https://www.opengl.org/sdk/docs/man/html/smoothstep.xhtml\n\nfunction smoothStep(edge0, edge1, v) {\n  var t = clamp((v - edge0) / (edge1 - edge0), 0.0, 1.0);\n  return t * t * (3.0 - 2.0 * t);\n}\n\n// http://docs.unity3d.com/ScriptReference/Mathf.html\n// http://www.shaderific.com/glsl-functions/\n// https://www.opengl.org/sdk/docs/man4/html/\n// https://msdn.microsoft.com/en-us/library/windows/desktop/ff471376(v=vs.85).aspx\n// http://moutjs.com/docs/v0.11/math.html#map\n// https://code.google.com/p/kuda/source/browse/public/js/hemi/utils/mathUtils.js?r=8d581c02651077c4ac3f5fc4725323210b6b13cc\n\n// Converts from degrees to radians.\nfunction deg2Rad(degrees) {\n  return (degrees * Math.PI) / 180;\n}\n\nconst toRadians = deg2Rad;\n\n// Converts from radians to degrees.\nfunction rad2Deg(radians) {\n  return (radians * 180) / Math.PI;\n}\n\nconst toDegrees = rad2Deg;\n\nfunction clamp01(v) {\n  return clamp(v, 0, 1);\n}\n\n// https://www.opengl.org/sdk/docs/man/html/mix.xhtml\n\nfunction mix(x, y, a) {\n  if (a <= 0) return x;\n  if (a >= 1) return y;\n  return x + a * (y - x);\n}\n\nconst lerp = mix;\n\nfunction inverseMix(a, b, v) {\n  return (v - a) / (b - a);\n}\n\nconst inverseLerp = inverseMix;\n\nfunction mixUnclamped(x, y, a) {\n  if (a <= 0) return x;\n  if (a >= 1) return y;\n  return x + a * (y - x);\n}\n\nconst lerpUnclamped = mixUnclamped;\n\n// https://www.opengl.org/sdk/docs/man/html/fract.xhtml\n\nfunction fract(v) {\n  return v - Math.floor(v);\n}\n\nconst frac = fract;\n\n// http://stackoverflow.com/questions/4965301/finding-if-a-number-is-a-power-of-2\n\nfunction isPowerOfTwo(v) {\n  return ((v - 1) & v) == 0;\n}\n\n// https://bocoup.com/weblog/find-the-closest-power-of-2-with-javascript\n\nfunction closestPowerOfTwo(v) {\n  return Math.pow(2, Math.round(Math.log(v) / Math.log(2)));\n}\n\nfunction nextPowerOfTwo(v) {\n  return Math.pow(2, Math.ceil(Math.log(v) / Math.log(2)));\n}\n\n// http://stackoverflow.com/questions/1878907/the-smallest-difference-between-2-angles\n\n//function mod(a, n) { return a - Math.floor(a/n) * n; }\nfunction mod(a, n) {\n  return ((a % n) + n) % n;\n}\n\nfunction deltaAngle(a, b) {\n  var d = mod(b - a, 360);\n  if (d > 180) d = Math.abs(d - 360);\n  return d;\n}\n\nconst deltaAngleDeg = deltaAngle;\n\nfunction deltaAngleRad(a, b) {\n  return toRadians(deltaAngle(toDegrees(a), toDegrees(b)));\n}\n\nfunction lerpAngle(a, b, t) {\n  var angle = deltaAngle(a, b);\n  return mod(a + lerp(0, angle, t), 360);\n}\n\nconst lerpAngleDeg = lerpAngle;\n\nfunction lerpAngleRad(a, b, t) {\n  return toRadians(lerpAngleDeg(toDegrees(a), toDegrees(b), t));\n}\n\n// http://gamedev.stackexchange.com/questions/74324/gamma-space-and-linear-space-with-shader\n\nfunction gammaToLinearSpace(v) {\n  return Math.pow(v, 2.2);\n}\n\nfunction linearToGammaSpace(v) {\n  return Math.pow(v, 1 / 2.2);\n}\n\nfunction map(from1, to1, from2, to2, v) {\n  return from2 + ((v - from1) * (to2 - from2)) / (to1 - from1);\n}\n\nconst scale = map;\n\n// http://www.iquilezles.org/www/articles/functions/functions.htm\n\nfunction almostIdentity(x, m, n) {\n  if (x > m) return x;\n\n  var a = 2 * n - m;\n  var b = 2 * m - 3 * n;\n  var t = x / m;\n\n  return (a * t + b) * t * t + n;\n}\n\nfunction impulse(k, x) {\n  var h = k * x;\n  return h * Math.exp(1 - h);\n}\n\nfunction cubicPulse(c, w, x) {\n  x = Math.abs(x - c);\n  if (x > w) return 0;\n  x /= w;\n  return 1 - x * x * (3 - 2 * x);\n}\n\nfunction expStep(x, k, n) {\n  return Math.exp(-k * Math.pow(x, n));\n}\n\nfunction parabola(x, k) {\n  return Math.pow(4 * x * (1 - x), k);\n}\n\nfunction powerCurve(x, a, b) {\n  var k = Math.pow(a + b, a + b) / (Math.pow(a, a) * Math.pow(b, b));\n  return k * Math.pow(x, a) * Math.pow(1 - x, b);\n}\n\n// http://iquilezles.org/www/articles/smin/smin.htm ?\n\nfunction latLonToCartesian(lat, lon) {\n  lon += 180;\n  lat = clamp(lat, -85, 85);\n  var phi = toRadians(90 - lat);\n  var theta = toRadians(180 - lon);\n  var x = Math.sin(phi) * Math.cos(theta);\n  var y = Math.cos(phi);\n  var z = Math.sin(phi) * Math.sin(theta);\n\n  return { x: x, y: y, z: z };\n}\n\nfunction cartesianToLatLon(x, y, z) {\n  var n = Math.sqrt(x * x + y * y + z * z);\n  return { lat: Math.asin(z / n), lon: Math.atan2(y, x) };\n}\n\nfunction randomInRange(min, max) {\n  return min + Math.random() * (max - min);\n}\n\nfunction norm(v, minVal, maxVal) {\n  return (v - minVal) / (maxVal - minVal);\n}\n\nfunction hash(n) {\n  return fract((1.0 + Math.cos(n)) * 415.92653);\n}\n\nfunction noise2d(x, y) {\n  var xhash = hash(x * 37.0);\n  var yhash = hash(y * 57.0);\n  return fract(xhash + yhash);\n}\n\n// http://iquilezles.org/www/articles/smin/smin.htm\n\nfunction smoothMin(a, b, k) {\n  var res = Math.exp(-k * a) + Math.exp(-k * b);\n  return -Math.log(res) / k;\n}\n\nfunction smoothMax(a, b, k) {\n  return Math.log(Math.exp(a) + Math.exp(b)) / k;\n}\n\nfunction almost(a, b) {\n  return Math.abs(a - b) < 0.0001;\n}\n\nexport {\n  VERSION,\n  PI,\n  TAU,\n  clamp,\n  step,\n  smoothStep,\n  deg2Rad,\n  toRadians,\n  rad2Deg,\n  toDegrees,\n  clamp01,\n  mix,\n  lerp,\n  inverseMix,\n  inverseLerp,\n  mixUnclamped,\n  lerpUnclamped,\n  fract,\n  frac,\n  isPowerOfTwo,\n  closestPowerOfTwo,\n  nextPowerOfTwo,\n  mod,\n  deltaAngle,\n  deltaAngleDeg,\n  deltaAngleRad,\n  lerpAngleDeg,\n  lerpAngleRad,\n  gammaToLinearSpace,\n  linearToGammaSpace,\n  map,\n  scale,\n  almostIdentity,\n  impulse,\n  cubicPulse,\n  expStep,\n  parabola,\n  powerCurve,\n  latLonToCartesian,\n  cartesianToLatLon,\n  randomInRange,\n  norm,\n  hash,\n  noise2d,\n  smoothMin,\n  smoothMax,\n  almost,\n};\n","import {\n  BufferGeometry,\n  Material,\n  Color,\n  Vector2,\n  RawShaderMaterial,\n  BufferAttribute,\n} from \"../third_party/three.module.js\";\n\nfunction memcpy(src, srcOffset, dst, dstOffset, length) {\n  var i;\n\n  src = src.subarray || src.slice ? src : src.buffer;\n  dst = dst.subarray || dst.slice ? dst : dst.buffer;\n\n  src = srcOffset\n    ? src.subarray\n      ? src.subarray(srcOffset, length && srcOffset + length)\n      : src.slice(srcOffset, length && srcOffset + length)\n    : src;\n\n  if (dst.set) {\n    dst.set(src, dstOffset);\n  } else {\n    for (i = 0; i < src.length; i++) {\n      dst[i + dstOffset] = src[i];\n    }\n  }\n\n  return dst;\n}\n\nclass MeshLine extends BufferGeometry {\n  constructor() {\n    super();\n\n    this.positions = [];\n\n    this.previous = [];\n    this.next = [];\n    this.side = [];\n    this.width = [];\n    this.indices_array = [];\n    this.uvs = [];\n    this.counters = [];\n\n    this.widthCallback = null;\n  }\n\n  setPoints(points, widthCallback = null) {\n    this.positions.length = 0;\n    this.widthCallback = widthCallback;\n\n    for (var j = 0; j < points.length; j++) {\n      var p = points[j];\n      var c = j / points.length;\n      this.positions.push(p.x, p.y, p.z);\n      this.positions.push(p.x, p.y, p.z);\n      this.counters.push(c);\n      this.counters.push(c);\n    }\n\n    this.process();\n  }\n\n  compareV3(a, b) {\n    var aa = a * 6;\n    var ab = b * 6;\n    return (\n      this.positions[aa] === this.positions[ab] &&\n      this.positions[aa + 1] === this.positions[ab + 1] &&\n      this.positions[aa + 2] === this.positions[ab + 2]\n    );\n  }\n\n  copyV3(a) {\n    var aa = a * 6;\n    return [this.positions[aa], this.positions[aa + 1], this.positions[aa + 2]];\n  }\n\n  process() {\n    var l = this.positions.length / 6;\n\n    this.previous = [];\n    this.next = [];\n    this.side = [];\n    this.width = [];\n    this.indices_array = [];\n    this.uvs = [];\n\n    var w;\n\n    var v;\n    // initial previous points\n    if (this.compareV3(0, l - 1)) {\n      v = this.copyV3(l - 2);\n    } else {\n      v = this.copyV3(0);\n    }\n    this.previous.push(v[0], v[1], v[2]);\n    this.previous.push(v[0], v[1], v[2]);\n\n    for (var j = 0; j < l; j++) {\n      // sides\n      this.side.push(1);\n      this.side.push(-1);\n\n      // widths\n      if (this.widthCallback) w = this.widthCallback(j / (l - 1));\n      else w = 1;\n      this.width.push(w);\n      this.width.push(w);\n\n      // uvs\n      this.uvs.push(j / (l - 1), 0);\n      this.uvs.push(j / (l - 1), 1);\n\n      if (j < l - 1) {\n        // points previous to poisitions\n        v = this.copyV3(j);\n        this.previous.push(v[0], v[1], v[2]);\n        this.previous.push(v[0], v[1], v[2]);\n\n        // indices\n        var n = j * 2;\n        this.indices_array.push(n, n + 1, n + 2);\n        this.indices_array.push(n + 2, n + 1, n + 3);\n      }\n      if (j > 0) {\n        // points after poisitions\n        v = this.copyV3(j);\n        this.next.push(v[0], v[1], v[2]);\n        this.next.push(v[0], v[1], v[2]);\n      }\n    }\n\n    // last next point\n    if (this.compareV3(l - 1, 0)) {\n      v = this.copyV3(1);\n    } else {\n      v = this.copyV3(l - 1);\n    }\n    this.next.push(v[0], v[1], v[2]);\n    this.next.push(v[0], v[1], v[2]);\n\n    // redefining the attribute seems to prevent range errors\n    // if the user sets a differing number of vertices\n    if (\n      !this._attributes ||\n      this._attributes.position.count !== this.positions.length / 3\n    ) {\n      this._attributes = {\n        position: new BufferAttribute(new Float32Array(this.positions), 3),\n        previous: new BufferAttribute(new Float32Array(this.previous), 3),\n        next: new BufferAttribute(new Float32Array(this.next), 3),\n        side: new BufferAttribute(new Float32Array(this.side), 1),\n        width: new BufferAttribute(new Float32Array(this.width), 1),\n        uv: new BufferAttribute(new Float32Array(this.uvs), 2),\n        index: new BufferAttribute(new Uint16Array(this.indices_array), 1),\n        counters: new BufferAttribute(new Float32Array(this.counters), 1),\n      };\n    } else {\n      this._attributes.position.copyArray(new Float32Array(this.positions));\n      this._attributes.position.needsUpdate = true;\n      this._attributes.previous.copyArray(new Float32Array(this.previous));\n      this._attributes.previous.needsUpdate = true;\n      this._attributes.next.copyArray(new Float32Array(this.next));\n      this._attributes.next.needsUpdate = true;\n      this._attributes.side.copyArray(new Float32Array(this.side));\n      this._attributes.side.needsUpdate = true;\n      this._attributes.width.copyArray(new Float32Array(this.width));\n      this._attributes.width.needsUpdate = true;\n      this._attributes.uv.copyArray(new Float32Array(this.uvs));\n      this._attributes.uv.needsUpdate = true;\n      this._attributes.index.copyArray(new Uint16Array(this.indices_array));\n      this._attributes.index.needsUpdate = true;\n    }\n\n    this.setAttribute(\"position\", this._attributes.position);\n    this.setAttribute(\"previous\", this._attributes.previous);\n    this.setAttribute(\"next\", this._attributes.next);\n    this.setAttribute(\"side\", this._attributes.side);\n    this.setAttribute(\"width\", this._attributes.width);\n    this.setAttribute(\"uv\", this._attributes.uv);\n    this.setAttribute(\"counters\", this._attributes.counters);\n\n    this.setIndex(this._attributes.index);\n\n    this.computeBoundingSphere();\n    this.computeBoundingBox();\n  }\n\n  /**\n   * Fast method to advance the line by one position.  The oldest position is removed.\n   * @param position\n   */\n  advance(position) {\n    var positions = this.attributes.position.array;\n    var previous = this.attributes.previous.array;\n    var next = this.attributes.next.array;\n    var l = positions.length;\n\n    // PREVIOUS\n    memcpy(positions, 0, previous, 0, l);\n\n    // POSITIONS\n    memcpy(positions, 6, positions, 0, l - 6);\n\n    positions[l - 6] = position.x;\n    positions[l - 5] = position.y;\n    positions[l - 4] = position.z;\n    positions[l - 3] = position.x;\n    positions[l - 2] = position.y;\n    positions[l - 1] = position.z;\n\n    // NEXT\n    memcpy(positions, 6, next, 0, l - 6);\n\n    next[l - 6] = position.x;\n    next[l - 5] = position.y;\n    next[l - 4] = position.z;\n    next[l - 3] = position.x;\n    next[l - 2] = position.y;\n    next[l - 1] = position.z;\n\n    this.attributes.position.needsUpdate = true;\n    this.attributes.previous.needsUpdate = true;\n    this.attributes.next.needsUpdate = true;\n  }\n}\n\nclass MeshLineMaterial extends Material {\n  constructor(parameters) {\n    super();\n    var vertexShaderSource = [\n      `precision highp float;\n    \n    attribute vec3 position;\n    attribute vec3 previous;\n    attribute vec3 next;\n    attribute float side;\n    attribute float width;\n    attribute vec2 uv;\n    attribute float counters;\n    \n    uniform mat4 projectionMatrix;\n    uniform mat4 modelViewMatrix;\n    uniform vec2 resolution;\n    uniform float lineWidth;\n    uniform vec3 color;\n    uniform float opacity;\n    uniform float near;\n    uniform float far;\n    uniform float sizeAttenuation;\n    \n    varying float vDepth;\n    varying vec2 vUV;\n    varying vec4 vColor;\n    varying float vCounters;\n    \n    vec2 fix( vec4 i, float aspect ) {\n\n    \n        vec2 res = i.xy / i.w;\n        res.x *= aspect;\n        vCounters = counters;\n        return res;\n    \n    }\n    \n    void main() {\n    \n        float aspect = resolution.x / resolution.y;\n        float pixelWidthRatio = 1. / (resolution.x * projectionMatrix[0][0]);\n    \n        vColor = vec4( color, opacity );\n        vUV = uv;\n    \n        mat4 m = projectionMatrix * modelViewMatrix;\n        vec4 finalPosition = m * vec4( position, 1.0 );\n        vec4 prevPos = m * vec4( previous, 1.0 );\n        vec4 nextPos = m * vec4( next, 1.0 );\n    \n        vec2 currentP = fix( finalPosition, aspect );\n        vec2 prevP = fix( prevPos, aspect );\n        vec2 nextP = fix( nextPos, aspect );\n    \n        float pixelWidth = finalPosition.w * pixelWidthRatio;\n        float w = 1.8 * pixelWidth * lineWidth * width;\n    \n        if( sizeAttenuation == 1. ) {\n\n            w = 1.8 * lineWidth * width;\n        }\n    \n        vec2 dir;\n        if( nextP == currentP ) dir = normalize( currentP - prevP );\n        else if( prevP == currentP ) dir = normalize( nextP - currentP );\n        else {\n\n            vec2 dir1 = normalize( currentP - prevP );\n            vec2 dir2 = normalize( nextP - currentP );\n            dir = normalize( dir1 + dir2 );\n    \n            vec2 perp = vec2( -dir1.y, dir1.x );\n            vec2 miter = vec2( -dir.y, dir.x );\n            //w = clamp( w / dot( miter, perp ), 0., 4. * lineWidth * width );\n    \n        }\n    \n        //vec2 normal = ( cross( vec3( dir, 0. ), vec3( 0., 0., 1. ) ) ).xy;\n        vec2 normal = vec2( -dir.y, dir.x );\n        normal.x /= aspect;\n        normal *= .5 * w;\n\n        // float fogDensity = .35;\n        // float fogDepth = - finalPosition.z;\n        // float fogFactor = exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n        // vDepth = fogFactor; \n    \n        vec4 offset = vec4( normal * side, 0.0, 1.0 );\n        finalPosition.xy += offset.xy;\n\n        gl_Position = finalPosition;\n    \n    }`,\n    ];\n\n    var fragmentShaderSource = [\n      `#extension GL_OES_standard_derivatives : enable\n    precision mediump float;\n\n    uniform sampler2D map;\n    uniform sampler2D alphaMap;\n    uniform float useMap;\n    uniform float useAlphaMap;\n    uniform float useDash;\n    uniform vec2 dashArray;\n    uniform float dashOffset;\n    uniform float visibility;\n    uniform float alphaTest;\n    uniform vec2 repeat;\n\n    varying float vDepth;\n    varying vec2 vUV;\n    varying vec4 vColor;\n    varying float vCounters;\n\n    void main() {\n      vec4 c = vColor;\n      vec2 tuv = vUV * repeat;\n      if(useDash == 1.) {\n        tuv.x = mod((tuv.x + dashOffset),1.);\n      }\n      if( useMap == 1. ) c *= texture2D(map, tuv);\n      if( useAlphaMap == 1. ) c.a *= texture2D( alphaMap, tuv ).a;\n      if( useDash == 1. ){\n        if(mod(vCounters*repeat.x+dashOffset,1.)>(dashArray.x / (dashArray.x+dashArray.y))) {\n          c.a = 0.;\n        }\n      }\n      if( c.a < alphaTest ) discard;\n      gl_FragColor = c;\n      gl_FragColor.a *= step(vCounters,visibility);\n      // gl_FragColor.rgb = mix(vec3(1.), gl_FragColor.rgb, vDepth);\n    }`,\n    ];\n\n    function check(v, d) {\n      if (v === undefined) return d;\n      return v;\n    }\n\n    parameters = parameters || {};\n\n    this.lineWidth = check(parameters.lineWidth, 1);\n    this.map = check(parameters.map, null);\n    this.useMap = check(parameters.useMap, 0);\n    this.alphaMap = check(parameters.alphaMap, null);\n    this.useAlphaMap = check(parameters.useAlphaMap, 0);\n    this.color = check(parameters.color, new Color(0xffffff));\n    this.opacity = check(parameters.opacity, 1);\n    this.resolution = check(parameters.resolution, new Vector2(1, 1));\n    this.sizeAttenuation = check(parameters.sizeAttenuation, 1);\n    this.near = check(parameters.near, 1);\n    this.far = check(parameters.far, 1);\n    this.dashArray = check(parameters.dashArray, new Vector2(1, 0));\n    this.dashRatio = check(parameters.dashRatio, 0);\n    this.dashOffset = check(parameters.dashOffset, 0);\n    this.useDash = this.dashArray ? 1 : 0;\n    this.visibility = check(parameters.visibility, 1);\n    this.alphaTest = check(parameters.alphaTest, 0);\n    this.repeat = check(parameters.repeat, new Vector2(1, 1));\n\n    var material = new RawShaderMaterial({\n      uniforms: {\n        lineWidth: { value: this.lineWidth },\n        map: { value: this.map },\n        useMap: { value: this.useMap },\n        alphaMap: { value: this.alphaMap },\n        useAlphaMap: { value: this.useAlphaMap },\n        color: { value: this.color },\n        opacity: { value: this.opacity },\n        resolution: { value: this.resolution },\n        sizeAttenuation: { value: this.sizeAttenuation },\n        near: { value: this.near },\n        far: { value: this.far },\n        dashArray: { value: this.dashArray },\n        dashOffset: { value: this.dashOffset },\n        useDash: { value: this.useDash },\n        visibility: { value: this.visibility },\n        alphaTest: { value: this.alphaTest },\n        repeat: { value: this.repeat },\n      },\n      vertexShader: vertexShaderSource.join(\"\\r\\n\"),\n      fragmentShader: fragmentShaderSource.join(\"\\r\\n\"),\n    });\n\n    delete parameters.lineWidth;\n    delete parameters.map;\n    delete parameters.useMap;\n    delete parameters.alphaMap;\n    delete parameters.useAlphaMap;\n    delete parameters.color;\n    delete parameters.opacity;\n    delete parameters.resolution;\n    delete parameters.sizeAttenuation;\n    delete parameters.near;\n    delete parameters.far;\n    delete parameters.dashArray;\n    delete parameters.dashOffset;\n    delete parameters.dashRatio;\n    delete parameters.visibility;\n    delete parameters.alphaTest;\n    delete parameters.repeat;\n\n    material.type = \"MeshLineMaterial\";\n\n    material.setValues(parameters);\n\n    return material;\n  }\n\n  copy(source) {\n    Material.prototype.copy.call(this, source);\n\n    this.lineWidth = source.lineWidth;\n    this.map = source.map;\n    this.useMap = source.useMap;\n    this.alphaMap = source.alphaMap;\n    this.useAlphaMap = source.useAlphaMap;\n    this.color.copy(source.color);\n    this.opacity = source.opacity;\n    this.resolution.copy(source.resolution);\n    this.sizeAttenuation = source.sizeAttenuation;\n    this.near = source.near;\n    this.far = source.far;\n    this.dashArray = source.dashArray;\n    this.dashRatio = source.dashRatio;\n    this.dashOffset = source.dashOffset;\n    this.useDash = source.useDash;\n    this.visibility = source.visibility;\n    this.alphaTest = source.alphaTest;\n    this.repeat.copy(source.repeat);\n\n    return this;\n  }\n}\n\nexport { MeshLine, MeshLineMaterial };\n","const Easings = {\n  Linear: function (t) {\n    return t;\n  },\n  InQuad: function (t) {\n    return t * t;\n  },\n  OutQuad: function (t) {\n    return t * (2 - t);\n  },\n  InOutQuad: function (t) {\n    if ((t *= 2) < 1) {\n      return 0.5 * t * t;\n    }\n    return -0.5 * (--t * (t - 2) - 1);\n  },\n  InCubic: function (t) {\n    return t * t * t;\n  },\n  OutCubic: function (t) {\n    return --t * t * t + 1;\n  },\n  InOutCubic: function (t) {\n    if ((t *= 2) < 1) {\n      return 0.5 * t * t * t;\n    }\n    return 0.5 * ((t -= 2) * t * t + 2);\n  },\n  InQuart: function (t) {\n    return t * t * t * t;\n  },\n  OutQuart: function (t) {\n    return 1 - --t * t * t * t;\n  },\n  InOutQuart: function (t) {\n    if ((t *= 2) < 1) {\n      return 0.5 * t * t * t * t;\n    }\n    return 0.5 * ((t -= 2) * t * t * t - 2);\n  },\n  InQuint: function (t) {\n    return t * t * t * t * t;\n  },\n  OutQuint: function (t) {\n    return --t * t * t * t * t + 1;\n  },\n  InOutQuint: function (t) {\n    if ((t *= 2) < 1) return 0.5 * t * t * t * t * t;\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n  },\n  InSine: function (t) {\n    return 1 - Math.cos((t * Math.PI) / 2);\n  },\n  OutSine: function (t) {\n    return Math.sin((t * Math.PI) / 2);\n  },\n  InOutSine: function (t) {\n    return 0.5 * (1 - Math.cos(Math.PI * t));\n  },\n  InBounce: function (t) {\n    return 1 - outBounce(1 - t);\n  },\n  OutBounce: function (t) {\n    if (t < 0.36363636363636365) {\n      return 7.5625 * t * t;\n    } else if (t < 0.7272727272727273) {\n      t = t - 0.5454545454545454;\n      return 7.5625 * t * t + 0.75;\n    } else if (t < 0.9090909090909091) {\n      t = t - 0.8181818181818182;\n      return 7.5625 * t * t + 0.9375;\n    } else {\n      t = t - 0.9545454545454546;\n      return 7.5625 * t * t + 0.984375;\n    }\n  },\n  InOutBounce: function (t) {\n    if (t < 0.5) {\n      return Easings.InBounce(t * 2) * 0.5;\n    }\n    return Easings.OutBounce(t * 2 - 1) * 0.5 + 1 * 0.5;\n  },\n  InElastic: function (t, amplitude, period) {\n    if (typeof period == \"undefined\") {\n      period = 0;\n    }\n    if (typeof amplitude == \"undefined\") {\n      amplitude = 1;\n    }\n    var offset = 1.70158;\n\n    if (t == 0) return 0;\n    if (t == 1) return 1;\n\n    if (!period) {\n      period = 0.3;\n    }\n\n    if (amplitude < 1) {\n      amplitude = 1;\n      offset = period / 4;\n    } else {\n      offset = (period / (2 * Math.PI)) * Math.asin(1 / amplitude);\n    }\n\n    return -(\n      amplitude *\n      Math.pow(2, 10 * (t -= 1)) *\n      Math.sin(((t - offset) * (Math.PI * 2)) / period)\n    );\n  },\n  OutElastic: function (t, amplitude, period) {\n    if (typeof period == \"undefined\") {\n      period = 0;\n    }\n    if (typeof amplitude == \"undefined\") {\n      amplitude = 1;\n    }\n    var offset = 1.70158;\n\n    if (t == 0) return 0;\n    if (t == 1) return 1;\n\n    if (!period) {\n      period = 0.3;\n    }\n\n    if (amplitude < 1) {\n      amplitude = 1;\n      offset = period / 4;\n    } else {\n      offset = (period / (2 * Math.PI)) * Math.asin(1 / amplitude);\n    }\n\n    return (\n      amplitude *\n        Math.pow(2, -10 * t) *\n        Math.sin(((t - offset) * (Math.PI * 2)) / period) +\n      1\n    );\n  },\n  InOutElastic: function (t, amplitude, period) {\n    var offset;\n    t = t / 2 - 1;\n    // escape early for 0 and 1\n    if (t === 0 || t === 1) {\n      return t;\n    }\n    if (!period) {\n      period = 0.44999999999999996;\n    }\n    if (!amplitude) {\n      amplitude = 1;\n      offset = period / 4;\n    } else {\n      offset = (period / (Math.PI * 2.0)) * Math.asin(1 / amplitude);\n    }\n    return (\n      (amplitude *\n        Math.pow(2, 10 * t) *\n        Math.sin(((t - offset) * (Math.PI * 2)) / period)) /\n      -2\n    );\n  },\n  InExpo: function (t) {\n    return Math.pow(2, 10 * (t - 1));\n  },\n  OutExpo: function (t) {\n    return -Math.pow(2, -10 * t) + 1;\n  },\n  InOutExpo: function (t) {\n    if (t == 0) return 0;\n    if (t == 1) return 1;\n    if ((t /= 0.5) < 1) return 0.5 * Math.pow(2, 10 * (t - 1));\n    return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n  },\n  InCirc: function (t) {\n    return -1 * (Math.sqrt(1 - t * t) - 1);\n  },\n  OutCirc: function (t) {\n    t = t - 1;\n    return Math.sqrt(1 - t * t);\n  },\n  InOutCirc: function (t) {\n    var c = 1;\n    if ((t /= 0.5) < 1) return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n  },\n  InBack: function (t, overshoot) {\n    if (!overshoot && overshoot !== 0) {\n      overshoot = 1.70158;\n    }\n    return 1 * t * t * ((overshoot + 1) * t - overshoot);\n  },\n  OutBack: function (t, overshoot) {\n    if (!overshoot && overshoot !== 0) {\n      overshoot = 1.70158;\n    }\n    t = t - 1;\n    return t * t * ((overshoot + 1) * t + overshoot) + 1;\n  },\n  InOutBack: function (t, overshoot) {\n    if (overshoot == undefined) overshoot = 1.70158;\n    if ((t /= 0.5) < 1)\n      return 0.5 * (t * t * (((overshoot *= 1.525) + 1) * t - overshoot));\n    return (\n      0.5 * ((t -= 2) * t * (((overshoot *= 1.525) + 1) * t + overshoot) + 2)\n    );\n  },\n};\n\nconst outBounce = Easings.OutBounce;\n\nexport { Easings };\n","const warm = [\"#FF2000\", \"#FF5900\", \"#FE9100\", \"#FEFDFC\", \"#FEC194\", \"#FE9F5B\"];\nconst natural = [\n  \"#FF6D00\",\n  \"#FBF8EB\",\n  \"#008B99\",\n  \"#F8E1A6\",\n  \"#FDA81F\",\n  \"#B80A01\",\n  \"#480D07\",\n];\nconst natural2 = [\n  \"#EF2006\",\n  \"#350000\",\n  \"#A11104\",\n  \"#ED5910\",\n  \"#F1B52E\",\n  \"#7B5614\",\n  \"#F7F1AC\",\n];\nconst circus = [\n  \"#F62D62\",\n  \"#FFFFFF\",\n  \"#FDB600\",\n  \"#F42D2D\",\n  \"#544C98\",\n  \"#ECACBC\",\n];\nconst seaside = [\n  \"#FEB019\",\n  \"#F46002\",\n  \"#E1E7F1\",\n  \"#0A1D69\",\n  \"#138FE2\",\n  \"#0652C4\",\n  \"#D23401\",\n  \"#B0A12F\",\n];\nconst warm2 = [\n  \"#FFFEFE\",\n  \"#0D0211\",\n  \"#FBCEA0\",\n  \"#FFAD5D\",\n  \"#530E1D\",\n  \"#FE9232\",\n  \"#B93810\",\n  \"#907996\",\n];\nconst warm3 = [\n  \"#EDEBE7\",\n  \"#13595A\",\n  \"#DE1408\",\n  \"#161814\",\n  \"#E1610A\",\n  \"#B7BDB3\",\n  \"#9F9772\",\n];\nconst circus2 = [\n  \"#F62D62\",\n  \"#FFFFFF\",\n  \"#FDB600\",\n  \"#F42D2D\",\n  \"#544C98\",\n  \"#ECACBC\",\n];\nconst dragon = [\n  \"#F2E9D9\",\n  \"#101010\",\n  \"#EA4B04\",\n  \"#B6AC9E\",\n  \"#5A5754\",\n  \"#837F7A\",\n  \"#E78E36\",\n  \"#552509\",\n];\n\nexport {\n  warm,\n  natural,\n  natural2,\n  circus,\n  seaside,\n  warm2,\n  warm3,\n  circus2,\n  dragon,\n};\n","import { Color } from \"../third_party/three.module.js\";\nimport { mix, clamp } from \"./Maf.js\";\n\nclass GradientLinear {\n  constructor(colors) {\n    this.colors = colors.map((c) => new Color(c));\n  }\n  getAt(t) {\n    t = clamp(t, 0, 1);\n    const from = Math.floor(t * this.colors.length * 0.9999);\n    const to = clamp(from + 1, 0, this.colors.length - 1);\n    const fc = this.colors[from];\n    const ft = this.colors[to];\n    const p = (t - from / this.colors.length) / (1 / this.colors.length);\n    const res = new Color();\n    res.r = mix(fc.r, ft.r, p);\n    res.g = mix(fc.g, ft.g, p);\n    res.b = mix(fc.b, ft.b, p);\n    return res;\n  }\n}\n\nexport { GradientLinear };\n","import {\n  RawShaderMaterial,\n  RGBAFormat,\n  UnsignedByteType,\n  LinearFilter,\n  ClampToEdgeWrapping,\n  Vector2,\n  GLSL3,\n} from \"./third_party/three.module.js\";\nimport { getFBO } from \"./modules/fbo.js\";\nimport { shader as orthoVertexShader } from \"./shaders/ortho.js\";\nimport { ShaderPass } from \"./modules/ShaderPass.js\";\nimport { shader as vignette } from \"./shaders/vignette.js\";\nimport { shader as noise } from \"./shaders/noise.js\";\nimport { shader as screen } from \"./shaders/screen.js\";\nimport { shader as rgbShift } from \"./shaders/rgb-shift.js\";\nimport { BloomPass } from \"./modules/bloomPass.js\";\n\nconst finalFragmentShader = `\nprecision highp float;\n\nuniform vec2 resolution;\nuniform sampler2D inputTexture;\n\nuniform sampler2D blur0Texture;\nuniform sampler2D blur1Texture;\nuniform sampler2D blur2Texture;\nuniform sampler2D blur3Texture;\nuniform sampler2D blur4Texture;\n\nuniform float vignetteBoost;\nuniform float vignetteReduction;\n\nuniform float time;\n\nin vec2 vUv;\n\nout vec4 fragColor;\n\n${vignette}\n\n${noise}\n\n${screen}\n\nvoid main() {\n  vec4 b0 = texture(blur0Texture, vUv);\n  vec4 b1 = texture(blur1Texture, vUv);\n  vec4 b2 = texture(blur2Texture, vUv);\n  vec4 b3 = texture(blur3Texture, vUv);\n  vec4 b4 = texture(blur4Texture, vUv);\n  \n  vec4 color = texture(inputTexture, vUv);\n\n  vec4 b =  b0 / 20.;\n  b +=  2.*b1 / 20.;\n  b +=  4.*b2 / 20.;\n  b +=  8.*b3 / 20.;\n  b +=  16.*b4 / 20.;\n\n  fragColor = color;\n  fragColor = clamp(screen(fragColor, b, 1.), vec4(0.), vec4(1.));\n  fragColor = smoothstep(vec4(0.), vec4(.8), fragColor);\n  fragColor *= vignette(vUv, vignetteBoost, vignetteReduction);\n  fragColor += .01 * noise(gl_FragCoord.xy + vec2(time, 0.));\n}\n`;\n\nconst rgbFragmentShader = `precision highp float;\n\nin vec2 vUv;\n\nuniform sampler2D inputTexture;\n\nout vec4 color;\n\n${rgbShift}\n\nvoid main() {\n  vec2 size = vec2(textureSize(inputTexture, 0));\n  vec2 delta = vec2(1.) * size.x / 50.;\n  vec4 c = rgbShift(inputTexture, vUv, delta);\n  color = c;\n}`;\n\nclass Post {\n  constructor(renderer, params = {}) {\n    this.renderer = renderer;\n\n    const supersampled = true;\n\n    this.colorFBO = getFBO(1, 1, {}, supersampled);\n\n    this.rgbShader = new RawShaderMaterial({\n      uniforms: {\n        inputTexture: { value: this.colorFBO.texture },\n      },\n      vertexShader: orthoVertexShader,\n      fragmentShader: rgbFragmentShader,\n      glslVersion: GLSL3,\n    });\n    this.rgbPass = new ShaderPass(this.rgbShader, {\n      format: RGBAFormat,\n      type: UnsignedByteType,\n      minFilter: LinearFilter,\n      magFilter: LinearFilter,\n      wrapS: ClampToEdgeWrapping,\n      wrapT: ClampToEdgeWrapping,\n    });\n\n    this.finalShader = new RawShaderMaterial({\n      uniforms: {\n        resolution: { value: new Vector2(1, 1) },\n        vignetteBoost: { value: params.vignetteBoost || 1.1 },\n        vignetteReduction: { value: params.vignetteReduction || 1.1 },\n        inputTexture: { value: this.rgbPass.texture },\n        blur0Texture: { value: null },\n        blur1Texture: { value: null },\n        blur2Texture: { value: null },\n        blur3Texture: { value: null },\n        blur4Texture: { value: null },\n        time: { value: 0 },\n      },\n      vertexShader: orthoVertexShader,\n      fragmentShader: finalFragmentShader,\n      glslVersion: GLSL3,\n    });\n    this.finalPass = new ShaderPass(this.finalShader, {\n      format: RGBAFormat,\n      type: UnsignedByteType,\n      minFilter: LinearFilter,\n      magFilter: LinearFilter,\n      wrapS: ClampToEdgeWrapping,\n      wrapT: ClampToEdgeWrapping,\n    });\n\n    this.bloomPass = new BloomPass(2, 5);\n  }\n\n  setSize(w, h) {\n    this.colorFBO.setSize(w, h);\n    this.finalPass.setSize(w, h);\n    this.finalShader.uniforms.resolution.value.set(w, h);\n    this.rgbPass.setSize(w, h);\n    this.bloomPass.setSize(w, h);\n  }\n\n  render(scene, camera) {\n    this.renderer.setRenderTarget(this.colorFBO);\n    this.renderer.render(scene, camera, this.colorFBO);\n    this.renderer.setRenderTarget(null);\n\n    this.bloomPass.source = this.colorFBO.texture;\n    this.bloomPass.render(this.renderer);\n\n    this.finalPass.shader.uniforms.blur0Texture.value =\n      this.bloomPass.blurPasses[0].texture;\n    this.finalPass.shader.uniforms.blur1Texture.value =\n      this.bloomPass.blurPasses[1].texture;\n    this.finalPass.shader.uniforms.blur2Texture.value =\n      this.bloomPass.blurPasses[2].texture;\n    this.finalPass.shader.uniforms.blur3Texture.value =\n      this.bloomPass.blurPasses[3].texture;\n    this.finalPass.shader.uniforms.blur4Texture.value =\n      this.bloomPass.blurPasses[4].texture;\n    this.finalPass.shader.uniforms.time.value = Math.random() * 100000;\n\n    this.rgbPass.render(this.renderer);\n    this.finalPass.render(this.renderer, true);\n  }\n}\n\nexport { Post };\n","import {\n  WebGLRenderTarget,\n  ClampToEdgeWrapping,\n  LinearFilter,\n  RGBAFormat,\n  UnsignedByteType,\n  WebGLMultisampleRenderTarget,\n} from \"../third_party/three.module.js\";\n\nfunction getFBO(w, h, options = {}, antialiased = false) {\n  if (antialiased) {\n    return new WebGLMultisampleRenderTarget(w, h, {\n      wrapS: options.wrapS || ClampToEdgeWrapping,\n      wrapT: options.wrapT || ClampToEdgeWrapping,\n      minFilter: options.minFilter || LinearFilter,\n      magFilter: options.magFilter || LinearFilter,\n      format: options.format || RGBAFormat,\n      type: options.type || UnsignedByteType,\n      stencilBuffer: options.stencilBuffer || false,\n      depthBuffer: options.depthBuffer || true,\n    });\n  }\n  return new WebGLRenderTarget(w, h, {\n    wrapS: options.wrapS || ClampToEdgeWrapping,\n    wrapT: options.wrapT || ClampToEdgeWrapping,\n    minFilter: options.minFilter || LinearFilter,\n    magFilter: options.magFilter || LinearFilter,\n    format: options.format || RGBAFormat,\n    type: options.type || UnsignedByteType,\n    stencilBuffer: options.stencilBuffer || false,\n    depthBuffer: options.depthBuffer || true,\n  });\n}\n\nexport { getFBO };\n","const shader = `\nprecision highp float;\n\nin vec3 position;\nin vec2 uv;\n\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\n\nout vec2 vUv;\n\nvoid main() {\n  vUv = uv;\n  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1. );\n}`;\n\nexport { shader };\n","import {\n  OrthographicCamera,\n  Scene,\n  Mesh,\n  PlaneBufferGeometry,\n} from \"../third_party/three.module.js\";\nimport { getFBO } from \"./fbo.js\";\n\nclass ShaderPass {\n  constructor(shader, options = {}, antialiased) {\n    this.shader = shader;\n    this.orthoScene = new Scene();\n    this.fbo = getFBO(1, 1, options, antialiased);\n    this.orthoCamera = new OrthographicCamera(\n      1 / -2,\n      1 / 2,\n      1 / 2,\n      1 / -2,\n      0.00001,\n      1000\n    );\n    this.orthoQuad = new Mesh(new PlaneBufferGeometry(1, 1), this.shader);\n    this.orthoQuad.scale.set(1, 1, 1);\n    this.orthoScene.add(this.orthoQuad);\n    this.texture = this.fbo.texture;\n  }\n\n  render(renderer, final) {\n    if (!final) {\n      renderer.setRenderTarget(this.fbo);\n    }\n    renderer.render(this.orthoScene, this.orthoCamera);\n    renderer.setRenderTarget(null);\n  }\n\n  setSize(width, height) {\n    this.fbo.setSize(width, height);\n    this.orthoQuad.scale.set(width, height, 1);\n    this.orthoCamera.left = -width / 2;\n    this.orthoCamera.right = width / 2;\n    this.orthoCamera.top = height / 2;\n    this.orthoCamera.bottom = -height / 2;\n    this.orthoCamera.updateProjectionMatrix();\n  }\n}\n\nexport { ShaderPass };\n","const shader = `\nfloat vignette(vec2 uv, float boost, float reduction) {\n  vec2 position = vUv - .5;\n  return boost - length(position) * reduction;\n}\n`;\n\nexport { shader };\n","// https://www.shadertoy.com/view/lsf3WH\n\nconst shader = `\nfloat hash(vec2 p) {\n  p  = 50.0*fract( p*0.3183099 + vec2(0.71,0.113));\n  return -1.0+2.0*fract( p.x*p.y*(p.x+p.y) );\n}\n\nfloat noise( in vec2 p ) {\n  vec2 i = floor( p );\n  vec2 f = fract( p );\n\nvec2 u = f*f*(3.0-2.0*f);\n\n  return mix( mix( hash( i + vec2(0.0,0.0) ), \n                   hash( i + vec2(1.0,0.0) ), u.x),\n              mix( hash( i + vec2(0.0,1.0) ), \n                   hash( i + vec2(1.0,1.0) ), u.x), u.y);\n}\n`;\n\nexport { shader };\n","const shader = `\nvec4 screen(vec4 base, vec4 blend, float opacity) {\n  vec4 color = 1. - (1.-base) * (1.-blend);\n  color = color * opacity + base * ( 1. - opacity );\n  return color;\n}\n\nvec3 screen(vec3 base, vec3 blend, float opacity) {\n  vec3 color = 1. - (1.-base) * (1.-blend);\n  color = color * opacity + base * ( 1. - opacity );\n  return color;\n}`;\n\nexport { shader };\n","import { shader as smootherstep } from \"./smootherstep.js\";\n\nconst shader = `\n${smootherstep}\n\nvec4 rgbShift(sampler2D inputTexture, vec2 uv, vec2 delta){\n  vec2 resolution = vec2(textureSize(inputTexture, 0));\n  vec2 dir = uv - vec2( .5 );\n  float d = .7 * length( dir );\n  normalize( dir );\n  vec2 value = d * dir * delta;\n  vec4 c1 = texture( inputTexture, uv - value / resolution.x );\n  vec4 c2 = texture( inputTexture, uv );\n  vec4 c3 = texture( inputTexture, uv + value / resolution.y );\n  return vec4( c1.r, c2.g, c3.b, c1.a + c2.a + c3.b );\n}\n`;\n\nexport { shader };\n","const shader = `\nfloat smootherstep(float edge0, float edge1, float x) {\n  x = clamp((x - edge0)/(edge1 - edge0), 0.0, 1.0);\n  return x*x*x*(x*(x*6. - 15.) + 10.);\n}\n`;\n\nexport { shader };\n","import {\n  RawShaderMaterial,\n  Vector2,\n  GLSL3,\n  RGBAFormat,\n} from \"../third_party/three.module.js\";\nimport { ShaderPingPongPass } from \"./ShaderPingPongPass.js\";\nimport { shader as orthoVs } from \"../shaders/ortho.js\";\nimport { shader as blurFs } from \"../shaders/blur.js\";\n\nconst blurShader = new RawShaderMaterial({\n  uniforms: {\n    inputTexture: { value: null },\n    direction: { value: new Vector2(0, 1) },\n  },\n  vertexShader: orthoVs,\n  fragmentShader: blurFs,\n  glslVersion: GLSL3,\n});\n\nclass BloomPass {\n  constructor(strength = 1, levels = 5) {\n    this.strength = strength;\n    this.levels = levels;\n    this.blurPasses = [];\n    this.width = 1;\n    this.height = 1;\n    this.aspectRatio = 1;\n    for (let i = 0; i < this.levels; i++) {\n      const blurPass = new ShaderPingPongPass(blurShader, {\n        format: RGBAFormat,\n      });\n      this.blurPasses.push(blurPass);\n    }\n  }\n\n  setSize(w, h) {\n    this.width = w;\n    this.height = h;\n    this.aspectRatio = w / h;\n    let tw = w;\n    let th = h;\n    for (let i = 0; i < this.levels; i++) {\n      tw /= 2;\n      th /= 2;\n      tw = Math.round(tw);\n      th = Math.round(th);\n      this.blurPasses[i].setSize(tw, th);\n    }\n  }\n\n  set source(texture) {\n    blurShader.uniforms.inputTexture.value = texture;\n  }\n\n  render(renderer) {\n    let offset = this.strength;\n    const u = blurShader.uniforms;\n    for (let j = 0; j < this.levels; j++) {\n      const blurPass = this.blurPasses[j];\n\n      u.direction.value.set(offset, 0);\n      blurPass.render(renderer);\n\n      u.inputTexture.value = blurPass.current.texture;\n      u.direction.value.set(0, offset / 2);\n\n      blurPass.render(renderer);\n      u.inputTexture.value = blurPass.current.texture;\n    }\n  }\n}\n\nexport { BloomPass };\n","import {\n  OrthographicCamera,\n  Scene,\n  Mesh,\n  PlaneBufferGeometry,\n} from \"../third_party/three.module.js\";\nimport { getFBO } from \"./fbo.js\";\n\nclass ShaderPingPongPass {\n  constructor(shader, options = {}) {\n    this.shader = shader;\n    this.orthoScene = new Scene();\n    this.fbo = getFBO(1, 1, options);\n    this.fbos = [this.fbo, this.fbo.clone()];\n    this.currentFBO = 0;\n    this.orthoCamera = new OrthographicCamera(\n      1 / -2,\n      1 / 2,\n      1 / 2,\n      1 / -2,\n      0.00001,\n      1000\n    );\n    this.orthoQuad = new Mesh(new PlaneBufferGeometry(1, 1), this.shader);\n    this.orthoQuad.scale.set(1, 1, 1);\n    this.orthoScene.add(this.orthoQuad);\n  }\n\n  render(renderer, final) {\n    if (!final) {\n      renderer.setRenderTarget(this.fbos[1 - this.currentFBO]);\n    }\n    renderer.render(this.orthoScene, this.orthoCamera);\n    renderer.setRenderTarget(null);\n    this.currentFBO = 1 - this.currentFBO;\n  }\n\n  get current() {\n    return this.fbos[this.currentFBO];\n  }\n\n  get prev() {\n    return this.fbos[1 - this.currentFBO];\n  }\n\n  get texture() {\n    return this.current.texture;\n  }\n\n  setSize(width, height) {\n    this.orthoQuad.scale.set(width, height, 1);\n\n    this.fbos[0].setSize(width, height);\n    this.fbos[1].setSize(width, height);\n\n    this.orthoQuad.scale.set(width, height, 1);\n\n    this.orthoCamera.left = -width / 2;\n    this.orthoCamera.right = width / 2;\n    this.orthoCamera.top = height / 2;\n    this.orthoCamera.bottom = -height / 2;\n    this.orthoCamera.updateProjectionMatrix();\n  }\n}\n\nexport { ShaderPingPongPass };\n","import { blur5, blur9, blur13 } from \"./fast-separable-gaussian-blur.js\";\n// import { settings } from \"../js/settings.js\";\n\n// let blurFn = blur13;\n// let blurCall = \"blur13\";\n// if (settings.blur === 5) {\n//   blurFn = blur5;\n//   blurCall = \"blur5\";\n// }\n// if (settings.blur === 9) {\n//   blurFn = blur9;\n//   blurCall = \"blur9\";\n// }\n\nconst shader = `\nprecision highp float;\n\nuniform sampler2D inputTexture;\nuniform vec2 direction;\n\nin vec2 vUv;\n\nout vec4 color;\n\n${blur13}\n\nvoid main() {\n  color = blur13(inputTexture, vUv, direction);\n}`;\n\nexport { shader };\n","const blur5 = `\nvec4 blur5(sampler2D image, vec2 uv, vec2 direction) {\n  vec2 resolution = vec2(textureSize(image,0));\n  vec4 color = vec4(0.0);\n  vec2 off1 = vec2(1.3333333333333333) * direction;\n  color += texture(image, uv) * 0.29411764705882354;\n  color += texture(image, uv + (off1 / resolution)) * 0.35294117647058826;\n  color += texture(image, uv - (off1 / resolution)) * 0.35294117647058826;\n  return color;\n}`;\n\nconst blur9 = `\nvec4 blur9(sampler2D image, vec2 uv, vec2 direction) {\n  vec2 resolution = vec2(textureSize(image,0));\n  vec4 color = vec4(0.0);\n  vec2 off1 = vec2(1.3846153846) * direction;\n  vec2 off2 = vec2(3.2307692308) * direction;\n  color += texture(image, uv) * 0.2270270270;\n  color += texture(image, uv + (off1 / resolution)) * 0.3162162162;\n  color += texture(image, uv - (off1 / resolution)) * 0.3162162162;\n  color += texture(image, uv + (off2 / resolution)) * 0.0702702703;\n  color += texture(image, uv - (off2 / resolution)) * 0.0702702703;\n  return color;\n}`;\n\nconst blur13 = `\nvec4 blur13(sampler2D image, vec2 uv, vec2 direction) {\n  vec2 resolution = vec2(textureSize(image,0));\n  vec4 color = vec4(0.0);\n  vec2 off1 = vec2(1.411764705882353) * direction;\n  vec2 off2 = vec2(3.2941176470588234) * direction;\n  vec2 off3 = vec2(5.176470588235294) * direction;\n  color += texture(image, uv) * 0.1964825501511404;\n  color += texture(image, uv + (off1 / resolution)) * 0.2969069646728344;\n  color += texture(image, uv - (off1 / resolution)) * 0.2969069646728344;\n  color += texture(image, uv + (off2 / resolution)) * 0.09447039785044732;\n  color += texture(image, uv - (off2 / resolution)) * 0.09447039785044732;\n  color += texture(image, uv + (off3 / resolution)) * 0.010381362401148057;\n  color += texture(image, uv - (off3 / resolution)) * 0.010381362401148057;\n  return color;\n}\n`;\n\nexport { blur5, blur9, blur13 };\n","import {\n  sRGBEncoding,\n  PerspectiveCamera,\n  Scene,\n  WebGLRenderer,\n} from \"../third_party/three.module.js\";\nimport { OrbitControls } from \"../third_party/OrbitControls.js\";\n\nconst renderer = new WebGLRenderer({\n  antialias: true,\n  preserveDrawingBuffer: true,\n  powerPreference: \"high-performance\",\n});\n\ndocument.body.append(renderer.domElement);\nrenderer.outputEncoding = sRGBEncoding;\nrenderer.setPixelRatio(window.devicePixelRatio);\n\nconst scene = new Scene();\n\nconst camera = new PerspectiveCamera(45, 1, 0.1, 100);\ncamera.position.set(2, 2, 2);\ncamera.lookAt(scene.position);\n\nfunction resize() {\n  const w = window.innerWidth;\n  const h = window.innerHeight;\n  renderer.setSize(w, h);\n  camera.aspect = w / h;\n  camera.updateProjectionMatrix();\n  renderer.setPixelRatio(window.devicePixelRatio);\n  const dPR = renderer.getPixelRatio();\n\n  for (const fn of resizes) {\n    fn(w, h, dPR);\n  }\n}\n\nasync function render() {\n  for (const fn of updates) {\n    await fn();\n  }\n  renderer.render(scene, camera);\n  renderer.setAnimationLoop(render);\n}\n\nconst updates = [];\n\nfunction addUpdate(fn) {\n  updates.push(fn);\n}\n\nconst resizes = [];\n\nfunction addResize(fn) {\n  resizes.push(fn);\n}\n\nwindow.addEventListener(\"resize\", () => resize());\n\nresize();\n\nfunction getControls(cam = camera) {\n  const controls = new OrbitControls(cam, renderer.domElement);\n  return controls;\n}\n\nexport {\n  renderer,\n  scene,\n  addUpdate,\n  addResize,\n  getControls,\n  camera,\n  resize,\n  render,\n};\n","import {\n  EventDispatcher,\n  MOUSE,\n  Quaternion,\n  Spherical,\n  TOUCH,\n  Vector2,\n  Vector3,\n} from \"./three.module.js\";\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: \"change\" };\nconst _startEvent = { type: \"start\" };\nconst _endEvent = { type: \"end\" };\n\nclass OrbitControls extends EventDispatcher {\n  constructor(object, domElement) {\n    super();\n\n    if (domElement === undefined)\n      console.warn(\n        'THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.'\n      );\n    if (domElement === document)\n      console.error(\n        'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.'\n      );\n\n    this.object = object;\n    this.domElement = domElement;\n    this.domElement.style.touchAction = \"none\"; // disable touch scroll\n\n    // Set to false to disable this control\n    this.enabled = true;\n\n    // \"target\" sets the location of focus, where the object orbits around\n    this.target = new Vector3();\n\n    // How far you can dolly in and out ( PerspectiveCamera only )\n    this.minDistance = 0;\n    this.maxDistance = Infinity;\n\n    // How far you can zoom in and out ( OrthographicCamera only )\n    this.minZoom = 0;\n    this.maxZoom = Infinity;\n\n    // How far you can orbit vertically, upper and lower limits.\n    // Range is 0 to Math.PI radians.\n    this.minPolarAngle = 0; // radians\n    this.maxPolarAngle = Math.PI; // radians\n\n    // How far you can orbit horizontally, upper and lower limits.\n    // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n    this.minAzimuthAngle = -Infinity; // radians\n    this.maxAzimuthAngle = Infinity; // radians\n\n    // Set to true to enable damping (inertia)\n    // If damping is enabled, you must call controls.update() in your animation loop\n    this.enableDamping = false;\n    this.dampingFactor = 0.05;\n\n    // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n    // Set to false to disable zooming\n    this.enableZoom = true;\n    this.zoomSpeed = 1.0;\n\n    // Set to false to disable rotating\n    this.enableRotate = true;\n    this.rotateSpeed = 1.0;\n\n    // Set to false to disable panning\n    this.enablePan = true;\n    this.panSpeed = 1.0;\n    this.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n    this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n\n    // Set to true to automatically rotate around the target\n    // If auto-rotate is enabled, you must call controls.update() in your animation loop\n    this.autoRotate = false;\n    this.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n    // The four arrow keys\n    this.keys = {\n      LEFT: \"ArrowLeft\",\n      UP: \"ArrowUp\",\n      RIGHT: \"ArrowRight\",\n      BOTTOM: \"ArrowDown\",\n    };\n\n    // Mouse buttons\n    this.mouseButtons = {\n      LEFT: MOUSE.ROTATE,\n      MIDDLE: MOUSE.DOLLY,\n      RIGHT: MOUSE.PAN,\n    };\n\n    // Touch fingers\n    this.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n    // for reset\n    this.target0 = this.target.clone();\n    this.position0 = this.object.position.clone();\n    this.zoom0 = this.object.zoom;\n\n    // the target DOM element for key events\n    this._domElementKeyEvents = null;\n\n    //\n    // public methods\n    //\n\n    this.getPolarAngle = function () {\n      return spherical.phi;\n    };\n\n    this.getAzimuthalAngle = function () {\n      return spherical.theta;\n    };\n\n    this.getDistance = function () {\n      return this.object.position.distanceTo(this.target);\n    };\n\n    this.listenToKeyEvents = function (domElement) {\n      domElement.addEventListener(\"keydown\", onKeyDown);\n      this._domElementKeyEvents = domElement;\n    };\n\n    this.saveState = function () {\n      scope.target0.copy(scope.target);\n      scope.position0.copy(scope.object.position);\n      scope.zoom0 = scope.object.zoom;\n    };\n\n    this.reset = function () {\n      scope.target.copy(scope.target0);\n      scope.object.position.copy(scope.position0);\n      scope.object.zoom = scope.zoom0;\n\n      scope.object.updateProjectionMatrix();\n      scope.dispatchEvent(_changeEvent);\n\n      scope.update();\n\n      state = STATE.NONE;\n    };\n\n    // this method is exposed, but perhaps it would be better if we can make it private...\n    this.update = (function () {\n      const offset = new Vector3();\n\n      // so camera.up is the orbit axis\n      const quat = new Quaternion().setFromUnitVectors(\n        object.up,\n        new Vector3(0, 1, 0)\n      );\n      const quatInverse = quat.clone().invert();\n\n      const lastPosition = new Vector3();\n      const lastQuaternion = new Quaternion();\n\n      const twoPI = 2 * Math.PI;\n\n      return function update() {\n        const position = scope.object.position;\n\n        offset.copy(position).sub(scope.target);\n\n        // rotate offset to \"y-axis-is-up\" space\n        offset.applyQuaternion(quat);\n\n        // angle from z-axis around y-axis\n        spherical.setFromVector3(offset);\n\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle());\n        }\n\n        if (scope.enableDamping) {\n          spherical.theta += sphericalDelta.theta * scope.dampingFactor;\n          spherical.phi += sphericalDelta.phi * scope.dampingFactor;\n        } else {\n          spherical.theta += sphericalDelta.theta;\n          spherical.phi += sphericalDelta.phi;\n        }\n\n        // restrict theta to be between desired limits\n\n        let min = scope.minAzimuthAngle;\n        let max = scope.maxAzimuthAngle;\n\n        if (isFinite(min) && isFinite(max)) {\n          if (min < -Math.PI) min += twoPI;\n          else if (min > Math.PI) min -= twoPI;\n\n          if (max < -Math.PI) max += twoPI;\n          else if (max > Math.PI) max -= twoPI;\n\n          if (min <= max) {\n            spherical.theta = Math.max(min, Math.min(max, spherical.theta));\n          } else {\n            spherical.theta =\n              spherical.theta > (min + max) / 2\n                ? Math.max(min, spherical.theta)\n                : Math.min(max, spherical.theta);\n          }\n        }\n\n        // restrict phi to be between desired limits\n        spherical.phi = Math.max(\n          scope.minPolarAngle,\n          Math.min(scope.maxPolarAngle, spherical.phi)\n        );\n\n        spherical.makeSafe();\n\n        spherical.radius *= scale;\n\n        // restrict radius to be between desired limits\n        spherical.radius = Math.max(\n          scope.minDistance,\n          Math.min(scope.maxDistance, spherical.radius)\n        );\n\n        // move target to panned location\n\n        if (scope.enableDamping === true) {\n          scope.target.addScaledVector(panOffset, scope.dampingFactor);\n        } else {\n          scope.target.add(panOffset);\n        }\n\n        offset.setFromSpherical(spherical);\n\n        // rotate offset back to \"camera-up-vector-is-up\" space\n        offset.applyQuaternion(quatInverse);\n\n        position.copy(scope.target).add(offset);\n\n        scope.object.lookAt(scope.target);\n\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor;\n          sphericalDelta.phi *= 1 - scope.dampingFactor;\n\n          panOffset.multiplyScalar(1 - scope.dampingFactor);\n        } else {\n          sphericalDelta.set(0, 0, 0);\n\n          panOffset.set(0, 0, 0);\n        }\n\n        scale = 1;\n\n        // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (\n          zoomChanged ||\n          lastPosition.distanceToSquared(scope.object.position) > EPS ||\n          8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS\n        ) {\n          scope.dispatchEvent(_changeEvent);\n\n          lastPosition.copy(scope.object.position);\n          lastQuaternion.copy(scope.object.quaternion);\n          zoomChanged = false;\n\n          return true;\n        }\n\n        return false;\n      };\n    })();\n\n    this.dispose = function () {\n      scope.domElement.removeEventListener(\"contextmenu\", onContextMenu);\n\n      scope.domElement.removeEventListener(\"pointerdown\", onPointerDown);\n      scope.domElement.removeEventListener(\"pointercancel\", onPointerCancel);\n      scope.domElement.removeEventListener(\"wheel\", onMouseWheel);\n\n      scope.domElement.removeEventListener(\"pointermove\", onPointerMove);\n      scope.domElement.removeEventListener(\"pointerup\", onPointerUp);\n\n      if (scope._domElementKeyEvents !== null) {\n        scope._domElementKeyEvents.removeEventListener(\"keydown\", onKeyDown);\n      }\n\n      //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n    };\n\n    //\n    // internals\n    //\n\n    const scope = this;\n\n    const STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_PAN: 4,\n      TOUCH_DOLLY_PAN: 5,\n      TOUCH_DOLLY_ROTATE: 6,\n    };\n\n    let state = STATE.NONE;\n\n    const EPS = 0.000001;\n\n    // current position in spherical coordinates\n    const spherical = new Spherical();\n    const sphericalDelta = new Spherical();\n\n    let scale = 1;\n    const panOffset = new Vector3();\n    let zoomChanged = false;\n\n    const rotateStart = new Vector2();\n    const rotateEnd = new Vector2();\n    const rotateDelta = new Vector2();\n\n    const panStart = new Vector2();\n    const panEnd = new Vector2();\n    const panDelta = new Vector2();\n\n    const dollyStart = new Vector2();\n    const dollyEnd = new Vector2();\n    const dollyDelta = new Vector2();\n\n    const pointers = [];\n    const pointerPositions = {};\n\n    function getAutoRotationAngle() {\n      return ((2 * Math.PI) / 60 / 60) * scope.autoRotateSpeed;\n    }\n\n    function getZoomScale() {\n      return Math.pow(0.95, scope.zoomSpeed);\n    }\n\n    function rotateLeft(angle) {\n      sphericalDelta.theta -= angle;\n    }\n\n    function rotateUp(angle) {\n      sphericalDelta.phi -= angle;\n    }\n\n    const panLeft = (function () {\n      const v = new Vector3();\n\n      return function panLeft(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n        v.multiplyScalar(-distance);\n\n        panOffset.add(v);\n      };\n    })();\n\n    const panUp = (function () {\n      const v = new Vector3();\n\n      return function panUp(distance, objectMatrix) {\n        if (scope.screenSpacePanning === true) {\n          v.setFromMatrixColumn(objectMatrix, 1);\n        } else {\n          v.setFromMatrixColumn(objectMatrix, 0);\n          v.crossVectors(scope.object.up, v);\n        }\n\n        v.multiplyScalar(distance);\n\n        panOffset.add(v);\n      };\n    })();\n\n    // deltaX and deltaY are in pixels; right and down are positive\n    const pan = (function () {\n      const offset = new Vector3();\n\n      return function pan(deltaX, deltaY) {\n        const element = scope.domElement;\n\n        if (scope.object.isPerspectiveCamera) {\n          // perspective\n          const position = scope.object.position;\n          offset.copy(position).sub(scope.target);\n          let targetDistance = offset.length();\n\n          // half of the fov is center to top of screen\n          targetDistance *= Math.tan(\n            ((scope.object.fov / 2) * Math.PI) / 180.0\n          );\n\n          // we use only clientHeight here so aspect ratio does not distort speed\n          panLeft(\n            (2 * deltaX * targetDistance) / element.clientHeight,\n            scope.object.matrix\n          );\n          panUp(\n            (2 * deltaY * targetDistance) / element.clientHeight,\n            scope.object.matrix\n          );\n        } else if (scope.object.isOrthographicCamera) {\n          // orthographic\n          panLeft(\n            (deltaX * (scope.object.right - scope.object.left)) /\n              scope.object.zoom /\n              element.clientWidth,\n            scope.object.matrix\n          );\n          panUp(\n            (deltaY * (scope.object.top - scope.object.bottom)) /\n              scope.object.zoom /\n              element.clientHeight,\n            scope.object.matrix\n          );\n        } else {\n          // camera neither orthographic nor perspective\n          console.warn(\n            \"WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.\"\n          );\n          scope.enablePan = false;\n        }\n      };\n    })();\n\n    function dollyOut(dollyScale) {\n      if (scope.object.isPerspectiveCamera) {\n        scale /= dollyScale;\n      } else if (scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(\n          scope.minZoom,\n          Math.min(scope.maxZoom, scope.object.zoom * dollyScale)\n        );\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn(\n          \"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\"\n        );\n        scope.enableZoom = false;\n      }\n    }\n\n    function dollyIn(dollyScale) {\n      if (scope.object.isPerspectiveCamera) {\n        scale *= dollyScale;\n      } else if (scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(\n          scope.minZoom,\n          Math.min(scope.maxZoom, scope.object.zoom / dollyScale)\n        );\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn(\n          \"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\"\n        );\n        scope.enableZoom = false;\n      }\n    }\n\n    //\n    // event callbacks - update the object state\n    //\n\n    function handleMouseDownRotate(event) {\n      rotateStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownDolly(event) {\n      dollyStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownPan(event) {\n      panStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseMoveRotate(event) {\n      rotateEnd.set(event.clientX, event.clientY);\n\n      rotateDelta\n        .subVectors(rotateEnd, rotateStart)\n        .multiplyScalar(scope.rotateSpeed);\n\n      const element = scope.domElement;\n\n      rotateLeft((2 * Math.PI * rotateDelta.x) / element.clientHeight); // yes, height\n\n      rotateUp((2 * Math.PI * rotateDelta.y) / element.clientHeight);\n\n      rotateStart.copy(rotateEnd);\n\n      scope.update();\n    }\n\n    function handleMouseMoveDolly(event) {\n      dollyEnd.set(event.clientX, event.clientY);\n\n      dollyDelta.subVectors(dollyEnd, dollyStart);\n\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale());\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale());\n      }\n\n      dollyStart.copy(dollyEnd);\n\n      scope.update();\n    }\n\n    function handleMouseMovePan(event) {\n      panEnd.set(event.clientX, event.clientY);\n\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n\n      pan(panDelta.x, panDelta.y);\n\n      panStart.copy(panEnd);\n\n      scope.update();\n    }\n\n    function handleMouseUp(/*event*/) {\n      // no-op\n    }\n\n    function handleMouseWheel(event) {\n      if (event.deltaY < 0) {\n        dollyIn(getZoomScale());\n      } else if (event.deltaY > 0) {\n        dollyOut(getZoomScale());\n      }\n\n      scope.update();\n    }\n\n    function handleKeyDown(event) {\n      let needsUpdate = false;\n\n      switch (event.code) {\n        case scope.keys.UP:\n          pan(0, scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.BOTTOM:\n          pan(0, -scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.LEFT:\n          pan(scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.RIGHT:\n          pan(-scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n      }\n\n      if (needsUpdate) {\n        // prevent the browser from scrolling on cursor keys\n        event.preventDefault();\n\n        scope.update();\n      }\n    }\n\n    function handleTouchStartRotate() {\n      if (pointers.length === 1) {\n        rotateStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n\n        rotateStart.set(x, y);\n      }\n    }\n\n    function handleTouchStartPan() {\n      if (pointers.length === 1) {\n        panStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n\n        panStart.set(x, y);\n      }\n    }\n\n    function handleTouchStartDolly() {\n      const dx = pointers[0].pageX - pointers[1].pageX;\n      const dy = pointers[0].pageY - pointers[1].pageY;\n\n      const distance = Math.sqrt(dx * dx + dy * dy);\n\n      dollyStart.set(0, distance);\n    }\n\n    function handleTouchStartDollyPan() {\n      if (scope.enableZoom) handleTouchStartDolly();\n\n      if (scope.enablePan) handleTouchStartPan();\n    }\n\n    function handleTouchStartDollyRotate() {\n      if (scope.enableZoom) handleTouchStartDolly();\n\n      if (scope.enableRotate) handleTouchStartRotate();\n    }\n\n    function handleTouchMoveRotate(event) {\n      if (pointers.length == 1) {\n        rotateEnd.set(event.pageX, event.pageY);\n      } else {\n        const position = getSecondPointerPosition(event);\n\n        const x = 0.5 * (event.pageX + position.x);\n        const y = 0.5 * (event.pageY + position.y);\n\n        rotateEnd.set(x, y);\n      }\n\n      rotateDelta\n        .subVectors(rotateEnd, rotateStart)\n        .multiplyScalar(scope.rotateSpeed);\n\n      const element = scope.domElement;\n\n      rotateLeft((2 * Math.PI * rotateDelta.x) / element.clientHeight); // yes, height\n\n      rotateUp((2 * Math.PI * rotateDelta.y) / element.clientHeight);\n\n      rotateStart.copy(rotateEnd);\n    }\n\n    function handleTouchMovePan(event) {\n      if (pointers.length === 1) {\n        panEnd.set(event.pageX, event.pageY);\n      } else {\n        const position = getSecondPointerPosition(event);\n\n        const x = 0.5 * (event.pageX + position.x);\n        const y = 0.5 * (event.pageY + position.y);\n\n        panEnd.set(x, y);\n      }\n\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n\n      pan(panDelta.x, panDelta.y);\n\n      panStart.copy(panEnd);\n    }\n\n    function handleTouchMoveDolly(event) {\n      const position = getSecondPointerPosition(event);\n\n      const dx = event.pageX - position.x;\n      const dy = event.pageY - position.y;\n\n      const distance = Math.sqrt(dx * dx + dy * dy);\n\n      dollyEnd.set(0, distance);\n\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n\n      dollyOut(dollyDelta.y);\n\n      dollyStart.copy(dollyEnd);\n    }\n\n    function handleTouchMoveDollyPan(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n\n      if (scope.enablePan) handleTouchMovePan(event);\n    }\n\n    function handleTouchMoveDollyRotate(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n\n      if (scope.enableRotate) handleTouchMoveRotate(event);\n    }\n\n    function handleTouchEnd(/*event*/) {\n      // no-op\n    }\n\n    //\n    // event handlers - FSM: listen for events and reset state\n    //\n\n    function onPointerDown(event) {\n      if (scope.enabled === false) return;\n\n      if (pointers.length === 0) {\n        scope.domElement.setPointerCapture(event.pointerId);\n\n        scope.domElement.addEventListener(\"pointermove\", onPointerMove);\n        scope.domElement.addEventListener(\"pointerup\", onPointerUp);\n      }\n\n      //\n\n      addPointer(event);\n\n      if (event.pointerType === \"touch\") {\n        onTouchStart(event);\n      } else {\n        onMouseDown(event);\n      }\n    }\n\n    function onPointerMove(event) {\n      if (scope.enabled === false) return;\n\n      if (event.pointerType === \"touch\") {\n        onTouchMove(event);\n      } else {\n        onMouseMove(event);\n      }\n    }\n\n    function onPointerUp(event) {\n      if (scope.enabled === false) return;\n\n      if (event.pointerType === \"touch\") {\n        onTouchEnd();\n      } else {\n        onMouseUp(event);\n      }\n\n      removePointer(event);\n\n      //\n\n      if (pointers.length === 0) {\n        scope.domElement.releasePointerCapture(event.pointerId);\n\n        scope.domElement.removeEventListener(\"pointermove\", onPointerMove);\n        scope.domElement.removeEventListener(\"pointerup\", onPointerUp);\n      }\n    }\n\n    function onPointerCancel(event) {\n      removePointer(event);\n    }\n\n    function onMouseDown(event) {\n      let mouseAction;\n\n      switch (event.button) {\n        case 0:\n          mouseAction = scope.mouseButtons.LEFT;\n          break;\n\n        case 1:\n          mouseAction = scope.mouseButtons.MIDDLE;\n          break;\n\n        case 2:\n          mouseAction = scope.mouseButtons.RIGHT;\n          break;\n\n        default:\n          mouseAction = -1;\n      }\n\n      switch (mouseAction) {\n        case MOUSE.DOLLY:\n          if (scope.enableZoom === false) return;\n\n          handleMouseDownDolly(event);\n\n          state = STATE.DOLLY;\n\n          break;\n\n        case MOUSE.ROTATE:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enablePan === false) return;\n\n            handleMouseDownPan(event);\n\n            state = STATE.PAN;\n          } else {\n            if (scope.enableRotate === false) return;\n\n            handleMouseDownRotate(event);\n\n            state = STATE.ROTATE;\n          }\n\n          break;\n\n        case MOUSE.PAN:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enableRotate === false) return;\n\n            handleMouseDownRotate(event);\n\n            state = STATE.ROTATE;\n          } else {\n            if (scope.enablePan === false) return;\n\n            handleMouseDownPan(event);\n\n            state = STATE.PAN;\n          }\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(_startEvent);\n      }\n    }\n\n    function onMouseMove(event) {\n      if (scope.enabled === false) return;\n\n      switch (state) {\n        case STATE.ROTATE:\n          if (scope.enableRotate === false) return;\n\n          handleMouseMoveRotate(event);\n\n          break;\n\n        case STATE.DOLLY:\n          if (scope.enableZoom === false) return;\n\n          handleMouseMoveDolly(event);\n\n          break;\n\n        case STATE.PAN:\n          if (scope.enablePan === false) return;\n\n          handleMouseMovePan(event);\n\n          break;\n      }\n    }\n\n    function onMouseUp(event) {\n      handleMouseUp(event);\n\n      scope.dispatchEvent(_endEvent);\n\n      state = STATE.NONE;\n    }\n\n    function onMouseWheel(event) {\n      if (\n        scope.enabled === false ||\n        scope.enableZoom === false ||\n        state !== STATE.NONE\n      )\n        return;\n\n      event.preventDefault();\n\n      scope.dispatchEvent(_startEvent);\n\n      handleMouseWheel(event);\n\n      scope.dispatchEvent(_endEvent);\n    }\n\n    function onKeyDown(event) {\n      if (scope.enabled === false || scope.enablePan === false) return;\n\n      handleKeyDown(event);\n    }\n\n    function onTouchStart(event) {\n      trackPointer(event);\n\n      switch (pointers.length) {\n        case 1:\n          switch (scope.touches.ONE) {\n            case TOUCH.ROTATE:\n              if (scope.enableRotate === false) return;\n\n              handleTouchStartRotate();\n\n              state = STATE.TOUCH_ROTATE;\n\n              break;\n\n            case TOUCH.PAN:\n              if (scope.enablePan === false) return;\n\n              handleTouchStartPan();\n\n              state = STATE.TOUCH_PAN;\n\n              break;\n\n            default:\n              state = STATE.NONE;\n          }\n\n          break;\n\n        case 2:\n          switch (scope.touches.TWO) {\n            case TOUCH.DOLLY_PAN:\n              if (scope.enableZoom === false && scope.enablePan === false)\n                return;\n\n              handleTouchStartDollyPan();\n\n              state = STATE.TOUCH_DOLLY_PAN;\n\n              break;\n\n            case TOUCH.DOLLY_ROTATE:\n              if (scope.enableZoom === false && scope.enableRotate === false)\n                return;\n\n              handleTouchStartDollyRotate();\n\n              state = STATE.TOUCH_DOLLY_ROTATE;\n\n              break;\n\n            default:\n              state = STATE.NONE;\n          }\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(_startEvent);\n      }\n    }\n\n    function onTouchMove(event) {\n      trackPointer(event);\n\n      switch (state) {\n        case STATE.TOUCH_ROTATE:\n          if (scope.enableRotate === false) return;\n\n          handleTouchMoveRotate(event);\n\n          scope.update();\n\n          break;\n\n        case STATE.TOUCH_PAN:\n          if (scope.enablePan === false) return;\n\n          handleTouchMovePan(event);\n\n          scope.update();\n\n          break;\n\n        case STATE.TOUCH_DOLLY_PAN:\n          if (scope.enableZoom === false && scope.enablePan === false) return;\n\n          handleTouchMoveDollyPan(event);\n\n          scope.update();\n\n          break;\n\n        case STATE.TOUCH_DOLLY_ROTATE:\n          if (scope.enableZoom === false && scope.enableRotate === false)\n            return;\n\n          handleTouchMoveDollyRotate(event);\n\n          scope.update();\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n    }\n\n    function onTouchEnd(event) {\n      handleTouchEnd(event);\n\n      scope.dispatchEvent(_endEvent);\n\n      state = STATE.NONE;\n    }\n\n    function onContextMenu(event) {\n      if (scope.enabled === false) return;\n\n      event.preventDefault();\n    }\n\n    function addPointer(event) {\n      pointers.push(event);\n    }\n\n    function removePointer(event) {\n      delete pointerPositions[event.pointerId];\n\n      for (let i = 0; i < pointers.length; i++) {\n        if (pointers[i].pointerId == event.pointerId) {\n          pointers.splice(i, 1);\n          return;\n        }\n      }\n    }\n\n    function trackPointer(event) {\n      let position = pointerPositions[event.pointerId];\n\n      if (position === undefined) {\n        position = new Vector2();\n        pointerPositions[event.pointerId] = position;\n      }\n\n      position.set(event.pageX, event.pageY);\n    }\n\n    function getSecondPointerPosition(event) {\n      const pointer =\n        event.pointerId === pointers[0].pointerId ? pointers[1] : pointers[0];\n\n      return pointerPositions[pointer.pointerId];\n    }\n\n    //\n\n    scope.domElement.addEventListener(\"contextmenu\", onContextMenu);\n\n    scope.domElement.addEventListener(\"pointerdown\", onPointerDown);\n    scope.domElement.addEventListener(\"pointercancel\", onPointerCancel);\n    scope.domElement.addEventListener(\"wheel\", onMouseWheel, {\n      passive: false,\n    });\n\n    // force an update at start\n\n    this.update();\n  }\n}\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nclass MapControls extends OrbitControls {\n  constructor(object, domElement) {\n    super(object, domElement);\n\n    this.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n    this.mouseButtons.LEFT = MOUSE.PAN;\n    this.mouseButtons.RIGHT = MOUSE.ROTATE;\n\n    this.touches.ONE = TOUCH.PAN;\n    this.touches.TWO = TOUCH.DOLLY_ROTATE;\n  }\n}\n\nexport { OrbitControls, MapControls };\n"],"names":[],"version":3,"file":"index.b4134b86.js.map","sourceRoot":"/__parcel_source_root/"}